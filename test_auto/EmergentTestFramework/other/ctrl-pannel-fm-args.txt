*** Settings ***

Library          Telnet
Library          HttpLibrary.HTTP
Library          Process
Library          OperatingSystem

Resource         Server_lib.txt

Suite Setup      Initialize Emergent    ./test-projects/TestCtrlPanelFmArgs.proj master_train_cur_config=basic_train1 master_train_stop_train=true master_train_test_bool=true master_train_test_string=hello input_dist_fm_input=1.2 master_train_test_real=2.3
Suite Teardown   Shutdown Emergent

*** Variables ***

# use 'pybot -v debug:true server.txt' on the command line to
#      output the transmissions to/from Emergent using warnings
${debug} =       false

*** Test Cases ***

# Ideas on things to test
#  - SetDataTableCell and Matrix Cell

#
# Initialization and general tests
#

Initialize
    Set Suite Variable     ${verbose}       ${false}
    Run Keyword If         '${debug}' == 'true'       Set Suite Variable   ${verbose}  ${true}

Connection
    Sleep                  1 sec
    ${output} =            Read
    Print                  ${output}
    Should Contain         ${output}    Emergent Server v8.

# TODO: Start another process and check for the "Too many connections already" error.

#
# ParserTest
#

General RunState
    ${output} =                Run Command Wait      {"command": "GetRunState"}
    Status OK Match Result     ${output}             4

SetRealFromArgs
    Ensure Emergent Free
    Set Suite Variable   ${program_test}       MasterStartup
    ${output} =                Run Emergent Program     ${program_test}
    
    ${output} =                Run Command Wait      {"command": "GetVar", "program": "MasterTrain", "var_name": "TestReal"}
    Status OK 		       ${output}
    Json Value Should Equal    ${output}             /result  2.3

SetStringFromArgs
    Ensure Emergent Free
    Set Suite Variable   ${program_test}       MasterStartup
    ${output} =                Run Emergent Program     ${program_test}
    
    ${output} =                Run Command Wait      {"command": "GetVar", "program": "MasterTrain", "var_name": "TestString"}
    Status OK 		       ${output}
    Json String Should Match    ${output}             /result  hello

SetBoolFromArgs
    Ensure Emergent Free
    Set Suite Variable   ${program_test}       MasterStartup
    ${output} =                Run Emergent Program      ${program_test}
    
    ${output} =                Run Command Wait      {"command": "GetVar", "program": "MasterTrain", "var_name": "TestBool"}
    Status OK 		       ${output}
    Json Value Should Equal    ${output}             /result  true

SetDynEnumFromArgs
    Ensure Emergent Free
    Set Suite Variable   ${program_test}       MasterStartup
    ${output} =                Run Emergent Program      ${program_test}
    
    ${output} =                Run Command Wait      {"command": "GetVar", "program": "MasterTrain", "var_name": "cur_config"}
    Status OK 		       ${output}
    Json Value Should Equal    ${output}             /result  1


