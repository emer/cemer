** Settings ***

Library          Telnet
Library          HttpLibrary.HTTP
Library          Process
Library          OperatingSystem

Resource         Server_lib.txt

Suite Setup      Initialize Emergent    ./test-projects/TestBP.proj
Suite Teardown   Shutdown Emergent

*** Variables ***

# use 'pybot -v debug:true server.txt' on the command line to
#      output the transmissions to/from Emergent using warnings
${debug} =       false

*** Test Cases ***

# Ideas on things to test
#  - SetDataTableCell and Matrix Cell

#
# Initialization and general tests
#

Initialize
    Set Suite Variable     ${verbose}       ${false}
    Set Suite Variable     ${project}       ./test-projects/TestBP.proj
    Run Keyword If         '${debug}' == 'true'       Set Suite Variable   ${verbose}  ${true}

Connection
    Sleep                  1 sec
    ${output} =            Read
    Print                  ${output}
    Should Contain         ${output}    Emergent Server v8.

# TODO: Start another process and check for the "Too many connections already" error.

#
# ParserTest
#

General RunState
    ${output} =                Run Command Wait      {"command": "GetRunState"}
    Status OK Match Result     ${output}             4


TestBasicLearning
    Ensure Emergent Free
    Run Emergent Program	BpTrain
    DataTable Cell Value Should Equal	EpochOutputData		50	cnt_err		0
    

TestThreadLearningStability
    
    Restart Emergent        n_threads=2
    Ensure Emergent Free
    Run Emergent Program	BpTrain
    DataTable Cell Value Should Equal	EpochOutputData		50	cnt_err		0

    Set Emergent Var		SaveWeights	tag		0
    Run Emergent Program	SaveWeights

    Restart Emergent        n_threads=4
    Ensure Emergent Free
    Run Emergent Program	BpTrain
    DataTable Cell Value Should Equal	EpochOutputData		50	cnt_err		0

    Set Emergent Var		SaveWeights	tag		1
    Run Emergent Program	SaveWeights

    
    ${diff}=	Run Process		/usr/bin/diff	-q	./test-projects/TestBP0.00_0060.wts.gz		./test-projects/TestBP1.00_0060.wts.gz
    Should Match	"${diff.stdout}"		""


