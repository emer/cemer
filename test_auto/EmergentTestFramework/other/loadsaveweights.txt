** Settings ***

Library          Telnet
Library          HttpLibrary.HTTP
Library          Process
Library          OperatingSystem

Resource         Server_lib.txt

Suite Setup      Initialize Emergent    ./test-projects/TestLoadSaveWeight.proj
Suite Teardown   Shutdown Emergent

*** Variables ***

# use 'pybot -v debug:true server.txt' on the command line to
#      output the transmissions to/from Emergent using warnings
${debug} =       false

*** Test Cases ***

# Ideas on things to test
#  - SetDataTableCell and Matrix Cell

#
# Initialization and general tests
#

Initialize
    Set Suite Variable     ${verbose}       ${false}
    Set Suite Variable     ${project}       ./test-projects/TestBrowserEdit.proj
    Run Keyword If         '${debug}' == 'true'       Set Suite Variable   ${verbose}  ${true}

Connection
    Sleep                  1 sec
    ${output} =            Read
    Print                  ${output}
    Should Contain         ${output}    Emergent Server v7.

# TODO: Start another process and check for the "Too many connections already" error.

#
# ParserTest
#

General RunState
    ${output} =                Run Command Wait      {"command": "GetRunState"}
    Status OK Match Result     ${output}             4



TestSaveLoadIdentical
    Ensure Emergent Free
    Set Emergent Var		MasterTrain	cur_config	"basic_train"
    Run Emergent Program	MasterTrain
    Set Emergent Var		SaveWeights	iteration	0
    Run Emergent Program	SaveWeights
    Set Emergent Var		LoadWeights	iteration	0
    Run Emergent Program	LoadWeights
    Set Emergent Var		SaveWeights	iteration	1
    Run Emergent Program	SaveWeights
    
    ${diff}=	Run Process		/usr/bin/diff	./test-projects/TestLoadSaveWeight_autotst_0.wts		./test-projects/TestLoadSaveWeight_autotst_1.wts
    Should Match	"${diff.stdout}"		""

TestSaveLoadLearnable
    Ensure Emergent Free
    Set Emergent Var		MasterTrain	cur_config	"basic_train"
    Run Emergent Program	MasterTrain

    ${output} =                Run Command Wait      {"command": "GetData", "table": "EpochOutputData", "row_from": 0, "column" : "cnt_err", "rows": 1}
    Status OK 		       ${output}
    ${cnt_err} = 	       Get Json Value    ${output}             /result/columns/0/values/0
    Should Be True	       ${cnt_err} > 10	 "Model should make errors on the first epoch before learning"
    ${output} =                Run Command Wait      {"command": "GetData", "table": "EpochOutputData", "row_from": 5, "column" : "cnt_err", "rows": 1}
    Status OK 		       ${output}
    ${cnt_err} = 	       Get Json Value    ${output}             /result/columns/0/values/0
    Should Be True	       ${cnt_err} == 0	 "Model should not make errors after learning"


    Set Emergent Var		MasterTrain	cur_config	"basic_train_load"
    Set Emergent Var		MasterTrain	stop_train	1
    Run Emergent Program	MasterTrain

    ${output} =                Run Command Wait      {"command": "GetData", "table": "EpochOutputData", "row_from": 0, "column" : "cnt_err", "rows": 1}
    Status OK 		       ${output}
    ${cnt_err} = 	       Get Json Value    ${output}             /result/columns/0/values/0
    Should Be True	       ${cnt_err} == 0	 "Model should not make errors in first epoch after loading trained weights"

*** Keywords ***


