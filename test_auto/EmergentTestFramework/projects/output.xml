<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20140222 14:02:01.361" generator="Robot 2.8.3 (Python 2.7.6 on win32)">
<suite source="C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test" id="s1" name="Test">
<suite source="C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.txt" id="s1-s1" name="LeabraStd">
<test id="s1-s1-t1" name="Leabra Default Test">
<kw type="kw" name="emergent.Run Default Test">
<doc></doc>
<arguments>
<arg>LeabraStd</arg>
<arg>test</arg>
</arguments>
<kw type="kw" name="emergent.Set Variables">
<doc></doc>
<arguments>
<arg>${project}</arg>
<arg>60 secs</arg>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${name}</arg>
<arg>${namearg}</arg>
</arguments>
<msg timestamp="20140222 14:02:01.425" level="INFO">${name} = LeabraStd</msg>
<status status="PASS" endtime="20140222 14:02:01.425" starttime="20140222 14:02:01.425"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${project-file}</arg>
<arg>${name}.proj</arg>
</arguments>
<msg timestamp="20140222 14:02:01.426" level="INFO">${project-file} = LeabraStd.proj</msg>
<status status="PASS" endtime="20140222 14:02:01.426" starttime="20140222 14:02:01.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${script-file}</arg>
<arg>${test-dir}/${name}.css</arg>
</arguments>
<msg timestamp="20140222 14:02:01.427" level="INFO">${script-file} = test/LeabraStd.css</msg>
<status status="PASS" endtime="20140222 14:02:01.427" starttime="20140222 14:02:01.426"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${timeout}</arg>
<arg>${time}</arg>
</arguments>
<msg timestamp="20140222 14:02:01.427" level="INFO">${timeout} = 60 secs</msg>
<status status="PASS" endtime="20140222 14:02:01.427" starttime="20140222 14:02:01.427"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${test-dir}/${name}.baseline.json</arg>
</arguments>
<msg timestamp="20140222 14:02:01.428" level="INFO">${baseline-file} = test/LeabraStd.baseline.json</msg>
<status status="PASS" endtime="20140222 14:02:01.428" starttime="20140222 14:02:01.427"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${record-file}</arg>
<arg>${test-dir}/${name}.record.json</arg>
</arguments>
<msg timestamp="20140222 14:02:01.428" level="INFO">${record-file} = test/LeabraStd.record.json</msg>
<status status="PASS" endtime="20140222 14:02:01.428" starttime="20140222 14:02:01.428"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:01.429" starttime="20140222 14:02:01.424"></status>
</kw>
<kw type="kw" name="emergent.Set Metrics">
<doc></doc>
<arguments>
<arg>avg</arg>
<arg>0.15</arg>
<arg>0.25</arg>
</arguments>
<kw type="kw" name="@{metric-list} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{metrics}</arg>
</arguments>
<msg timestamp="20140222 14:02:01.430" level="INFO">@{metric-list} = [ avg | 0.15 | 0.25 ]</msg>
<status status="PASS" endtime="20140222 14:02:01.429" starttime="20140222 14:02:01.429"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>@{metric-list}</arg>
</arguments>
<msg timestamp="20140222 14:02:01.430" level="INFO">@{metric-list} = [ avg | 0.15 | 0.25 ]</msg>
<status status="PASS" endtime="20140222 14:02:01.430" starttime="20140222 14:02:01.430"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:01.430" starttime="20140222 14:02:01.429"></status>
</kw>
<kw type="kw" name="emergent.Create CSS Default">
<doc></doc>
<arguments>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="emergent.Create CSS Custom">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${script}</arg>
<arg>\#include "${test-dir}/leabra.css"\n\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.438" html="yes" level="INFO">Created file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.438" starttime="20140222 14:02:01.432"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:01.438" starttime="20140222 14:02:01.431"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard Randomize">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>SetRandom(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.459" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.459" starttime="20140222 14:02:01.440"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.478" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.478" starttime="20140222 14:02:01.459"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraAll_Std",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.498" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.498" starttime="20140222 14:02:01.479"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraTrain",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.517" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.517" starttime="20140222 14:02:01.498"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"rnd_init");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.534" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.534" starttime="20140222 14:02:01.517"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:01.535" starttime="20140222 14:02:01.439"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard RunProgram">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
<arg>LeabraBatch</arg>
<arg>Network_0</arg>
<arg>StdInputData</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>RunProgram(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.554" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.554" starttime="20140222 14:02:01.536"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.573" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.573" starttime="20140222 14:02:01.554"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraAll_Std",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.594" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.594" starttime="20140222 14:02:01.573"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${program}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.613" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.614" starttime="20140222 14:02:01.594"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${network}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.632" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.632" starttime="20140222 14:02:01.614"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"InputData",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.651" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.651" starttime="20140222 14:02:01.632"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${data}");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.668" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.668" starttime="20140222 14:02:01.651"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:01.668" starttime="20140222 14:02:01.535"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard Output">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
<arg>OutputEpochsToTrain</arg>
<arg>EpochOutputData</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>${method}(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.687" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.687" starttime="20140222 14:02:01.670"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.707" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.707" starttime="20140222 14:02:01.688"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.727" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.727" starttime="20140222 14:02:01.708"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"OutputData",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.747" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.747" starttime="20140222 14:02:01.727"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${table}");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:01.765" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:01.766" starttime="20140222 14:02:01.747"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:01.766" starttime="20140222 14:02:01.669"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:01.766" starttime="20140222 14:02:01.430"></status>
</kw>
<kw type="kw" name="emergent.Run Model">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${actuals} = emergent.Run Emergent">
<doc></doc>
<arguments>
<arg>${project-file}</arg>
<arg>${script-file}</arg>
<arg>${timeout}</arg>
</arguments>
<kw type="kw" name="Process.Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>emergent -nogui -ni -p ${project} -s ${script}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20140222 14:02:01.769" level="INFO">Starting process:
emergent -nogui -ni -p LeabraStd.proj -s test/LeabraStd.css</msg>
<status status="PASS" endtime="20140222 14:02:01.783" starttime="20140222 14:02:01.768"></status>
</kw>
<kw type="kw" name="${result} = Process.Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>timeout=${timeout}</arg>
</arguments>
<msg timestamp="20140222 14:02:01.784" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20140222 14:02:07.788" level="INFO">Process completed.</msg>
<msg timestamp="20140222 14:02:07.788" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20140222 14:02:07.788" starttime="20140222 14:02:01.784"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20140222 14:02:07.789" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140222 14:02:07.789" starttime="20140222 14:02:07.788"></status>
</kw>
<kw type="kw" name="${metrics} = emergent.Get Results">
<doc></doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<kw type="kw" name="${result} = BuiltIn.Should Match Regexp">
<doc>Fails if `string` does not match `pattern` as a regular expression.</doc>
<arguments>
<arg>${output}</arg>
<arg>{.*}</arg>
<arg>msg=No results found in output for ${name}: ${output}</arg>
<arg>values=False</arg>
</arguments>
<msg timestamp="20140222 14:02:07.790" level="INFO">${result} = { "name": "LeabraStd", "min": 7, "max": 22, "avg": 11.7 }</msg>
<status status="PASS" endtime="20140222 14:02:07.790" starttime="20140222 14:02:07.790"></status>
</kw>
<msg timestamp="20140222 14:02:07.791" level="INFO">${metrics} = { "name": "LeabraStd", "min": 7, "max": 22, "avg": 11.7 }</msg>
<status status="PASS" endtime="20140222 14:02:07.791" starttime="20140222 14:02:07.789"></status>
</kw>
<msg timestamp="20140222 14:02:07.791" level="INFO">${actuals} = { "name": "LeabraStd", "min": 7, "max": 22, "avg": 11.7 }</msg>
<status status="PASS" endtime="20140222 14:02:07.791" starttime="20140222 14:02:01.767"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${record-file}</arg>
<arg>${actuals}\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.796" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.record.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.record.json&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.797" starttime="20140222 14:02:07.791"></status>
</kw>
<kw type="kw" name="${baseline} = emergent.Get Baseline">
<doc></doc>
<arguments>
<arg>${baseline-file}</arg>
</arguments>
<kw type="kw" name="${status}, ${content} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get File</arg>
<arg>${file}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${file}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.799" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.baseline.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.baseline.json&lt;/a&gt;'</msg>
<msg timestamp="20140222 14:02:07.800" level="FAIL">IOError: [Errno 2] No such file or directory: u'C:\\Users\\david_000\\Documents\\NetBeansProjects\\EmergentTestFramework\\projects\\test\\LeabraStd.baseline.json'</msg>
<status status="FAIL" endtime="20140222 14:02:07.801" starttime="20140222 14:02:07.799"></status>
</kw>
<msg timestamp="20140222 14:02:07.801" level="INFO">${status} = FAIL</msg>
<msg timestamp="20140222 14:02:07.801" level="INFO">${content} = IOError: [Errno 2] No such file or directory: u'C:\\Users\\david_000\\Documents\\NetBeansProjects\\EmergentTestFramework\\projects\\test\\LeabraStd.baseline.json'</msg>
<status status="PASS" endtime="20140222 14:02:07.801" starttime="20140222 14:02:07.798"></status>
</kw>
<kw type="kw" name="${content} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>${EMPTY}</arg>
<arg>${content}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.802" level="INFO">${content} = </msg>
<status status="PASS" endtime="20140222 14:02:07.802" starttime="20140222 14:02:07.801"></status>
</kw>
<kw type="kw" name="${status}, ${baseline} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Match Regexp</arg>
<arg>${content}</arg>
<arg>{[^\"]*\"name\"[^:]*:[^\"]*\"${name}\"[^}]*}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Match Regexp">
<doc>Fails if `string` does not match `pattern` as a regular expression.</doc>
<arguments>
<arg>${content}</arg>
<arg>{[^\"]*\"name\"[^:]*:[^\"]*\"${name}\"[^}]*}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.806" level="FAIL">'' does not match '{[^"]*"name"[^:]*:[^"]*"LeabraStd"[^}]*}'</msg>
<status status="FAIL" endtime="20140222 14:02:07.806" starttime="20140222 14:02:07.803"></status>
</kw>
<msg timestamp="20140222 14:02:07.807" level="INFO">${status} = FAIL</msg>
<msg timestamp="20140222 14:02:07.807" level="INFO">${baseline} = '' does not match '{[^"]*"name"[^:]*:[^"]*"LeabraStd"[^}]*}'</msg>
<status status="PASS" endtime="20140222 14:02:07.806" starttime="20140222 14:02:07.802"></status>
</kw>
<kw type="kw" name="${baseline} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>${status}</arg>
<arg>${baseline}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.808" level="INFO">${baseline} = FAIL</msg>
<status status="PASS" endtime="20140222 14:02:07.808" starttime="20140222 14:02:07.807"></status>
</kw>
<msg timestamp="20140222 14:02:07.808" level="INFO">${baseline} = FAIL</msg>
<status status="PASS" endtime="20140222 14:02:07.808" starttime="20140222 14:02:07.797"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${baseline}' == 'FAIL'</arg>
<arg>Add To Baseline</arg>
<arg>${baseline-file}</arg>
<arg>${actuals}</arg>
</arguments>
<kw type="kw" name="emergent.Add To Baseline">
<doc></doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${actuals}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${actuals},</arg>
</arguments>
<msg timestamp="20140222 14:02:07.817" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.baseline.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStd.baseline.json&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.817" starttime="20140222 14:02:07.810"></status>
</kw>
<kw type="kw" name="BuiltIn.Pass Execution">
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>No baseline for ${name}; adding results from this run</arg>
</arguments>
<msg timestamp="20140222 14:02:07.818" level="INFO">Execution passed with message:
No baseline for LeabraStd; adding results from this run</msg>
<status status="PASS" endtime="20140222 14:02:07.818" starttime="20140222 14:02:07.817"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.818" starttime="20140222 14:02:07.809"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.818" starttime="20140222 14:02:07.808"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.818" starttime="20140222 14:02:01.766"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.819" starttime="20140222 14:02:01.424"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140222 14:02:07.819" critical="yes" starttime="20140222 14:02:01.424">No baseline for LeabraStd; adding results from this run</status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140222 14:02:07.820" starttime="20140222 14:02:01.394"></status>
</suite>
<suite source="C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.txt" id="s1-s2" name="LeabraStdCopy">
<test id="s1-s2-t1" name="Leabra Default Test">
<kw type="kw" name="emergent.Run Default Test">
<doc></doc>
<arguments>
<arg>LeabraStdCopy</arg>
<arg>test</arg>
</arguments>
<kw type="kw" name="emergent.Set Variables">
<doc></doc>
<arguments>
<arg>${project}</arg>
<arg>60 secs</arg>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${name}</arg>
<arg>${namearg}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.832" level="INFO">${name} = LeabraStdCopy</msg>
<status status="PASS" endtime="20140222 14:02:07.832" starttime="20140222 14:02:07.832"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${project-file}</arg>
<arg>${name}.proj</arg>
</arguments>
<msg timestamp="20140222 14:02:07.833" level="INFO">${project-file} = LeabraStdCopy.proj</msg>
<status status="PASS" endtime="20140222 14:02:07.833" starttime="20140222 14:02:07.833"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${script-file}</arg>
<arg>${test-dir}/${name}.css</arg>
</arguments>
<msg timestamp="20140222 14:02:07.834" level="INFO">${script-file} = test/LeabraStdCopy.css</msg>
<status status="PASS" endtime="20140222 14:02:07.834" starttime="20140222 14:02:07.834"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${timeout}</arg>
<arg>${time}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.834" level="INFO">${timeout} = 60 secs</msg>
<status status="PASS" endtime="20140222 14:02:07.835" starttime="20140222 14:02:07.834"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${test-dir}/${name}.baseline.json</arg>
</arguments>
<msg timestamp="20140222 14:02:07.835" level="INFO">${baseline-file} = test/LeabraStdCopy.baseline.json</msg>
<status status="PASS" endtime="20140222 14:02:07.835" starttime="20140222 14:02:07.835"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${record-file}</arg>
<arg>${test-dir}/${name}.record.json</arg>
</arguments>
<msg timestamp="20140222 14:02:07.836" level="INFO">${record-file} = test/LeabraStdCopy.record.json</msg>
<status status="PASS" endtime="20140222 14:02:07.836" starttime="20140222 14:02:07.835"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.836" starttime="20140222 14:02:07.831"></status>
</kw>
<kw type="kw" name="emergent.Set Metrics">
<doc></doc>
<arguments>
<arg>avg</arg>
<arg>0.15</arg>
<arg>0.25</arg>
</arguments>
<kw type="kw" name="@{metric-list} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{metrics}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.837" level="INFO">@{metric-list} = [ avg | 0.15 | 0.25 ]</msg>
<status status="PASS" endtime="20140222 14:02:07.837" starttime="20140222 14:02:07.837"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>@{metric-list}</arg>
</arguments>
<msg timestamp="20140222 14:02:07.837" level="INFO">@{metric-list} = [ avg | 0.15 | 0.25 ]</msg>
<status status="PASS" endtime="20140222 14:02:07.837" starttime="20140222 14:02:07.837"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.838" starttime="20140222 14:02:07.836"></status>
</kw>
<kw type="kw" name="emergent.Create CSS Default">
<doc></doc>
<arguments>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="emergent.Create CSS Custom">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${script}</arg>
<arg>\#include "${test-dir}/leabra.css"\n\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.846" html="yes" level="INFO">Created file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.846" starttime="20140222 14:02:07.839"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.846" starttime="20140222 14:02:07.838"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard Randomize">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>SetRandom(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.867" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.867" starttime="20140222 14:02:07.848"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.886" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.886" starttime="20140222 14:02:07.867"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraAll_Std",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.906" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.906" starttime="20140222 14:02:07.886"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraTrain",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.924" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.925" starttime="20140222 14:02:07.906"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"rnd_init");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.945" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.945" starttime="20140222 14:02:07.925"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:07.945" starttime="20140222 14:02:07.847"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard RunProgram">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
<arg>LeabraBatch</arg>
<arg>Network_0</arg>
<arg>StdInputData</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>RunProgram(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.964" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.965" starttime="20140222 14:02:07.947"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:07.984" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:07.984" starttime="20140222 14:02:07.965"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraAll_Std",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.002" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.003" starttime="20140222 14:02:07.984"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${program}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.020" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.020" starttime="20140222 14:02:08.003"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${network}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.040" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.040" starttime="20140222 14:02:08.021"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"InputData",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.059" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.059" starttime="20140222 14:02:08.041"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${data}");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.079" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.079" starttime="20140222 14:02:08.060"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:08.079" starttime="20140222 14:02:07.945"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard Output">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
<arg>OutputEpochsToTrain</arg>
<arg>EpochOutputData</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>${method}(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.098" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.098" starttime="20140222 14:02:08.081"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.117" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.117" starttime="20140222 14:02:08.099"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.140" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.140" starttime="20140222 14:02:08.117"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"OutputData",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.158" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.158" starttime="20140222 14:02:08.140"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${table}");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:08.176" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:08.177" starttime="20140222 14:02:08.158"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:08.177" starttime="20140222 14:02:08.079"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:08.177" starttime="20140222 14:02:07.838"></status>
</kw>
<kw type="kw" name="emergent.Run Model">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${actuals} = emergent.Run Emergent">
<doc></doc>
<arguments>
<arg>${project-file}</arg>
<arg>${script-file}</arg>
<arg>${timeout}</arg>
</arguments>
<kw type="kw" name="Process.Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>emergent -nogui -ni -p ${project} -s ${script}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20140222 14:02:08.180" level="INFO">Starting process:
emergent -nogui -ni -p LeabraStdCopy.proj -s test/LeabraStdCopy.css</msg>
<status status="PASS" endtime="20140222 14:02:08.182" starttime="20140222 14:02:08.179"></status>
</kw>
<kw type="kw" name="${result} = Process.Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>timeout=${timeout}</arg>
</arguments>
<msg timestamp="20140222 14:02:08.182" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20140222 14:02:13.587" level="INFO">Process completed.</msg>
<msg timestamp="20140222 14:02:13.588" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20140222 14:02:13.587" starttime="20140222 14:02:08.182"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20140222 14:02:13.590" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140222 14:02:13.590" starttime="20140222 14:02:13.588"></status>
</kw>
<kw type="kw" name="${metrics} = emergent.Get Results">
<doc></doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<kw type="kw" name="${result} = BuiltIn.Should Match Regexp">
<doc>Fails if `string` does not match `pattern` as a regular expression.</doc>
<arguments>
<arg>${output}</arg>
<arg>{.*}</arg>
<arg>msg=No results found in output for ${name}: ${output}</arg>
<arg>values=False</arg>
</arguments>
<msg timestamp="20140222 14:02:13.595" level="INFO">${result} = { "name": "LeabraStdCopy", "min": 8, "max": 14, "avg": 10.1 }</msg>
<status status="PASS" endtime="20140222 14:02:13.595" starttime="20140222 14:02:13.593"></status>
</kw>
<msg timestamp="20140222 14:02:13.596" level="INFO">${metrics} = { "name": "LeabraStdCopy", "min": 8, "max": 14, "avg": 10.1 }</msg>
<status status="PASS" endtime="20140222 14:02:13.596" starttime="20140222 14:02:13.590"></status>
</kw>
<msg timestamp="20140222 14:02:13.597" level="INFO">${actuals} = { "name": "LeabraStdCopy", "min": 8, "max": 14, "avg": 10.1 }</msg>
<status status="PASS" endtime="20140222 14:02:13.597" starttime="20140222 14:02:08.178"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${record-file}</arg>
<arg>${actuals}\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.612" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.record.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.record.json&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.612" starttime="20140222 14:02:13.598"></status>
</kw>
<kw type="kw" name="${baseline} = emergent.Get Baseline">
<doc></doc>
<arguments>
<arg>${baseline-file}</arg>
</arguments>
<kw type="kw" name="${status}, ${content} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get File</arg>
<arg>${file}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${file}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.618" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.baseline.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.baseline.json&lt;/a&gt;'</msg>
<msg timestamp="20140222 14:02:13.619" level="FAIL">IOError: [Errno 2] No such file or directory: u'C:\\Users\\david_000\\Documents\\NetBeansProjects\\EmergentTestFramework\\projects\\test\\LeabraStdCopy.baseline.json'</msg>
<status status="FAIL" endtime="20140222 14:02:13.620" starttime="20140222 14:02:13.617"></status>
</kw>
<msg timestamp="20140222 14:02:13.620" level="INFO">${status} = FAIL</msg>
<msg timestamp="20140222 14:02:13.621" level="INFO">${content} = IOError: [Errno 2] No such file or directory: u'C:\\Users\\david_000\\Documents\\NetBeansProjects\\EmergentTestFramework\\projects\\test\\LeabraStdCopy.baseline.json'</msg>
<status status="PASS" endtime="20140222 14:02:13.620" starttime="20140222 14:02:13.616"></status>
</kw>
<kw type="kw" name="${content} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>${EMPTY}</arg>
<arg>${content}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.623" level="INFO">${content} = </msg>
<status status="PASS" endtime="20140222 14:02:13.623" starttime="20140222 14:02:13.621"></status>
</kw>
<kw type="kw" name="${status}, ${baseline} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Match Regexp</arg>
<arg>${content}</arg>
<arg>{[^\"]*\"name\"[^:]*:[^\"]*\"${name}\"[^}]*}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Match Regexp">
<doc>Fails if `string` does not match `pattern` as a regular expression.</doc>
<arguments>
<arg>${content}</arg>
<arg>{[^\"]*\"name\"[^:]*:[^\"]*\"${name}\"[^}]*}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.627" level="FAIL">'' does not match '{[^"]*"name"[^:]*:[^"]*"LeabraStdCopy"[^}]*}'</msg>
<status status="FAIL" endtime="20140222 14:02:13.627" starttime="20140222 14:02:13.624"></status>
</kw>
<msg timestamp="20140222 14:02:13.627" level="INFO">${status} = FAIL</msg>
<msg timestamp="20140222 14:02:13.627" level="INFO">${baseline} = '' does not match '{[^"]*"name"[^:]*:[^"]*"LeabraStdCopy"[^}]*}'</msg>
<status status="PASS" endtime="20140222 14:02:13.627" starttime="20140222 14:02:13.624"></status>
</kw>
<kw type="kw" name="${baseline} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>${status}</arg>
<arg>${baseline}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.629" level="INFO">${baseline} = FAIL</msg>
<status status="PASS" endtime="20140222 14:02:13.629" starttime="20140222 14:02:13.628"></status>
</kw>
<msg timestamp="20140222 14:02:13.629" level="INFO">${baseline} = FAIL</msg>
<status status="PASS" endtime="20140222 14:02:13.629" starttime="20140222 14:02:13.613"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${baseline}' == 'FAIL'</arg>
<arg>Add To Baseline</arg>
<arg>${baseline-file}</arg>
<arg>${actuals}</arg>
</arguments>
<kw type="kw" name="emergent.Add To Baseline">
<doc></doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${actuals}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${actuals},</arg>
</arguments>
<msg timestamp="20140222 14:02:13.637" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.baseline.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdCopy.baseline.json&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.637" starttime="20140222 14:02:13.631"></status>
</kw>
<kw type="kw" name="BuiltIn.Pass Execution">
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>No baseline for ${name}; adding results from this run</arg>
</arguments>
<msg timestamp="20140222 14:02:13.638" level="INFO">Execution passed with message:
No baseline for LeabraStdCopy; adding results from this run</msg>
<status status="PASS" endtime="20140222 14:02:13.638" starttime="20140222 14:02:13.637"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.638" starttime="20140222 14:02:13.631"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.638" starttime="20140222 14:02:13.630"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.638" starttime="20140222 14:02:08.177"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.638" starttime="20140222 14:02:07.831"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140222 14:02:13.639" critical="yes" starttime="20140222 14:02:07.830">No baseline for LeabraStdCopy; adding results from this run</status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140222 14:02:13.640" starttime="20140222 14:02:07.822"></status>
</suite>
<suite source="C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.txt" id="s1-s3" name="LeabraStdEmbedded">
<test id="s1-s3-t1" name="Leabra Default Test">
<kw type="kw" name="emergent.Run Default Test">
<doc></doc>
<arguments>
<arg>LeabraStdEmbedded</arg>
<arg>test</arg>
</arguments>
<kw type="kw" name="emergent.Set Variables">
<doc></doc>
<arguments>
<arg>${project}</arg>
<arg>60 secs</arg>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${name}</arg>
<arg>${namearg}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.656" level="INFO">${name} = LeabraStdEmbedded</msg>
<status status="PASS" endtime="20140222 14:02:13.657" starttime="20140222 14:02:13.656"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${project-file}</arg>
<arg>${name}.proj</arg>
</arguments>
<msg timestamp="20140222 14:02:13.657" level="INFO">${project-file} = LeabraStdEmbedded.proj</msg>
<status status="PASS" endtime="20140222 14:02:13.657" starttime="20140222 14:02:13.657"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${script-file}</arg>
<arg>${test-dir}/${name}.css</arg>
</arguments>
<msg timestamp="20140222 14:02:13.658" level="INFO">${script-file} = test/LeabraStdEmbedded.css</msg>
<status status="PASS" endtime="20140222 14:02:13.658" starttime="20140222 14:02:13.657"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${timeout}</arg>
<arg>${time}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.658" level="INFO">${timeout} = 60 secs</msg>
<status status="PASS" endtime="20140222 14:02:13.658" starttime="20140222 14:02:13.658"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${test-dir}/${name}.baseline.json</arg>
</arguments>
<msg timestamp="20140222 14:02:13.659" level="INFO">${baseline-file} = test/LeabraStdEmbedded.baseline.json</msg>
<status status="PASS" endtime="20140222 14:02:13.659" starttime="20140222 14:02:13.659"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${record-file}</arg>
<arg>${test-dir}/${name}.record.json</arg>
</arguments>
<msg timestamp="20140222 14:02:13.660" level="INFO">${record-file} = test/LeabraStdEmbedded.record.json</msg>
<status status="PASS" endtime="20140222 14:02:13.660" starttime="20140222 14:02:13.659"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.660" starttime="20140222 14:02:13.655"></status>
</kw>
<kw type="kw" name="emergent.Set Metrics">
<doc></doc>
<arguments>
<arg>avg</arg>
<arg>0.15</arg>
<arg>0.25</arg>
</arguments>
<kw type="kw" name="@{metric-list} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{metrics}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.661" level="INFO">@{metric-list} = [ avg | 0.15 | 0.25 ]</msg>
<status status="PASS" endtime="20140222 14:02:13.661" starttime="20140222 14:02:13.660"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Test Variable">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>@{metric-list}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.661" level="INFO">@{metric-list} = [ avg | 0.15 | 0.25 ]</msg>
<status status="PASS" endtime="20140222 14:02:13.661" starttime="20140222 14:02:13.661"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.661" starttime="20140222 14:02:13.660"></status>
</kw>
<kw type="kw" name="emergent.Create CSS Default">
<doc></doc>
<arguments>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="emergent.Create CSS Custom">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${test-dir}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${script}</arg>
<arg>\#include "${test-dir}/leabra.css"\n\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.668" html="yes" level="INFO">Created file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.668" starttime="20140222 14:02:13.663"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.668" starttime="20140222 14:02:13.662"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard Randomize">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>SetRandom(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.671" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.671" starttime="20140222 14:02:13.670"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.672" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.672" starttime="20140222 14:02:13.671"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraAll_Std",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.673" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.673" starttime="20140222 14:02:13.672"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraTrain",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.674" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.674" starttime="20140222 14:02:13.673"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"rnd_init");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.675" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.675" starttime="20140222 14:02:13.675"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.676" starttime="20140222 14:02:13.669"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard RunProgram">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
<arg>LeabraBatch</arg>
<arg>Network_0</arg>
<arg>StdInputData</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>RunProgram(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.678" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.678" starttime="20140222 14:02:13.677"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.679" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.679" starttime="20140222 14:02:13.678"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"LeabraAll_Std",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.680" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.680" starttime="20140222 14:02:13.679"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${program}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.681" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.681" starttime="20140222 14:02:13.680"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${network}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.682" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.683" starttime="20140222 14:02:13.682"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"InputData",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.684" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.684" starttime="20140222 14:02:13.683"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${data}");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.685" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.685" starttime="20140222 14:02:13.684"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.686" starttime="20140222 14:02:13.676"></status>
</kw>
<kw type="kw" name="emergent.Add CSS Standard Output">
<doc></doc>
<arguments>
<arg>${script-file}</arg>
<arg>${name}</arg>
<arg>OutputEpochsToTrain</arg>
<arg>EpochOutputData</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>${method}(\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.706" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.706" starttime="20140222 14:02:13.687"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.726" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.726" starttime="20140222 14:02:13.707"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${project}",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.745" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.745" starttime="20140222 14:02:13.727"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"OutputData",\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.765" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.765" starttime="20140222 14:02:13.745"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${script}</arg>
<arg>"${table}");\n</arg>
</arguments>
<msg timestamp="20140222 14:02:13.785" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.css&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:13.785" starttime="20140222 14:02:13.765"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.785" starttime="20140222 14:02:13.686"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:13.786" starttime="20140222 14:02:13.661"></status>
</kw>
<kw type="kw" name="emergent.Run Model">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${actuals} = emergent.Run Emergent">
<doc></doc>
<arguments>
<arg>${project-file}</arg>
<arg>${script-file}</arg>
<arg>${timeout}</arg>
</arguments>
<kw type="kw" name="Process.Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>emergent -nogui -ni -p ${project} -s ${script}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20140222 14:02:13.789" level="INFO">Starting process:
emergent -nogui -ni -p LeabraStdEmbedded.proj -s test/LeabraStdEmbedded.css</msg>
<status status="PASS" endtime="20140222 14:02:13.801" starttime="20140222 14:02:13.788"></status>
</kw>
<kw type="kw" name="${result} = Process.Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>timeout=${timeout}</arg>
</arguments>
<msg timestamp="20140222 14:02:13.801" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20140222 14:02:19.508" level="INFO">Process completed.</msg>
<msg timestamp="20140222 14:02:19.509" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20140222 14:02:19.508" starttime="20140222 14:02:13.801"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${result.rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20140222 14:02:19.511" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20140222 14:02:19.511" starttime="20140222 14:02:19.509"></status>
</kw>
<kw type="kw" name="${metrics} = emergent.Get Results">
<doc></doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<kw type="kw" name="${result} = BuiltIn.Should Match Regexp">
<doc>Fails if `string` does not match `pattern` as a regular expression.</doc>
<arguments>
<arg>${output}</arg>
<arg>{.*}</arg>
<arg>msg=No results found in output for ${name}: ${output}</arg>
<arg>values=False</arg>
</arguments>
<msg timestamp="20140222 14:02:19.516" level="INFO">${result} = { "name": "LeabraStdEmbedded", "min": 8, "max": 13, "avg": 10.3 }</msg>
<status status="PASS" endtime="20140222 14:02:19.516" starttime="20140222 14:02:19.514"></status>
</kw>
<msg timestamp="20140222 14:02:19.517" level="INFO">${metrics} = { "name": "LeabraStdEmbedded", "min": 8, "max": 13, "avg": 10.3 }</msg>
<status status="PASS" endtime="20140222 14:02:19.517" starttime="20140222 14:02:19.511"></status>
</kw>
<msg timestamp="20140222 14:02:19.518" level="INFO">${actuals} = { "name": "LeabraStdEmbedded", "min": 8, "max": 13, "avg": 10.3 }</msg>
<status status="PASS" endtime="20140222 14:02:19.518" starttime="20140222 14:02:13.787"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${record-file}</arg>
<arg>${actuals}\n</arg>
</arguments>
<msg timestamp="20140222 14:02:19.536" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.record.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.record.json&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:19.537" starttime="20140222 14:02:19.519"></status>
</kw>
<kw type="kw" name="${baseline} = emergent.Get Baseline">
<doc></doc>
<arguments>
<arg>${baseline-file}</arg>
</arguments>
<kw type="kw" name="${status}, ${content} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get File</arg>
<arg>${file}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${file}</arg>
</arguments>
<msg timestamp="20140222 14:02:19.544" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.baseline.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.baseline.json&lt;/a&gt;'</msg>
<msg timestamp="20140222 14:02:19.545" level="FAIL">IOError: [Errno 2] No such file or directory: u'C:\\Users\\david_000\\Documents\\NetBeansProjects\\EmergentTestFramework\\projects\\test\\LeabraStdEmbedded.baseline.json'</msg>
<status status="FAIL" endtime="20140222 14:02:19.546" starttime="20140222 14:02:19.543"></status>
</kw>
<msg timestamp="20140222 14:02:19.546" level="INFO">${status} = FAIL</msg>
<msg timestamp="20140222 14:02:19.546" level="INFO">${content} = IOError: [Errno 2] No such file or directory: u'C:\\Users\\david_000\\Documents\\NetBeansProjects\\EmergentTestFramework\\projects\\test\\LeabraStdEmbedded.baseline.json'</msg>
<status status="PASS" endtime="20140222 14:02:19.546" starttime="20140222 14:02:19.541"></status>
</kw>
<kw type="kw" name="${content} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>${EMPTY}</arg>
<arg>${content}</arg>
</arguments>
<msg timestamp="20140222 14:02:19.549" level="INFO">${content} = </msg>
<status status="PASS" endtime="20140222 14:02:19.549" starttime="20140222 14:02:19.547"></status>
</kw>
<kw type="kw" name="${status}, ${baseline} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Match Regexp</arg>
<arg>${content}</arg>
<arg>{[^\"]*\"name\"[^:]*:[^\"]*\"${name}\"[^}]*}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Match Regexp">
<doc>Fails if `string` does not match `pattern` as a regular expression.</doc>
<arguments>
<arg>${content}</arg>
<arg>{[^\"]*\"name\"[^:]*:[^\"]*\"${name}\"[^}]*}</arg>
</arguments>
<msg timestamp="20140222 14:02:19.553" level="FAIL">'' does not match '{[^"]*"name"[^:]*:[^"]*"LeabraStdEmbedded"[^}]*}'</msg>
<status status="FAIL" endtime="20140222 14:02:19.554" starttime="20140222 14:02:19.550"></status>
</kw>
<msg timestamp="20140222 14:02:19.554" level="INFO">${status} = FAIL</msg>
<msg timestamp="20140222 14:02:19.554" level="INFO">${baseline} = '' does not match '{[^"]*"name"[^:]*:[^"]*"LeabraStdEmbedded"[^}]*}'</msg>
<status status="PASS" endtime="20140222 14:02:19.554" starttime="20140222 14:02:19.549"></status>
</kw>
<kw type="kw" name="${baseline} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>${status}</arg>
<arg>${baseline}</arg>
</arguments>
<msg timestamp="20140222 14:02:19.555" level="INFO">${baseline} = FAIL</msg>
<status status="PASS" endtime="20140222 14:02:19.555" starttime="20140222 14:02:19.554"></status>
</kw>
<msg timestamp="20140222 14:02:19.556" level="INFO">${baseline} = FAIL</msg>
<status status="PASS" endtime="20140222 14:02:19.556" starttime="20140222 14:02:19.537"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${baseline}' == 'FAIL'</arg>
<arg>Add To Baseline</arg>
<arg>${baseline-file}</arg>
<arg>${actuals}</arg>
</arguments>
<kw type="kw" name="emergent.Add To Baseline">
<doc></doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${actuals}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${baseline-file}</arg>
<arg>${actuals},</arg>
</arguments>
<msg timestamp="20140222 14:02:19.572" html="yes" level="INFO">Appended to file '&lt;a href="file://C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.baseline.json"&gt;C:\Users\david_000\Documents\NetBeansProjects\EmergentTestFramework\projects\test\LeabraStdEmbedded.baseline.json&lt;/a&gt;'</msg>
<status status="PASS" endtime="20140222 14:02:19.572" starttime="20140222 14:02:19.559"></status>
</kw>
<kw type="kw" name="BuiltIn.Pass Execution">
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>No baseline for ${name}; adding results from this run</arg>
</arguments>
<msg timestamp="20140222 14:02:19.573" level="INFO">Execution passed with message:
No baseline for LeabraStdEmbedded; adding results from this run</msg>
<status status="PASS" endtime="20140222 14:02:19.573" starttime="20140222 14:02:19.572"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:19.573" starttime="20140222 14:02:19.558"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:19.573" starttime="20140222 14:02:19.557"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:19.573" starttime="20140222 14:02:13.786"></status>
</kw>
<status status="PASS" endtime="20140222 14:02:19.574" starttime="20140222 14:02:13.655"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140222 14:02:19.574" critical="yes" starttime="20140222 14:02:13.654">No baseline for LeabraStdEmbedded; adding results from this run</status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140222 14:02:19.576" starttime="20140222 14:02:13.643"></status>
</suite>
<kw type="teardown" name="Process.Terminate All Processes">
<doc>Terminates all still running processes started by this library.</doc>
<arguments>
<arg>kill=True</arg>
</arguments>
<status status="PASS" endtime="20140222 14:02:19.580" starttime="20140222 14:02:19.579"></status>
</kw>
<doc></doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140222 14:02:19.580" starttime="20140222 14:02:01.361"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" pass="3" id="s1" name="Test">Test</stat>
<stat fail="0" pass="1" id="s1-s1" name="LeabraStd">Test.LeabraStd</stat>
<stat fail="0" pass="1" id="s1-s2" name="LeabraStdCopy">Test.LeabraStdCopy</stat>
<stat fail="0" pass="1" id="s1-s3" name="LeabraStdEmbedded">Test.LeabraStdEmbedded</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
