
Need to modify the generation process so that it does not try to verify or create tests for those with custom tests.

I haven't really worked to make the generate process idempotent - I've always been resetting it.

Change the "Preferred" test to just generate warnings

2pm 02/22
Basic generator and tests are working.

cd <path-to-projects>
pybot <path-to-installation>
pybot test

The first time through it will generate baselines.

Next up: dealing with .proj files that don't have what is needed to run the default test

Then: handling custom tests.  Now I'm thinking we want to have users put the custom test
      code (.css, .txt) into the project directory. That way they don't have to create the test
      directory first, we don't have to deal with overwrites, etc.






----------------


Test Generator
    Get list of .proj files
    Look for .css file (or .txt?) with same name
    If no .css/.txt, generate standard test
    If .css/.txt exists, generate custom test
    
<project>.proj
<project>.baseline.json
<project>.record.json
<project>.css

[would be ideal if test generator could also verify that the test will work so that we know the runner will work]
[maybe the test generator can run baselines? Also as a way of verifying the tests?]
[what happens when re-running Test Generator - should be idempotent]
To make the test generation idempotent, we need to include a special comment marker indicating auto-generation of test.


Test Runner
    Run the test suite in a directory. This means that all the other .txt files
    have to be something else.  Let's try that.
    Can grab modified time of baseline and include that in the output

---
Looks like having one or more subdirectories of the project directory is the thing.
It would be ideal to keep the directory of tests separate from the other junk, but maybe not in first pass.
- When running, run from project directory
- Create test/ subdirectory and put all the tests in there
- Run command is "pybot test" - I like that.
- Generate command would ideally be something like "pybot /path-to-install/emergent".
  generate.txt is in that path, along with emergent.txt.  
- Keep baselines and records in the test directory too. But the test output will actually show up in the
  project directory. I suppose that's ok.
---
Randy: I like the test generator idea. Would be gr8 if each proj has it's own
test spec and then the master just loops over that. In general having sep files
is more modular - same for baselines etc. 