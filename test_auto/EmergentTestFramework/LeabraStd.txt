*** Settings ***
Resource          Emergent.txt

*** Variables ***

# Generic variables that will go in the initialization
${emergent} =         emergent.bat
${s} =                -s
${p} =                -p
${baseline-file} =    baseline.json
${record-file} =      record.json

# Variables specific to this test suite
${name} =             LeabraStd
${project-file} =          ${name}.proj
${script-file} =           ${name}.css
${timeout} =          60 secs
@{metric-list} =      min  0.20  0.35  max  0.40  0.80  avg  0.15  0.25

*** Test Cases ***

Initialize
    Create CSS
    ${baseline} =              Get Baseline       ${baseline-file}
    Set Suite Variable         ${baseline}

Run Model
    ${actuals} =         Run Emergent            ${project-file}   ${script-file}   ${timeout}
    Set Suite Variable   ${actuals}
    Append To File       ${record-file}          ${actuals},   #could have a suite teardown to fix JSON array with []

Preferred Range
    [Tags]             permissive
    :FOR  ${metric}  ${preferred}  ${required}  IN  @{metric-list}
    \     Run Keyword And Continue On Failure   Check Metric     ${metric}  ${preferred}  ${actuals}  ${baseline}
    
Required Range
    :FOR  ${metric}  ${preferred}  ${required}  IN  @{metric-list}
    \     Run Keyword And Continue On Failure   Check Metric     ${metric}  ${required}   ${actuals}  ${baseline}

All In One
    Create CSS Standard                             ${script-file}
    Add CSS Standard Randomize                      ${script-file}   ${name}
    Add CSS Standard RunProgram                     ${script-file}   ${name}    LeabraBatch    Network_0    StdInputData
    Add CSS Standard OutputEpochsToTrain            ${script-file}   ${name}
    ${baseline} =                                   Get Baseline     ${baseline-file}
    ${actuals} =                                    Run Emergent     ${project-file}   ${script-file}   ${timeout}
    Append To File                                  ${record-file}   ${actuals},  
    :FOR  ${metric}  ${preferred}  ${required}  IN  @{metric-list}
    \     Run Keyword And Continue On Failure   Check Metric     ${metric}  ${preferred}  ${actuals}  ${baseline}
    :FOR  ${metric}  ${preferred}  ${required}  IN  @{metric-list}
    \     Run Keyword And Continue On Failure   Check Metric     ${metric}  ${required}   ${actuals}  ${baseline}
   


*** Keywords ***

Create CSS
    Create CSS Standard                             ${script-file}
    Add CSS Standard Randomize                      ${script-file}   ${name}
    Add CSS Standard RunProgram                     ${script-file}   ${name}    LeabraBatch    Network_0    StdInputData
    Add CSS Standard OutputEpochsToTrain            ${script-file}   ${name}
