// ta_Dump File v3.0 -- code v8.0.8.0 rev10702
LeabraProject .projects[1] { 
 Doc_Group @.docs = [0] {
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ClusterRun @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [0] {
   };

   ControlPanelMethod_Group @.mths = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
  ControlPanel @[1] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [1] {
    ControlPanelMember @[0] { };
   };

   ControlPanelMethod_Group @.mths = [0] {
   };
  };
 };

 ParamSet_Group @.active_params = [0] {
 };

 ArchivedParams_Group @.archived_params = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp[0] = [1] { 
   DataTable @[0] { 
    DataTableCols @.data = [1] {
     String_Data @[0] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
  };
  DataTable_Group @.gp[1] { 
  };
  DataTable_Group @.gp[2] { 
  };
 };

 Program_TopGroup @.programs = [0] {
  Program_Group @.gp[0] = [10] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     DataTable @[0] { 
      DataTableCols @.data = [1] {
       String_Data @[0] { };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MatrixAssign @[1] { };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [1] {
     Function @[0] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [3] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       PrintExpr @[1] { };
       AssignExpr @[2] { };
      };
     };
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     FunctionCall @[1] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
    };
   };
   Program @[2] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [4] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     AssignExpr @[1] { };
     ProgramCall @[2] { 
      ProgArg_List @.prog_args = [0] {
      };
     };
     OtherProgramVar @[3] { };
    };
   };
   Program @[3] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [1] {
     Function @[0] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [2] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       AssignExpr @[1] { };
      };
     };
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     AssignExpr @[1] { };
     FunctionCall @[2] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
     ForLoop @[3] { 
      ProgEl_List @.loop_code = [0] {
      };
     };
     PrintVar @[4] { };
    };
   };
   Program @[4] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [4] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     ProgramCall @[1] { 
      ProgArg_List @.prog_args = [0] {
      };
     };
     ForLoop @[2] { 
      ProgEl_List @.loop_code = [0] {
      };
     };
     PrintVar @[3] { };
    };
   };
   Program @[5] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
    };
   };
   Program @[6] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [0] {
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [1] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
    };
   };
   Program @[7] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MatrixAssign @[1] { };
     PrintVar @[2] { };
    };
   };
   Program @[8] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     AssignExpr @[1] { };
     If @[2] { 
      ProgEl_List @.true_code = [1] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [0] {
	};
       };
      };
     };
    };
   };
   Program @[9] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     If @[1] { 
      ProgEl_List @.true_code = [1] {
       PrintVar @[0] { };
      };
     };
    };
   };
  };
  Program_Group @.gp[1] = [0] { 
   Program_Group @.gp[0] = [1] { 
    Program @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserData_DocLink @[0] { };
     };

     ProgObjList @.objs = [0] {
     };

     ProgType_List @.types = [0] {
     };

     ProgVar_List @.args = [0] {
     };

     ProgVar_List @.vars = [0] {
     };

     Function_List @.functions = [0] {
     };

     ProgEl_List @.init_code = [0] {
     };

     ProgEl_List @.prog_code = [2] {
      LocalVars @[0] { 
       ProgVar_List @.local_vars = [0] {
       };
      };
      ProgramCall @[1] { 
       ProgArg_List @.prog_args = [0] {
       };
      };
     };
    };
   };
  };
  Program_Group @.gp[2] = [4] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [6] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [8] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     If @[1] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     ElseIf @[2] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     ElseIf @[3] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     ElseIf @[4] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     If @[5] { 
      ProgEl_List @.true_code = [1] {
       AssignExpr @[0] { };
      };
     };
     Else @[6] { 
      ProgEl_List @.true_code = [3] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       MethodCall @[2] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     PrintVar @[7] { };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [5] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     If @[1] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     ElseIf @[2] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     If @[3] { 
      ProgEl_List @.true_code = [1] {
       AssignExpr @[0] { };
      };
     };
     Else @[4] { 
      ProgEl_List @.true_code = [3] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       AssignExpr @[1] { };
       PrintVar @[2] { };
      };
     };
    };
   };
   Program @[2] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [4] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     If @[1] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     ElseIf @[2] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     If @[3] { 
      ProgEl_List @.true_code = [1] {
       AssignExpr @[0] { };
      };
     };
     Else @[4] { 
      ProgEl_List @.true_code = [3] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       MethodCall @[2] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
    };
   };
   Program @[3] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [4] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     CssExpr @[1] { };
     AssignExpr @[2] { };
     CssExpr @[3] { };
    };
   };
  };
  Program_Group @.gp[3] = [29] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [4] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     CssExpr @[1] { };
     CssExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[2] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [6] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     AssignExpr @[1] { };
     CssExpr @[2] { };
     PrintVar @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[3] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[4] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[5] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [4] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     CssExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[6] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[7] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [4] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[8] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[9] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [4] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     CssExpr @[1] { };
     CssExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[10] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[11] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [4] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     CssExpr @[1] { };
     CssExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[12] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[13] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     CssExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[14] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[15] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     CssExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[16] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[17] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[18] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[19] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[20] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[21] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[22] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[23] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[24] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [7] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     AssignExpr @[5] { };
     MethodCall @[6] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[25] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[26] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [5] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [3] {
       ProgVar @[0] { };
       ProgVar @[1] { };
       ProgVar @[2] { };
      };
     };
     AssignExpr @[1] { };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[27] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     AssignExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[28] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [3] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     AssignExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
  };
  Program_Group @.gp[4] = [2] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [1] {
     Function @[0] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [3] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       PrintExpr @[1] { };
       AssignExpr @[2] { };
      };
     };
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     FunctionCall @[1] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [0] {
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [4] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     AssignExpr @[1] { };
     ProgramCall @[2] { 
      ProgArg_List @.prog_args = [0] {
      };
     };
     OtherProgramVar @[3] { };
    };
   };
   Program_Group @.gp[0] { 
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @[0] { };
    PanelViewer @[1] { };
    T3PanelViewer @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };

     T3Panel_List @.panels = [1] {
      T3Panel @[0] { 
       T3DataView_List @.root_view.children = [0] {
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
      UserDataItem @[2] { };
      UserDataItem @[3] { };
      UserDataItem @[4] { };
      UserDataItem @[5] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [0] {
 };
};
LeabraProject .projects[1] {
 name="TestPointerUpdates";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=0;
 };
 author="rohrlich";
 email="john.rohrlich@colorado.edu";
 license {
  license=GPLv2;
  owner_name=;
  org=;
  year="2016";
  custom=;
 };
 pub_cite=;
 wiki {wiki="": page_name="": };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_6";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="NO_CLIP": value=1: val_type_fixed=0: };
    UserDataItem @[1] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  master_and_clones=0;
  ClusterRun @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ClusterRun";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
  ControlPanel @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ControlPanel";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
    ControlPanelMember @[0] {
     label="TestGroup_which_group";
     short_label=0;
     cust_label=1;
     desc=;
     cust_desc=0;
     base=.projects[1].programs.gp[2][0].vars[2]$$;
     mbr=ProgVar::int_val;
     data {ctrl_type=CONTROL: is_numeric=1: is_single=1: state=EXPLORE: saved_value="": range="": notes="": };
    };
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
 };
 active_params {
  name="active_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 archived_params {
  name="archived_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="data_group_DataTable";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="col_one";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [5] "dog";"b";"c";"d";"e";      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [5] 0;1;2;3;4;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program_Group @.gp[0] {
   name="group_one";
   el_typ=Program;
   el_def=0;
   tags=;
   desc=;
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][0].doc$$: };
    };
    name="HasDataTable";
    short_nm="HDTbl";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=DataTable;
     el_def=0;
     DataTable @[0] {
      name="aDataTable";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @[0] {
	name="col_one";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=16;
	matrix_col_width=10;
	ar {
	 name="ar";
	[1] "cat";	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [1] 0;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      row_with_hilite=-1;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="a_data_table";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[1].programs.gp[0][0].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="SetValue";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MatrixAssign @[1] {
      name="MatrixAssign_adatatablecolone0SetValue";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="aDataTable[\\\"col_one\\\"][0] = SetValue";
      variable=.projects[1].programs.gp[0][0].vars[0]$$;
      data_table=1;
      col {
       expr="\\\"col_one\\\"";
      };
      dim0 {
       expr="0";
      };
      dim1 {
       expr=;
      };
      dim2 {
       expr=;
      };
      dim3 {
       expr=;
      };
      dim4 {
       expr=;
      };
      dim5 {
       expr=;
      };
      expr {
       expr="SetValue";
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][1].doc$$: };
    };
    name="Callee";
    short_nm="Callee";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author="Kai Krueger";
    email="kai.krueger@colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_name";
      var_type=T_String;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @[0] {
      name="Function_2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Function_2() returns: int";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name="args";
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name="fun_code";
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	name="LocalVars_LocalVars0vars";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="LocalVars (0 vars)";
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       PrintExpr @[1] {
	name="PrintExpr_Printthisproggp";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print this.prog_gp";
	expr {
	 expr="this.prog_gp";
	};
	debug=0;
       };
       AssignExpr @[2] {
	name="AssignExpr_groupnamethisproggpGetPathNames";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="group_name = this.prog_gp";
	result_var=.projects[1].programs.gp[0][1].vars[0]$$;
	expr {
	 expr="this.prog_gp->GetPathNames()";
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     FunctionCall @[1] {
      name="FunctionCall_Function2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Function_2()";
      result_var=NULL;
      fun=.projects[1].programs.gp[0][1].functions[0]$$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[2] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][2].doc$$: };
    };
    name="Caller";
    short_nm="Caller";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_name";
      var_type=T_String;
      object_scope=NULL;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_groupname";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_name = \\\"\\\"";
      result_var=.projects[1].programs.gp[0][2].vars[0]$$;
      expr {
       expr="\\\"\\\"";
      };
     };
     ProgramCall @[2] {
      name="ProgramCall_Callee";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Callee()";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
      };
      target=.projects[1].programs.gp[0][1]$$;
      targ_ld_init="*Callee*";
     };
     OtherProgramVar @[3] {
      name="OtherProgramVar_VarsFmprogramCal_amevar2var3var4";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Vars Fm:  program=Callee set=from  var_1=group_name  var_2=?  var_3=?  var_4=? ";
      other_prog=$.projects[1].programs.gp[0][1]$;
      set_other=0;
      var_1=$.projects[1].programs.gp[0][2].vars[0]$;
      var_2=NULL;
      var_3=NULL;
      var_4=NULL;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[3] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][3].doc$$: };
    };
    name="LoopCodeFunction";
    short_nm="LCFnct";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="j";
      var_type=T_Int;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @[0] {
      name="addOne";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="addOne() returns: int";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name="args";
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name="fun_code";
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	name="LocalVars_LocalVars0vars";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="LocalVars (0 vars)";
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       AssignExpr @[1] {
	name="AssignExpr_jj1";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="j = j + 1";
	result_var=.projects[1].programs.gp[0][3].vars[0]$$;
	expr {
	 expr="j + 1";
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="i";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_j0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="j = 0";
      result_var=$.projects[1].programs.gp[0][3].vars[0]$;
      expr {
       expr="0";
      };
     };
     FunctionCall @[2] {
      name="FunctionCall_addOne";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="addOne()";
      result_var=NULL;
      fun=.projects[1].programs.gp[0][3].functions[0]$$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ForLoop @[3] {
      name="ForLoop_fori0i2i";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="for (i = 0; i < 2; i++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
      };
      init {
       expr="i = 0";
      };
      test {
       expr="i < 2";
      };
      iter {
       expr="i++";
      };
     };
     PrintVar @[4] {
      name="PrintVar_Printj";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Print  j";
      message=;
      print_var=$.projects[1].programs.gp[0][3].vars[0]$;
      print_var2=NULL;
      print_var3=NULL;
      print_var4=NULL;
      print_var5=NULL;
      print_var6=NULL;
      debug=0;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[4] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][4].doc$$: };
    };
    name="LoopCodeProgram";
    short_nm="LCPrgr";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="j";
      var_type=T_Int;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="i";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     ProgramCall @[1] {
      name="ProgramCall_Callee";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Callee()";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
      };
      target=$.projects[1].programs.gp[0][1]$;
      targ_ld_init="*Callee*";
     };
     ForLoop @[2] {
      name="ForLoop_fori0i2i";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="for (i = 0; i < 2; i++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
      };
      init {
       expr="i = 0";
      };
      test {
       expr="i < 2";
      };
      iter {
       expr="i++";
      };
     };
     PrintVar @[3] {
      name="PrintVar_Printj";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Print  j";
      message=;
      print_var=.projects[1].programs.gp[0][4].vars[0]$$;
      print_var2=NULL;
      print_var3=NULL;
      print_var4=NULL;
      print_var5=NULL;
      print_var6=NULL;
      debug=0;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[5] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][5].doc$$: };
    };
    name="ExpressionProgram";
    short_nm="xprPrg";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="i";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_i0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="i = 0";
      result_var=.projects[1].programs.gp[0][5].vars[0]$$;
      expr {
       expr="0";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_ii1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="i = i + 1";
      result_var=$.projects[1].programs.gp[0][5].vars[0]$;
      expr {
       expr="i + 1";
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[6] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][6].doc$$: };
    };
    name="EmptyProgram";
    short_nm="mptPrg";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[7] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][7].doc$$: };
    };
    name="RefsGlobalTable";
    short_nm="RfGlbT";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=DataTable;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="set_value";
      var_type=T_String;
      string_val="dog";
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="data_group_data_table";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[1].data.gp[0][0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MatrixAssign @[1] {
      name="MatrixAssign_datagroupdatatab_colone0setvalue";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="data_group_data_table[\\\"col_one\\\"][0] = set_value";
      variable=.projects[1].programs.gp[0][7].vars[1]$$;
      data_table=1;
      col {
       expr="\\\"col_one\\\"";
      };
      dim0 {
       expr="0";
      };
      dim1 {
       expr=;
      };
      dim2 {
       expr=;
      };
      dim3 {
       expr=;
      };
      dim4 {
       expr=;
      };
      dim5 {
       expr=;
      };
      expr {
       expr="set_value";
      };
     };
     PrintVar @[2] {
      name="PrintVar_Printsetvalue";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Print  set_value";
      message=;
      print_var=.projects[1].programs.gp[0][7].vars[0]$$;
      print_var2=NULL;
      print_var3=NULL;
      print_var4=NULL;
      print_var5=NULL;
      print_var6=NULL;
      debug=0;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[8] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][8].doc$$: };
    };
    name="IfWithProgCall";
    short_nm="WtPrgC";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="i";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_i0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="i = 0";
      result_var=.projects[1].programs.gp[0][8].vars[0]$$;
      expr {
       expr="0";
      };
     };
     If @[2] {
      name="If_ifi0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (i == 0)";
      cond {
       expr="i == 0";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_Callee";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Callee()";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	target=$.projects[1].programs.gp[0][1]$;
	targ_ld_init="*Callee*";
       };
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[9] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[0][9].doc$$: };
    };
    name="ProgWithIf";
    short_nm="PrWthf";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="j";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     If @[1] {
      name="If_ifj0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (j == 0)";
      cond {
       expr="j == 0";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       PrintVar @[0] {
	name="PrintVar_PrintHelloWorld";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print  \\\"Hello World\\\"";
	message="Hello World";
	print_var=NULL;
	print_var2=NULL;
	print_var3=NULL;
	print_var4=NULL;
	print_var5=NULL;
	print_var6=NULL;
	debug=0;
       };
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
  };
  Program_Group @.gp[1] {
   name="group_two";
   el_typ=Program;
   el_def=0;
   tags=;
   desc=;
   debug_mode=0;
   Program_Group @.gp[0] {
    name="sub_group";
    el_typ=Program;
    el_def=0;
    tags=;
    desc=;
    debug_mode=0;
    Program @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserData_DocLink;
      el_def=0;
      UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[1].gp[0][0].doc$$: };
     };
     name="ProgramInSubgroup";
     short_nm="PrgSbg";
     tags=;
     desc=;
     version {
      major=0;
      minor=0;
      step=0;
     };
     author=;
     email=;
     flags=NO_STOP_STEP;
     stop_step_cond {
      expr=;
     };
     objs {
      name="objs";
      el_typ=taNBase;
      el_def=0;
     };
     types {
      name="types";
      el_typ=DynEnumType;
      el_def=0;
     };
     args {
      name="args";
      el_typ=ProgVar;
      el_def=0;
     };
     vars {
      name="vars";
      el_typ=ProgVar;
      el_def=0;
     };
     functions {
      name="functions";
      el_typ=Function;
      el_def=0;
     };
     init_code {
      name="init_code";
      el_typ=ProgCode;
      el_def=0;
     };
     prog_code {
      name="prog_code";
      el_typ=ProgCode;
      el_def=0;
      LocalVars @[0] {
       name="LocalVars_LocalVars0vars";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="LocalVars (0 vars)";
       local_vars {
	name="local_vars";
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ProgramCall @[1] {
       name="ProgramCall_Callee";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Callee()";
       prog_args {
	name="prog_args";
	el_typ=ProgArg;
	el_def=0;
       };
       target=$.projects[1].programs.gp[0][1]$;
       targ_ld_init="*Callee*";
      };
     };
     step_prog=NULL;
     step_n=1;
     doc {
      name="doc";
      desc=;
      web_doc=0;
      wiki=;
      url="local";
      full_url="local";
      text_size=1;
      text=;
      html_text=;
     };
    };
   };
  };
  Program_Group @.gp[2] {
   name="TesterPrograms";
   el_typ=Program;
   el_def=0;
   tags=;
   desc=;
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[2][0].doc$$: };
    };
    name="TestGroup";
    short_nm="TstGrp";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=.projects[1].programs.gp[1]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="group_one";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=.projects[1].programs.gp[0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="which_group";
      var_type=T_Int;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="group_name";
      var_type=T_String;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[4] {
      name="group_three";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=.projects[1].programs.gp[4]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[5] {
      name="sub_group_three";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=.projects[1].programs.gp[4].gp[0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="myProgram";
	var_type=T_Object;
	object_type=Program;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     If @[1] {
      name="If_ifwhichgroup1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (which_group == 1)";
      cond {
       expr="which_group == 1";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramgrouponeFindNameCaller";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = group_one->FindName(\\\"Caller\\\")";
	result_var=.projects[1].programs.gp[2][0].prog_code[0].local_vars[0]$$;
	obj=.projects[1].programs.gp[2][0].vars[1]$$;
	method=taGroup_Program_::FindName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"Caller\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindName(taString& item_nm)";
	meth_desc=" Find element in top-level list with given name (nm) (NULL = not here)";
       };
      };
     };
     ElseIf @[2] {
      name="ElseIf_elseifwhichgroup2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else if (which_group == 2)";
      cond {
       expr="which_group == 2";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramgrouptwoFindNameCaller";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = group_two->FindName(\\\"Caller\\\")";
	result_var=$.projects[1].programs.gp[2][0].prog_code[0].local_vars[0]$;
	obj=.projects[1].programs.gp[2][0].vars[0]$$;
	method=taGroup_Program_::FindName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"Caller\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindName(taString& item_nm)";
	meth_desc=" Find element in top-level list with given name (nm) (NULL = not here)";
       };
      };
     };
     ElseIf @[3] {
      name="ElseIf_elseifwhichgroup3";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else if (which_group == 3)";
      cond {
       expr="which_group == 3";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramgroupth_eFindNameCaller";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = group_three->FindName(\\\"Caller\\\")";
	result_var=$.projects[1].programs.gp[2][0].prog_code[0].local_vars[0]$;
	obj=.projects[1].programs.gp[2][0].vars[4]$$;
	method=taGroup_Program_::FindName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"Caller\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindName(taString& item_nm)";
	meth_desc=" Find element in top-level list with given name (nm) (NULL = not here)";
       };
      };
     };
     ElseIf @[4] {
      name="ElseIf_elseifwhichgroup3";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else if (which_group == -3)";
      cond {
       expr="which_group == -3";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramsubgrou_eFindNameCaller";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = sub_group_three->FindName(\\\"Caller\\\")";
	result_var=$.projects[1].programs.gp[2][0].prog_code[0].local_vars[0]$;
	obj=.projects[1].programs.gp[2][0].vars[5]$$;
	method=taGroup_Program_::FindName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"Caller\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindName(taString& item_nm)";
	meth_desc=" Find element in top-level list with given name (nm) (NULL = not here)";
       };
      };
     };
     If @[5] {
      name="If_ifmyProgramNULL";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (myProgram == NULL)";
      cond {
       expr="myProgram == NULL";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       AssignExpr @[0] {
	name="AssignExpr_groupnameNONE";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="group_name = \\\"NONE\\\"";
	result_var=.projects[1].programs.gp[2][0].vars[3]$$;
	expr {
	 expr="\\\"NONE\\\"";
	};
       };
      };
     };
     Else @[6] {
      name="Else_If_ifmyProgramNULL";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else";
      cond {
       expr=;
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramCallInitthis";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram->CallInit(this)";
	result_var=NULL;
	obj=$.projects[1].programs.gp[2][0].prog_code[0].local_vars[0]$;
	method=Program::CallInit;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Program_ptr;
	  type="Program*";
	  name="caller";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="this";
	  };
	 };
	};
	meth_sig="int CallInit(Program* caller)";
	meth_desc=" runs the program's Init from a superProg Init, 0=success";
       };
       MethodCall @[1] {
	name="MethodCall_myProgramCallthis";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram->Call(this)";
	result_var=NULL;
	obj=$.projects[1].programs.gp[2][0].prog_code[0].local_vars[0]$;
	method=Program::Call;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Program_ptr;
	  type="Program*";
	  name="caller";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="this";
	  };
	 };
	};
	meth_sig="int Call(Program* caller)";
	meth_desc=" runs the program as a subprogram called from another running program, 0=success -- args are passed by setting global args variables in advance of calling";
       };
       MethodCall @[2] {
	name="MethodCall_groupnamemyProgr_GetVargroupname";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="group_name = myProgram->GetVar(\\\"group_name\\\")";
	result_var=$.projects[1].programs.gp[2][0].vars[3]$;
	obj=$.projects[1].programs.gp[2][0].prog_code[0].local_vars[0]$;
	method=Program::GetVar;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="var_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"group_name\\\"";
	  };
	 };
	};
	meth_sig="Variant GetVar(taString& var_nm)";
	meth_desc=" get the value of a program variable (only top-level variables in vars or args) -- can be called from within a running program";
       };
      };
     };
     PrintVar @[7] {
      name="PrintVar_Printgroupname";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Print  group_name";
      message=;
      print_var=$.projects[1].programs.gp[2][0].vars[3]$;
      print_var2=NULL;
      print_var3=NULL;
      print_var4=NULL;
      print_var5=NULL;
      print_var6=NULL;
      debug=0;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[2][1].doc$$: };
    };
    name="TestDataTableValue";
    short_nm="TsDTbl";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author="Kai Krueger";
    email="kai.krueger@colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="group_one";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="which_group";
      var_type=T_Int;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="data_table_value";
      var_type=T_String;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[4] {
      name="data_table";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="myProgram";
	var_type=T_Object;
	object_type=Program;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     If @[1] {
      name="If_ifwhichgroup1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (which_group == 1)";
      cond {
       expr="which_group == 1";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramgroupon_ameHasDataTable";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = group_one->FindLeafName(\\\"HasDataTable\\\")";
	result_var=.projects[1].programs.gp[2][1].prog_code[0].local_vars[0]$$;
	obj=.projects[1].programs.gp[2][1].vars[1]$$;
	method=taGroup_Program_::FindLeafName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"HasDataTable\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindLeafName(taString& item_nm)";
	meth_desc=" Find element anywhere in full group and subgroups with given name (item_nm)";
       };
      };
     };
     ElseIf @[2] {
      name="ElseIf_elseifwhichgroup2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else if (which_group == 2)";
      cond {
       expr="which_group == 2";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramgrouptw_ameHasDataTable";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = group_two->FindLeafName(\\\"HasDataTable\\\")";
	result_var=$.projects[1].programs.gp[2][1].prog_code[0].local_vars[0]$;
	obj=.projects[1].programs.gp[2][1].vars[0]$$;
	method=taGroup_Program_::FindLeafName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"HasDataTable\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindLeafName(taString& item_nm)";
	meth_desc=" Find element anywhere in full group and subgroups with given name (item_nm)";
       };
      };
     };
     If @[3] {
      name="If_ifmyProgramNULL";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (myProgram == NULL)";
      cond {
       expr="myProgram == NULL";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       AssignExpr @[0] {
	name="AssignExpr_datatablevalue1";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="data_table_value = -1";
	result_var=.projects[1].programs.gp[2][1].vars[3]$$;
	expr {
	 expr="-1";
	};
       };
      };
     };
     Else @[4] {
      name="Else_If_ifmyProgramNULL";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else";
      cond {
       expr=;
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_datatablemyProgr_etVaradatatable";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="data_table = myProgram->GetVar(\\\"aDataTable\\\")";
	result_var=.projects[1].programs.gp[2][1].vars[4]$$;
	obj=$.projects[1].programs.gp[2][1].prog_code[0].local_vars[0]$;
	method=Program::GetVar;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="var_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"a_data_table\\\"";
	  };
	 };
	};
	meth_sig="Variant GetVar(taString& var_nm)";
	meth_desc=" get the value of a program variable (only top-level variables in vars or args) -- can be called from within a running program";
       };
       AssignExpr @[1] {
	name="AssignExpr_datatablevaluedatatablecolone0";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="data_table_value = data_table[\\\"col_one\\\"][0]";
	result_var=$.projects[1].programs.gp[2][1].vars[3]$;
	expr {
	 expr="data_table[\\\"col_one\\\"][0]";
	};
       };
       PrintVar @[2] {
	name="PrintVar_Printdatatablevalue";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print  data_table_value";
	message=;
	print_var=$.projects[1].programs.gp[2][1].vars[3]$;
	print_var2=NULL;
	print_var3=NULL;
	print_var4=NULL;
	print_var5=NULL;
	print_var6=NULL;
	debug=0;
       };
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[2] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[2][2].doc$$: };
    };
    name="edit_datatable";
    short_nm="dtdttb";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="group_one";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="which_group";
      var_type=T_Int;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="SetValue";
      var_type=T_String;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="myProgram";
	var_type=T_Object;
	object_type=Program;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     If @[1] {
      name="If_ifwhichgroup1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (which_group == 1)";
      cond {
       expr="which_group == 1";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramgroupon_ameHasDataTable";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = group_one->FindLeafName(\\\"HasDataTable\\\")";
	result_var=.projects[1].programs.gp[2][2].prog_code[0].local_vars[0]$$;
	obj=.projects[1].programs.gp[2][2].vars[1]$$;
	method=taGroup_Program_::FindLeafName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"HasDataTable\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindLeafName(taString& item_nm)";
	meth_desc=" Find element anywhere in full group and subgroups with given name (item_nm)";
       };
      };
     };
     ElseIf @[2] {
      name="ElseIf_elseifwhichgroup2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else if (which_group == 2)";
      cond {
       expr="which_group == 2";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramgrouptw_ameHasDataTable";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram = group_two->FindLeafName(\\\"HasDataTable\\\")";
	result_var=$.projects[1].programs.gp[2][2].prog_code[0].local_vars[0]$;
	obj=.projects[1].programs.gp[2][2].vars[0]$$;
	method=taGroup_Program_::FindLeafName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="item_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"HasDataTable\\\"";
	  };
	 };
	};
	meth_sig="Program_ptr FindLeafName(taString& item_nm)";
	meth_desc=" Find element anywhere in full group and subgroups with given name (item_nm)";
       };
      };
     };
     If @[3] {
      name="If_ifmyProgramNULL";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (myProgram == NULL)";
      cond {
       expr="myProgram == NULL";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       AssignExpr @[0] {
	name="AssignExpr_SetValueNONE";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="SetValue = \\\"NONE\\\"";
	result_var=.projects[1].programs.gp[2][2].vars[3]$$;
	expr {
	 expr="\\\"NONE\\\"";
	};
       };
      };
     };
     Else @[4] {
      name="Else_If_ifmyProgramNULL";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="else";
      cond {
       expr=;
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_myProgramCallInitthis";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram->CallInit(this)";
	result_var=NULL;
	obj=$.projects[1].programs.gp[2][2].prog_code[0].local_vars[0]$;
	method=Program::CallInit;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Program_ptr;
	  type="Program*";
	  name="caller";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="this";
	  };
	 };
	};
	meth_sig="int CallInit(Program* caller)";
	meth_desc=" runs the program's Init from a superProg Init, 0=success";
       };
       MethodCall @[1] {
	name="MethodCall_myProgramSetVarSetValueSetValue";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram->SetVar(\\\"SetValue\\\", SetValue)";
	result_var=NULL;
	obj=$.projects[1].programs.gp[2][2].prog_code[0].local_vars[0]$;
	method=Program::SetVar;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="var_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\\\"SetValue\\\"";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_Variant_ref;
	  type="Variant&";
	  name="value";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="SetValue";
	  };
	 };
	};
	meth_sig="bool SetVar(taString& var_nm, Variant& value)";
	meth_desc=" set the value of a program variable (only top-level variables in vars or args) -- can be called from within a running program";
       };
       MethodCall @[2] {
	name="MethodCall_myProgramCallthis";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="myProgram->Call(this)";
	result_var=NULL;
	obj=$.projects[1].programs.gp[2][2].prog_code[0].local_vars[0]$;
	method=Program::Call;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Program_ptr;
	  type="Program*";
	  name="caller";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="this";
	  };
	 };
	};
	meth_sig="int Call(Program* caller)";
	meth_desc=" runs the program as a subprogram called from another running program, 0=success -- args are passed by setting global args variables in advance of calling";
       };
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[3] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[2][3].doc$$: };
    };
    name="TestCtrlPanel";
    short_nm="TsCtrP";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="ctrlPanel";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="ctrlPanelVar";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="set_val";
      var_type=T_Int;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     CssExpr @[1] {
      name="CssExpr_ctrlPaneltabMisc_chgroupNULLtrue";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="ctrlPanel = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates\\\"].ctrl_panels[\\\"ControlPanel\\\"].mbrs[\\\"TestGroup_which_group\\\"]\\\",NULL,true);";
      expr {
       expr="ctrlPanel = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates\\\\\\\"].ctrl_panels[\\\\\\\"ControlPanel\\\\\\\"].mbrs[\\\\\\\"TestGroup_which_group\\\\\\\"]\\\",NULL,true);";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_ctrlPanelVarctrlPanelbase";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="ctrlPanelVar = ctrlPanel->base";
      result_var=.projects[1].programs.gp[2][3].vars[1]$$;
      expr {
       expr="ctrlPanel->base";
      };
     };
     CssExpr @[3] {
      name="CssExpr_ctrlPanelVarintvalsetval";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="ctrlPanelVar->int_val = set_val;";
      expr {
       expr="ctrlPanelVar->int_val = set_val;";
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
  };
  Program_Group @.gp[3] {
   name="TesteePrograms";
   el_typ=Program;
   el_def=0;
   tags=;
   desc=;
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][0].doc$$: };
    };
    name="copy_callee_caller";
    short_nm="cpycll";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="callee";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="caller";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][2]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_grouptwoCopyChil_oreIndexcallee1";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(callee, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][0].vars[2]$$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="callee";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
     MethodCall @[2] {
      name="MethodCall_grouptwoCopyChil_oreIndexcaller1";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(caller, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][0].vars[2]$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="caller";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][1].doc$$: };
    };
    name="copy_control_var_into_proj";
    short_nm="cpycnt";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="ctrlPanel";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="ctrlPanelElem";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     CssExpr @[1] {
      name="CssExpr_ctrlPanelElemtab_chgroupNULLtrue";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="ctrlPanelElem = tabMisc::root->ElemPath(\\\".ctrl_panels[\\\"ControlPanel\\\"].mbrs[\\\"TestGroup_which_group\\\"]\\\",NULL,true);";
      expr {
       expr="ctrlPanelElem = tabMisc::root->ElemPath(\\\".ctrl_panels[\\\\\\\"ControlPanel\\\\\\\"].mbrs[\\\\\\\"TestGroup_which_group\\\\\\\"]\\\",NULL,true);";
      };
     };
     CssExpr @[2] {
      name="CssExpr_ctrlPaneltabMisc_elmbrsNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="ctrlPanel = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates_copy_into\\\"].ctrl_panels[\\\"ControlPanel\\\"].mbrs\\\",NULL, false);";
      expr {
       expr="ctrlPanel = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].ctrl_panels[\\\\\\\"ControlPanel\\\\\\\"].mbrs\\\",NULL, false);";
      };
     };
     MethodCall @[3] {
      name="MethodCall_ctrlPanelCopyChi_xctrlPanelElem1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="ctrlPanel->CopyChildBeforeIndex(ctrlPanelElem, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][1].vars[0]$$;
      method=taBase::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="ctrlPanelElem";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[2] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][2].doc$$: };
    };
    name="copy_callee_caller_into_project";
    short_nm="cpycll";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="callee";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="caller";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][2]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="group_two";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_grouptwoNULL";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two = NULL";
      result_var=.projects[1].programs.gp[3][2].vars[2]$$;
      expr {
       expr="NULL";
      };
     };
     CssExpr @[2] {
      name="CssExpr_grouptwotabMiscr_ouptwoNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates_copy_into\\\"].programs.gp[\\\"group_two\\\"]\\\",NULL, false);";
      expr {
       expr="group_two = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].programs.gp[\\\\\\\"group_two\\\\\\\"]\\\",NULL, false);";
      };
     };
     PrintVar @[3] {
      name="PrintVar_Printgrouptwo";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Print  group_two";
      message=;
      print_var=$.projects[1].programs.gp[3][2].vars[2]$;
      print_var2=NULL;
      print_var3=NULL;
      print_var4=NULL;
      print_var5=NULL;
      print_var6=NULL;
      debug=0;
     };
     MethodCall @[4] {
      name="MethodCall_grouptwoCopyChil_oreIndexcallee1";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(callee, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][2].vars[2]$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="callee";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
     MethodCall @[5] {
      name="MethodCall_grouptwoCopyChil_oreIndexcaller1";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(caller, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][2].vars[2]$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="caller";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[3] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][3].doc$$: };
    };
    name="copy_callee_caller_into_subgroup";
    short_nm="cpycll";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="callee";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[4][0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="caller";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[4][1]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="group_three_sub";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[4].gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_groupthreesubCop_oreIndexcallee1";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_three_sub->CopyChildBeforeIndex(callee, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][3].vars[2]$$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="callee";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
     MethodCall @[2] {
      name="MethodCall_groupthreesubCop_oreIndexcaller1";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_three_sub->CopyChildBeforeIndex(caller, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][3].vars[2]$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="caller";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[4] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][4].doc$$: };
    };
    name="move_callee_caller";
    short_nm="mvcllc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="callee";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="caller";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][2]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_grouptwoTransfercallee";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(callee)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][4].vars[2]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr="callee";
	expr {
	 expr="callee";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
     MethodCall @[2] {
      name="MethodCall_grouptwoTransfercaller";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(caller)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][4].vars[2]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr="caller";
	expr {
	 expr="caller";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[5] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][5].doc$$: };
    };
    name="move_callee_caller_into_project";
    short_nm="mvcllc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="callee";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="caller";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][2]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="group_two";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     CssExpr @[1] {
      name="CssExpr_grouptwotabMiscr_ouptwoNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates_copy_into\\\"].programs.gp[\\\"group_two\\\"]\\\",NULL, false);";
      expr {
       expr="group_two = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].programs.gp[\\\\\\\"group_two\\\\\\\"]\\\",NULL, false);";
      };
     };
     MethodCall @[2] {
      name="MethodCall_grouptwoTransfercallee";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(callee)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][5].vars[2]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="callee";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
     MethodCall @[3] {
      name="MethodCall_grouptwoTransfercaller";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(caller)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][5].vars[2]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="caller";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[6] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][6].doc$$: };
    };
    name="move_callee_caller_into_subgroup";
    short_nm="mvcllc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="callee";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[4][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="caller";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[4][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="group_three_sub";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[4].gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_groupthreesubTransfercallee";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_three_sub->Transfer(callee)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][6].vars[2]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr="callee";
	expr {
	 expr="callee";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
     MethodCall @[2] {
      name="MethodCall_groupthreesubTransfercaller";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_three_sub->Transfer(caller)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][6].vars[2]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr="caller";
	expr {
	 expr="caller";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[7] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][7].doc$$: };
    };
    name="move_callee_caller_out_of_subgroup";
    short_nm="mvcllc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="callee";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="caller";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="group_three_sub";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[4].gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="group_three";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[4]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_callergroupthree_dLeafNameCaller";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="caller = group_three_sub->FindLeafName(\\\"Caller\\\")";
      result_var=.projects[1].programs.gp[3][7].vars[1]$$;
      obj=.projects[1].programs.gp[3][7].vars[2]$$;
      method=taGroup_Program_::FindLeafName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="item_nm";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="\\\"Caller\\\"";
	};
       };
      };
      meth_sig="Program_ptr FindLeafName(taString& item_nm)";
      meth_desc=" Find element anywhere in full group and subgroups with given name (item_nm)";
     };
     MethodCall @[2] {
      name="MethodCall_calleegroupthree_dLeafNameCallee";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="callee = group_three_sub->FindLeafName(\\\"Callee\\\")";
      result_var=.projects[1].programs.gp[3][7].vars[0]$$;
      obj=$.projects[1].programs.gp[3][7].vars[2]$;
      method=taGroup_Program_::FindLeafName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="item_nm";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="\\\"Callee\\\"";
	};
       };
      };
      meth_sig="Program_ptr FindLeafName(taString& item_nm)";
      meth_desc=" Find element anywhere in full group and subgroups with given name (item_nm)";
     };
     MethodCall @[3] {
      name="MethodCall_groupthreeTransfercallee";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_three->Transfer(callee)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][7].vars[3]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="callee";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
     MethodCall @[4] {
      name="MethodCall_groupthreeTransfercaller";
      desc=;
      flags=WARNING|CAN_REVERT_TO_CODE;
      code_string="group_three->Transfer(caller)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][7].vars[3]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="caller";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[8] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][8].doc$$: };
    };
    name="copy_refsglobaltable";
    short_nm="cpyrfs";
    tags=;
    desc="copy a program that references a global data table - check that reference is still good";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="refs_global_table";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][7]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_grouptwoCopyChil_efsglobaltable1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(refs_global_table, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][8].vars[0]$$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="refs_global_table";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[9] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][9].doc$$: };
    };
    name="copy_refsglobaltable_into_project";
    short_nm="cpyrfs";
    tags=;
    desc="copy a program that references a global data table - check that reference is still good";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="data_group";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="refs_global_table_program";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][7]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="data_group_data_table";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[1].data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     CssExpr @[1] {
      name="CssExpr_grouptwotabMiscr_ouptwoNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates_copy_into\\\"].programs.gp[\\\"group_two\\\"]\\\",NULL, false);";
      expr {
       expr="group_two = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].programs.gp[\\\\\\\"group_two\\\\\\\"]\\\",NULL, false);";
      };
     };
     CssExpr @[2] {
      name="CssExpr_datagrouptabMisc_utDataNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="data_group = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates_copy_into\\\"].data.gp[\\\"InputData\\\"]\\\",NULL, false);";
      expr {
       expr="data_group = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].data.gp[\\\\\\\"InputData\\\\\\\"]\\\",NULL, false);";
      };
     };
     MethodCall @[3] {
      name="MethodCall_datagroupCopyChi_groupdatatable1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="data_group->CopyChildBeforeIndex(data_group_data_table, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][9].vars[1]$$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="data_group_data_table";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
     MethodCall @[4] {
      name="MethodCall_grouptwoCopyChil_altableprogram1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(refs_global_table_program, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][9].vars[0]$$;
      method=taBase::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="refs_global_table_program";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[10] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][10].doc$$: };
    };
    name="move_refsglobaltable";
    short_nm="mvrfsg";
    tags=;
    desc="copy a program that references a global data table - check that reference is still good";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="refs_global_table";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][7]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_grouptwoTransferrefsglobaltable";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(refs_global_table)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][10].vars[0]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr="refs_global_table";
	expr {
	 expr="refs_global_table";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[11] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][11].doc$$: };
    };
    name="move_refsglobaltable_into_project";
    short_nm="mvrfsn";
    tags=;
    desc="copy a program that references a global data table - check that reference is still good";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author="Kai Krueger";
    email="kai.krueger@colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="data_group";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="refs_global_table_program";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][7]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="data_group_data_table";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[1].data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     CssExpr @[1] {
      name="CssExpr_grouptwotabMiscr_ouptwoNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].programs.gp[\\\\\\\"group_two\\\\\\\"]\\\",NULL, false);";
      expr {
       expr="group_two = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].programs.gp[\\\\\\\"group_two\\\\\\\"]\\\",NULL, false);";
      };
     };
     CssExpr @[2] {
      name="CssExpr_datagrouptabMisc_utDataNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="data_group = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].data.gp[\\\\\\\"InputData\\\\\\\"]\\\",NULL, false);";
      expr {
       expr="data_group = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].data.gp[\\\\\\\"InputData\\\\\\\"]\\\",NULL, false);";
      };
     };
     MethodCall @[3] {
      name="MethodCall_datagroupTransfe_agroupdatatable";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="data_group->Transfer(data_group_data_table)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][11].vars[1]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="data_group_data_table";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
     MethodCall @[4] {
      name="MethodCall_grouptwoTransfer_baltableprogram";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(refs_global_table_program)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][11].vars[0]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr="refs_global_table_program";
	expr {
	 expr="refs_global_table_program";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[12] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][12].doc$$: };
    };
    name="copy_hasdatatable";
    short_nm="cpyhsd";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="hasdatatable";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_grouptwoCopyChil_exhasdatatable1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(hasdatatable, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][12].vars[0]$$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="hasdatatable";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[13] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][13].doc$$: };
    };
    name="copy_hasdatatable_into_project";
    short_nm="cpyhsd";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="hasdatatable";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     CssExpr @[1] {
      name="CssExpr_grouptwotabMiscr_ouptwoNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates_copy_into\\\"].programs.gp[\\\"group_two\\\"]\\\",NULL, false);";
      expr {
       expr="group_two = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].programs.gp[\\\\\\\"group_two\\\\\\\"]\\\",NULL, false);";
      };
     };
     MethodCall @[2] {
      name="MethodCall_grouptwoCopyChil_exhasdatatable1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->CopyChildBeforeIndex(hasdatatable, -1)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][13].vars[0]$$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="hasdatatable";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[14] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][14].doc$$: };
    };
    name="move_hasdatatable";
    short_nm="mvhsdt";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="hasdatatable";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     MethodCall @[1] {
      name="MethodCall_grouptwoTransferhasdatatable";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(hasdatatable)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][14].vars[0]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr="hasdatatable";
	expr {
	 expr="hasdatatable";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[15] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][15].doc$$: };
    };
    name="move_hasdatatable_into_project";
    short_nm="mvhsdn";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_two";
      var_type=T_Object;
      object_type=taOBase;
      object_scope=NULL;
      objs_ptr=0;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="hasdatatable";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     CssExpr @[1] {
      name="CssExpr_grouptwotabMiscr_ouptwoNULLfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two = tabMisc::root->ElemPath(\\\".projects[\\\"TestPointerUpdates_copy_into\\\"].programs.gp[\\\"group_two\\\"]\\\",NULL, false);";
      expr {
       expr="group_two = tabMisc::root->ElemPath(\\\".projects[\\\\\\\"TestPointerUpdates_copy_into\\\\\\\"].programs.gp[\\\\\\\"group_two\\\\\\\"]\\\",NULL, false);";
      };
     };
     MethodCall @[2] {
      name="MethodCall_grouptwoTransferhasdatatable";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_two->Transfer(hasdatatable)";
      result_var=NULL;
      obj=.projects[1].programs.gp[3][15].vars[0]$$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="hasdatatable";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[16] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][16].doc$$: };
    };
    name="copy_function_code_into_loop";
    short_nm="cpyfnc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][3]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][16].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_callprogramelementtheprogcode2";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_prog_code[2]";
      result_var=.projects[1].programs.gp[3][16].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_prog_code[2]";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_theloopcodetheprogcode3loopcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[3].loop_code";
      result_var=.projects[1].programs.gp[3][16].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[3].loop_code";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theloopcodeCopyC_programelement1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code->CopyChildBeforeIndex(call_program_element, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][16].prog_code[0].local_vars[2]$;
      method=taBase::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr="the_code";
	expr {
	 expr="call_program_element";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[17] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][17].doc$$: };
    };
    name="copy_function_code_out_of_loop";
    short_nm="cpyfnc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][3]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][17].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_theloopcodetheprogcode3loopcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[3].loop_code";
      result_var=.projects[1].programs.gp[3][17].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[3].loop_code";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_callprogramelementtheloopcode0";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_loop_code[0]";
      result_var=.projects[1].programs.gp[3][17].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_loop_code[0]";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theprogcodeCopyC_programelement1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code->CopyChildBeforeIndex(call_program_element, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][17].prog_code[0].local_vars[0]$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="call_program_element";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[18] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][18].doc$$: };
    };
    name="move_function_code_into_loop";
    short_nm="mvfncc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][3]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][18].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_callprogramelementtheprogcode2";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_prog_code[2]";
      result_var=.projects[1].programs.gp[3][18].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_prog_code[2]";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_theloopcodetheprogcode3loopcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[3].loop_code";
      result_var=.projects[1].programs.gp[3][18].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[3].loop_code";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theloopcodeTrans_lprogramelement";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code->Transfer(call_program_element)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][18].prog_code[0].local_vars[2]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="call_program_element";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[19] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][19].doc$$: };
    };
    name="move_function_code_out_of_loop";
    short_nm="mvfncc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][3]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][19].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_theloopcodetheprogcode2loopcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[2].loop_code";
      result_var=.projects[1].programs.gp[3][19].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[2].loop_code";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_callprogramelementtheloopcode0";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_loop_code[0]";
      result_var=.projects[1].programs.gp[3][19].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_loop_code[0]";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theprogcodeTrans_lprogramelement";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code->Transfer(call_program_element)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][19].prog_code[0].local_vars[0]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="call_program_element";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[20] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][20].doc$$: };
    };
    name="copy_program_code_into_loop";
    short_nm="cpyprg";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][4]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][20].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_callprogramelementtheprogcode1";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_prog_code[1]";
      result_var=.projects[1].programs.gp[3][20].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_prog_code[1]";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_theloopcodetheprogcode2loopcode";
      desc=;
      flags=PROG_ERROR|CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[2].loop_code";
      result_var=.projects[1].programs.gp[3][20].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[2].loop_code";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theloopcodeCopyC_programelement1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code->CopyChildBeforeIndex(call_program_element, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][20].prog_code[0].local_vars[2]$;
      method=taBase::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="call_program_element";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[21] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][21].doc$$: };
    };
    name="copy_program_code_out_of_loop";
    short_nm="cpyprg";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][4]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][21].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_theloopcodetheprogcode2loopcode";
      desc=;
      flags=PROG_ERROR|CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[2].loop_code";
      result_var=.projects[1].programs.gp[3][21].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[2].loop_code";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_callprogramelementtheloopcode0";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_loop_code[0]";
      result_var=.projects[1].programs.gp[3][21].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_loop_code[0]";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theprogcodeCopyC_programelement1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code->CopyChildBeforeIndex(call_program_element, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][21].prog_code[0].local_vars[0]$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="call_program_element";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[22] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][22].doc$$: };
    };
    name="move_program_code_into_loop";
    short_nm="mvprgc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][4]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][22].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_callprogramelementtheprogcode1";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_prog_code[1]";
      result_var=.projects[1].programs.gp[3][22].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_prog_code[1]";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_theloopcodetheprogcode2loopcode";
      desc=;
      flags=PROG_ERROR|CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[2].loop_code";
      result_var=.projects[1].programs.gp[3][22].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[2].loop_code";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theloopcodeTrans_lprogramelement";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_loop_code->Transfer(call_program_element)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][22].prog_code[0].local_vars[2]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="call_program_element";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[23] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][23].doc$$: };
    };
    name="move_program_code_out_of_loop";
    short_nm="mvprgc";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="program_a";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][4]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="the_prog_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="call_program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="the_loop_code";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_theprogcodeprogramaprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code = program_a.prog_code";
      result_var=.projects[1].programs.gp[3][23].prog_code[0].local_vars[0]$$;
      expr {
       expr="program_a.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_theloopcodetheprogcode1loopcode";
      desc=;
      flags=PROG_ERROR|CAN_REVERT_TO_CODE;
      code_string="the_loop_code = the_prog_code[1].loop_code";
      result_var=.projects[1].programs.gp[3][23].prog_code[0].local_vars[2]$$;
      expr {
       expr="the_prog_code[1].loop_code";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_callprogramelementtheloopcode0";
      desc="// target reference should not be updated if copy within program";
      flags=CAN_REVERT_TO_CODE;
      code_string="call_program_element = the_loop_code[0]";
      result_var=.projects[1].programs.gp[3][23].prog_code[0].local_vars[1]$$;
      expr {
       expr="the_loop_code[0]";
      };
     };
     MethodCall @[4] {
      name="MethodCall_theprogcodeTrans_lprogramelement";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="the_prog_code->Transfer(call_program_element)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][23].prog_code[0].local_vars[0]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="call_program_element";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[24] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][24].doc$$: };
    };
    name="copy_expression_with_variable_to_other_program";
    short_nm="cpyxpr";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="expression_program";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][5]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="empty_program";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][6]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="prog_code_a";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="prog_code_b";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_progcodeaexpress_programprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_a = expression_program.prog_code";
      result_var=.projects[1].programs.gp[3][24].prog_code[0].local_vars[0]$$;
      expr {
       expr="expression_program.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_progcodebemptyprogramprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_b = empty_program.prog_code";
      result_var=.projects[1].programs.gp[3][24].prog_code[0].local_vars[1]$$;
      expr {
       expr="empty_program.prog_code";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_programelementprogcodea1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="program_element = prog_code_a[1]";
      result_var=.projects[1].programs.gp[3][24].prog_code[0].local_vars[2]$$;
      expr {
       expr="prog_code_a[1]";
      };
     };
     MethodCall @[4] {
      name="MethodCall_progcodebCopyChi_programelement1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_b->CopyChildBeforeIndex(program_element, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][24].prog_code[0].local_vars[1]$;
      method=taBase::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="program_element";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
     AssignExpr @[5] {
      name="AssignExpr_programelementprogcodea2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="program_element = prog_code_a[2]";
      result_var=$.projects[1].programs.gp[3][24].prog_code[0].local_vars[2]$;
      expr {
       expr="prog_code_a[2]";
      };
     };
     MethodCall @[6] {
      name="MethodCall_progcodebCopyChi_programelement1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_b->CopyChildBeforeIndex(program_element, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][24].prog_code[0].local_vars[1]$;
      method=taBase::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="program_element";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[25] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][25].doc$$: };
    };
    name="move_expression_with_variable_to_other_program";
    short_nm="mvxprw";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="expression_program";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][5]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="empty_program";
      var_type=T_Object;
      object_type=Program;
      object_val=$.projects[1].programs.gp[0][6]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="prog_code_a";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="prog_code_b";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="program_element";
	var_type=T_Object;
	object_type=taOBase;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_progcodeaexpress_programprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_a = expression_program.prog_code";
      result_var=.projects[1].programs.gp[3][25].prog_code[0].local_vars[0]$$;
      expr {
       expr="expression_program.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_progcodebemptyprogramprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_b = empty_program.prog_code";
      result_var=.projects[1].programs.gp[3][25].prog_code[0].local_vars[1]$$;
      expr {
       expr="empty_program.prog_code";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_programelementprogcodea2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="program_element = prog_code_a[2]";
      result_var=.projects[1].programs.gp[3][25].prog_code[0].local_vars[2]$$;
      expr {
       expr="prog_code_a[2]";
      };
     };
     MethodCall @[4] {
      name="MethodCall_progcodebTransferprogramelement";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_b->Transfer(program_element)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][25].prog_code[0].local_vars[1]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="program_element";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[26] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][26].doc$$: };
    };
    name="copy_if_expression_with_programcall_to_other_program_if_expression";
    short_nm="cpyfxp";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="expression_program";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][8]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="if_program";
      var_type=T_Object;
      object_type=Program;
      object_val=.projects[1].programs.gp[0][9]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars3vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (3 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="prog_code_a";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="prog_code_b";
	var_type=T_Object;
	object_type=ProgEl_List;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[2] {
	name="program_element";
	var_type=T_Object;
	object_type=If;
	object_val=NULL;
	object_scope=NULL;
	objs_ptr=0;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_progcodeaexpress_programprogcode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_a = expression_program.prog_code";
      result_var=.projects[1].programs.gp[3][26].prog_code[0].local_vars[0]$$;
      expr {
       expr="expression_program.prog_code";
      };
     };
     AssignExpr @[2] {
      name="AssignExpr_progcodebifprogr_ogcode1truecode";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_b = if_program.prog_code[1].true_code";
      result_var=.projects[1].programs.gp[3][26].prog_code[0].local_vars[1]$$;
      expr {
       expr="if_program.prog_code[1].true_code";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_programelementprogcodea2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="program_element = prog_code_a[2]";
      result_var=.projects[1].programs.gp[3][26].prog_code[0].local_vars[2]$$;
      expr {
       expr="prog_code_a[2]";
      };
     };
     MethodCall @[4] {
      name="MethodCall_progcodebCopyChi_programelement1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="prog_code_b->CopyChildBeforeIndex(program_element, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][26].prog_code[0].local_vars[1]$;
      method=taBase::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="program_element";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[27] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][27].doc$$: };
    };
    name="move_programgroup_up_one_level";
    short_nm="mvprgp";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="sub_group";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=.projects[1].programs.gp[1].gp[0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="programsgrp";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1].gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="programs";
      var_type=T_Object;
      object_type=Program_TopGroup;
      object_val=.projects[1].programs$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_programsgrpprogramsgp";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="programsgrp = programs.gp";
      result_var=.projects[1].programs.gp[3][27].vars[1]$$;
      expr {
       expr="programs.gp";
      };
     };
     MethodCall @[2] {
      name="MethodCall_programsgrpTransfersubgroup";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="programsgrp->Transfer(sub_group)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][27].vars[1]$;
      method=taList_impl::Transfer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="item";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="sub_group";
	};
       };
      };
      meth_sig="bool Transfer(taBase* item)";
      meth_desc=;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[28] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[3][28].doc$$: };
    };
    name="copy_programgroup_up_one_level";
    short_nm="cpyprg";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="sub_group";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1].gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="programsgrp";
      var_type=T_Object;
      object_type=Program_Group;
      object_val=$.projects[1].programs.gp[1].gp[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="programs";
      var_type=T_Object;
      object_type=Program_TopGroup;
      object_val=$.projects[1].programs$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_programsgrpprogramsgp";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="programsgrp = programs.gp";
      result_var=.projects[1].programs.gp[3][28].vars[1]$$;
      expr {
       expr="programs.gp";
      };
     };
     MethodCall @[2] {
      name="MethodCall_programsgrpCopyC_eIndexsubgroup1";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="programsgrp->CopyChildBeforeIndex(sub_group, -1)";
      result_var=NULL;
      obj=$.projects[1].programs.gp[3][28].vars[1]$;
      method=taList_impl::CopyChildBeforeIndex;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taBase_ptr;
	type="taBase*";
	name="src";
	required=1;
	def_val=;
	prev_expr="sub_group";
	expr {
	 expr="sub_group";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="child_pos";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
      };
      meth_sig="taBase_ptr CopyChildBeforeIndex(taBase* src, int child_pos)";
      meth_desc=" implemented by container (list) objects: make a copy of the src object and insert it at the position of the child_pos object within this list -- copies the name of the object too";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
  };
  Program_Group @.gp[4] {
   name="group_three";
   el_typ=Program;
   el_def=0;
   tags=;
   desc=;
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[4][0].doc$$: };
    };
    name="Callee";
    short_nm="Callee";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author="Kai Krueger";
    email="kai.krueger@colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_name";
      var_type=T_String;
      object_scope=NULL;
      flags=NULL_CHECK|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @[0] {
      name="Function_2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Function_2() returns: int";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name="args";
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name="fun_code";
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	name="LocalVars_LocalVars0vars";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="LocalVars (0 vars)";
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       PrintExpr @[1] {
	name="PrintExpr_Printthisproggp";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print this.prog_gp";
	expr {
	 expr="this.prog_gp";
	};
	debug=0;
       };
       AssignExpr @[2] {
	name="AssignExpr_groupnamethisproggpGetPathNames";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="group_name = this.prog_gp";
	result_var=.projects[1].programs.gp[4][0].vars[0]$$;
	expr {
	 expr="this.prog_gp.GetPathNames()";
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     FunctionCall @[1] {
      name="FunctionCall_Function2";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Function_2()";
      result_var=NULL;
      fun=.projects[1].programs.gp[4][0].functions[0]$$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.projects[1].programs.gp[4][1].doc$$: };
    };
    name="Caller";
    short_nm="Caller";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_name";
      var_type=T_String;
      object_scope=NULL;
      flags=USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars0vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (0 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_groupname";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="group_name = \\\"\\\"";
      result_var=.projects[1].programs.gp[4][1].vars[0]$$;
      expr {
       expr="\\\"\\\"";
      };
     };
     ProgramCall @[2] {
      name="ProgramCall_Callee";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Callee()";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
      };
      target=$.projects[1].programs.gp[4][0]$;
      targ_ld_init="*Callee*";
     };
     OtherProgramVar @[3] {
      name="OtherProgramVar_VarsFmprogramCal_amevar2var3var4";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Vars Fm:  program=Callee set=from  var_1=group_name  var_2=?  var_3=?  var_4=? ";
      other_prog=$.projects[1].programs.gp[4][0]$;
      set_other=0;
      var_1=$.projects[1].programs.gp[4][1].vars[0]$;
      var_2=NULL;
      var_3=NULL;
      var_4=NULL;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program_Group @.gp[0] {
    name="sub_group_three";
    el_typ=Program;
    el_def=0;
    tags=;
    desc=;
    debug_mode=0;
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_46";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="view_win_lft": value=0: val_type_fixed=0: };
    UserDataItem @[1] {name="view_win_top": value=0: val_type_fixed=0: };
    UserDataItem @[2] {name="view_win_wd": value=1: val_type_fixed=0: };
    UserDataItem @[3] {name="view_win_ht": value=0.7981756: val_type_fixed=0: };
    UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
    UserDataItem @[5] {name="view_splitter_state": value=AAAA/wAAAAEAAAADAAACDQAAAzIAAAAAAQAAAAcBAAAAAQE=: val_type_fixed=0: };
   };
   name="Browser2";
   m_data=.projects[1]$$;
   cur_font_size=12;
   visible=1;
   win_name=".projects[\\\"TestPointerUpdates\\\"] - TestPointerUpdates.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   revert_to_tab_no=-1;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_47";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_visible": value=0: val_type_fixed=0: };
     };
     name="Application";
     m_data=NULL;
     cur_font_size=12;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @[0] {
     name="Navigator";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.projects[1]$;
    };
    PanelViewer @[1] {
     name="Editor";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
    };
    T3PanelViewer @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_48";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_panel_selected": value=1: val_type_fixed=0: };
     };
     name="Visualizer";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @[0] {
       name="Frame1";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0: y=0: z=-0.4765596: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=3.52344;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_49";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_lft": value=-0.002785515: val_type_fixed=0: };
      UserDataItem @[1] {name="view_win_top": value=-0.02622577: val_type_fixed=0: };
      UserDataItem @[2] {name="view_win_wd": value=0.05710306: val_type_fixed=0: };
      UserDataItem @[3] {name="view_win_ht": value=0.7502851: val_type_fixed=0: };
      UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
      UserDataItem @[5] {name="view_visible": value=1: val_type_fixed=0: };
     };
     name="Tools";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc=;
 tree_state{ .;.ctrl_panels;.data;.programs;.programs.gp[0];.programs.gp[1];.programs.gp[2];.programs.gp[3];.programs.gp[4];.networks; };
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
 };
};
