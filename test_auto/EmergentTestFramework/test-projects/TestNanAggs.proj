// ta_Dump File v3.0 -- code v8.1.1.0 rev10928
LeabraProject .projects[0] { 
 Doc_Group @.docs = [0] {
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [0] {
   };

   ControlPanelMethod_Group @.mths = [0] {
   };
  };
  ClusterRun @[1] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [0] {
   };

   ControlPanelMethod_Group @.mths = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.active_params = [0] {
 };

 ArchivedParams_Group @.archived_params = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp[0] = [1] { 
   DataTable @[0] { 
    DataTableCols @.data = [2] {
     String_Data @[0] { };
     float_Data @[1] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
  };
  DataTable_Group @.gp[1] = [1] { 
   DataTable @[0] { 
    DataTableCols @.data = [27] {
     float_Data @[0] { };
     float_Data @[1] { };
     float_Data @[2] { };
     float_Data @[3] { };
     float_Data @[4] { };
     float_Data @[5] { };
     float_Data @[6] { };
     float_Data @[7] { };
     float_Data @[8] { };
     float_Data @[9] { };
     float_Data @[10] { };
     float_Data @[11] { };
     float_Data @[12] { };
     float_Data @[13] { };
     float_Data @[14] { };
     float_Data @[15] { };
     float_Data @[16] { };
     float_Data @[17] { };
     float_Data @[18] { };
     float_Data @[19] { };
     float_Data @[20] { };
     float_Data @[21] { };
     float_Data @[22] { };
     float_Data @[23] { };
     float_Data @[24] { };
     float_Data @[25] { };
     float_Data @[26] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
  };
  DataTable_Group @.gp[2] { 
  };
 };

 Program_TopGroup @.programs = [1] {
  Program @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @[0] { };
   };

   ProgObjList @.objs = [1] {
    NetMonitor @[0] { 
     NetMonItem_List @.items = [27] {
      NetMonItem @[0] { };
      NetMonItem @[1] { };
      NetMonItem @[2] { };
      NetMonItem @[3] { };
      NetMonItem @[4] { };
      NetMonItem @[5] { };
      NetMonItem @[6] { };
      NetMonItem @[7] { };
      NetMonItem @[8] { };
      NetMonItem @[9] { };
      NetMonItem @[10] { };
      NetMonItem @[11] { };
      NetMonItem @[12] { };
      NetMonItem @[13] { };
      NetMonItem @[14] { };
      NetMonItem @[15] { };
      NetMonItem @[16] { };
      NetMonItem @[17] { };
      NetMonItem @[18] { };
      NetMonItem @[19] { };
      NetMonItem @[20] { };
      NetMonItem @[21] { };
      NetMonItem @[22] { };
      NetMonItem @[23] { };
      NetMonItem @[24] { };
      NetMonItem @[25] { };
      NetMonItem @[26] { };
     };
    };
   };

   ProgVar_List @.objs_vars = [1] {
    ProgVar @[0] { };
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [1] {
    ProgVar @[0] { };
   };

   ProgVar_List @.vars = [1] {
    ProgVar @[0] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [3] {
    MethodCall @[0] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MethodCall @[1] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[2] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
   };

   ProgEl_List @.prog_code = [4] {
    MethodCall @[0] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    MethodCall @[1] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    MethodCall @[2] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    MethodCall @[3] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @[0] { };
    PanelViewer @[1] { };
    T3PanelViewer @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };

     T3Panel_List @.panels = [1] {
      T3Panel @[0] { 
       T3DataView_List @.root_view.children = [0] {
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
      UserDataItem @[2] { };
      UserDataItem @[3] { };
      UserDataItem @[4] { };
      UserDataItem @[5] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [1] {
  LeabraNetwork @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
    UserDataItem @[6] { };
    UserDataItem @[7] { };
    UserDataItem @[8] { };
    UserDataItem @[9] { };
    UserDataItem @[10] { };
    UserDataItem @[11] { };
    UserDataItem @[12] { };
    UserDataItem @[13] { };
    UserDataItem @[14] { };
    UserDataItem @[15] { };
    UserDataItem @[16] { };
    UserDataItem @[17] { };
    UserDataItem @[18] { };
    UserDataItem @[19] { };
   };

   BaseSpec_Group @.specs = [0] {
   };

   ParamSeq_Group @.param_seqs = [0] {
   };

   Layer_Group @.layers = [0] {
   };

   Weights_List @.weights = [0] {
   };
  };
 };
};
LeabraProject .projects[0] {
 name="TestNanAggs";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=0;
 };
 author="Randall C. O'Reilly";
 email="randy.oreilly@colorado.edu";
 license {
  license=GPLv2;
  owner_name="Regents of the University of Colorado";
  org="CCNLab at the University of Colorado Boulder";
  year="2017";
  custom=;
 };
 pub_cite=;
 wiki {wiki="": page_name="": };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_6";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="NO_CLIP": value=1: val_type_fixed=0: };
    UserDataItem @[1] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  master_and_clones=0;
  ControlPanel @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ControlPanel";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
  ClusterRun @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ClusterRun";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_cuda=0;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
 };
 active_params {
  name="active_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 archived_params {
  name="archived_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="TestData";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="name";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [10] "reward";"reward";"reward";"input_a";"input_a";"input_b";"input_c";"input_c";"input_c";"reward";
      };
     };
     float_Data @[1] {
      name="value";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [10] nan;0.5;-0.30000001;0.80000001;0.2;0.30000001;0.89999998;0.85000002;0.1;nan;
      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [10] 0;1;2;3;4;5;6;7;8;9;
    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="agg_out_data";
    desc=;
    data {
     name="data";
     el_typ=float_Data;
     el_def=0;
     float_Data @[0] {
      name="reward_mean";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=11;
      matrix_col_width=10;
     };
     float_Data @[1] {
      name="reward_n";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     float_Data @[2] {
      name="reward_first";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     float_Data @[3] {
      name="reward_last";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=11;
      matrix_col_width=10;
     };
     float_Data @[4] {
      name="reward_find_first";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=17;
      matrix_col_width=10;
     };
     float_Data @[5] {
      name="reward_find_last";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     float_Data @[6] {
      name="reward_min";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     float_Data @[7] {
      name="reward_max";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     float_Data @[8] {
      name="reward_abs_min";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
     };
     float_Data @[9] {
      name="reward_abs_max";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
     };
     float_Data @[10] {
      name="reward_sum";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     float_Data @[11] {
      name="reward_prod";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=11;
      matrix_col_width=10;
     };
     float_Data @[12] {
      name="reward_var";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     float_Data @[13] {
      name="reward_ss";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     float_Data @[14] {
      name="reward_stdev";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     float_Data @[15] {
      name="reward_sem";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     float_Data @[16] {
      name="reward_count";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     float_Data @[17] {
      name="reward_pct";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     float_Data @[18] {
      name="reward_median";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=13;
      matrix_col_width=10;
     };
     float_Data @[19] {
      name="reward_mode";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=11;
      matrix_col_width=10;
     };
     float_Data @[20] {
      name="reward_quantile";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=15;
      matrix_col_width=10;
     };
     float_Data @[21] {
      name="reward_none";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=11;
      matrix_col_width=10;
     };
     float_Data @[22] {
      name="input_d_n";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     float_Data @[23] {
      name="input_d_mean";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     float_Data @[24] {
      name="input_b_mean";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     float_Data @[25] {
      name="input_b_var";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=11;
      matrix_col_width=10;
     };
     float_Data @[26] {
      name="input_b_n";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {name="DocLink": doc=.programs[0].doc$$: };
   };
   name="TestNanAggs";
   short_nm="TsNngg";
   tags="Leabra, Std, Monitor";
   desc=;
   version {
    major=8;
    minor=0;
    step=0;
   };
   author="Randall C. O'Reilly";
   email="emergent-users@grey.colorado.edu";
   flags=NO_STOP_STEP|OBJS_UPDT_GUI;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=NetMonitor;
    el_def=0;
    NetMonitor @[0] {
     name="trial_netmon";
     items {
      name="items";
      el_typ=NetMonItem;
      el_def=0;
      NetMonItem @[0] {
       name="reward_mean";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=.data.gp[0][0]$$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[1] {
       name="reward_n";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=N: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[2] {
       name="reward_first";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=FIRST: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[3] {
       name="reward_last";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=LAST: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[4] {
       name="reward_find_first";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=FIND_FIRST: rel={name="rel": rel=GREATERTHAN: val=0.4: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[5] {
       name="reward_find_last";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=FIND_LAST: rel={name="rel": rel=LESSTHAN: val=0.4: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[6] {
       name="reward_min";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=MIN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[7] {
       name="reward_max";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=MAX: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[8] {
       name="reward_abs_min";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=ABS_MIN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[9] {
       name="reward_abs_max";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=ABS_MAX: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[10] {
       name="reward_sum";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=SUM: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[11] {
       name="reward_prod";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=PROD: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[12] {
       name="reward_var";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=VAR: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[13] {
       name="reward_ss";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=SS: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[14] {
       name="reward_stdev";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=STDEV: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[15] {
       name="reward_sem";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=SEM: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[16] {
       name="reward_count";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=COUNT: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[17] {
       name="reward_pct";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=PERCENT: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[18] {
       name="reward_median";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=MEDIAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[19] {
       name="reward_mode";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=MODE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[20] {
       name="reward_quantile";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=QUANTILE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[21] {
       name="reward_none";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_reward";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="reward";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[22] {
       name="input_d_n";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=N: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_input_d";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="input_d";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[23] {
       name="input_d_mean";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_input_d";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="input_d";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[24] {
       name="input_b_mean";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_input_b";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="input_b";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[25] {
       name="input_b_var";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=VAR: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_input_b";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="input_b";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
      NetMonItem @[26] {
       name="input_b_n";
       computed=1;
       object_type=taOBase;
       object=NULL;
       variable="act";
       var_label=;
       name_style=MY_NAME;
       max_name_len=6;
       options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
       val_type=VT_FLOAT;
       matrix=0;
       matrix_geom{        };
       data_agg=1;
       data_src=$.data.gp[0][0]$;
       agg_col {
	col_name="value";
       };
       agg {name="AggregateSpec_3": op=N: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       select_rows=1;
       select_spec {
	col_name="name";
	name="name_EQUAL_input_b";
	on=1;
	rel=EQUAL;
	use_var=0;
	cmp 9 0="input_b";
	var=NULL;
	enable_var=NULL;
       };
       pre_proc_1 {name="SimpleMathSpec_4": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_2 {name="SimpleMathSpec_5": opr=NONE: arg=0: lw=-1: hi=1: };
       pre_proc_3 {name="SimpleMathSpec_6": opr=NONE: arg=0: lw=-1: hi=1: };
      };
     };
     network=.networks[0]$$;
     data=.data.gp[1][0]$$;
     rmv_orphan_cols=1;
    };
   };
   objs_vars {
    name="objs_vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="trial_netmon";
     var_type=T_Object;
     object_type=NetMonitor;
     object_val=.programs[0].objs[0]$$;
     object_scope=NULL;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
     init_from=NULL;
    };
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="network";
     var_type=T_Object;
     object_type=Network;
     object_val=$.networks[0]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
     reference=0;
     desc="network to record data from";
     init_from=NULL;
    };
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="trial_mon_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=$.data.gp[1][0]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="data table to record trial-level data to (this program writes new data to this table!)";
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
    MethodCall @[0] {
     name="MethodCall_trialnetmonSetDa_lmondatanetwork";
     desc="set the network and datatable for the NetMonitor";
     flags=CAN_REVERT_TO_CODE;
     code_string="trial_netmon->SetDataNetwork(trial_mon_data, network)";
     result_var=NULL;
     obj=.programs[0].objs_vars[0]$$;
     method=NetMonitor::SetDataNetwork;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="dt";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="trial_mon_data";
       };
      };
      ProgArg @[1] {
       arg_type=Network_ptr;
       type="Network*";
       name="net";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="network";
       };
      };
     };
     meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
     meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
    };
    MethodCall @[1] {
     name="MethodCall_trialnetmonCheckConfigfalse";
     desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
     flags=CAN_REVERT_TO_CODE;
     code_string="trial_netmon->CheckConfig(false)";
     result_var=NULL;
     obj=$.programs[0].objs_vars[0]$;
     method=taBase::CheckConfig;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=bool;
       type="bool";
       name="quiet";
       required=0;
       def_val="false";
       prev_expr=;
       expr {
	expr="false";
       };
      };
     };
     meth_sig="bool CheckConfig(bool quiet = false)";
     meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
    };
    MethodCall @[2] {
     name="MethodCall_trialnetmonUpdateMonitorstrue";
     desc="update the monitor items and data schema based on current settings of the NetMonitor object";
     flags=CAN_REVERT_TO_CODE;
     code_string="trial_netmon->UpdateMonitors(true)";
     result_var=NULL;
     obj=$.programs[0].objs_vars[0]$;
     method=NetMonitor::UpdateMonitors;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=bool;
       type="bool";
       name="reset_first";
       required=0;
       def_val="false";
       prev_expr=;
       expr {
	expr="true";
       };
      };
     };
     meth_sig="void UpdateMonitors(bool reset_first = false)";
     meth_desc=" old name for UpdateDataTable";
    };
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    MethodCall @[0] {
     name="MethodCall_trialmondataResetData";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="trial_mon_data->ResetData()";
     result_var=NULL;
     obj=.programs[0].vars[0]$$;
     method=DataTable::ResetData;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void ResetData()";
     meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
    };
    MethodCall @[1] {
     name="MethodCall_trialmondataAddBlankRow";
     desc="add a new blank row to the data";
     flags=CAN_REVERT_TO_CODE;
     code_string="trial_mon_data->AddBlankRow()";
     result_var=NULL;
     obj=$.programs[0].vars[0]$;
     method=DataTable::AddBlankRow;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="int AddBlankRow()";
     meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
    };
    MethodCall @[2] {
     name="MethodCall_trialnetmonGetMonVals";
     desc="get the new monitor data from the network and other sources -- this does the main work";
     flags=CAN_REVERT_TO_CODE;
     code_string="trial_netmon->GetMonVals()";
     result_var=NULL;
     obj=$.programs[0].objs_vars[0]$;
     method=NetMonitor::GetMonVals;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void GetMonVals()";
     meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
    };
    MethodCall @[3] {
     name="MethodCall_trialmondataWriteClose";
     desc="update views and other things after writing new data to monitor data table";
     flags=CAN_REVERT_TO_CODE;
     code_string="trial_mon_data->WriteClose()";
     result_var=NULL;
     obj=$.programs[0].vars[0]$;
     method=DataTable::WriteClose;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void WriteClose()";
     meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=1;
    wiki="emergent";
    url="Monitor_Data";
    full_url="https://grey.colorado.edu/emergent/index.php/Monitor_Data";
    text_size=1;
    text=;
    html_text=;
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_102";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="view_win_lft": value=0: val_type_fixed=0: };
    UserDataItem @[1] {name="view_win_top": value=0: val_type_fixed=0: };
    UserDataItem @[2] {name="view_win_wd": value=1: val_type_fixed=0: };
    UserDataItem @[3] {name="view_win_ht": value=1: val_type_fixed=0: };
    UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
    UserDataItem @[5] {name="view_splitter_state": value=AAAA/wAAAAEAAAADAAABWgAABaEAAAAAAf////8BAAAAAQA=: val_type_fixed=0: };
   };
   name="Browser2";
   m_data=.$$;
   cur_font_size=12;
   visible=1;
   win_name=".projects[\"TestNanAggs\"] - TestNanAggs.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   revert_to_tab_no=-1;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_103";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_visible": value=1: val_type_fixed=0: };
     };
     name="Application";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @[0] {
     name="Navigator";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.$;
    };
    PanelViewer @[1] {
     name="Editor";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
    };
    T3PanelViewer @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_104";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_panel_selected": value=1: val_type_fixed=0: };
     };
     name="Visualizer";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @[0] {
       name="Frame1";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0: y=0: z=-0.4765596: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=3.52344;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_105";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_lft": value=-0.002087683: val_type_fixed=0: };
      UserDataItem @[1] {name="view_win_top": value=0.001892148: val_type_fixed=0: };
      UserDataItem @[2] {name="view_win_wd": value=0.04279749: val_type_fixed=0: };
      UserDataItem @[3] {name="view_win_ht": value=0.9366131: val_type_fixed=0: };
      UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
      UserDataItem @[5] {name="view_visible": value=1: val_type_fixed=0: };
     };
     name="Tools";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc=;
 tree_state{ .;.patches;.docs;.wizards;.ctrl_panels;.active_params;.data;.data.gp[0];.data.gp[0][0];.data.gp[1];.data.gp[1][0];.data.gp[2];.programs;.programs[0];.programs[0].objs;.programs[0].objs[0];.programs[0].functions;.networks;.networks[0];.networks[0].spec_tables;.networks[0].specs;.networks[0].param_seqs;.networks[0].layers;.networks[0].weights; };
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_1";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="cos_err": value=1: val_type_fixed=1: };
    UserDataItem @[1] {name="norm_err": value=1: val_type_fixed=1: };
    UserDataItem @[2] {name="ext_rew": value=1: val_type_fixed=1: };
    UserDataItem @[3] {name="minus_output_name": value=1: val_type_fixed=1: };
    UserDataItem @[4] {name="rt_cycles": value=1: val_type_fixed=1: };
    UserDataItem @[5] {name="tot_cycle": value=1: val_type_fixed=1: };
    UserDataItem @[6] {name="phase": value=1: val_type_fixed=1: };
    UserDataItem @[7] {name="quarter": value=1: val_type_fixed=1: };
    UserDataItem @[8] {name="sse": value=1: val_type_fixed=1: };
    UserDataItem @[9] {name="output_name": value=1: val_type_fixed=1: };
    UserDataItem @[10] {name="trial_name": value=1: val_type_fixed=1: };
    UserDataItem @[11] {name="group_name": value=1: val_type_fixed=1: };
    UserDataItem @[12] {name="total_trials": value=1: val_type_fixed=1: };
    UserDataItem @[13] {name="time": value=1: val_type_fixed=1: };
    UserDataItem @[14] {name="cycle": value=1: val_type_fixed=1: };
    UserDataItem @[15] {name="tick": value=1: val_type_fixed=1: };
    UserDataItem @[16] {name="trial": value=1: val_type_fixed=1: };
    UserDataItem @[17] {name="group": value=1: val_type_fixed=1: };
    UserDataItem @[18] {name="epoch": value=1: val_type_fixed=1: };
    UserDataItem @[19] {name="batch": value=1: val_type_fixed=1: };
   };
   name="Network_2";
   desc=;
   specs {
    name="specs";
    el_typ=BaseSpec;
    el_def=0;
   };
   param_seqs {
    name="param_seqs";
    el_typ=ParamSeq;
    el_def=0;
   };
   layers {
    name="layers";
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    pos2d {x=0: y=0: };
    max_disp_size {x=1: y=1: z=1: };
    max_disp_size2d {x=1: y=1: };
   };
   weights {
    name="weights";
    el_typ=Weights;
    el_def=0;
   };
   flags=BUILD_INIT_WTS;
   unit_vars_type=LeabraUnitVars;
   con_group_type=LeabraConGroup;
   auto_build=AUTO_BUILD;
   auto_load_wts=NO_AUTO_LOAD;
   auto_load_file=;
   brain_atlas_name=;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   stats {sse_unit_avg=0: sse_sqrt=0: cnt_err_tol=0: prerr=0: };
   threads {run_time={name="TimeUsedHR_117": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: sync_time={name="TimeUsedHR_118": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: total_time={name="TimeUsedHR_119": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: n_wake_in_sync=0: run_time_pct=0: sync_time_pct=0: wake_in_sync_pct=-1.83255064721201e-6: };
   cuda {sync_units=0: sync_cons=0: min_threads=32: max_threads=1024: cons_per_thread=2: timers_on=0: n_threads=32: };
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   n_units=1;
   n_cons=0;
   max_prjns=1;
   max_disp_size {x=1: y=1: z=1: };
   max_disp_size2d {x=1: y=1: };
   times {quarter=25: deep_cyc=5: time_inc=0.001: wt_bal_int=10: minus=75: plus=25: total_cycles=100: thal_gate_cycle=-2: };
   lstats {trg_max_act_crit=0.5: off_errs=1: on_errs=1: agg_unlearnable=0: wt_bal=0: };
   net_misc {spike=0: deep=1: bias_learn=0: trial_decay=0: diff_scale_p=0: diff_scale_q1=0: wt_bal=0: lay_gp_inhib=0: inhib_cons=0: };
   deep {on=0: ctxt=0: raw_net=0: mod_net=0: raw_qtr=0: };
   rel_netin {on=1: trl_skip=10: epc_skip=10: };
  };
 };
};
