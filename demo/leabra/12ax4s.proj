// ta_Dump File v2.0
LeabraProject .projects[0] { 
  Doc_Group @.docs = [1] {
    taDoc @[0] { };
  };

  Wizard_Group @.wizards = [1] {
    LeabraWizard @[0] { 
      LayerWizElList @.layer_cfg = [3] {
	LayerWizEl @[0] { };
	LayerWizEl @[1] { };
	LayerWizEl @[2] { };
      };
    };
  };

  SelectEdit_Group @.edits = [1] {
    SelectEdit @[0] { };
  };

  DataTable_Group @.data = [0] {
    DataTable_Group @.gp[0] = [2] { 
      DataTable @[0] { 
    UserDataItem_List @*(.user_data_) { 
	  UserDataItem @[0] { };
    };

	DataTableCols @.data = [5] {
	  String_Data @[0] { };
	  String_Data @[1] { };
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	};
      };
      DataTable @[1] { 
    UserDataItem_List @*(.user_data_) { 
	  UserDataItem @[0] { };
	  UserDataItem @[1] { };
	  UserDataItem @[2] { };
    };

	DataTableCols @.data = [3] {
	  String_Data @[0] { };
	  String_Data @[1] { };
	  String_Data @[2] { };
	};
      };
    };
    DataTable_Group @.gp[1] = [2] { 
      DataTable @[0] { 
	DataTableCols @.data = [15] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[2] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  String_Data @[3] { };
	  String_Data @[4] { };
	  int_Data @[5] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	  float_Data @[9] { };
	  float_Data @[10] { };
	  float_Data @[11] { };
	  float_Data @[12] { };
	  float_Data @[13] { };
	  float_Data @[14] { };
	};
      };
      DataTable @[1] { 
	DataTableCols @.data = [17] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	  float_Data @[5] { };
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	  float_Data @[9] { };
	  float_Data @[10] { };
	  float_Data @[11] { };
	  float_Data @[12] { };
	  float_Data @[13] { };
	  float_Data @[14] { };
	  float_Data @[15] { };
	  float_Data @[16] { };
	};
      };
    };
    DataTable_Group @.gp[2] { };
  };

  taBase_Group @.data_proc = [4] {
    taDataProc @[0] { };
    taDataAnal @[1] { };
    taDataGen @[2] { };
    taImageProc @[3] { };
  };

  Program_Group @.programs = [0] {
    Program_Group @.gp[0] = [10] { 
      Program @[0] { 
	ProgVar_List @.args = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  NetCounterInit @[0] { };
	  WhileLoop @[1] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [3] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		};
	      };
	      NetCounterIncr @[1] { };
	    };
	  };
	};
      };
      Program @[1] { 
	ProgObjList @.objs = [1] {
	  RndSeed_List @[0] { 
	    taList @.seeds = [25] {
	      RndSeed @[0] { };
	      RndSeed @[1] { };
	      RndSeed @[2] { };
	      RndSeed @[3] { };
	      RndSeed @[4] { };
	      RndSeed @[5] { };
	      RndSeed @[6] { };
	      RndSeed @[7] { };
	      RndSeed @[8] { };
	      RndSeed @[9] { };
	      RndSeed @[10] { };
	      RndSeed @[11] { };
	      RndSeed @[12] { };
	      RndSeed @[13] { };
	      RndSeed @[14] { };
	      RndSeed @[15] { };
	      RndSeed @[16] { };
	      RndSeed @[17] { };
	      RndSeed @[18] { };
	      RndSeed @[19] { };
	      RndSeed @[20] { };
	      RndSeed @[21] { };
	      RndSeed @[22] { };
	      RndSeed @[23] { };
	      RndSeed @[24] { };
	    };
	  };
	};

	ProgVar_List @.args = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgVar_List @.vars = [8] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	  ProgVar @[7] { };
	};

	ProgEl_List @.init_code = [7] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  AssignExpr @[2] { };
	  AssignExpr @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  IfGuiPrompt @[5] { 
	    ProgEl_List @.yes_code = [2] {
	      MethodCall @[0] { };
	      PrintExpr @[1] { };
	    };
	  };
	  AssignExpr @[6] { };
	};

	ProgEl_List @.prog_code = [9] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  AssignExpr @[2] { };
	  MemberAssign @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  IfElse @[5] { 
	    ProgEl_List @.true_code = [2] {
	      MethodCall @[0] { };
	      PrintExpr @[1] { };
	    };
	  };
	  AssignExpr @[6] { };
	  WhileLoop @[7] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfElse @[2] { 
		ProgEl_List @.true_code = [2] {
		  VarIncr @[0] { };
		  IfBreak @[1] { };
		};

		ProgEl_List @.false_code = [1] {
		  AssignExpr @[0] { };
		};
	      };
	    };
	  };
	  MethodCall @[8] { };
	};
      };
      Program @[2] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [7] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	};

	ProgEl_List @.init_code = [2] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	};

	ProgEl_List @.prog_code = [10] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[3] { };
	  ProgramCall @[4] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  NetGroupedDataLoop @[5] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      IfElse @[1] { 
		ProgEl_List @.true_code = [1] {
		  MethodCall @[0] { };
		};
	      };
	    };
	  };
	  IfElse @[6] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  MethodCall @[7] { };
	  MethodCall @[8] { };
	  ProgramCall @[9] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};
      };
      Program @[3] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [6] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  WhileLoop @[2] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      MethodCall @[2] { };
	    };
	  };
	  MethodCall @[3] { };
	  ProgramCall @[4] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  NetUpdateView @[5] { };
	};
      };
      Program @[4] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [10] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  ProgramCall @[2] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[3] { };
	  IfElse @[4] { 
	    ProgEl_List @.true_code = [1] {
	      AssignExpr @[0] { };
	    };

	    ProgEl_List @.false_code = [1] {
	      AssignExpr @[0] { };
	    };
	  };
	  WhileLoop @[5] { 
	    ProgEl_List @.loop_code = [4] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [1] {
		  ProgArg @[0] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfContinue @[2] { };
	      IfBreak @[3] { };
	    };
	  };
	  MethodCall @[6] { };
	  IfElse @[7] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  IfElse @[8] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  NetUpdateView @[9] { };
	};
      };
      Program @[5] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  NetUpdateView @[1] { };
	};
      };
      Program @[6] { 
	ProgObjList @.objs = [1] {
	  LayerWriter @[0] { 
	    LayerDataEl_List @.layer_data = [5] {
	      LayerWriterEl @[0] { };
	      LayerWriterEl @[1] { };
	      LayerWriterEl @[2] { };
	      LayerWriterEl @[3] { };
	      LayerWriterEl @[4] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [2] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  MemberAssign @[1] { };
	};
      };
      Program @[7] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [15] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	      NetMonItem @[9] { };
	      NetMonItem @[10] { };
	      NetMonItem @[11] { };
	      NetMonItem @[12] { };
	      NetMonItem @[13] { };
	      NetMonItem @[14] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [3] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [10] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[6] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[7] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[8] { };
	  MethodCall @[9] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
      Program @[8] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [17] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	      NetMonItem @[9] { };
	      NetMonItem @[10] { };
	      NetMonItem @[11] { };
	      NetMonItem @[12] { };
	      NetMonItem @[13] { };
	      NetMonItem @[14] { };
	      NetMonItem @[15] { };
	      NetMonItem @[16] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [4] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	};

	ProgEl_List @.init_code = [4] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [13] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  AssignExpr @[2] { };
	  UserScript @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[6] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[7] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[8] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[9] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[10] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  IfElse @[11] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { 
		ProgArg_List @.meth_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	    };

	    ProgEl_List @.false_code = [1] {
	      MethodCall @[0] { 
		ProgArg_List @.meth_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	    };
	  };
	  MethodCall @[12] { };
	};
      };
      Program @[9] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [6] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	};

	ProgEl_List @.prog_code = [6] {
	  IfElse @[0] { 
	    ProgEl_List @.true_code = [1] {
	      UserScript @[0] { };
	    };
	  };
	  MiscCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MiscCall @[2] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  AssignExpr @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [4] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
    };
    Program_Group @.gp[1] = [2] { 
      Program @[0] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  ForLoop @[1] { 
	    ProgEl_List @.loop_code = [1] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	    };
	  };
	};
      };
      Program @[1] { 
	ProgType_List @.types = [3] {
	  DynEnumType @[0] { 
	    DynEnumItem_List @.enums = [9] {
	      DynEnumItem @[0] { };
	      DynEnumItem @[1] { };
	      DynEnumItem @[2] { };
	      DynEnumItem @[3] { };
	      DynEnumItem @[4] { };
	      DynEnumItem @[5] { };
	      DynEnumItem @[6] { };
	      DynEnumItem @[7] { };
	      DynEnumItem @[8] { };
	    };
	  };
	  DynEnumType @[1] { 
	    DynEnumItem_List @.enums = [2] {
	      DynEnumItem @[0] { };
	      DynEnumItem @[1] { };
	    };
	  };
	  DynEnumType @[2] { 
	    DynEnumItem_List @.enums = [1] {
	      DynEnumItem @[0] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [11] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	  ProgVar @[7] { };
	  ProgVar @[8] { };
	  ProgVar @[9] { };
	  ProgVar @[10] { };
	};

	Function_List @.functions = [1] {
	  Function @[0] { 
	    ProgVar_List @.args = [4] {
	      ProgVar @[0] { };
	      ProgVar @[1] { };
	      ProgVar @[2] { };
	      ProgVar @[3] { };
	    };

	    ProgEl_List @.fun_code = [5] {
	      AddNewDataRow @[0] { };
	      MethodCall @[1] { 
		ProgArg_List @.meth_args = [3] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		};
	      };
	      SetUnitsVar @[2] { };
	      SetUnitsVar @[3] { };
	      IfElse @[4] { 
		ProgEl_List @.true_code = [1] {
		  SetUnitsLit @[0] { };
		};
	      };
	    };
	  };
	};

	ProgEl_List @.init_code = [1] {
	  InitNamedUnits @[0] { };
	};

	ProgEl_List @.prog_code = [6] {
	  RandomCall @[0] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  VarIncr @[1] { };
	  RandomCall @[2] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  AssignExpr @[3] { };
	  FunctionCall @[4] { 
	    ProgArg_List @.fun_args = [4] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	    };
	  };
	  ForLoop @[5] { 
	    ProgEl_List @.loop_code = [7] {
	      ProgVars @[0] { 
		ProgVar_List @.local_vars = [3] {
		  ProgVar @[0] { };
		  ProgVar @[1] { };
		  ProgVar @[2] { };
		};
	      };
	      RandomCall @[1] { };
	      IfElse @[2] { 
		ProgEl_List @.true_code = [3] {
		  RandomCall @[0] { 
		    ProgArg_List @.meth_args = [1] {
		      ProgArg @[0] { };
		    };
		  };
		  AssignExpr @[1] { };
		  AssignExpr @[2] { };
		};

		ProgEl_List @.false_code = [2] {
		  RandomCall @[0] { 
		    ProgArg_List @.meth_args = [2] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		    };
		  };
		  RandomCall @[1] { 
		    ProgArg_List @.meth_args = [2] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		    };
		  };
		};
	      };
	      IfElse @[3] { 
		ProgEl_List @.true_code = [1] {
		  AssignExpr @[0] { };
		};

		ProgEl_List @.false_code = [1] {
		  AssignExpr @[0] { };
		};
	      };
	      FunctionCall @[4] { 
		ProgArg_List @.fun_args = [4] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		  ProgArg @[3] { };
		};
	      };
	      FunctionCall @[5] { 
		ProgArg_List @.fun_args = [4] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		  ProgArg @[3] { };
		};
	      };
	      DoneWritingDataRow @[6] { };
	    };
	  };
	};
      };
    };
    Program_Group @.gp[2] = [1] { 
      Program @[0] { 
	ProgObjList @.objs = [1] {
	  DataTable @[0] { 
	    DataTableCols @.data = [6] {
	      String_Data @[0] { };
	      float_Data @[1] { };
	      float_Data @[2] { };
	      float_Data @[3] { };
	      float_Data @[4] { };
	      float_Data @[5] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [1] {
	  DataGroupProg @[0] { 
	    DataOpList @.ops = [7] {
	      DataGroupEl @[0] { };
	      DataGroupEl @[1] { };
	      DataGroupEl @[2] { };
	      DataGroupEl @[3] { };
	      DataGroupEl @[4] { };
	      DataGroupEl @[5] { };
	      DataGroupEl @[6] { };
	    };
	  };
	};
      };
    };
  };

  DataViewer_List @.viewers = [1] {
    MainWindowViewer @[0] { 
      ToolBar_List @.toolbars = [1] {
	ToolBar @[0] { };
      };

      FrameViewer_List @.frames = [3] {
	tabBrowseViewer @[0] { };
	PanelViewer @[1] { };
	T3DataViewer @[2] { 
	  T3DataViewFrame_List @.frames = [3] {
	    T3DataViewFrame @[0] { 
	      T3DataView_List @.children = [2] {
		NetView @[0] { 
		  ScaleRange_List @.scale_ranges = [6] {
		    ScaleRange @[0] { };
		    ScaleRange @[1] { };
		    ScaleRange @[2] { };
		    ScaleRange @[3] { };
		    ScaleRange @[4] { };
		    ScaleRange @[5] { };
		  };
		};
		GraphTableView @[1] { 
		  T3DataView_List @.children = [17] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		    GraphColView @[9] { };
		    GraphColView @[10] { };
		    GraphColView @[11] { };
		    GraphColView @[12] { };
		    GraphColView @[13] { };
		    GraphColView @[14] { };
		    GraphColView @[15] { };
		    GraphColView @[16] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[1] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [6] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[2] { 
	      T3DataView_List @.children = [2] {
		GridTableView @[0] { 
		  T3DataView_List @.children = [5] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		    GridColView @[3] { };
		    GridColView @[4] { };
		  };
		};
		GridTableView @[1] { 
		  T3DataView_List @.children = [3] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		  };
		};
	      };
	    };
	  };
	};
      };

      DockViewer_List @.docks = [1] {
	ToolBoxDockViewer @[0] { };
      };
    };
  };

  Network_Group @.networks = [1] {
    LeabraNetwork @[0] { 
      BaseSpec_Group @.specs = [4] {
	DaModUnitSpec @[0] { };
	LeabraLayerSpec @[1] { 
	  BaseSpec_Group @.children = [2] {
	    LeabraLayerSpec @[0] { };
	    LeabraLayerSpec @[1] { };
	  };
	};
	FullPrjnSpec @[2] { };
	LeabraConSpec @[3] { 
	  BaseSpec_Group @.children = [1] {
	    LeabraBiasSpec @[0] { 
	      Schedule @.lrate_sched = [2] {
		SchedItem @[0] { };
		SchedItem @[1] { };
	      };
	    };
	  };

	  Schedule @.lrate_sched = [2] {
	    SchedItem @[0] { };
	    SchedItem @[1] { };
	  };
	};
	BaseSpec_Group @.gp[0] = [5] { 
	  DaModUnitSpec @[0] { 
	    BaseSpec_Group @.children = [1] {
	      DaModUnitSpec @[0] { };
	    };
	  };
	  DaModUnitSpec @[1] { };
	  DaModUnitSpec @[2] { };
	  MatrixUnitSpec @[3] { };
	  DaModUnitSpec @[4] { };
	};
	BaseSpec_Group @.gp[1] = [3] { 
	  LeabraConSpec @[0] { 
	    BaseSpec_Group @.children = [4] {
	      PVConSpec @[0] { 
		BaseSpec_Group @.children = [1] {
		  PVConSpec @[0] { 
		    BaseSpec_Group @.children = [1] {
		      PVConSpec @[0] { };
		    };
		  };
		};
	      };
	      LeabraBiasSpec @[1] { 
		BaseSpec_Group @.children = [2] {
		  LeabraBiasSpec @[0] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		  MatrixBiasSpec @[1] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		};

		Schedule @.lrate_sched = [2] {
		  SchedItem @[0] { };
		  SchedItem @[1] { };
		};
	      };
	      LeabraConSpec @[2] { 
		BaseSpec_Group @.children = [2] {
		  LeabraConSpec @[0] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		  LeabraBiasSpec @[1] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		};

		Schedule @.lrate_sched = [2] {
		  SchedItem @[0] { };
		  SchedItem @[1] { };
		};
	      };
	      MatrixConSpec @[3] { 
		BaseSpec_Group @.children = [1] {
		  MatrixConSpec @[0] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		};

		Schedule @.lrate_sched = [2] {
		  SchedItem @[0] { };
		  SchedItem @[1] { };
		};
	      };
	    };

	    Schedule @.lrate_sched = [2] {
	      SchedItem @[0] { };
	      SchedItem @[1] { };
	    };
	  };
	  MarkerConSpec @[1] { };
	  LeabraConSpec @[2] { };
	};
	BaseSpec_Group @.gp[2] = [7] { 
	  ExtRewLayerSpec @[0] { };
	  PViLayerSpec @[1] { };
	  LVeLayerSpec @[2] { 
	    BaseSpec_Group @.children = [2] {
	      LViLayerSpec @[0] { };
	      PatchLayerSpec @[1] { };
	    };
	  };
	  PVLVDaLayerSpec @[3] { 
	    BaseSpec_Group @.children = [1] {
	      SNcLayerSpec @[0] { };
	    };
	  };
	  PFCLayerSpec @[4] { };
	  MatrixLayerSpec @[5] { };
	  SNrThalLayerSpec @[6] { };
	};
	BaseSpec_Group @.gp[3] = [7] { 
	  FullPrjnSpec @[0] { };
	  OneToOnePrjnSpec @[1] { };
	  GpOneToOnePrjnSpec @[2] { };
	  UniformRndPrjnSpec @[3] { };
	  OneToOnePrjnSpec @[4] { };
	  GpRndTesselPrjnSpec @[5] { 
	    TessEl_List @.send_gp_offs = [2] {
	      GpTessEl @[0] { };
	      GpTessEl @[1] { };
	    };
	  };
	  TesselPrjnSpec @[6] { 
	    TessEl_List @.send_offs = [3] {
	      TessEl @[0] { };
	      TessEl @[1] { };
	      TessEl @[2] { };
	    };
	  };
	};
      };

      Layer_Group @.layers = [13] {
	LeabraLayer @[0] { 
	  Unit_Group @.units = [1] {
	  };
	};
	LeabraLayer @[1] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[2] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[3] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[4] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[5] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [1] {
	  };
	};
	LeabraLayer @[6] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [49] {
	  };
	};
	LeabraLayer @[7] { 
	  Unit_Group @.units = [9] {
	  };
	};
	LeabraLayer @[8] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [2] {
	  };
	};
	LeabraLayer @[9] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [1] { 
	    };
	    LeabraUnit_Group @.gp[1] = [1] { 
	    };
	    LeabraUnit_Group @.gp[2] = [1] { 
	    };
	    LeabraUnit_Group @.gp[3] = [1] { 
	    };
	  };
	};
	LeabraLayer @[10] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [28] { 
	    };
	    LeabraUnit_Group @.gp[1] = [28] { 
	    };
	    LeabraUnit_Group @.gp[2] = [28] { 
	    };
	    LeabraUnit_Group @.gp[3] = [28] { 
	    };
	  };
	};
	LeabraLayer @[11] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [1] { 
	    };
	    LeabraUnit_Group @.gp[1] = [1] { 
	    };
	    LeabraUnit_Group @.gp[2] = [1] { 
	    };
	    LeabraUnit_Group @.gp[3] = [1] { 
	    };
	  };
	};
	LeabraLayer @[12] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [9] { 
	    };
	    LeabraUnit_Group @.gp[1] = [9] { 
	    };
	    LeabraUnit_Group @.gp[2] = [9] { 
	    };
	    LeabraUnit_Group @.gp[3] = [9] { 
	    };
	  };
	};
      };
    };
  };
};
LeabraProject .projects[0] {
 name="LeabraProject_0";
 desc="sub 03/05: localist 220 kavg .9 pviferlv gc bias 2 iw1


";
 templates {
  name=;
  el_typ=taBase;
  el_def=0;
 };
 docs {
  name=;
  el_typ=taDoc;
  el_def=0;
  taDoc @[0] {
   name="ProjectDoc";
   auto_open=1;
   text="<html>
<head></head>
<body>
== 12ax4s Demo ==

This demo shows a Leabra network with a prefrontal-cortex basal ganglia working memory (PBWM) system learning a difficult working memory task that has an inner loop (looking for the target sequence of A-X or B-Y) controlled by an outer loop (a 1 or a 2, where a 1 means the inner loop target is A-X, and 2 means the target is B-Y).  Thus, the system must learn to maintain the outer loop information in working memory while selectively updating the inner loop information.

Different \"stripes\" within the PFC layer get recruited through learning to hold onto the inner and outer loop information.  This is evident even fairly early on in running, as you can see from the network display.

To run the simulation, go to [[.programs.gp.LeabraAll_Std.LeabraTrainBatchSeedNThr]] and do Init followed by Run.  The graph shows error over epochs of training.  It may take upwards of 200 or more epochs to learn.

== Software Features Demonstrated ==

* multiple display ('view\") objects in one frame (network & graph)
* viewing output_name instead of unit activations for Input, Output, and PFC layers (select layer with red arrow tool and use context menu to choose display mode).
* program for auto generating an epoch's worth of input data at a time (in CPT12axAll subgroup).

== Network Modeling Features Demonstrated ==

* working memory
* reinforcement learning/dopamine

</body>
</html>
";
  };
 };
 wizards {
  name=;
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   name="LeabraWizard_1";
   auto_open=0;
   n_layers=3;
   layer_cfg {
    name=;
    el_typ=LayerWizEl;
    el_def=0;
    LayerWizEl @[0] {
     name="Input";
     n_units=25;
     io_type=INPUT;
    };
    LayerWizEl @[1] {
     name="Hidden";
     n_units=25;
     io_type=HIDDEN;
    };
    LayerWizEl @[2] {
     name="Output";
     n_units=25;
     io_type=OUTPUT;
    };
   };
   connectivity=BIDIRECTIONAL;
  };
 };
 edits {
  name=;
  el_typ=SelectEdit;
  el_def=0;
  SelectEdit @[0] {
   name="SelectEdit_0";
   desc=;
   config {
    auto_edit=0;
    mbr_labels{ matrix;matrix;matrix;snr_thal;pv;lvde;lvdi;pvi;da;matrix;    };
    meth_labels{     };
   };
   mbr_bases {
    name=;
    el_typ=taBase;
    el_def=0;
	taBase_List @. = [0] = MatrixLayerSpec .projects[0].networks[0].specs.gp[2][5];
	taBase_List @. = [1] = MatrixLayerSpec .projects[0].networks[0].specs.gp[2][5];
	taBase_List @. = [2] = MatrixConSpec .projects[0].networks[0].specs.gp[1][0].children[3].children[0];
	taBase_List @. = [3] = LVeLayerSpec .projects[0].networks[0].specs.gp[2][2];
	taBase_List @. = [4] = PViLayerSpec .projects[0].networks[0].specs.gp[2][1];
	taBase_List @. = [5] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0].children[0];
	taBase_List @. = [6] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0].children[0].children[0];
	taBase_List @. = [7] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0];
	taBase_List @. = [8] = PVLVDaLayerSpec .projects[0].networks[0].specs.gp[2][3];
	taBase_List @. = [9] = MatrixUnitSpec .projects[0].networks[0].specs.gp[0][3];
   };
   mbr_strs{ matrix;contrast;lmix;kwta;bias_val;lrate;lrate;lrate;da;g_bar;   };
   meth_bases {
    name=;
    el_typ=taBase;
    el_def=0;
   };
   meth_strs{    };
  };
 };
 data {
  name=;
  el_typ=DataTable;
  el_def=0;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserDataItemBase;
     el_def=0;
     UserDataItem @[0] {
      name="N_ROWS";
      value 2 0=5;
     };
    };
    name="TrainEnv_0";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Group";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [119] "0_I_ONE";"0_I_ONE";"0_I_ONE";"1_I_TWO";"1_I_TWO";"1_I_TWO";"1_I_TWO";"1_I_TWO";"1_I_TWO";"1_I_TWO";"2_I_TWO";"2_I_TWO";"2_I_TWO";"2_I_TWO";"2_I_TWO";"2_I_TWO";"2_I_TWO";"3_I_ONE";"3_I_ONE";"3_I_ONE";"3_I_ONE";"3_I_ONE";"4_I_TWO";"4_I_TWO";"4_I_TWO";"4_I_TWO";"4_I_TWO";"5_I_TWO";"5_I_TWO";"5_I_TWO";"5_I_TWO";"5_I_TWO";"6_I_TWO";"6_I_TWO";"6_I_TWO";"7_I_ONE";"7_I_ONE";"7_I_ONE";"8_I_ONE";"8_I_ONE";"8_I_ONE";"9_I_ONE";"9_I_ONE";"9_I_ONE";"9_I_ONE";"9_I_ONE";"9_I_ONE";"9_I_ONE";"10_I_ONE";"10_I_ONE";"10_I_ONE";"10_I_ONE";"10_I_ONE";"10_I_ONE";"10_I_ONE";"11_I_ONE";"11_I_ONE";"11_I_ONE";"12_I_TWO";"12_I_TWO";"12_I_TWO";"13_I_TWO";"13_I_TWO";"13_I_TWO";"13_I_TWO";"13_I_TWO";"13_I_TWO";"13_I_TWO";"14_I_TWO";"14_I_TWO";"14_I_TWO";"15_I_ONE";"15_I_ONE";"15_I_ONE";"16_I_ONE";"16_I_ONE";"16_I_ONE";"16_I_ONE";"16_I_ONE";"17_I_TWO";"17_I_TWO";"17_I_TWO";"18_I_ONE";"18_I_ONE";"18_I_ONE";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"20_I_ONE";"20_I_ONE";"20_I_ONE";"21_I_ONE";"21_I_ONE";"21_I_ONE";"21_I_ONE";"21_I_ONE";"21_I_ONE";"21_I_ONE";"22_I_TWO";"22_I_TWO";"22_I_TWO";"22_I_TWO";"22_I_TWO";"22_I_TWO";"22_I_TWO";"23_I_ONE";"23_I_ONE";"23_I_ONE";"23_I_ONE";"23_I_ONE";"24_I_TWO";"24_I_TWO";"24_I_TWO";"24_I_TWO";"24_I_TWO";      };
     };
     String_Data @[1] {
      name="Name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [119] "ONE_L";"C_L";"Z_L";"TWO_L";"C_L";"Y_L";"A_L";"X_L";"A_L";"X_L";"TWO_L";"A_L";"X_L";"B_L";"Z_L";"C_L";"X_L";"ONE_L";"B_L";"Y_L";"A_L";"X_R";"TWO_L";"A_L";"X_L";"B_L";"Y_R";"TWO_L";"C_L";"Z_L";"A_L";"X_L";"TWO_L";"A_L";"X_L";"ONE_L";"B_L";"Y_L";"ONE_L";"B_L";"Y_L";"ONE_L";"B_L";"Y_L";"B_L";"Y_L";"A_L";"X_R";"ONE_L";"B_L";"Y_L";"A_L";"X_R";"A_L";"X_R";"ONE_L";"A_L";"X_R";"TWO_L";"B_L";"X_L";"TWO_L";"C_L";"Y_L";"C_L";"Y_L";"B_L";"X_L";"TWO_L";"B_L";"X_L";"ONE_L";"A_L";"X_R";"ONE_L";"B_L";"Y_L";"B_L";"Y_L";"TWO_L";"B_L";"X_L";"ONE_L";"B_L";"Y_L";"TWO_L";"C_L";"Z_L";"B_L";"Y_R";"B_L";"Y_R";"ONE_L";"A_L";"X_R";"ONE_L";"B_L";"Z_L";"A_L";"X_R";"B_L";"Y_L";"TWO_L";"C_L";"Z_L";"A_L";"X_L";"C_L";"Z_L";"ONE_L";"A_L";"X_R";"A_L";"X_R";"TWO_L";"A_L";"X_L";"B_L";"Y_R";      };
     };
     float_Data @[2] {
      name="Input";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;3;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [3 3 119] 0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;      };
     };
     float_Data @[3] {
      name="Output";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [2 1 119] 1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;0;1;1;0;0;1;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;0;1;1;0;1;0;0;1;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;0;1;1;0;1;0;1;0;1;0;0;1;      };
     };
     float_Data @[4] {
      name="RewTarg";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [1 1 119] 0;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;0;1;0;0;1;0;1;0;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;0;1;0;1;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
   DataTable @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserDataItemBase;
     el_def=0;
     UserDataItem @[0] {
      name="N_ROWS";
      value 2 0=1;
     };
     UserDataItem @[1] {
      name="MAT_VAL_TEXT";
      value 2 0=1;
     };
     UserDataItem @[2] {
      name="WIDTH";
      value 6 0=3.299999952316284;
     };
    };
    name="UnitNames";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Input";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;3;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [3 3 1] "A";"B";"C";"X";"Y";"Z";"ONE";"TWO";"THREE";      };
     };
     String_Data @[1] {
      name="Output";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [2 1 1] "L";"R";      };
     };
     String_Data @[2] {
      name="RewTarg";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [1 1 1] "rew_targ";      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="trial";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     String_Data @[3] {
      name="trial_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     String_Data @[4] {
      name="group_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[5] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="phase_no";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[6] {
      name="minus_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[7] {
      name="sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[8] {
      name="ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[9] {
      name="DA";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[10] {
      name="PVe";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[11] {
      name="PVi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[12] {
      name="LVe";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[13] {
      name="LVi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[14] {
      name="absDA";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[2] {
      name="avg_sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[3] {
      name="cnt_err";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[4] {
      name="avg_ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[5] {
      name="avg_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[6] {
      name="Leabra_cur_lrate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[7] {
      name="epoch_time_tot";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[8] {
      name="epoch_time_usr";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[9] {
      name="A_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[10] {
      name="B_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[11] {
      name="C_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[12] {
      name="one_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[13] {
      name="two_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[14] {
      name="X_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[15] {
      name="Y_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[16] {
      name="Z_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
  };
 };
 data_proc {
  name=;
  el_typ=taDataProc;
  el_def=0;
  taDataProc @[0] {
   name="data_base";
  };
  taDataAnal @[1] {
   name="data_anal";
  };
  taDataGen @[2] {
   name="data_gen";
  };
  taImageProc @[3] {
   name="image_proc";
  };
 };
 programs {
  name=;
  el_typ=Program;
  el_def=0;
  step_prog=NULL;
  tags=;
  desc=;
  Program_Group @.gp[0] {
   name="LeabraAll_Std";
   el_typ=Program;
   el_def=0;
   step_prog=.projects[0].programs.gp[0][3]$0$;
   tags=;
   desc="The full set of programs for training a standard Leabra network";
   Program @[0] {
    name="LeabraBatch";
    tags="Leabra, Std";
    desc="Iterate over training runs (a batch of training runs) -- just a simple loop that calls training program";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=.projects[0].networks[0]$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="network to operate on -- updates batch counter on network and passes it to train program";
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[0][0]$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="datatable with training patterns -- not used by this program, but passed to train program";
     };
     ProgVar @[2] {
      name="max_batch";
      var_type=T_Int;
      int_val=10;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="maximum number of batch runs to perform";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="batch counter";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initializes local batch counter and batch field on network";
      flags=;
      network_var=.projects[0].programs.gp[0][0].args[0]$3$;
      local_ctr_var=.projects[0].programs.gp[0][0].vars[0]$4$;
      counter=Network::batch;
     };
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     NetCounterInit @[0] {
      desc="initializes local batch counter and batch field on network";
      flags=;
      network_var=$3$;
      local_ctr_var=$4$;
      counter=Network::batch;
     };
     WhileLoop @[1] {
      desc="the main loop over training runs";
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc="run the training program -- sets the network and input_data args";
	flags=;
	target=.projects[0].programs.gp[0][1]$5$;
	targ_ld_init="*LeabraTrain*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=bool;
	  type="bool";
	  name="no_prompts";
	  required=1;
	  def_val=;
	  expr {
	   expr="true";
	   flags=;
	   var_expr="true";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the local batch counter and copy to network";
	flags=;
	network_var=$3$;
	local_ctr_var=$4$;
	counter=Network::batch;
       };
      };
      test {
       expr="batch < max_batch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ batch;max_batch;       };
       bad_vars{        };
      };
     };
    };
   };
   Program @[1] {
    name="LeabraTrainBatchSeedNThr";
    tags="Leabra, RndSeedList";
    desc="A complete training run of a Leabra network: iterating over epochs until the network has learned the task has a list of random seeds that are tied to the network batch counter, providing consistent runs regardless of what happens in the training of each network, or where it is run (e.g., on different processors)";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=RndSeed;
     el_def=0;
     RndSeed_List @[0] {
      name="rnd_seeds";
      seeds {
       name=;
       el_typ=RndSeed;
       el_def=0;
       RndSeed @[0] {
	name="RndSeed_1";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[1] {
	name="RndSeed_2";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[2] {
	name="RndSeed_3";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[3] {
	name="RndSeed_4";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[4] {
	name="RndSeed_5";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[5] {
	name="RndSeed_6";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[6] {
	name="RndSeed_7";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[7] {
	name="RndSeed_8";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[8] {
	name="RndSeed_9";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[9] {
	name="RndSeed_10";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[10] {
	name="RndSeed_11";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[11] {
	name="RndSeed_12";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[12] {
	name="RndSeed_13";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[13] {
	name="RndSeed_14";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[14] {
	name="RndSeed_15";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[15] {
	name="RndSeed_16";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[16] {
	name="RndSeed_17";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[17] {
	name="RndSeed_18";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[18] {
	name="RndSeed_19";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[19] {
	name="RndSeed_20";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[20] {
	name="RndSeed_21";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[21] {
	name="RndSeed_22";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[22] {
	name="RndSeed_23";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[23] {
	name="RndSeed_24";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
       RndSeed @[24] {
	name="RndSeed_25";
	seed{ -128435457;-881931353;1572976691;1386718816;1969107935;1777786643;-762315489;920316518;2137901060;-1090083635;-1475153095;764510197;-787664318;-1111330872;1064253022;-1795809685;682123476;-2046630671;868288096;791467861;1997591451;707751018;529070030;-1556223247;1519625543;1135093194;-688705298;1726727894;-1652006731;750927370;472025580;-1647998133;1230280708;-1043771408;-1013560394;2015226116;-1823591405;-1601989935;-935820207;1513039242;-1385260062;223281431;1367037323;1574372679;1693739867;-1985644057;1736690046;119567349;-631741219;1489384839;-1120415760;-892577350;-532658435;-1574618015;-2142974138;-989322550;-520741144;-1417220024;1685225630;1487068450;2077687645;1600900398;-209225112;-436869273;-1887862952;-766654028;-1804792526;142019743;-671682061;-1390789318;-772242107;1972974458;293091350;-295627;1630266430;-2032425260;449632414;1105120013;-1794469569;-515693;1698198023;-2001598135;1190021920;1099932703;1729095858;820245340;306122998;687858226;1834550393;-78127237;-90997824;-990193917;167150787;-1211210049;8519902;2047575319;1063390828;-1268235074;1893484524;555830768;-1084929882;2075105124;1585785839;-1887189835;1474089571;1557209900;-1964285359;936784935;-634407081;1308313530;1447488428;587975935;1970328171;1243520408;542874351;1205594623;-2073585337;882328679;-1464339388;-1820824657;841846093;910931578;805910491;-356809063;-1486859703;1638000402;-1721063098;-528238001;425038270;-1419398328;-650313057;-2005469887;-455998496;1234362089;-342936231;326108201;-154017364;-739628793;-1339751554;1194140857;-1809960901;-1872340972;-1338823220;-665310723;-786393800;1146677319;-957349339;-706895772;1383773009;-1303193787;460331252;-892578235;1911456844;-686530177;-2123404708;1174144003;-710980505;1226709656;1598491920;1781110610;-502245017;440259813;301462904;861174748;1749843562;809403861;319698270;603574308;-969637272;1497047398;524181521;-320381289;577404280;1907421170;-1298025750;324325569;-244735097;951072107;1128047296;-1729616711;86915133;-912741795;541392169;-1676406643;1719677014;1150065410;1689613759;-497935898;1435739399;-1257270125;1907261410;-81682312;-731028365;1573963762;1796427512;-2065571082;1692220184;73861355;1215770178;1014087704;549378269;2000367324;-1897197359;-571007747;-1086138682;-944777413;1947920824;-1377942313;1444967669;-459167556;1640802195;36660353;-594653447;-1653717741;776037774;1753570811;109402787;-550137956;1631662843;-1992181330;-663694934;2039249754;-1516155120;-856417123;-1617921723;-91328060;-1607776408;-255370750;-251154455;-856212576;804483108;1040113037;-1524136375;-539405240;202583104;694736496;-1860805477;1212228045;1351674509;-442468634;-1026319878;1569715831;-1144691410;1008402932;687764333;2144348848;1230120681;1698057722;1214511053;1873205056;207558207;780775046;999207747;-1548851974;-48184622;744111203;-1541797580;-340432615;-1095802624;783198911;239196809;-261669918;1350083412;2137186676;-1819429306;1837300629;1372657712;1550919536;-152147497;1810112290;-489756538;-1980273297;633463005;24711981;-1445770868;1981559361;-742344749;1094030836;2043176950;-1065816529;283481579;483998454;1355304557;-1948576081;-903243916;-849985217;2144050421;690293413;633773376;223294232;1426053971;-629815254;-850328079;125281660;-1639036516;1490523850;1315224006;-1272022430;1903244030;-54278097;-2036697374;1874080629;1455568408;-188593354;-445392513;-1808958274;-181651189;-277965325;983622929;1706144562;1506895599;-1932750361;1882907259;1098057565;33070241;-478479199;-382905979;1742845010;-489878405;-1917746885;-727676422;2136883031;-1696706635;-639967724;-482834761;-1735295425;1214886355;1283133259;-633962225;-1929736080;1629482477;751273511;894862326;-181574968;-1759853366;-1343131081;-1196117807;-1551050912;602210990;-38323586;-840892467;760792936;1553035543;-396110175;-925579980;-1438666743;1490607018;-995938247;-306349012;-1232917811;-1052829390;215544410;-403645384;1825998466;508391462;18624186;-300417845;-632785568;-1411548123;-323791211;1683447335;1968169930;1864386734;-1829401481;-1291008249;-2044091724;495680204;-992243491;-903504112;-836046381;-1404272067;1840749529;970215266;1522190821;-1215312293;308276336;-1070973480;2070480846;-112081454;1812617301;2093666287;-1578362961;1442771517;984172583;-1119735119;3589882;-595913753;-500885586;-1825197688;750260742;1220490216;1831015380;-421089513;-660642633;1438355449;97239789;340640830;1192205000;-996165683;1051538082;807489036;-624269320;1836201750;-392759941;154340963;375263595;-2053678166;1169298504;-1312351749;1179170580;20386917;-3179702;-1506417172;-887452633;-1368688190;1445864778;-825085764;546186797;-126317140;-44019596;1887252524;1282721060;-2067542280;228114820;752347080;-915288102;-1919682453;1080477354;-223009510;52284079;2001451274;392999712;-1330408455;1375748367;1038251242;-317654868;867757661;-142842944;983802829;268527508;-438859176;217575046;131330091;1738396976;-730231267;-1660085737;120309420;22042227;-1743996945;-2003961952;1051324873;1893503177;-1909022722;-1851310092;-1798036314;-39392092;902416535;-664584013;-1588731935;1550836923;-576641360;1837824025;127836471;-1278979732;1497871031;1437271203;-770437982;1029516798;865908559;-95115444;-506262878;-186884500;550898787;-1124861549;-95069055;-1410572370;937497303;-76695003;1056035556;540647574;-1107184851;1284251603;-1891841107;1165278348;78274473;1575176391;-913064283;2035992671;52445013;-387648957;1374192314;-117877017;1004417072;-2094453061;-940926832;996598594;1322866873;339429890;-1453685963;-1370305029;1160566046;-822995121;1809126298;-2099276052;303193927;179141559;-2063601891;-1566679648;1701584223;-1531663250;2144674434;1954076936;-1649377249;-883349843;-1397741421;-1351970236;554590185;-476071749;1234011766;1404495855;-1570006122;-1844297292;-904558263;1804320758;-136687922;-1574375269;-1516357355;-466004344;877079801;-281162762;-1082149853;-1182089775;-500637083;349661165;832664560;-1832703172;1660024691;-792595818;-319189368;-1163468760;-2116736074;-19007547;1347617611;452524921;-1599164008;133373519;236011509;955893402;-296450328;-785537375;277420128;-689143567;-1951434284;1329914252;-1967729863;1448803273;-1182296223;-1467344519;-392408091;-924207372;-185093821;590943245;-1636932342;833608324;-2018509447;-1188643491;211469261;-224840004;134449410;1803510290;1451803503;-681394710;1919442179;782365890;-1665310295;-181307608;-1540425550;-2054025892;-866561836;-1196232770;43957807;-411600590;-1013238051;-1561331962;1999137836;1005271719;748291981;-155375519;-1628642333;1400183864;-325749811;-1386124135;-149453463;-1382929354;-1816613498;-2028248828;1271633235;-1031484527;-195963634;-543922202;534091557;-317019742;332888742;472931827;-822814183;-1828794867;-22087640;1660535264;1664828459;-2073682036;231981905;-1991629015;-655586046;-807053331;1689818525;1818169803;-451423804;2124317660;-1452203361;87609099;-1304238038;-1209898993;-1077585137;-1318491746;	};
	mti=6;
       };
      };
     };
    };
    types {
     name=;
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="no_prompts";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="If train is called by other programs (e.g., Batch), they should set this to true -- otherwise it is reset to false in Init";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=500;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="epoch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=Network::TrainMode;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[4] {
      name="n_under_thr";
      var_type=T_Int;
      int_val=2;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of times network needs to be under stopcrit threshold to actually stop";
     };
     ProgVar @[5] {
      name="n_under_cnt";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="current under threshold counter";
     };
     ProgVar @[6] {
      name="rnd_seeds";
      var_type=T_Object;
      object_type=RndSeed_List;
      object_val=.projects[0].programs.gp[0][1].objs[0]$6$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[7] {
      name="train_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].train_time$7$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][1].args[2]$8$;
      expr {
       expr="false";
       flags=;
       var_expr="false";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].args[0]$9$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[2] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[7]$10$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[5]$11$;
      expr {
       expr="0";
       flags=;
       var_expr="0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].vars[6]$12$;
      method=RndSeed_List::UseSeed;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="idx";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     IfGuiPrompt @[5] {
      desc="don't initialize weights without checking";
      flags=;
      prompt="Do you want to Initialize Network Weights";
      yes_label="Yes";
      no_label="No";
      yes_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=;
	result_var=NULL;
	obj=$9$;
	method=Network::Init_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       PrintExpr @[1] {
	desc=;
	flags=;
	expr {
	 expr="network.name << \" Weights Initialized\"";
	 flags=;
	 var_expr="$#0#$.name << \" Weights Initialized\"";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[6] {
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[1]$13$;
      expr {
       expr="network.epoch";
       flags=;
       var_expr="$#0#$.epoch";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=$10$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$10$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[2] {
      desc=;
      flags=;
      result_var=$11$;
      expr {
       expr="0";
       flags=;
       var_expr="0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     MemberAssign @[3] {
      desc="set network's training mode to our local value";
      flags=;
      obj=$9$;
      path="train_mode";
      expr {
       expr="train_mode";
       flags=;
       var_expr="$#0#$";
       vars {
       };
       var_names{ train_mode;       };
       bad_vars{        };
      };
      update_after=0;
     };
     MethodCall @[4] {
      desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
      flags=;
      result_var=NULL;
      obj=$12$;
      method=RndSeed_List::UseSeed;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="idx";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     IfElse @[5] {
      desc=;
      flags=;
      cond {
       expr="no_prompts";
       flags=;
       var_expr="$#0#$";
       vars {
       };
       var_names{ no_prompts;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=;
	result_var=NULL;
	obj=$9$;
	method=Network::Init_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       PrintExpr @[1] {
	desc=;
	flags=;
	expr {
	 expr="network.name << \" Weights Initialized\"";
	 flags=;
	 var_expr="$#0#$.name << \" Weights Initialized\"";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     AssignExpr @[6] {
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=;
      result_var=$13$;
      expr {
       expr="network.epoch";
       flags=;
       var_expr="$#0#$.epoch";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     WhileLoop @[7] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][2]$14$;
	targ_ld_init="*LeabraEpoch*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the epoch counter";
	flags=;
	network_var=$9$;
	local_ctr_var=$13$;
	counter=Network::epoch;
       };
       IfElse @[2] {
	desc=;
	flags=;
	cond {
	 expr="network.cnt_err <= err_stopcrit";
	 flags=;
	 var_expr="$#0#$.cnt_err <= $#1#$";
	 vars {
	 };
	 var_names{ network;err_stopcrit;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 VarIncr @[0] {
	  desc=;
	  flags=;
	  var=$11$;
	  expr {
	   expr="1";
	   flags=;
	   var_expr="1";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 IfBreak @[1] {
	  desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here too)";
	  flags=;
	  cond {
	   expr="n_under_cnt >=  n_under_thr";
	   flags=;
	   var_expr="$#0#$ >=  $#1#$";
	   vars {
	   };
	   var_names{ n_under_cnt;n_under_thr;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=;
	  result_var=$11$;
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
      test {
       expr="epoch < max_epoch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ epoch;max_epoch;       };
       bad_vars{        };
      };
     };
     MethodCall @[8] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$10$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[2] {
    name="LeabraEpochGpData";
    tags="Leabra, Std";
    desc="iterates over all of the items in a data table and calls LeabraTrial process on them";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_order";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=NetGroupedDataLoop::Order;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="item_order";
      var_type=T_HardEnum;
      int_val=0;
      hard_enum_type=NetGroupedDataLoop::Order;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="trial";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[1][0]$15$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="trial-level output data -- if we want to reset it every epoch";
     };
     ProgVar @[4] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].epoch_time$16$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[5] {
      name="group_index";
      var_type=T_Int;
      int_val=19;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[6] {
      name="item_index";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter: note also needs to do this in regular running program";
      flags=;
      network_var=.projects[0].programs.gp[0][2].args[0]$17$;
      local_ctr_var=.projects[0].programs.gp[0][2].vars[2]$18$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][2].vars[4]$19$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter";
      flags=;
      network_var=$17$;
      local_ctr_var=$18$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=$19$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[2] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$19$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn OFF if not wanted)";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][2].vars[3]$20$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[4] {
      desc=;
      flags=;
      target=.projects[0].programs.gp[1][0]$21$;
      targ_ld_init="*CPT12axEpoch*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_per_epc";
	required=1;
	def_val=;
	expr {
	 expr="25";
	 flags=;
	 var_expr="25";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     NetGroupedDataLoop @[5] {
      desc="iterates over groups and items within groups";
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc="call the trial process";
	flags=;
	target=$0$;
	targ_ld_init="*LeabraTrial*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       IfElse @[1] {
	desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
	flags=;
	cond {
	 expr="network.Compute_Weights_Test(trial+1)";
	 flags=;
	 var_expr="$#0#$.Compute_Weights_Test($#1#$+1)";
	 vars {
	 };
	 var_names{ network;trial;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=MethodCall;
	 el_def=0;
	 MethodCall @[0] {
	  desc=;
	  flags=;
	  result_var=NULL;
	  obj=$17$;
	  method=Network::Compute_Weights;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	};
       };
      };
      data_var=.projects[0].programs.gp[0][2].args[1]$22$;
      group_index_var=.projects[0].programs.gp[0][2].vars[5]$23$;
      item_index_var=.projects[0].programs.gp[0][2].vars[6]$24$;
      group_order_var=.projects[0].programs.gp[0][2].vars[0]$25$;
      item_order_var=.projects[0].programs.gp[0][2].vars[1]$26$;
      group_order=PERMUTED;
      item_order=SEQUENTIAL;
      group_col=0;
      group_idx_list{ 35;48;3;27;68;82;74;79;85;38;22;92;95;71;61;114;102;58;32;109;55;41;17;10;0;      };
      item_idx_list{ 109;110;111;112;113;      };
     };
     IfElse @[6] {
      desc="if full batch mode, update only at end of epoch";
      flags=;
      cond {
       expr="network.wt_update == Network::BATCH";
       flags=;
       var_expr="$#0#$.wt_update == Network::BATCH";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$17$;
	method=Network::Compute_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MethodCall @[7] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$17$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[8] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$19$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[9] {
      desc="call the epoch monitor";
      flags=;
      target=.projects[0].programs.gp[0][8]$27$;
      targ_ld_init="*LeabraEpochMonitor*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[3] {
    name="LeabraTrial";
    tags="Leabra, Std";
    desc="Leabra processing of a single input/toutput event or external information: typically runs a minus and a plus phase, then learns (unless testing)";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="network to operate on -- typically set by higher-level calling programs";
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="datatable containing training input/output patterns";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="phase_no";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="local phase counting variable (0 is typically minus phase, 1 is typically plus -- depends on network settings)";
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="determines whether to update any network view displays after trial is completed";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize the local phase_no counter, and corresponding network one";
      flags=;
      network_var=.projects[0].programs.gp[0][3].args[0]$28$;
      local_ctr_var=.projects[0].programs.gp[0][3].vars[0]$29$;
      counter=LeabraNetwork::phase_no;
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize the local phase_no counter, and corresponding network one";
      flags=;
      network_var=$28$;
      local_ctr_var=$29$;
      counter=LeabraNetwork::phase_no;
     };
     MethodCall @[1] {
      desc="initializes various counters at start of trial";
      flags=;
      result_var=NULL;
      obj=$28$;
      method=LeabraNetwork::Trial_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WhileLoop @[2] {
      desc="loop over phases of settling in the network";
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc="run the settle program (which iterates over cyles of network activation updating) for each phase";
	flags=;
	target=.projects[0].programs.gp[0][4]$30$;
	targ_ld_init="*LeabraSettle*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the phase number (also on network)";
	flags=;
	network_var=$28$;
	local_ctr_var=$29$;
	counter=LeabraNetwork::phase_no;
       };
       MethodCall @[2] {
	desc="increments other phase state information to prepare for the next phase of settling";
	flags=;
	result_var=NULL;
	obj=$28$;
	method=LeabraNetwork::Trial_UpdatePhase;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      test {
       expr="phase_no < network.phase_max";
       flags=;
       var_expr="$#0#$ < $#1#$.phase_max";
       vars {
       };
       var_names{ phase_no;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[3] {
      desc="after the trial is over, do final computations: Compute_dWt (learn weights), compute stats";
      flags=;
      result_var=NULL;
      obj=$28$;
      method=LeabraNetwork::Trial_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[4] {
      desc="records data about the trial-level processing to a datatable for graphing/processing";
      flags=;
      target=.projects[0].programs.gp[0][7]$31$;
      targ_ld_init="*LeabraTrialMonitor*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     NetUpdateView @[5] {
      desc="update the network view(s) (only if update_net_view is true)";
      flags=;
      network_var=$28$;
      update_var=.projects[0].programs.gp[0][3].vars[1]$32$;
     };
    };
   };
   Program @[4] {
    name="LeabraSettle";
    tags="Leabra, Std";
    desc="iterates over cycles of updating until network has settled into a stable state, or output activations have exceeded a threshold";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="current cycle of settling (local loop counter)";
     };
     ProgVar @[1] {
      name="min_cycles";
      var_type=T_Int;
      int_val=15;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="IMPORTANT: this value is obtained from the network min_cycles and min_cycles_phase2 -- change the value on the network object, not here in this program!
sets the minimum number of cycles to settle for, regardless of network state changes, etc";
     };
     ProgVar @[2] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="if true, will update network views at end of settling";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize local cycle counter and corresponding counter on network";
      flags=;
      network_var=.projects[0].programs.gp[0][4].args[0]$33$;
      local_ctr_var=.projects[0].programs.gp[0][4].vars[0]$34$;
      counter=Network::cycle;
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize local cycle counter and corresponding counter on network";
      flags=;
      network_var=$33$;
      local_ctr_var=$34$;
      counter=Network::cycle;
     };
     MethodCall @[1] {
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=;
      result_var=NULL;
      obj=$33$;
      method=Network::Init_InputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[2] {
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=;
      target=.projects[0].programs.gp[0][6]$35$;
      targ_ld_init="*ApplyInputs*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="initializes various counters at start of settling";
      flags=;
      result_var=NULL;
      obj=$33$;
      method=LeabraNetwork::Settle_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     IfElse @[4] {
      desc="get appropriate min_cycles value depending on which phase we're in";
      flags=;
      cond {
       expr="network.phase_no <= 1";
       flags=;
       var_expr="$#0#$.phase_no <= 1";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AssignExpr @[0] {
	desc="get minimum number of cycles from parameter on network (which is where you should change this value!)";
	flags=;
	result_var=.projects[0].programs.gp[0][4].vars[1]$36$;
	expr {
	 expr="network.min_cycles";
	 flags=;
	 var_expr="$#0#$.min_cycles";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AssignExpr @[0] {
	desc="get minimum number of cycles from parameter on network (which is where you should change this value!)";
	flags=;
	result_var=$36$;
	expr {
	 expr="network.min_cycles_phase2";
	 flags=;
	 var_expr="$#0#$.min_cycles_phase2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     WhileLoop @[5] {
      desc="the main loop over cycles of updating";
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc="run the cycle program, which computes one cycle of activations";
	flags=;
	target=.projects[0].programs.gp[0][5]$37$;
	targ_ld_init="*LeabraCycle*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment cycle counter (also on network)";
	flags=;
	network_var=$33$;
	local_ctr_var=$34$;
	counter=Network::cycle;
       };
       IfContinue @[2] {
	desc="avoid subsequent stopping criteria if below min_cycles";
	flags=;
	cond {
	 expr="cycle < min_cycles";
	 flags=;
	 var_expr="$#0#$ < $#1#$";
	 vars {
	 };
	 var_names{ cycle;min_cycles;	 };
	 bad_vars{ 	 };
	};
       };
       IfBreak @[3] {
	desc="stopping criterion for settling: based either on maximum change in activation (maxda) or on the maximum activation value in the network getting over threshold (which ever comes first).  Set either parmeter to values that are always false (e.g., trg_max_act_stopcrit = -1) to eliminate associated source of criterion for stopping settling.";
	flags=;
	cond {
	 expr="(network.maxda < network.maxda_stopcrit) ||
 (network.trg_max_act > network.trg_max_act_stopcrit)";
	 flags=;
	 var_expr="($#0#$.maxda < $#0#$.maxda_stopcrit) ||
 ($#0#$.trg_max_act > $#0#$.trg_max_act_stopcrit)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      test {
       expr="cycle < network.cycle_max";
       flags=;
       var_expr="$#0#$ < $#1#$.cycle_max";
       vars {
       };
       var_names{ cycle;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[6] {
      desc="perform final operations at end of settling (storing final activations, etc)";
      flags=;
      result_var=NULL;
      obj=$33$;
      method=LeabraNetwork::Settle_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     IfElse @[7] {
      desc="only run trial-level statistics in minus phase (otherwise network may have correct answer clamped on!).  IMPORTANT: this assumes that you've got target activation values for output layers already
presented in the minus phase -- if this is not the case (values are computed on the fly), you may want to run this instead at the start of the plus phase, after ApplyInputs";
      flags=;
      cond {
       expr="network.phase == LeabraNetwork::MINUS_PHASE";
       flags=;
       var_expr="$#0#$.phase == LeabraNetwork::MINUS_PHASE";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=MethodCall;
       el_def=0;
       MethodCall @[0] {
	desc="compute trial-level statistics";
	flags=;
	result_var=NULL;
	obj=$33$;
	method=LeabraNetwork::Compute_TrialStats;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     IfElse @[8] {
      desc="this stat must be called in plus phase when reward information is avail";
      flags=;
      cond {
       expr="network.phase_no == 1";
       flags=;
       var_expr="$#0#$.phase_no == 1";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="get external reward information";
	flags=;
	result_var=NULL;
	obj=$33$;
	method=LeabraNetwork::Compute_ExtRew;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     NetUpdateView @[9] {
      desc="update network views, if update_net_view == true";
      flags=;
      network_var=$33$;
      update_var=.projects[0].programs.gp[0][4].vars[2]$38$;
     };
    };
   };
   Program @[5] {
    name="LeabraCycle";
    tags="Leabra, Std";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="this does all the standard leabra processing for one cycle of activation updating";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][5].args[0]$39$;
      method=LeabraNetwork::Cycle_Run;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetUpdateView @[1] {
      desc="update network views if update_net_view == true";
      flags=;
      network_var=$39$;
      update_var=.projects[0].programs.gp[0][5].vars[0]$40$;
     };
    };
   };
   Program @[6] {
    name="ApplyInputs";
    tags=;
    desc="apply the current input data to the network as external input and target values";
    flags=;
    objs {
     name=;
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$2$;
      network=$1$;
      layer_data {
       name=;
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	chan_name="RewTarg";
	net_target=LAYER;
	layer_name="RewTarg";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[1] {
	chan_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[2] {
	chan_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=TARG;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[3] {
	chan_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[4] {
	chan_name="Group";
	net_target=GROUP_NAME;
	layer_name="Group";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
      };
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="LayerWriter_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.projects[0].programs.gp[0][6].objs[0]$41$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][6].vars[0]$42$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataBlock_ptr;
	type="DataBlock*";
	name="db";
	required=0;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$42$;
      method=taList_impl::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=;
      result_var=NULL;
      obj=$42$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MemberAssign @[1] {
      desc="get rid of output from trial_name";
      flags=;
      obj=.projects[0].programs.gp[0][6].args[0]$43$;
      path="trial_name";
      expr {
       expr="network.trial_name.before(\"_\")";
       flags=;
       var_expr="$#0#$.trial_name.before(\"_\")";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      update_after=0;
     };
    };
   };
   Program @[7] {
    name="LeabraTrialMonitorPVLV";
    tags=;
    desc="monitor trial-level data from the network";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="phase_no";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="phase_no";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="cycle";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="minus_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[9] {
	name="DA";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[10] {
	name="PVe";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[11] {
	name="PVi";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[12] {
	name="LVe";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[13] {
	name="LVi";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[14] {
	name="absDA";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=$15$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$15$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][7].objs[0]$44$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[1]$45$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$45$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$45$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[0]$46$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=;
      result_var=NULL;
      obj=$45$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[2] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$46$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="fabs(network.layers.DA.units[0].act_p2)";
	 flags=;
	 var_expr="fabs($#0#$.layers.DA.units[0].act_p2)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"DA\"";
	 flags=;
	 var_expr="\"DA\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$46$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.PVe.units[0].act_p2";
	 flags=;
	 var_expr="$#0#$.layers.PVe.units[0].act_p2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"PVe\"";
	 flags=;
	 var_expr="\"PVe\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$46$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.PVi.units[0].act_m";
	 flags=;
	 var_expr="$#0#$.layers.PVi.units[0].act_m";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"PVi\"";
	 flags=;
	 var_expr="\"PVi\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$46$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.LVe.units[0].act_p2";
	 flags=;
	 var_expr="$#0#$.layers.LVe.units[0].act_p2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"LVe\"";
	 flags=;
	 var_expr="\"LVe\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$46$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.LVi.units[0].act_p2";
	 flags=;
	 var_expr="$#0#$.layers.LVi.units[0].act_p2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"LVi\"";
	 flags=;
	 var_expr="\"LVi\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[7] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$46$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="fabs(network.layers.DA.units[0].act_p2)";
	 flags=;
	 var_expr="fabs($#0#$.layers.DA.units[0].act_p2)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"absDA\"";
	 flags=;
	 var_expr="\"absDA\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[8] {
      desc="update after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$46$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[9] {
      desc="only functional for dmem projects: synchronizes trial data across processes";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].args[0]$47$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	expr {
	 expr="1";
	 flags=;
	 var_expr="1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[8] {
    name="LeabraEpochMonitorPVLV";
    tags=;
    desc="monitor epoch-level data from the network";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="Leabra_cur_lrate";
	computed=0;
	object_type=LeabraConSpec;
	object=.projects[0].networks[0].specs[3]$48$;
	variable="cur_lrate";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[9] {
	name="A_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[10] {
	name="B_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[11] {
	name="C_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[12] {
	name="one_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[13] {
	name="two_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[14] {
	name="X_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[15] {
	name="Y_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[16] {
	name="Z_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=.projects[0].data.gp[1][1]$49$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$49$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][8].objs[0]$50$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$16$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="grouped_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].programs.gp[2][0].objs[0]$51$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=AssignExpr;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][8].vars[2]$52$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[1]$53$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="epoch_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ epoch_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$53$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$53$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[0]$54$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=;
      result_var=NULL;
      obj=$53$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     AssignExpr @[2] {
      desc=;
      flags=;
      result_var=$52$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     UserScript @[3] {
      desc="set the timing information from the epoch timer";
      flags=;
      script {
       expr="epoch_mon_data.SetDataByName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\");
epoch_mon_data.SetDataByName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\");

";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$.SetDataByName($#1#$.used.GetTotSecs(), \"epoch_time_tot\");
epoch_mon_data.SetDataByName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\");

";
       vars {
       };
       var_names{ epoch_mon_data;epoch_timer;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 0)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 0)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"A_da\"";
	 flags=;
	 var_expr="\"A_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 1)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 1)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"B_da\"";
	 flags=;
	 var_expr="\"B_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 2)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 2)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"C_da\"";
	 flags=;
	 var_expr="\"C_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[7] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 3)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 3)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"one_da\"";
	 flags=;
	 var_expr="\"one_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[8] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 4)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 4)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"two_da\"";
	 flags=;
	 var_expr="\"two_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[9] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 5)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 5)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"X_da\"";
	 flags=;
	 var_expr="\"X_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[10] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 6)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 6)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"Y_da\"";
	 flags=;
	 var_expr="\"Y_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     IfElse @[11] {
      desc=;
      flags=NON_STD;
      cond {
       expr="grouped_data.data.size > 6";
       flags=;
       var_expr="$#0#$.data.size > 6";
       vars {
       };
       var_names{ grouped_data;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=NON_STD;
	result_var=NULL;
	obj=$54$;
	method=DataBlock::SetDataByName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="data";
	  required=0;
	  def_val=;
	  expr {
	   expr="grouped_data.GetValColName(\"DA_mean\", 7)";
	   flags=;
	   var_expr="$#0#$.GetValColName(\"DA_mean\", 7)";
	   vars {
	   };
	   var_names{ grouped_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="ch_nm";
	  required=0;
	  def_val="\"\"";
	  expr {
	   expr="\"Z_da\"";
	   flags=;
	   var_expr="\"Z_da\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=NON_STD;
	result_var=NULL;
	obj=$54$;
	method=DataBlock::SetDataByName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="data";
	  required=0;
	  def_val=;
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="ch_nm";
	  required=0;
	  def_val="\"\"";
	  expr {
	   expr="\"Z_da\"";
	   flags=;
	   var_expr="\"Z_da\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
     };
     MethodCall @[12] {
      desc="update after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$54$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[9] {
    name="SaveWeights";
    tags=;
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="tag";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided tag (startup script will set this!)";
     };
     ProgVar @[1] {
      name="wts_subdir";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided subdirectory to save weights in";
     };
     ProgVar @[2] {
      name="fname";
      var_type=T_String;
      string_val="/Users/oreilly/pdp4.0/trunk/test/leabra_ra.03_0036.wts.gz";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="final generated file name -- do not edit!";
     };
     ProgVar @[3] {
      name="epoch_str";
      var_type=T_String;
      string_val="0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of epoch with leading zeros";
     };
     ProgVar @[4] {
      name="batch_str";
      var_type=T_String;
      string_val="03";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of batch with leading zeros";
     };
     ProgVar @[5] {
      name="final_tag";
      var_type=T_String;
      string_val=".03_0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="batch + epoch";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     IfElse @[0] {
      desc="don't save if not first dmem process";
      flags=;
      cond {
       expr="taMisc::dmem_proc > 0";
       flags=;
       var_expr="taMisc::dmem_proc > 0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       UserScript @[0] {
	desc=;
	flags=;
	script {
	 expr="return;";
	 flags=NO_VAR_ERRS;
	 var_expr="return;";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ return;	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MiscCall @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[4]$55$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="2";
	 flags=;
	 var_expr="2";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MiscCall @[2] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[3]$56$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.epoch";
	 flags=;
	 var_expr="$#0#$.epoch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="4";
	 flags=;
	 var_expr="4";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[5]$57$;
      expr {
       expr="tag + \".\" + batch_str + \"_\" + epoch_str";
       flags=;
       var_expr="$#0#$ + \".\" + batch_str + \"_\" + epoch_str";
       vars {
       };
       var_names{ tag;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[2]$58$;
      obj=.projects[0].programs.gp[0][9].args[0]$59$;
      method=taBase::GetFileNameFmProject;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ext";
	required=1;
	def_val=;
	expr {
	 expr="\".wts.gz\"";
	 flags=;
	 var_expr="\".wts.gz\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="tag";
	required=0;
	def_val="\"\"";
	expr {
	 expr="final_tag";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ final_tag;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="subdir";
	required=0;
	def_val="\"\"";
	expr {
	 expr="wts_subdir";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ wts_subdir;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="dmem_proc_no";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$59$;
      method=Network::SaveWeights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	expr {
	 expr="fname";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ fname;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network::WtSaveFormat;
	type="Network::WtSaveFormat";
	name="fmt";
	required=0;
	def_val="Network::NET_FMT";
	expr {
	 expr="Network::NET_FMT";
	 flags=;
	 var_expr="Network::NET_FMT";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
  };
  Program_Group @.gp[1] {
   name="CPT12axAll";
   el_typ=Program;
   el_def=0;
   step_prog=.projects[0].programs.gp[1][1]$60$;
   tags=;
   desc="Generate InputData for 12-AX CPT task: Epoch + Trial";
   Program @[0] {
    name="CPT12axEpoch";
    tags=;
    desc="Generate a full epoch's worth of trials for the 12-AX CPT task";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="n_per_epc";
      var_type=T_Int;
      int_val=25;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of trials (cue-probe pairs) per epoch";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_no";
      var_type=T_Int;
      int_val=25;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[1][0].args[0]$61$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ForLoop @[1] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=$60$;
	targ_ld_init="*12axTrial*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=int;
	  type="int";
	  name="trial_no";
	  required=1;
	  def_val=;
	  expr {
	   expr="trial_no";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ trial_no;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
      init {
       expr="trial_no = 0";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$ = 0";
       vars {
       };
       var_names{ trial_no;       };
       bad_vars{        };
      };
      test {
       expr="trial_no < n_per_epc";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ trial_no;n_per_epc;       };
       bad_vars{        };
      };
      iter {
       expr="trial_no++";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$++";
       vars {
       };
       var_names{ trial_no;       };
       bad_vars{        };
      };
     };
    };
   };
   Program @[1] {
    name="CPT12axTrial";
    tags=;
    desc="Generate one trial (outer loop with multiple inner loops) of the 12-AX CPT Task";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @[0] {
      name="Input";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="I_A";
	value=0;
	desc=;
       };
       DynEnumItem @[1] {
	name="I_B";
	value=1;
	desc=;
       };
       DynEnumItem @[2] {
	name="I_C";
	value=2;
	desc=;
       };
       DynEnumItem @[3] {
	name="I_X";
	value=3;
	desc=;
       };
       DynEnumItem @[4] {
	name="I_Y";
	value=4;
	desc=;
       };
       DynEnumItem @[5] {
	name="I_Z";
	value=5;
	desc=;
       };
       DynEnumItem @[6] {
	name="I_ONE";
	value=6;
	desc=;
       };
       DynEnumItem @[7] {
	name="I_TWO";
	value=7;
	desc=;
       };
       DynEnumItem @[8] {
	name="I_THREE";
	value=8;
	desc=;
       };
      };
      bits=0;
     };
     DynEnumType @[1] {
      name="Output";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="O_L";
	value=0;
	desc=;
       };
       DynEnumItem @[1] {
	name="O_R";
	value=1;
	desc=;
       };
      };
      bits=0;
     };
     DynEnumType @[2] {
      name="RewTarg";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="R_rew_targ";
	value=0;
	desc=;
       };
      };
      bits=0;
     };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="trial_no";
      var_type=T_Int;
      int_val=25;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="trial number, for making group names unique";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_maint";
      var_type=T_Int;
      int_val=4;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="maximum maintenance duration for outer loop";
     };
     ProgVar @[1] {
      name="targ_pct";
      var_type=T_Real;
      real_val=0.5;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="percent (proportion) of trials that are targets";
     };
     ProgVar @[2] {
      name="n_stims";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of different stimulus types (cues, probes, tasks) -- must match current input config!";
     };
     ProgVar @[3] {
      name="n_inner_trials";
      var_type=T_Int;
      int_val=2;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of inner-loop trials";
     };
     ProgVar @[4] {
      name="task";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects[0].programs.gp[1][1].types[0]$62$;
       value=7;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="outer-loop task stimulus";
     };
     ProgVar @[5] {
      name="cue";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=$62$;
       value=1;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="first stimulus in cue-probe pair";
     };
     ProgVar @[6] {
      name="probe";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=$62$;
       value=4;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="second stimulus in cue-probe pair";
     };
     ProgVar @[7] {
      name="output";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects[0].programs.gp[1][1].types[1]$63$;
       value=0;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="output responses";
     };
     ProgVar @[8] {
      name="group_name";
      var_type=T_String;
      string_val="24_I_TWO";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="name of current group of trials";
     };
     ProgVar @[9] {
      name="unit_names";
      var_type=T_Object;
      object_type=taOBase;
      object_val=.projects[0].data.gp[0][1]$64$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[10] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=Function;
     el_def=0;
     Function @[0] {
      desc=;
      flags=;
      return_val {
       name="rval";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=CTRL_PANEL|NULL_CHECK;
       desc=;
      };
      name="MakeEvent";
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="group";
	var_type=T_String;
	string_val=;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="name for the group column";
       };
       ProgVar @[1] {
	name="in_idx";
	var_type=T_DynEnum;
	dyn_enum_val {
	 enum_type=$62$;
	 value=-1;
	};
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="Index of input unit to turn on";
       };
       ProgVar @[2] {
	name="out_idx";
	var_type=T_DynEnum;
	dyn_enum_val {
	 enum_type=$63$;
	 value=0;
	};
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="Index of output unit to turn on";
       };
       ProgVar @[3] {
	name="rew_targ";
	var_type=T_Bool;
	bool_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="is this a reward target trial?";
       };
      };
      fun_code {
       name=;
       el_typ=AddNewDataRow;
       el_def=0;
       AddNewDataRow @[0] {
	desc=;
	flags=;
	data_var=.projects[0].programs.gp[1][1].args[0]$65$;
       };
       MethodCall @[1] {
	desc="set the task name ";
	flags=;
	result_var=NULL;
	obj=$65$;
	method=DataTable::SetValColName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="val";
	  required=0;
	  def_val=;
	  expr {
	   expr="group";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ group;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="col_name";
	  required=0;
	  def_val="\"\"";
	  expr {
	   expr="\"Group\"";
	   flags=;
	   var_expr="\"Group\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="row";
	  required=0;
	  def_val=;
	  expr {
	   expr="-1";
	   flags=;
	   var_expr="-1";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       SetUnitsVar @[2] {
	desc=;
	flags=;
	input_data_var=$65$;
	set_nm=1;
	offset=NULL;
	unit_1=.projects[0].programs.gp[1][1].functions[0].args[1]$66$;
	unit_2=NULL;
	unit_3=NULL;
	unit_4=NULL;
       };
       SetUnitsVar @[3] {
	desc=;
	flags=;
	input_data_var=$65$;
	set_nm=1;
	offset=NULL;
	unit_1=.projects[0].programs.gp[1][1].functions[0].args[2]$67$;
	unit_2=NULL;
	unit_3=NULL;
	unit_4=NULL;
       };
       IfElse @[4] {
	desc=;
	flags=;
	cond {
	 expr="rew_targ";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ rew_targ;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=SetUnitsLit;
	 el_def=0;
	 SetUnitsLit @[0] {
	  desc=;
	  flags=;
	  input_data_var=$65$;
	  set_nm=0;
	  offset=0;
	  unit_1 {
	   enum_type=.projects[0].programs.gp[1][1].types[2]$68$;
	   value=0;
	  };
	  unit_2 {
	   enum_type=NULL;
	   value=-1;
	  };
	  unit_3 {
	   enum_type=NULL;
	   value=-1;
	  };
	  unit_4 {
	   enum_type=NULL;
	   value=-1;
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	};
       };
      };
     };
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     InitNamedUnits @[0] {
      desc=;
      flags=;
      input_data_var=$65$;
      unit_names_var=.projects[0].programs.gp[1][1].vars[9]$69$;
      network_var=.projects[0].programs.gp[1][1].vars[10]$70$;
      init_label_net=1;
      n_lay_name_chars=1;
     };
    };
    prog_code {
     name=;
     el_typ=UserScript;
     el_def=0;
     RandomCall @[0] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[1][1].vars[4]$71$;
      object_type=Random;
      method=Random::IntZeroN;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="n";
	required=0;
	def_val=;
	expr {
	 expr="2";
	 flags=;
	 var_expr="2";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     VarIncr @[1] {
      desc="add starting task offset";
      flags=;
      var=$71$;
      expr {
       expr="I_ONE";
       flags=;
       var_expr="I_ONE";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     RandomCall @[2] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[1][1].vars[3]$72$;
      object_type=Random;
      method=Random::IntMinMax;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="min";
	required=0;
	def_val=;
	expr {
	 expr="1";
	 flags=;
	 var_expr="1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="max";
	required=0;
	def_val=;
	expr {
	 expr="max_maint";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ max_maint;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[1][1].vars[8]$73$;
      expr {
       expr="(String)trial_no + \"_\" + (String)task";
       flags=;
       var_expr="(String)$#0#$ + \"_\" + (String)task";
       vars {
       };
       var_names{ trial_no;       };
       bad_vars{        };
      };
     };
     FunctionCall @[4] {
      desc="Create the Task Event";
      flags=;
      result_var=NULL;
      fun=.projects[0].programs.gp[1][1].functions[0]$74$;
      fun_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taString;
	type="String";
	name="group";
	required=1;
	def_val=;
	expr {
	 expr="group_name";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ group_name;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=DynEnum;
	type="Input";
	name="in_idx";
	required=1;
	def_val=;
	expr {
	 expr="task";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ task;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=DynEnum;
	type="Output";
	name="out_idx";
	required=1;
	def_val=;
	expr {
	 expr="O_L";
	 flags=;
	 var_expr="O_L";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="rew_targ";
	required=1;
	def_val=;
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     ForLoop @[5] {
      desc="generate the cue-probe trials";
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgVars @[0] {
	desc=;
	flags=;
	local_vars {
	 name=;
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @[0] {
	  name="trg_rnd_prob";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=CTRL_PANEL|NULL_CHECK;
	  desc="random probability value for generating a target";
	 };
	 ProgVar @[1] {
	  name="a_or_b";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=CTRL_PANEL|NULL_CHECK;
	  desc="random A or B cue/probe value";
	 };
	 ProgVar @[2] {
	  name="probe_output";
	  var_type=T_DynEnum;
	  dyn_enum_val {
	   enum_type=$63$;
	   value=-1;
	  };
	  objs_ptr=0;
	  flags=CTRL_PANEL|NULL_CHECK;
	  desc="output value for the probe trial: depends on whether this is a target cue-probe sequence for given task";
	 };
	};
       };
       RandomCall @[1] {
	desc=;
	flags=;
	result_var=.projects[0].programs.gp[1][1].prog_code[5].loop_code[0].local_vars[0]$75$;
	object_type=Random;
	method=Random::ZeroOne;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       IfElse @[2] {
	desc=;
	flags=;
	cond {
	 expr="trg_rnd_prob < targ_pct";
	 flags=;
	 var_expr="$#0#$ < $#1#$";
	 vars {
	 };
	 var_names{ trg_rnd_prob;targ_pct;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 RandomCall @[0] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].prog_code[5].loop_code[0].local_vars[1]$76$;
	  object_type=Random;
	  method=Random::IntZeroN;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="n";
	    required=0;
	    def_val=;
	    expr {
	     expr="2";
	     flags=;
	     var_expr="2";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].vars[5]$77$;
	  expr {
	   expr="I_A + a_or_b";
	   flags=;
	   var_expr="I_A + $#0#$";
	   vars {
	   };
	   var_names{ a_or_b;	   };
	   bad_vars{ 	   };
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].vars[6]$78$;
	  expr {
	   expr="I_X + a_or_b";
	   flags=;
	   var_expr="I_X + $#0#$";
	   vars {
	   };
	   var_names{ a_or_b;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 RandomCall @[0] {
	  desc=;
	  flags=;
	  result_var=$77$;
	  object_type=Random;
	  method=Random::IntMinMax;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="min";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_A";
	     flags=;
	     var_expr="I_A";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="max";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_C+1";
	     flags=;
	     var_expr="I_C+1";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 RandomCall @[1] {
	  desc=;
	  flags=;
	  result_var=$78$;
	  object_type=Random;
	  method=Random::IntMinMax;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="min";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_X";
	     flags=;
	     var_expr="I_X";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="max";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_Z+1";
	     flags=;
	     var_expr="I_Z+1";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	};
       };
       IfElse @[3] {
	desc="check for targets";
	flags=;
	cond {
	 expr="((task == I_ONE) && (cue == I_A) && (probe == I_X)) 
  || ((task == I_TWO) && (cue == I_B) && (probe == I_Y))";
	 flags=;
	 var_expr="(($#0#$ == I_ONE) && ($#1#$ == I_A) && ($#2#$ == I_X)) 
  || (($#0#$ == I_TWO) && ($#1#$ == I_B) && ($#2#$ == I_Y))";
	 vars {
	 };
	 var_names{ task;cue;probe;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].prog_code[5].loop_code[0].local_vars[2]$79$;
	  expr {
	   expr="O_R";
	   flags=;
	   var_expr="O_R";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=;
	  result_var=$79$;
	  expr {
	   expr="O_L";
	   flags=;
	   var_expr="O_L";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       FunctionCall @[4] {
	desc="Create the Cue Event";
	flags=;
	result_var=NULL;
	fun=$74$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taString;
	  type="String";
	  name="group";
	  required=1;
	  def_val=;
	  expr {
	   expr="group_name";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ group_name;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DynEnum;
	  type="Input";
	  name="in_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="cue";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ cue;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=DynEnum;
	  type="Output";
	  name="out_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="O_L";
	   flags=;
	   var_expr="O_L";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="rew_targ";
	  required=1;
	  def_val=;
	  expr {
	   expr="false";
	   flags=;
	   var_expr="false";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       FunctionCall @[5] {
	desc="Create the Probe Event";
	flags=;
	result_var=NULL;
	fun=$74$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taString;
	  type="String";
	  name="group";
	  required=1;
	  def_val=;
	  expr {
	   expr="group_name";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ group_name;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DynEnum;
	  type="Input";
	  name="in_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="probe";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ probe;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=DynEnum;
	  type="Output";
	  name="out_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="probe_output";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ probe_output;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="rew_targ";
	  required=1;
	  def_val=;
	  expr {
	   expr="true";
	   flags=;
	   var_expr="true";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       DoneWritingDataRow @[6] {
	desc=;
	flags=;
	data_var=$65$;
       };
      };
      init {
       expr="int i = 0";
       flags=NO_VAR_ERRS;
       var_expr="int i = 0";
       vars {
       };
       var_names{        };
       bad_vars{ i;       };
      };
      test {
       expr="i < n_inner_trials";
       flags=NO_VAR_ERRS;
       var_expr="i < $#0#$";
       vars {
       };
       var_names{ n_inner_trials;       };
       bad_vars{ i;       };
      };
      iter {
       expr="i++";
       flags=NO_VAR_ERRS;
       var_expr="i++";
       vars {
       };
       var_names{        };
       bad_vars{ i;       };
      };
     };
    };
   };
  };
  Program_Group @.gp[2] {
   name="Analysis";
   el_typ=Program;
   el_def=0;
   step_prog=NULL;
   tags=;
   desc=;
   Program @[0] {
    name="TrialAnal";
    tags=;
    desc=;
    flags=;
    objs {
     name=;
     el_typ=DataTable;
     el_def=0;
     DataTable @[0] {
      name="grouped_data";
      desc=;
      data {
       name="data";
       el_typ=DataColTp;
       el_def=0;
       String_Data @[0] {
	name="trial_name_group";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] "A";"B";"C";"ONE";"TWO";"X";"Y";"Z";	};
       };
       float_Data @[1] {
	name="DA_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.2266241;0.20783095;0.5452131;0.21827407;0.50071144;0.90483147;0.92722332;0.13256183;	};
       };
       float_Data @[2] {
	name="LVe_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.5575031;0.69977909;0.91872871;0.55977631;0.7880283;0.52222615;0.62819809;0.99081963;	};
       };
       float_Data @[3] {
	name="LVi_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.53857672;0.55118924;0.55422074;0.54253411;0.53767264;0.55457026;0.62370265;0.64869857;	};
       };
       float_Data @[4] {
	name="PVe_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.5;0.5;0.5;0.5;0.5;0.54166669;0.69999999;1;	};
       };
       float_Data @[5] {
	name="PVi_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.50091547;0.50084591;0.50300568;0.50166041;0.50187176;0.49331567;0.61281425;0.9344641;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$15$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="grouped_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$51$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     DataGroupProg @[0] {
      desc=;
      flags=;
      src_data_var=.projects[0].programs.gp[2][0].args[0]$80$;
      dest_data_var=.projects[0].programs.gp[2][0].vars[0]$81$;
      group_spec {
       name="group_spec";
       ops {
	name=;
	el_typ=DataGroupEl;
	el_def=0;
	DataGroupEl @[0] {
	 col_name="trial_name";
	 agg {name="": op=GROUP: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[1] {
	 col_name="DA";
	 agg {name="": op=MEAN: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[2] {
	 col_name="LVe_dav";
	 agg {name="": op=MEAN: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[3] {
	 col_name="LVe";
	 agg {name="": op=MEAN: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[4] {
	 col_name="LVi";
	 agg {name="": op=MEAN: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[5] {
	 col_name="PVe";
	 agg {name="": op=MEAN: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[6] {
	 col_name="PVi";
	 agg {name="": op=MEAN: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
       };
      };
     };
    };
   };
  };
 };
 viewers {
  name=;
  el_typ=TopLevelViewer;
  el_def=0;
  MainWindowViewer @[0] {
   m_data=.projects[0]$82$;
   name="DefaultProjectBrowser";
   visible=1;
   m_is_root=0;
   m_is_proj_viewer=1;
   toolbars {
    name=;
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     m_data=NULL;
     name="Application";
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name=;
    el_typ=FrameViewer;
    el_def=0;
    tabBrowseViewer @[0] {
     m_data=NULL;
     name="Tree";
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$82$;
    };
    PanelViewer @[1] {
     m_data=NULL;
     name="Panels";
     visible=1;
    };
    T3DataViewer @[2] {
     m_data=NULL;
     name="DefaultViewer";
     visible=1;
     frames {
      name=;
      el_typ=T3DataViewFrame;
      el_def=0;
      T3DataViewFrame @[0] {
       m_data=NULL;
       name="DefaultFrame";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 NetView @[0] {
	  m_data=$1$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  lay_disp_modes{ RewTarg=0;PVe=0;PVi=0;LVe=0;LVi=0;DA=0;Hidden=0;Input=1;Output=1;SNc=0;Striatum=0;SNrThal=0;PFC=1;	  };
	  scale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs[0]$83$;
	   auto_scale=0;
	  };
	  scale_ranges {
	   name=;
	   el_typ=ScaleRange;
	   el_def=0;
	   ScaleRange @[0] {
	    name="act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[1] {
	    name="r_wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[2] {
	    name="r_effwt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[3] {
	    name="r_wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[4] {
	    name="r_wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[5] {
	    name="r.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	  };
	  display=1;
	  ordered_uvg_list{ act;	  };
	  unit_disp_mode=UDM_BLOCK;
	  unit_text_disp=UTD_NAMES;
	  max_size {x=28: y=7: z=3: };
	  font_sizes {
	   net_name=0.05;
	   net_vals=0.05;
	   layer=0.04;
	   layer_vals=0.03;
	   prjn=0.01;
	   unit=0.02;
	   un_nm_len=3;
	  };
	  view_params {
	   xy_square=0;
	   unit_spacing=0.05;
	   prjn_disp=L_R_B;
	   prjn_name=0;
	   prjn_width=0.002;
	   prjn_trans=0.5;
	   lay_trans=0.5;
	   unit_trans=0.6;
	  };
	 };
	 GraphTableView @[1] {
	  m_data=$49$;
FloatTransform @*(.m_transform) {scale={x=0.3925664: y=0.3925664: z=0.3925673: }: rotate={x=-0.2682432: y=-0.93387: z=0.2365169: rot=0.3240047: }: translate={x=0.9459667: y=0.4937758: z=-0.09619626: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=.projects[0].data.gp[1][1].data[0]$84$;
	    m_transform=NULL;
	    name="batch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=.projects[0].data.gp[1][1].data[1]$85$;
	    m_transform=NULL;
	    name="epoch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=.projects[0].data.gp[1][1].data[2]$86$;
	    m_transform=NULL;
	    name="avg_sse";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=.projects[0].data.gp[1][1].data[3]$87$;
	    m_transform=NULL;
	    name="cnt_err";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    m_data=.projects[0].data.gp[1][1].data[4]$88$;
	    m_transform=NULL;
	    name="avg_ext_rew";
	    visible=1;
	    fixed_range {fix_min=0: min=0.6666667: fix_max=0: max=0.8679245: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    m_data=.projects[0].data.gp[1][1].data[5]$89$;
	    m_transform=NULL;
	    name="avg_cycles";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    m_data=.projects[0].data.gp[1][1].data[6]$90$;
	    m_transform=NULL;
	    name="Leabra_cur_lrate";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    m_data=.projects[0].data.gp[1][1].data[7]$91$;
	    m_transform=NULL;
	    name="epoch_time_tot";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    m_data=.projects[0].data.gp[1][1].data[8]$92$;
	    m_transform=NULL;
	    name="epoch_time_usr";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    m_data=.projects[0].data.gp[1][1].data[9]$93$;
	    m_transform=NULL;
	    name="A_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    m_data=.projects[0].data.gp[1][1].data[10]$94$;
	    m_transform=NULL;
	    name="B_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    m_data=.projects[0].data.gp[1][1].data[11]$95$;
	    m_transform=NULL;
	    name="C_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    m_data=.projects[0].data.gp[1][1].data[12]$96$;
	    m_transform=NULL;
	    name="one_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    m_data=.projects[0].data.gp[1][1].data[13]$97$;
	    m_transform=NULL;
	    name="two_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[14] {
	    m_data=.projects[0].data.gp[1][1].data[14]$98$;
	    m_transform=NULL;
	    name="X_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[15] {
	    m_data=.projects[0].data.gp[1][1].data[15]$99$;
	    m_transform=NULL;
	    name="Y_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[16] {
	    m_data=.projects[0].data.gp[1][1].data[16]$100$;
	    m_transform=NULL;
	    name="Z_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=0.3925664: y=0.3925664: z=0.3925673: }: rotate={x=-0.2682432: y=-0.93387: z=0.2365169: rot=0.3240047: }: translate={x=0.9459667: y=0.4937758: z=-0.09619626: }: };
	  view_rows=10000;
	  view_range {min=0: max=-1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="epoch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=-1: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-1: max=0: };
	   range {min=-1: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="batch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-07: max=6e-07: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="cnt_err";
	   fixed_range {fix_min=1: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.2: max=0.2: };
	   range {min=0: max=0.25: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="one_da";
	   fixed_range {fix_min=1: min=-0.2: fix_max=1: max=0.2: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.2: max=0.2: };
	   range {min=-0.2: max=0.2: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=LINE;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=VALUE_COLOR;
	  negative_draw=0;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$83$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=0.5947207: y=1.178612: z=1.567097: };
       camera_orient {x=-0.9979199: y=-0.06215869: z=0.01709492: rot=0.4894839: };
       camera_focdist=2.281613;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[1] {
       m_data=NULL;
       name="grouped_data";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GraphTableView @[0] {
	  m_data=$51$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[0]$101$;
	    m_transform=NULL;
	    name="trial_name_group";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[1]$102$;
	    m_transform=NULL;
	    name="DA_mean";
	    visible=1;
	    fixed_range {fix_min=1: min=-0.5: fix_max=0: max=0.9272233: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[2]$103$;
	    m_transform=NULL;
	    name="LVe_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[3]$104$;
	    m_transform=NULL;
	    name="LVi_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[4]$105$;
	    m_transform=NULL;
	    name="PVe_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[5]$106$;
	    m_transform=NULL;
	    name="PVi_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=7: };
	  display_on=1;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="trial_name_group";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=7: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=7: };
	   range {min=0: max=7: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="DA_mean";
	   fixed_range {fix_min=1: min=-0.5: fix_max=0: max=0.9272233: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.5: max=0.9272233: };
	   range {min=-0.5: max=0.9272233: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="trial_name_group";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="trial_name_group";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-07: max=6e-07: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=LINE;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=VALUE_COLOR;
	  negative_draw=0;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=-1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$83$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=1.472: y=0.4689445: z=1.732879: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=1.732879;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[2] {
       m_data=NULL;
       name="TrainEnv_0";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GridTableView @[0] {
	  m_data=$2$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].data.gp[0][0].data[0]$107$;
	    m_transform=NULL;
	    name="Group";
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].data.gp[0][0].data[1]$108$;
	    m_transform=NULL;
	    name="Name";
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].data.gp[0][0].data[2]$109$;
	    m_transform=NULL;
	    name="Input";
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[3] {
	    m_data=.projects[0].data.gp[0][0].data[3]$110$;
	    m_transform=NULL;
	    name="Output";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[4] {
	    m_data=.projects[0].data.gp[0][0].data[4]$111$;
	    m_transform=NULL;
	    name="RewTarg";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=5;
	  view_range {min=126: max=128: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=5;
	  col_range {min=0: max=4: };
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$83$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	 };
	 GridTableView @[1] {
	  m_data=$64$;
FloatTransform @*(.m_transform) {scale={x=0.33: y=0.33: z=0.33: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.997542: y=1.13: z=1.47522e-08: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].data.gp[0][1].data[0]$112$;
	    m_transform=NULL;
	    name="Input";
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].data.gp[0][1].data[1]$113$;
	    m_transform=NULL;
	    name="Output";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].data.gp[0][1].data[2]$114$;
	    m_transform=NULL;
	    name="RewTarg";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=0.33: y=0.33: z=0.33: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.997542: y=1.13: z=1.47522e-08: }: };
	  view_rows=1;
	  view_range {min=0: max=0: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=2;
	  col_range {min=0: max=1: };
	  width=3.3;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=1;
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$83$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	 };
	};
       };
       camera_pos {x=1.538475: y=0.699: z=1.79147: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=1.71397;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
     };
    };
   };
   docks {
    name=;
    el_typ=DockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     m_data=NULL;
     name="Tools";
     visible=1;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 use_change_log=0;
 last_change_desc=;
 networks {
  name=;
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   name="net_lv_delta";
   desc=;
   specs {
    name=;
    el_typ=LeabraUnitSpec;
    el_def=0;
    DaModUnitSpec @[0] {
     name="DaModUnitSpec_0";
     desc=;
     unique{ opt_thresh;     };
     children {
      name=;
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs[3].children[0]$115$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
     spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
     depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
     opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=1: range=1: scale=1: };
     v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
     dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
     g_bar {e=1: l=0.1: i=1: h=0.1: a=0.5: };
     e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
     hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=1: trl=0: };
     acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=1: trl=0: };
     act_reg {on=0: min=0.001: max=0.35: wt_dt=0.2: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     noise_type=NO_NOISE;
     noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
     noise_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=1;
      cur_val=0;
     };
     da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
    };
    LeabraLayerSpec @[1] {
     name="Hidden";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraLayerSpec;
      el_def=0;
      LeabraLayerSpec @[0] {
       name="Input";
       desc=;
       unique{ kwta;inhib_group;compute_i;i_kwta_pt;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       inhib_group=ENTIRE_LAYER;
       kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       compute_i=KWTA_INHIB;
       i_kwta_pt=0.25;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
       net_rescale {on=0: max_net=0.8: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
      LeabraLayerSpec @[1] {
       name="Output";
       desc=;
       unique{ kwta;inhib_group;compute_i;i_kwta_pt;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       inhib_group=ENTIRE_LAYER;
       kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       compute_i=KWTA_INHIB;
       i_kwta_pt=0.25;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
       net_rescale {on=0: max_net=0.8: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
     };
     inhib_group=ENTIRE_LAYER;
     kwta {k_from=USE_PCT: k=12: pct=0.15: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     compute_i=KWTA_AVG_INHIB;
     i_kwta_pt=0.6;
     gp_i_pt=0.2;
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: d_gain=0: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
     net_rescale {on=0: max_net=0.8: net_extra=0.2: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.05;
     };
    };
    FullPrjnSpec @[2] {
     name="FullPrjnSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
    };
    LeabraConSpec @[3] {
     name="LeabraConSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraConSpec;
      el_def=0;
      LeabraBiasSpec @[0] {
       name="LeabraBiasSpec_0";
       desc=;
       unique{ rnd;wt_limits;wt_scale;dwt_thresh;       };
       children {
	name=;
	el_typ=LeabraBiasSpec;
	el_def=0;
       };
       rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
       wt_limits {type=NONE: min=-1: max=5: sym=0: };
       inhib=0;
       wt_scale {abs=1: rel=1: };
       wt_scale_init {init=0: abs=1: rel=1: };
       wt_sig {gain=6: off=1.25: };
       lrate=0.01;
       cur_lrate=0.01;
       lrs_value=EXT_REW_STAT;
       lrate_sched {
	name=;
	el_typ=SchedItem;
	el_def=0;
	last_ctr=-1;
	default_val=1;
	interpolate=0;
	cur_val=1;
	SchedItem @[0] {
	 start_ctr=0;
	 start_val=1;
	 duration=90;
	 step=-0.01;
	};
	SchedItem @[1] {
	 start_ctr=90;
	 start_val=0.1;
	 duration=1;
	 step=1;
	};
       };
       lmix {hebb=0.001: err=0.999: err_sb=1: };
       savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.05;
       };
       dwt_thresh=0.1;
      };
     };
     rnd {name="": type=UNIFORM: mean=0.5: var=0.25: par=1: };
     wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
     inhib=0;
     wt_scale {abs=1: rel=1: };
     wt_scale_init {init=0: abs=1: rel=1: };
     wt_sig {gain=6: off=1.25: };
     lrate=0.01;
     cur_lrate=0.01;
     lrs_value=EXT_REW_STAT;
     lrate_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=0;
      cur_val=1;
      SchedItem @[0] {
       start_ctr=0;
       start_val=1;
       duration=90;
       step=-0.01;
      };
      SchedItem @[1] {
       start_ctr=90;
       start_val=0.1;
       duration=1;
       step=1;
      };
     };
     lmix {hebb=0.001: err=0.999: err_sb=1: };
     savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.05;
     };
    };
    BaseSpec_Group @.gp[0] {
     name="PFC_BG_Units";
     el_typ=DaModUnitSpec;
     el_def=0;
     DaModUnitSpec @[0] {
      name="PVUnits";
      desc=;
      unique{ act_fun;act;opt_thresh;dt;g_bar;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
       DaModUnitSpec @[0] {
	name="LVUnits";
	desc=;
	unique{ 	};
	children {
	 name=;
	 el_typ=DaModUnitSpec;
	 el_def=0;
	};
	act_range {min=0: max=1: range=1: scale=1: };
	bias_con_type=LeabraCon;
	bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1]$116$: };
	sse_tol=0.5;
	act_fun=NOISY_LINEAR;
	act {thr=0.17: gain=220: nvar=0.01: avg_dt=0: send_delta=1: i_thr=STD: };
	spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
	depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
	opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
	clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
	vm_range {min=0: max=1: range=1: scale=1: };
	v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
	dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=100: vm_eq_dt=1: };
	g_bar {e=1: l=0.1: i=1: h=0.03: a=0.09: };
	e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
	hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
	acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
	act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
	maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
	noise_type=NO_NOISE;
	noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
	noise_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=1;
	 cur_val=0;
	};
	da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
       };
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=$116$: };
      sse_tol=0.5;
      act_fun=NOISY_LINEAR;
      act {thr=0.17: gain=220: nvar=0.01: avg_dt=0: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=100: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.03: a=0.09: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
      acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
     DaModUnitSpec @[1] {
      name="DaUnits";
      desc=;
      unique{ act_range;act;clamp_range;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
      };
      act_range {min=-2: max=2: range=4: scale=0.25: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1].children[0]$117$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=600: nvar=0.005: avg_dt=0: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
      clamp_range {min=-2: max=2: range=4: scale=0.25: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
      acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
     DaModUnitSpec @[2] {
      name="PFCUnits";
      desc=;
      unique{ g_bar;act_reg;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[2].children[1]$118$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.1: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=1: a=2: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
      acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
     MatrixUnitSpec @[3] {
      name="MatrixUnits";
      desc=;
      unique{ bias_spec;opt_thresh;g_bar;      };
      children {
       name=;
       el_typ=MatrixUnitSpec;
       el_def=0;
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=MatrixBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1].children[1]$119$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
      acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
      freeze_net=1;
     };
     DaModUnitSpec @[4] {
      name="SNrThalUnits";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=$115$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=20: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.1: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
      acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
    };
    BaseSpec_Group @.gp[1] {
     name="PFC_BG_Cons";
     el_typ=LeabraConSpec;
     el_def=0;
     LeabraConSpec @[0] {
      name="LearnCons";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=PVConSpec;
       el_def=0;
       PVConSpec @[0] {
	name="PVi";
	desc=;
	unique{ rnd;wt_limits;wt_sig;lrate;lrs_value;lrate_sched;lmix;	};
	children {
	 name=;
	 el_typ=PVConSpec;
	 el_def=0;
	 PVConSpec @[0] {
	  name="LVeD";
	  desc=;
	  unique{ lmix;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	  };
	  children {
	   name=;
	   el_typ=PVConSpec;
	   el_def=0;
	   PVConSpec @[0] {
	    name="LViD";
	    desc=;
	    unique{ lmix;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	    };
	    children {
	     name=;
	     el_typ=PVConSpec;
	     el_def=0;
	    };
	    rnd {name="": type=UNIFORM: mean=0.1: var=0: par=1: };
	    wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	    inhib=0;
	    wt_scale {abs=1: rel=1: };
	    wt_scale_init {init=0: abs=1: rel=1: };
	    wt_sig {gain=1: off=1: };
	    lrate=0.001;
	    cur_lrate=0.001;
	    lrs_value=NO_LRS;
	    lrate_sched {
	     name=;
	     el_typ=SchedItem;
	     el_def=0;
	     last_ctr=-1;
	     default_val=1;
	     interpolate=0;
	     cur_val=0;
	    };
	    lmix {hebb=0: err=1: err_sb=0: };
	    savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	    rel_net_adapt {
	     on=0;
	     trg_fm_input=0.85;
	     trg_fm_output=0.15;
	     trg_lateral=0;
	     trg_sum=1;
	     tol_lg=0.05;
	     tol_sm=0.2;
	     rel_lrate=0.05;
	    };
	   };
	  };
	  rnd {name="": type=UNIFORM: mean=0.1: var=0: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_scale_init {init=0: abs=1: rel=1: };
	  wt_sig {gain=1: off=1: };
	  lrate=0.05;
	  cur_lrate=0.05;
	  lrs_value=NO_LRS;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=0;
	  };
	  lmix {hebb=0: err=1: err_sb=0: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	 };
	};
	rnd {name="": type=UNIFORM: mean=0.1: var=0: par=1: };
	wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_scale_init {init=0: abs=1: rel=1: };
	wt_sig {gain=1: off=1: };
	lrate=0.01;
	cur_lrate=0.01;
	lrs_value=NO_LRS;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=0;
	};
	lmix {hebb=0: err=1: err_sb=0: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
       };
       LeabraBiasSpec @[1] {
	name="BgBias";
	desc=;
	unique{ rnd;wt_limits;wt_scale;lrate;	};
	children {
	 name=;
	 el_typ=LeabraBiasSpec;
	 el_def=0;
	 LeabraBiasSpec @[0] {
	  name="FixedBias";
	  desc=;
	  unique{ rnd;wt_limits;wt_scale;lrate;	  };
	  children {
	   name=;
	   el_typ=LeabraBiasSpec;
	   el_def=0;
	  };
	  rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
	  wt_limits {type=NONE: min=-1: max=5: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_scale_init {init=0: abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  dwt_thresh=0.1;
	 };
	 MatrixBiasSpec @[1] {
	  name="MatrixBias";
	  desc=;
	  unique{ rnd;wt_limits;wt_scale;wt_scale_init;	  };
	  children {
	   name=;
	   el_typ=MatrixBiasSpec;
	   el_def=0;
	  };
	  rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
	  wt_limits {type=NONE: min=-1: max=5: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_scale_init {init=0: abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  dwt_thresh=0.1;
	  learn_rule=MAINT;
	 };
	};
	rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
	wt_limits {type=NONE: min=-1: max=5: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_scale_init {init=0: abs=1: rel=1: };
	wt_sig {gain=6: off=1.25: };
	lrate=0;
	cur_lrate=0;
	lrs_value=EXT_REW_STAT;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=1;
	 SchedItem @[0] {
	  start_ctr=0;
	  start_val=1;
	  duration=90;
	  step=-0.01;
	 };
	 SchedItem @[1] {
	  start_ctr=90;
	  start_val=0.1;
	  duration=1;
	  step=1;
	 };
	};
	lmix {hebb=0.001: err=0.999: err_sb=1: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
	dwt_thresh=0.1;
       };
       LeabraConSpec @[2] {
	name="ToPFC";
	desc=;
	unique{ rnd;lrate;lmix;	};
	children {
	 name=;
	 el_typ=LeabraConSpec;
	 el_def=0;
	 LeabraConSpec @[0] {
	  name="IntraPFC";
	  desc=;
	  unique{ wt_scale;	  };
	  children {
	   name=;
	   el_typ=LeabraConSpec;
	   el_def=0;
	  };
	  rnd {name="": type=UNIFORM: mean=0.5: var=0: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
	  inhib=0;
	  wt_scale {abs=1: rel=0.1: };
	  wt_scale_init {init=0: abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0.01;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=0;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	 };
	 LeabraBiasSpec @[1] {
	  name="PFCBias";
	  desc=;
	  unique{ rnd;wt_limits;wt_scale;wt_scale_init;	  };
	  children {
	   name=;
	   el_typ=LeabraBiasSpec;
	   el_def=0;
	  };
	  rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
	  wt_limits {type=NONE: min=-1: max=5: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_scale_init {init=0: abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  dwt_thresh=0.1;
	 };
	};
	rnd {name="": type=UNIFORM: mean=0.5: var=0: par=1: };
	wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_scale_init {init=0: abs=1: rel=1: };
	wt_sig {gain=6: off=1.25: };
	lrate=0;
	cur_lrate=0;
	lrs_value=EXT_REW_STAT;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=1;
	 SchedItem @[0] {
	  start_ctr=0;
	  start_val=1;
	  duration=90;
	  step=-0.01;
	 };
	 SchedItem @[1] {
	  start_ctr=90;
	  start_val=0.1;
	  duration=1;
	  step=1;
	 };
	};
	lmix {hebb=0.001: err=0.999: err_sb=1: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
       };
       MatrixConSpec @[3] {
	name="MatrixCons";
	desc=;
	unique{ wt_limits;lrate;lmix;	};
	children {
	 name=;
	 el_typ=MatrixConSpec;
	 el_def=0;
	 MatrixConSpec @[0] {
	  name="MatrixFmPFC";
	  desc=;
	  unique{ wt_limits;wt_scale;	  };
	  children {
	   name=;
	   el_typ=MatrixConSpec;
	   el_def=0;
	  };
	  rnd {name="": type=UNIFORM: mean=0.5: var=0.25: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=0.2: };
	  wt_scale_init {init=0: abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0.01;
	  cur_lrate=0.01;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0: err=1: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  learn_rule=MAINT;
	 };
	};
	rnd {name="": type=UNIFORM: mean=0.5: var=0.25: par=1: };
	wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_scale_init {init=0: abs=1: rel=1: };
	wt_sig {gain=6: off=1.25: };
	lrate=0.01;
	cur_lrate=0.01;
	lrs_value=EXT_REW_STAT;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=1;
	 SchedItem @[0] {
	  start_ctr=0;
	  start_val=1;
	  duration=90;
	  step=-0.01;
	 };
	 SchedItem @[1] {
	  start_ctr=90;
	  start_val=0.1;
	  duration=1;
	  step=1;
	 };
	};
	lmix {hebb=0: err=1: err_sb=1: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
	learn_rule=MAINT;
       };
      };
      rnd {name="": type=UNIFORM: mean=0.5: var=0.25: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
      inhib=0;
      wt_scale {abs=1: rel=1: };
      wt_scale_init {init=0: abs=1: rel=1: };
      wt_sig {gain=6: off=1.25: };
      lrate=0.01;
      cur_lrate=0.01;
      lrs_value=EXT_REW_STAT;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=1;
       SchedItem @[0] {
	start_ctr=0;
	start_val=1;
	duration=90;
	step=-0.01;
       };
       SchedItem @[1] {
	start_ctr=90;
	start_val=0.1;
	duration=1;
	step=1;
       };
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.05;
      };
     };
     MarkerConSpec @[1] {
      name="MarkerCons";
      desc=;
      unique{ rnd;wt_limits;wt_scale;lrate;      };
      children {
       name=;
       el_typ=MarkerConSpec;
       el_def=0;
      };
      rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
      inhib=0;
      wt_scale {abs=1: rel=0: };
      wt_scale_init {init=0: abs=1: rel=1: };
      wt_sig {gain=6: off=1.25: };
      lrate=0;
      cur_lrate=0;
      lrs_value=EPOCH;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=1;
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.05;
      };
     };
     LeabraConSpec @[2] {
      name="PFCSelfCon";
      desc=;
      unique{ rnd;wt_scale;lrate;      };
      children {
       name=;
       el_typ=LeabraConSpec;
       el_def=0;
      };
      rnd {name="": type=UNIFORM: mean=0.9: var=0: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
      inhib=0;
      wt_scale {abs=1: rel=0.1: };
      wt_scale_init {init=0: abs=1: rel=1: };
      wt_sig {gain=6: off=1.25: };
      lrate=0;
      cur_lrate=0;
      lrs_value=EPOCH;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=1;
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.05;
      };
     };
    };
    BaseSpec_Group @.gp[2] {
     name="PFC_BG_Layers";
     el_typ=ExtRewLayerSpec;
     el_def=0;
     ExtRewLayerSpec @[0] {
      name="PVeLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=ExtRewLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=1: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=NO_UN: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0: };
      val_range {min=0: max=1: range=1: scale=1: };
      rew_type=OUT_ERR_REW;
      avg_rew {sub_avg=0: avg_dt=0.005: };
      out_err {err_tol=0.5: graded=0: no_off_err=0: seq_all_cor=0: };
      rew {err_val=0: norew_val=0.5: rew_val=1: };
     };
     PViLayerSpec @[1] {
      name="PViLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=PViLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
      val_range {min=0: max=1: range=1: scale=1: };
      pv_detect {thr_min=0.2: thr_max=0.8: };
     };
     LVeLayerSpec @[2] {
      name="LVeLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=LViLayerSpec;
       el_def=0;
       LViLayerSpec @[0] {
	name="LViLayer";
	desc=;
	unique{ decay;decay;compute_i;i_kwta_pt;decay;	};
	children {
	 name=;
	 el_typ=LViLayerSpec;
	 el_def=0;
	};
	inhib_group=ENTIRE_LAYER;
	kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	compute_i=KWTA_AVG_INHIB;
	i_kwta_pt=0.9;
	gp_i_pt=0.2;
	tie_brk {on=0: k_thr=1: diff_thr=0.2: };
	adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
	clamp {hard=1: gain=0.5: d_gain=0: };
	decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
	net_rescale {on=0: max_net=0.8: net_extra=0.2: };
	abs_net_adapt {
	 on=0;
	 trg_net=0.5;
	 tol=0.1;
	 abs_lrate=0.05;
	};
	scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
	unit_range {min=0: max=1: range=1: scale=1: };
	bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
	val_range {min=0: max=1: range=1: scale=1: };
	lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
       };
       PatchLayerSpec @[1] {
	name="PatchLayer";
	desc=;
	unique{ kwta;gp_kwta;inhib_group;compute_i;i_kwta_pt;decay;	};
	children {
	 name=;
	 el_typ=PatchLayerSpec;
	 el_def=0;
	};
	inhib_group=UNIT_GROUPS;
	kwta {k_from=USE_K: k=8: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	gp_kwta {k_from=USE_K: k=8: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	compute_i=KWTA_INHIB;
	i_kwta_pt=0.25;
	gp_i_pt=0.2;
	tie_brk {on=0: k_thr=1: diff_thr=0.2: };
	adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
	clamp {hard=1: gain=0.5: d_gain=0: };
	decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
	net_rescale {on=0: max_net=0.8: net_extra=0.2: };
	abs_net_adapt {
	 on=0;
	 trg_net=0.5;
	 tol=0.1;
	 abs_lrate=0.05;
	};
	scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
	unit_range {min=0: max=1: range=1: scale=1: };
	bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
	val_range {min=0: max=1: range=1: scale=1: };
	lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
       };
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
      val_range {min=0: max=1: range=1: scale=1: };
      lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
     };
     PVLVDaLayerSpec @[3] {
      name="DALayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=SNcLayerSpec;
       el_def=0;
       SNcLayerSpec @[0] {
	name="SNcLayer";
	desc=;
	unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;	};
	children {
	 name=;
	 el_typ=SNcLayerSpec;
	 el_def=0;
	};
	inhib_group=ENTIRE_LAYER;
	kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	compute_i=KWTA_INHIB;
	i_kwta_pt=0.25;
	gp_i_pt=0.2;
	tie_brk {on=0: k_thr=1: diff_thr=0.2: };
	adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
	clamp {hard=1: gain=0.5: d_gain=0: };
	decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
	net_rescale {on=0: max_net=0.8: net_extra=0.2: };
	abs_net_adapt {
	 on=0;
	 trg_net=0.5;
	 tol=0.1;
	 abs_lrate=0.05;
	};
	da {da_gain=2: tonic_da=0: use_actual_er=0: syn_dep=0: min_lvi=0.1: };
	snc {patch_mode=NO_PATCH: patch_gain=0.5: };
       };
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_INHIB;
      i_kwta_pt=0.25;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      da {da_gain=2: tonic_da=0: use_actual_er=0: syn_dep=0: min_lvi=0.1: };
     };
     PFCLayerSpec @[4] {
      name="PFCLayer";
      desc=;
      unique{ gp_kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=PFCLayerSpec;
       el_def=0;
      };
      inhib_group=UNIT_GROUPS;
      kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.15: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.6;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=0: phase=0: phase2=0.1: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      gate {off_accom=0: updt_reset_sd=1: allow_clamp=1: };
     };
     MatrixLayerSpec @[5] {
      name="MatrixLayer";
      desc=;
      unique{ decay;      };
      children {
       name=;
       el_typ=MatrixLayerSpec;
       el_def=0;
      };
      inhib_group=UNIT_GROUPS;
      kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_INHIB;
      i_kwta_pt=0.25;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      bg_type=MAINT;
      matrix {neg_da_bl=0.0002: neg_gain=1.5: perf_gain=0: no_snr_mod=0: };
      contrast {gain=1: go_p=0.5: go_n=0.5: nogo_p=0.5: nogo_n=0.5: };
      rnd_go {avgrew=0.9: ucond_p=0.0001: ucond_da=1: nogo_thr=50: nogo_p=0.1: nogo_da=10: };
      err_rnd_go {on=1: min_cor=5: min_errs=1: err_p=1: gain=0.2: if_go_p=0: err_da=10: };
      avgda_rnd_go {on=1: avgda_p=0.1: gain=0.5: avgda_thr=0.1: nogo_thr=10: avgda_da=10: avgda_dt=0.005: };
     };
     SNrThalLayerSpec @[6] {
      name="SNrThalLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;i_kwta_pt;      };
      children {
       name=;
       el_typ=SNrThalLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_PCT: k=12: pct=0.75: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.6;
      gp_i_pt=0.2;
      tie_brk {on=1: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      snrthal {avg_net_dt=0.005: go_thr=0.1: rnd_go_inc=0.2: };
     };
    };
    BaseSpec_Group @.gp[3] {
     name="PFC_BG_Prjns";
     el_typ=FullPrjnSpec;
     el_def=0;
     FullPrjnSpec @[0] {
      name="FullPrjn";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=FullPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
     };
     OneToOnePrjnSpec @[1] {
      name="OneToOne";
      desc=;
      unique{ self_con;      };
      children {
       name=;
       el_typ=OneToOnePrjnSpec;
       el_def=0;
      };
      self_con=1;
      init_wts=0;
      n_conns=-1;
      recv_start=0;
      send_start=0;
     };
     GpOneToOnePrjnSpec @[2] {
      name="GpOneToOne";
      desc=;
      unique{ self_con;      };
      children {
       name=;
       el_typ=GpOneToOnePrjnSpec;
       el_def=0;
      };
      self_con=1;
      init_wts=0;
      n_conns=-1;
      recv_start=0;
      send_start=0;
     };
     UniformRndPrjnSpec @[3] {
      name="ToPFC";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=UniformRndPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
      p_con=0.4;
      sym_self=1;
      same_seed=0;
      rndm_seed {
       name="RndSeed_4";
       seed{ 885402758;1315620791;1637893117;-142360587;457049189;-949155705;-2119715791;1821634666;888633017;397826378;984142622;-1074167121;1036428394;-1381320248;1752011675;1529218375;-1131000192;-1522030209;-1393552964;2139702820;1019806629;-1184447572;-1585579695;123258498;-1522706487;1023928230;626473883;-1448815323;-172643033;1442780322;2111065344;1548524186;-504720386;1031235045;814009278;43386094;-492668993;-876738712;-2005731362;1960525735;-458365107;492375078;-945027143;-1908953603;-2013516956;155478480;-1050386872;1704926481;1639824811;-2132922976;-1625708434;1939777701;1309934451;692864251;1690009697;1591314605;1126898637;284050550;120433724;1867173150;560847959;412331950;-298636539;100042092;-1846908131;-1401027892;1684985836;-805635604;1756446928;798076746;-1237541288;1024753688;1789758096;1854846137;-1518629114;1074060139;1107480025;-1722146726;-860045098;-165005386;-1224595429;-1792485353;-928651830;94076534;943359845;-1457534236;-1135040532;1811731895;20361060;-559818243;1955782769;70810217;-1330832004;537451179;-319528342;1617859882;-793025727;1048097394;-1484899599;1805247206;-17093041;-587942733;-385724423;1410832489;-405204260;1190395221;958821196;-157638853;-1884385967;-985823543;-273808190;-1384582868;134732019;1971309846;1839849440;-1702426788;-1188944151;1014600399;-1112318444;-1459318456;-1201720541;-1917014972;-212548703;171773730;1390473889;903724315;-2011851422;-254642779;1518462968;1930794769;514830736;684053131;-1785556216;786032567;-204462105;1636468199;483093768;1213006940;-1892611296;1806820713;-1617681672;1931393864;-690514700;1567345602;-849847275;439084704;-1444252019;-439396062;-2086932024;2020970018;1017897725;-425172214;1356908721;-1072284374;-810877278;647004185;1389807241;1380598265;513532697;-2105427045;-1001985287;1476595147;1335594408;1706329405;-1546066349;1429822962;1357575058;-1682354622;682985457;-838943061;-563386337;1101456274;-61604448;978716742;-1440955677;134158304;2145593764;688644071;-1727206975;-255212497;-87988718;1772333636;-2008697867;-338093747;1225585232;-2074860203;-1734385207;-512766631;-62479349;-2116670091;-173733459;1277960047;-1811505950;-192882636;-973093953;-1303836093;1591816739;1180895058;-1826522795;295642907;580825252;-885871136;13506601;87435697;-174916171;-1177420856;1982141048;-382837330;-605241033;108777595;-22763134;-912198130;-336631634;576903110;4147249;-877209080;-1148558086;374052293;-1875906169;-118654505;1351688196;-1790168208;2112840757;494676344;-2051082622;-671813990;719098125;393197416;1880349590;1778886283;-356069389;672945784;163222125;1911708468;1470748963;-311176700;-1360803164;465373585;305699409;408702933;367950155;-34981069;486731282;-475404682;1897859764;-960455540;-1237282659;-1784404281;-2063731206;-1830133936;-1360142603;261232926;2097284352;-2038873605;-336259949;-1334202238;-1330033442;644944606;-1650406375;-717724366;-582512957;-1235918723;534507224;724142473;2008410121;-992070916;-432866573;-2049015703;-1957940982;-2061199116;1448064363;2103814819;-252503836;26227140;-1154458132;1034480807;-537577475;1856840632;-40703309;1560050771;-976462003;42522096;898102424;1863558053;-290467840;1627564789;1927992772;-916850675;-1306817337;1625749905;-1038971111;405944691;-930177154;-367288807;-1868751697;1789722230;-577486335;-1023533686;-1356437031;1824241568;-31292338;408785572;23331987;1848193508;-911336451;471769902;322523054;-2117197671;1010382273;694396149;1908008566;745405268;690946779;1413281524;1215825353;1351503624;-237526659;1320974460;1932508674;-605907511;-1988241086;717593207;82463018;1469665153;2070380217;-190432245;1795880255;-1125694591;243108625;672223252;343663578;974953000;-1405349541;1320418229;-1583664452;681649706;-102041128;-581221618;1235651110;-1440329902;-546748213;1603699779;1962674265;-802618431;500966361;293421214;1229506224;-196100751;1049209521;58386684;2079866356;1259489979;-1419842735;1479880890;-270345394;-163292018;-2067119657;-2053879448;-1382614775;813698589;-1561580204;-2010366670;-1627944842;951498499;-1745312614;-1696180549;-1305034350;-321531847;1611304189;-1286918423;-531308067;-1457130195;1147334990;754026774;2123409559;1062935955;-257654575;1426253833;-125823872;-711385769;1847088536;-61529461;1871275616;2007020484;-539135576;-819621011;1412229112;-1477408204;1768661158;-303244687;1781825790;-469217156;2000564454;1644704112;2001584723;-1241895789;204483849;679862855;1641187228;1333163104;1139936411;-2065071748;-914877829;106727481;1691371596;-120122392;-695005980;1391957759;-399406433;-586797406;847282128;-2065965089;-1067563894;1786404444;-1514263189;-599734577;-818769884;-643251257;-1954040457;-458775027;904681844;-27431427;673502816;10015618;-114654091;2137818149;942691666;1512086693;-1436839383;1636367918;-954239552;1642854735;-1129211564;1051125611;-1758219275;-1650808760;1426761838;627458188;-585396403;-1562115089;-865064076;270288279;-1156619547;-1494512725;1862520895;-2043159607;623444622;1713088293;2113063061;-1232546325;63166253;-337237754;-509015735;-598487907;-486211169;1509803597;969889961;-250091202;1518646851;-1660240856;-467218753;-1537698378;142880777;-531491997;-1324969657;-817913673;1706599783;182937754;-56204023;-1633364230;1376559566;477372943;-1522808520;-303317090;-1294064282;1852133865;637870260;-739806493;-1205220797;-1391753824;267284345;-1219536797;1905016003;1276413726;-1632023025;432353777;2112489863;1531760844;-286443981;462912789;-1622608453;-2100913729;1226246506;1700270145;-668088655;1845376953;516878192;1129892862;436072534;1571016897;82239815;-1891794131;167842440;1856594916;506465942;-807315817;-327683568;1086627419;-815249853;1414404074;26186836;1744912342;-1667484625;1078511087;-693563693;-1526335147;2126111082;429530445;-537241670;-1348541913;1514445288;428684941;227915052;-1749878378;1606230703;-1153583672;1987231810;1913623049;651371459;1036591070;2111944925;-222616144;1830438959;775833666;991869660;2085870847;914031696;-315635637;-985250127;-1954285072;1357181;789924057;-1548630835;1563411232;-1130219288;408146827;1379214177;-138164670;-650923813;-1288355500;-1576934048;-515530518;-1085111934;2099718746;-1901497266;-278333674;-411007837;-1963688845;1900515465;188603902;1325313198;1484910750;-2124057912;2092643696;-1404748250;-1462759324;-1986477346;1845709457;904955377;1954665063;2075678718;126065550;-1027969583;906895202;854476947;1386665516;1512021316;883673216;1748520589;981286678;-1798759544;798232186;-85282458;1517126586;70784321;774527890;1161267620;-44310646;2036323068;644372263;-1816920144;587849853;-786807677;1703504128;-171095219;-488743509;758110291;1760579968;-991061015;2051785196;-395884370;-305941615;-63732247;-716655108;937564867;-517364389;-1742670083;2014349513;292314880;132629681;856784730;-422245195;1273717171;-833569684;-1501973511;1674809649;122170642;-1895727007;-678544680;-194107400;1825204276;-613782729;-291589988;1448295242;       };
       mti=186;
      };
     };
     OneToOnePrjnSpec @[4] {
      name="PFCSelf";
      desc=;
      unique{ self_con;      };
      children {
       name=;
       el_typ=OneToOnePrjnSpec;
       el_def=0;
      };
      self_con=1;
      init_wts=0;
      n_conns=-1;
      recv_start=0;
      send_start=0;
     };
     GpRndTesselPrjnSpec @[5] {
      name="IntraPFC";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=GpRndTesselPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
      recv_gp_off {x=0: y=0: };
      recv_gp_n {x=-1: y=1: };
      recv_gp_skip {x=1: y=1: };
      recv_gp_group {x=2: y=1: };
      send_gp_scale {x=1: y=1: };
      send_gp_border {x=0: y=0: };
      send_gp_offs {
       name=;
       el_typ=GpTessEl;
       el_def=0;
       GpTessEl @[0] {
	send_gp_off {x=0: y=1: };
	p_con=0.4;
       };
       GpTessEl @[1] {
	send_gp_off {x=1: y=1: };
	p_con=0.4;
       };
      };
      wrap=0;
      def_p_con=0.4;
      sym_self=1;
      same_seed=0;
      rndm_seed {
       name="RndSeed_5";
       seed{ 885402758;1315620791;1637893117;-142360587;457049189;-949155705;-2119715791;1821634666;888633017;397826378;984142622;-1074167121;1036428394;-1381320248;1752011675;1529218375;-1131000192;-1522030209;-1393552964;2139702820;1019806629;-1184447572;-1585579695;123258498;-1522706487;1023928230;626473883;-1448815323;-172643033;1442780322;2111065344;1548524186;-504720386;1031235045;814009278;43386094;-492668993;-876738712;-2005731362;1960525735;-458365107;492375078;-945027143;-1908953603;-2013516956;155478480;-1050386872;1704926481;1639824811;-2132922976;-1625708434;1939777701;1309934451;692864251;1690009697;1591314605;1126898637;284050550;120433724;1867173150;560847959;412331950;-298636539;100042092;-1846908131;-1401027892;1684985836;-805635604;1756446928;798076746;-1237541288;1024753688;1789758096;1854846137;-1518629114;1074060139;1107480025;-1722146726;-860045098;-165005386;-1224595429;-1792485353;-928651830;94076534;943359845;-1457534236;-1135040532;1811731895;20361060;-559818243;1955782769;70810217;-1330832004;537451179;-319528342;1617859882;-793025727;1048097394;-1484899599;1805247206;-17093041;-587942733;-385724423;1410832489;-405204260;1190395221;958821196;-157638853;-1884385967;-985823543;-273808190;-1384582868;134732019;1971309846;1839849440;-1702426788;-1188944151;1014600399;-1112318444;-1459318456;-1201720541;-1917014972;-212548703;171773730;1390473889;903724315;-2011851422;-254642779;1518462968;1930794769;514830736;684053131;-1785556216;786032567;-204462105;1636468199;483093768;1213006940;-1892611296;1806820713;-1617681672;1931393864;-690514700;1567345602;-849847275;439084704;-1444252019;-439396062;-2086932024;2020970018;1017897725;-425172214;1356908721;-1072284374;-810877278;647004185;1389807241;1380598265;513532697;-2105427045;-1001985287;1476595147;1335594408;1706329405;-1546066349;1429822962;1357575058;-1682354622;682985457;-838943061;-563386337;1101456274;-61604448;978716742;-1440955677;134158304;2145593764;688644071;-1727206975;-255212497;-87988718;1772333636;-2008697867;-338093747;1225585232;-2074860203;-1734385207;-512766631;-62479349;-2116670091;-173733459;1277960047;-1811505950;-192882636;-973093953;-1303836093;1591816739;1180895058;-1826522795;295642907;580825252;-885871136;13506601;87435697;-174916171;-1177420856;1982141048;-382837330;-605241033;108777595;-22763134;-912198130;-336631634;576903110;4147249;-877209080;-1148558086;374052293;-1875906169;-118654505;1351688196;-1790168208;2112840757;494676344;-2051082622;-671813990;719098125;393197416;1880349590;1778886283;-356069389;672945784;163222125;1911708468;1470748963;-311176700;-1360803164;465373585;305699409;408702933;367950155;-34981069;486731282;-475404682;1897859764;-960455540;-1237282659;-1784404281;-2063731206;-1830133936;-1360142603;261232926;2097284352;-2038873605;-336259949;-1334202238;-1330033442;644944606;-1650406375;-717724366;-582512957;-1235918723;534507224;724142473;2008410121;-992070916;-432866573;-2049015703;-1957940982;-2061199116;1448064363;2103814819;-252503836;26227140;-1154458132;1034480807;-537577475;1856840632;-40703309;1560050771;-976462003;42522096;898102424;1863558053;-290467840;1627564789;1927992772;-916850675;-1306817337;1625749905;-1038971111;405944691;-930177154;-367288807;-1868751697;1789722230;-577486335;-1023533686;-1356437031;1824241568;-31292338;408785572;23331987;1848193508;-911336451;471769902;322523054;-2117197671;1010382273;694396149;1908008566;745405268;690946779;1413281524;1215825353;1351503624;-237526659;1320974460;1932508674;-605907511;-1988241086;717593207;82463018;1469665153;2070380217;-190432245;1795880255;-1125694591;243108625;672223252;343663578;974953000;-1405349541;1320418229;-1583664452;681649706;-102041128;-581221618;1235651110;-1440329902;-546748213;1603699779;1962674265;-802618431;500966361;293421214;1229506224;-196100751;1049209521;58386684;2079866356;1259489979;-1419842735;1479880890;-270345394;-163292018;-2067119657;-2053879448;-1382614775;813698589;-1561580204;-2010366670;-1627944842;951498499;-1745312614;-1696180549;-1305034350;-321531847;1611304189;-1286918423;-531308067;-1457130195;1147334990;754026774;2123409559;1062935955;-257654575;1426253833;-125823872;-711385769;1847088536;-61529461;1871275616;2007020484;-539135576;-819621011;1412229112;-1477408204;1768661158;-303244687;1781825790;-469217156;2000564454;1644704112;2001584723;-1241895789;204483849;679862855;1641187228;1333163104;1139936411;-2065071748;-914877829;106727481;1691371596;-120122392;-695005980;1391957759;-399406433;-586797406;847282128;-2065965089;-1067563894;1786404444;-1514263189;-599734577;-818769884;-643251257;-1954040457;-458775027;904681844;-27431427;673502816;10015618;-114654091;2137818149;942691666;1512086693;-1436839383;1636367918;-954239552;1642854735;-1129211564;1051125611;-1758219275;-1650808760;1426761838;627458188;-585396403;-1562115089;-865064076;270288279;-1156619547;-1494512725;1862520895;-2043159607;623444622;1713088293;2113063061;-1232546325;63166253;-337237754;-509015735;-598487907;-486211169;1509803597;969889961;-250091202;1518646851;-1660240856;-467218753;-1537698378;142880777;-531491997;-1324969657;-817913673;1706599783;182937754;-56204023;-1633364230;1376559566;477372943;-1522808520;-303317090;-1294064282;1852133865;637870260;-739806493;-1205220797;-1391753824;267284345;-1219536797;1905016003;1276413726;-1632023025;432353777;2112489863;1531760844;-286443981;462912789;-1622608453;-2100913729;1226246506;1700270145;-668088655;1845376953;516878192;1129892862;436072534;1571016897;82239815;-1891794131;167842440;1856594916;506465942;-807315817;-327683568;1086627419;-815249853;1414404074;26186836;1744912342;-1667484625;1078511087;-693563693;-1526335147;2126111082;429530445;-537241670;-1348541913;1514445288;428684941;227915052;-1749878378;1606230703;-1153583672;1987231810;1913623049;651371459;1036591070;2111944925;-222616144;1830438959;775833666;991869660;2085870847;914031696;-315635637;-985250127;-1954285072;1357181;789924057;-1548630835;1563411232;-1130219288;408146827;1379214177;-138164670;-650923813;-1288355500;-1576934048;-515530518;-1085111934;2099718746;-1901497266;-278333674;-411007837;-1963688845;1900515465;188603902;1325313198;1484910750;-2124057912;2092643696;-1404748250;-1462759324;-1986477346;1845709457;904955377;1954665063;2075678718;126065550;-1027969583;906895202;854476947;1386665516;1512021316;883673216;1748520589;981286678;-1798759544;798232186;-85282458;1517126586;70784321;774527890;1161267620;-44310646;2036323068;644372263;-1816920144;587849853;-786807677;1703504128;-171095219;-488743509;758110291;1760579968;-991061015;2051785196;-395884370;-305941615;-63732247;-716655108;937564867;-517364389;-1742670083;2014349513;292314880;132629681;856784730;-422245195;1273717171;-833569684;-1501973511;1674809649;122170642;-1895727007;-678544680;-194107400;1825204276;-613782729;-291589988;1448295242;       };
       mti=186;
      };
     };
     TesselPrjnSpec @[6] {
      name="Input_PFC";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=TesselPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
      recv_off {x=0: y=0: };
      recv_n {x=-1: y=-1: };
      recv_skip {x=1: y=1: };
      recv_group {x=1: y=1: };
      wrap=1;
      send_scale {x=1: y=1: };
      send_border {x=0: y=0: };
      send_offs {
       name=;
       el_typ=TessEl;
       el_def=0;
       TessEl @[0] {
	send_off {x=0: y=0: };
	wt_val=1;
       };
       TessEl @[1] {
	send_off {x=0: y=0: };
	wt_val=1;
       };
       TessEl @[2] {
	send_off {x=0: y=0: };
	wt_val=1;
       };
      };
     };
    };
   };
   layers {
    name=;
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    LeabraLayer @[0] {
     name="RewTarg";
     flags=;
     layer_type=INPUT;
     pos {x=5: y=4: z=2: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=1: y=1: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs[0]$120$: };
     ext_flag=EXT;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="rew_targ";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=0: };
     acts_p {avg=0: max=0: max_i=0: };
     acts_m {avg=0: max=0: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=1: pct=1: pct_c=0: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0.6: gp_g_i=0: g_i_orig=0.6: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=1: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1]$121$: };
     stm_gain=0.5;
     hard_clamped=1;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[1] {
     name="PVe";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_RewTarg";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[0]$122$;
       spec {type=OneToOnePrjnSpec: spec=.projects[0].networks[0].specs.gp[3][1]$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=.projects[0].networks[0].specs.gp[1][1]$124$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Output";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[8]$125$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][0]$126$: };
     ext_flag=EXT;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="R";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0.3166667: max=0.95: max_i=2: };
     acts_p {avg=0.3166667: max=0.95: max_i=2: };
     acts_m {avg=0.3166667: max=0.95: max_i=2: };
     phase_dif_ratio=1;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0.9: gp_g_i=0: g_i_orig=0.9: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=ExtRewLayerSpec: spec=.projects[0].networks[0].specs.gp[2][0]$127$: };
     stm_gain=0.5;
     hard_clamped=1;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[2] {
     name="PVi";
     flags=;
     layer_type=HIDDEN;
     pos {x=6: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVe";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[1]$128$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[5]$129$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=1;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[7]$130$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs.gp[3][0]$131$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0]$132$: };
       recv_idx=2;
       send_idx=6;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[12]$133$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$132$: };
       recv_idx=3;
       send_idx=5;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[3].projections[0];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[4].projections[0];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[5].projections[0];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[9].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$126$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="R";
     sse=0;
     icon_value=0;
     netin {avg=0.08570143: max=0.09588199: max_i=0: };
     i_thrs {avg=3.76786: max=5.061848: max_i=2: };
     acts {avg=0.3170997: max=0.6979854: max_i=2: };
     acts_p {avg=0.3170997: max=0.6979854: max_i=2: };
     acts_m {avg=0.3171709: max=0.6979387: max_i=2: };
     phase_dif_ratio=1.000225;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=5.061848: k1_ithr=3.336531: ithr_r=0.4168001: ithr_diff=0.3408473: tie_brk=0: };
     i_val {kwta=4.889317: g_i=4.889317: gp_g_i=0: g_i_orig=4.889317: };
     un_g_i {avg=4.889317: max=4.889317: max_i=0: };
     adapt_i {avg_avg=0.300494: i_kwta_pt=1.798821: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PViLayerSpec: spec=.projects[0].networks[0].specs.gp[2][1]$134$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[3] {
     name="LVe";
     flags=;
     layer_type=HIDDEN;
     pos {x=12: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[2]$135$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$129$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$130$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0].children[0]$136$: };
       recv_idx=2;
       send_idx=5;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$133$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$136$: };
       recv_idx=3;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[5].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[9].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][0].children[0]$137$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="R";
     sse=0;
     icon_value=0;
     netin {avg=0.09020111: max=0.1132991: max_i=3: };
     i_thrs {avg=3.954597: max=4.601912: max_i=3: };
     acts {avg=0.4241564: max=0.6619905: max_i=3: };
     acts_p {avg=0.4241564: max=0.6619905: max_i=3: };
     acts_m {avg=0.4238631: max=0.6620632: max_i=3: };
     phase_dif_ratio=0.9993084;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.601912: k1_ithr=3.738825: ithr_r=0.2077006: ithr_diff=0.1875498: tie_brk=0: };
     i_val {kwta=4.515604: g_i=4.515604: gp_g_i=0: g_i_orig=4.515604: };
     un_g_i {avg=4.515604: max=4.515604: max_i=0: };
     adapt_i {avg_avg=0.3161555: i_kwta_pt=1.799373: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LVeLayerSpec: spec=.projects[0].networks[0].specs.gp[2][2]$138$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[4] {
     name="LVi";
     flags=;
     layer_type=HIDDEN;
     pos {x=12: y=2: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$135$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$129$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$130$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0].children[0].children[0]$139$: };
       recv_idx=2;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$133$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$139$: };
       recv_idx=3;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[5].projections[2];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[9].projections[2];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[5].projections[2];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$137$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0.0953474: max=0.09811576: max_i=3: };
     i_thrs {avg=4.168168: max=4.935995: max_i=2: };
     acts {avg=0.42484: max=0.6666416: max_i=2: };
     acts_p {avg=0.42484: max=0.6666416: max_i=2: };
     acts_m {avg=0.4249438: max=0.6666104: max_i=2: };
     phase_dif_ratio=1.000244;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.935995: k1_ithr=3.912226: ithr_r=0.2324478: ithr_diff=0.2074088: tie_brk=0: };
     i_val {kwta=4.833618: g_i=4.833618: gp_g_i=0: g_i_orig=4.833618: };
     un_g_i {avg=4.833618: max=4.833618: max_i=0: };
     adapt_i {avg_avg=0.3093611: i_kwta_pt=1.79869: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LViLayerSpec: spec=.projects[0].networks[0].specs.gp[2][2].children[0]$140$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[5] {
     name="DA";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=2: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$135$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_LVe";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[3]$141$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_LVi";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[4]$142$;
       spec {type=OneToOnePrjnSpec: spec=$123$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=2;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[1];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=1: y=1: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][1]$143$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=0: };
     i_thrs {avg=0: max=0: max_i=0: };
     acts {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
     acts_p {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
     acts_m {avg=1.102686e-05: max=1.102686e-05: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=1: pct=1: pct_c=0: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=0: };
     adapt_i {avg_avg=1: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PVLVDaLayerSpec: spec=.projects[0].networks[0].specs.gp[2][3]$144$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=-0.0005702972;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[6] {
     name="Hidden";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=0: z=1: };
     un_geom {x=7: y=7: n_not_xy=0: n=49: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=7: y=7: n_not_xy=0: n=49: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$130$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs[2]$145$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$48$: };
       recv_idx=0;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Output";
       from_type=CUSTOM;
       from=$125$;
       spec {type=FullPrjnSpec: spec=$145$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$48$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$133$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs.gp[1][0]$146$: };
       recv_idx=2;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[8].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=7: y=7: n_not_xy=0: n=49: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$120$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0.4859227: max=0.7103294: max_i=24: };
     i_thrs {avg=3.544777: max=5.212479: max_i=24: };
     acts {avg=0.1596541: max=0.9263909: max_i=24: };
     acts_p {avg=0.1596541: max=0.9263909: max_i=24: };
     acts_m {avg=0.1596845: max=0.9264359: max_i=24: };
     phase_dif_ratio=1.00019;
     kwta {k=7: pct=0.1428571: pct_c=0.8571429: adth_k=1: k_ithr=4.69239: k1_ithr=3.353509: ithr_r=0.3359349: ithr_diff=0.2853304: tie_brk=0: };
     i_val {kwta=4.156837: g_i=4.156837: gp_g_i=0: g_i_orig=4.156837: };
     un_g_i {avg=4.156835: max=4.156837: max_i=0: };
     adapt_i {avg_avg=0.1504023: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=$121$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[7] {
     name="Input";
     flags=;
     layer_type=INPUT;
     pos {x=0: y=0: z=2: };
     un_geom {x=3: y=3: n_not_xy=0: n=9: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=3: y=3: n_not_xy=0: n=9: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[2];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[2];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[2];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[6].projections[0];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[8].projections[1];
	    Projection_Group @. = [5] = LeabraPrjn .projects[0].networks[0].layers[10].projections[3];
	    Projection_Group @. = [6] = LeabraPrjn .projects[0].networks[0].layers[12].projections[2];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=3: y=3: n_not_xy=0: n=9: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$120$: };
     ext_flag=EXT;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="A";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0.1055556: max=0.95: max_i=0: };
     acts_p {avg=0.1055556: max=0.95: max_i=0: };
     acts_m {avg=0.1055556: max=0.95: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0.25: gp_g_i=0: g_i_orig=0.25: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.1111111: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1].children[0]$147$: };
     stm_gain=0.5;
     hard_clamped=1;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[8] {
     name="Output";
     flags=;
     layer_type=TARGET;
     pos {x=5: y=1: z=2: };
     un_geom {x=2: y=1: n_not_xy=0: n=2: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=2: y=1: n_not_xy=0: n=2: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[6]$148$;
       spec {type=FullPrjnSpec: spec=$145$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$48$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$130$;
       spec {type=FullPrjnSpec: spec=$145$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$48$: };
       recv_idx=1;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[6].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=2: y=1: n_not_xy=0: n=2: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$120$: };
     ext_flag=TARG|EXT;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="L";
     sse=0;
     icon_value=0;
     netin {avg=0.482017: max=0.6040817: max_i=0: };
     i_thrs {avg=3.51362: max=4.425299: max_i=0: };
     acts {avg=0.475: max=0.95: max_i=0: };
     acts_p {avg=0.475: max=0.95: max_i=0: };
     acts_m {avg=0.4779795: max=0.9559315: max_i=0: };
     phase_dif_ratio=1.006273;
     kwta {k=1: pct=0.5: pct_c=0.5: adth_k=1: k_ithr=4.425299: k1_ithr=2.601941: ithr_r=0.5310802: ithr_diff=0.4120305: tie_brk=0: };
     i_val {kwta=3.057781: g_i=0.25: gp_g_i=0: g_i_orig=0.25: };
     un_g_i {avg=3.057781: max=3.057781: max_i=0: };
     adapt_i {avg_avg=0.4848066: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1].children[1]$149$: };
     stm_gain=0.5;
     hard_clamped=1;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[9] {
     name="SNc";
     flags=;
     layer_type=HIDDEN;
     pos {x=4: y=2: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$135$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_LVe";
       from_type=CUSTOM;
       from=$141$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_LVi";
       from_type=CUSTOM;
       from=$142$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=2;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[10].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_p {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_m {avg=1.102686e-05: max=1.102686e-05: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=1: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_p {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_m {avg=1.102686e-05: max=1.102686e-05: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=2: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_p {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_m {avg=1.102686e-05: max=1.102686e-05: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=3: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_p {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
       acts_m {avg=1.102686e-05: max=1.102686e-05: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=$143$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=0: };
     i_thrs {avg=0: max=0: max_i=0: };
     acts {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
     acts_p {avg=-0.0005702972: max=-0.0005702972: max_i=0: };
     acts_m {avg=1.102686e-05: max=1.102686e-05: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=nan: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=0: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=SNcLayerSpec: spec=.projects[0].networks[0].specs.gp[2][3].children[0]$150$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=-0.0005702972;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[10] {
     name="Striatum";
     flags=;
     layer_type=HIDDEN;
     pos {x=9: y=0: z=1: };
     un_geom {x=4: y=7: n_not_xy=0: n=28: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=19: y=7: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_SNc";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[9]$151$;
       spec {type=GpOneToOnePrjnSpec: spec=.projects[0].networks[0].specs.gp[3][2]$152$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_SNrThal";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[11]$153$;
       spec {type=GpOneToOnePrjnSpec: spec=$152$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$133$;
       spec {type=GpOneToOnePrjnSpec: spec=$152$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MatrixConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[3].children[0]$154$: };
       recv_idx=2;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$130$;
       spec {type=FullPrjnSpec: spec=$131$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MatrixConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[3]$155$: };
       recv_idx=3;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       output_name=;
       netin {avg=0.4476247: max=0.6127534: max_i=7: };
       i_thrs {avg=3.257186: max=4.495651: max_i=7: };
       acts {avg=0.1642713: max=0.8522174: max_i=7: };
       acts_p {avg=0.1642713: max=0.8522174: max_i=7: };
       acts_m {avg=0.1643219: max=0.8522554: max_i=7: };
       phase_dif_ratio=1.000308;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.058875: k1_ithr=3.959013: ithr_r=0.0249111: ithr_diff=0.02460333: tie_brk=0: };
       i_val {kwta=3.983979: g_i=3.983979: gp_g_i=0: g_i_orig=3.983979: };
       un_g_i {avg=3.983979: max=3.983979: max_i=0: };
       adapt_i {avg_avg=0.2261075: i_kwta_pt=-0.5149148: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=2;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       output_name=;
       netin {avg=0.4269219: max=0.5943075: max_i=3: };
       i_thrs {avg=3.101914: max=4.357307: max_i=3: };
       acts {avg=0.1957762: max=0.9111005: max_i=3: };
       acts_p {avg=0.1957762: max=0.9111005: max_i=3: };
       acts_m {avg=0.1957762: max=0.9111005: max_i=3: };
       phase_dif_ratio=1;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.637797: k1_ithr=3.580048: ithr_r=0.01600232: ithr_diff=0.01587492: tie_brk=0: };
       i_val {kwta=3.594485: g_i=3.594485: gp_g_i=0: g_i_orig=3.594485: };
       un_g_i {avg=3.594484: max=3.594485: max_i=0: };
       adapt_i {avg_avg=0.2320295: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=7;
       misc_state1=3;
       misc_state2=1;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       output_name=;
       netin {avg=0.4084972: max=0.6074526: max_i=9: };
       i_thrs {avg=2.96373: max=4.455895: max_i=9: };
       acts {avg=0.2280662: max=0.9313369: max_i=9: };
       acts_p {avg=0.2280662: max=0.9313369: max_i=9: };
       acts_m {avg=0.228104: max=0.9313517: max_i=9: };
       phase_dif_ratio=1.000166;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.557378: k1_ithr=3.461768: ithr_r=0.02724425: ithr_diff=0.02687645: tie_brk=0: };
       i_val {kwta=3.48567: g_i=3.48567: gp_g_i=0: g_i_orig=3.48567: };
       un_g_i {avg=3.485672: max=3.48567: max_i=0: };
       adapt_i {avg_avg=0.2297018: i_kwta_pt=0.079: g_bar_i=1: g_bar_l=0.1: };
       misc_state=2;
       misc_state1=3;
       misc_state2=1;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       output_name=;
       netin {avg=0.4121229: max=0.5984245: max_i=27: };
       i_thrs {avg=2.990922: max=4.388184: max_i=27: };
       acts {avg=0.1926084: max=0.8858712: max_i=27: };
       acts_p {avg=0.1926084: max=0.8858712: max_i=27: };
       acts_m {avg=0.1926084: max=0.8858712: max_i=27: };
       phase_dif_ratio=1;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.86362: k1_ithr=3.736763: ithr_r=0.03338489: ithr_diff=0.03283373: tie_brk=0: };
       i_val {kwta=3.768477: g_i=3.768477: gp_g_i=0: g_i_orig=3.768477: };
       un_g_i {avg=3.768478: max=3.768477: max_i=0: };
       adapt_i {avg_avg=0.2300687: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=7;
       misc_state1=3;
       misc_state2=1;
      };
     };
     unit_spec {type=MatrixUnitSpec: spec=.projects[0].networks[0].specs.gp[0][3]$156$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0.4476247: max=0.6127534: max_i=0: };
     i_thrs {avg=3.257186: max=4.495651: max_i=0: };
     acts {avg=0.1951805: max=0.9313369: max_i=2: };
     acts_p {avg=0.1951805: max=0.9313369: max_i=2: };
     acts_m {avg=0.1952026: max=0.9313517: max_i=2: };
     phase_dif_ratio=1.000113;
     kwta {k=28: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=3.983979: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=415.3132: max=3.983979: max_i=0: };
     adapt_i {avg_avg=0.2294768: i_kwta_pt=0.006100006: g_bar_i=1: g_bar_l=0.1: };
     spec {type=MatrixLayerSpec: spec=.projects[0].networks[0].specs.gp[2][5]$157$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[11] {
     name="SNrThal";
     flags=;
     layer_type=HIDDEN;
     pos {x=3: y=4: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Striatum";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[10]$158$;
       spec {type=GpOneToOnePrjnSpec: spec=$152$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[10].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[12].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0.7486287: max=0.7486287: max_i=0: };
       acts_p {avg=0.7486287: max=0.7486287: max_i=0: };
       acts_m {avg=0.7496042: max=0.7496042: max_i=0: };
       phase_dif_ratio=1.001303;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=2;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=1: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=0: };
       acts_p {avg=0: max=0: max_i=0: };
       acts_m {avg=0: max=0: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=7;
       misc_state1=3;
       misc_state2=1;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=2: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=0: };
       acts_p {avg=0: max=0: max_i=0: };
       acts_m {avg=0: max=0: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=2;
       misc_state1=3;
       misc_state2=1;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=3: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=0: };
       acts_p {avg=0: max=0: max_i=0: };
       acts_m {avg=0: max=0: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=0: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=7;
       misc_state1=3;
       misc_state2=1;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][4]$159$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=-0.4248044: max=0.1038015: max_i=0: };
     i_thrs {avg=-3.286033: max=0.6785114: max_i=0: };
     acts {avg=0.1871572: max=0.7486287: max_i=0: };
     acts_p {avg=0.1871572: max=0.7486287: max_i=0: };
     acts_m {avg=0.187401: max=0.7496042: max_i=0: };
     phase_dif_ratio=1.001303;
     kwta {k=3: pct=0.75: pct_c=0.25: adth_k=1: k_ithr=-2.202935: k1_ithr=-6.535328: ithr_r=0: ithr_diff=-1.966647: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=0: };
     adapt_i {avg_avg=0.75: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=SNrThalLayerSpec: spec=.projects[0].networks[0].specs.gp[2][6]$160$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[12] {
     name="PFC";
     flags=;
     layer_type=HIDDEN;
     pos {x=9: y=0: z=2: };
     un_geom {x=3: y=3: n_not_xy=0: n=9: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=15: y=3: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_SNrThal";
       from_type=CUSTOM;
       from=$153$;
       spec {type=GpOneToOnePrjnSpec: spec=$152$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$124$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_PFC";
       from_type=SELF;
       from=$133$;
       spec {type=OneToOnePrjnSpec: spec=.projects[0].networks[0].specs.gp[3][4]$161$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs.gp[1][2]$162$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$130$;
       spec {type=TesselPrjnSpec: spec=.projects[0].networks[0].specs.gp[3][6]$163$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[2]$164$: };
       recv_idx=2;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[3];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[3];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[3];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[6].projections[2];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[10].projections[2];
	    Projection_Group @. = [5] = LeabraPrjn .projects[0].networks[0].layers[12].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       output_name="ONE";
       netin {avg=0.05017898: max=0.4318182: max_i=0: };
       i_thrs {avg=1.084865: max=7.325147: max_i=6: };
       acts {avg=0.1075155: max=0.9676397: max_i=6: };
       acts_p {avg=0.1075155: max=0.9676397: max_i=6: };
       acts_m {avg=0.1075155: max=0.9676399: max_i=6: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=7.325147: k1_ithr=0.3048296: ithr_r=3.179316: ithr_diff=0.9583859: tie_brk=0: };
       i_val {kwta=4.51702: g_i=4.51702: gp_g_i=0: g_i_orig=4.51702: };
       un_g_i {avg=4.517021: max=4.51702: max_i=0: };
       adapt_i {avg_avg=0.1098047: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=2;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=4: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       output_name="B";
       netin {avg=0.05017897: max=0.4318182: max_i=0: };
       i_thrs {avg=1.084864: max=7.325147: max_i=1: };
       acts {avg=0.1075155: max=0.9676397: max_i=1: };
       acts_p {avg=0.1075155: max=0.9676397: max_i=1: };
       acts_m {avg=0.1075155: max=0.9676397: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=7.325147: k1_ithr=0.3048296: ithr_r=3.179316: ithr_diff=0.9583859: tie_brk=0: };
       i_val {kwta=4.51702: g_i=4.51702: gp_g_i=0: g_i_orig=4.51702: };
       un_g_i {avg=4.517021: max=4.51702: max_i=0: };
       adapt_i {avg_avg=0.1098033: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=7;
       misc_state1=3;
       misc_state2=1;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=8: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       output_name="ONE";
       netin {avg=0.05017898: max=0.4318182: max_i=0: };
       i_thrs {avg=1.084865: max=7.325147: max_i=6: };
       acts {avg=0.1075155: max=0.9676397: max_i=6: };
       acts_p {avg=0.1075155: max=0.9676397: max_i=6: };
       acts_m {avg=0.1075155: max=0.9676399: max_i=6: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=7.325147: k1_ithr=0.3048296: ithr_r=3.179316: ithr_diff=0.9583859: tie_brk=0: };
       i_val {kwta=4.51702: g_i=4.51702: gp_g_i=0: g_i_orig=4.51702: };
       un_g_i {avg=4.517021: max=4.51702: max_i=0: };
       adapt_i {avg_avg=0.1098024: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=2;
       misc_state1=3;
       misc_state2=1;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=12: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       output_name="B";
       netin {avg=0.05017897: max=0.4318182: max_i=0: };
       i_thrs {avg=1.084864: max=7.325147: max_i=1: };
       acts {avg=0.1075155: max=0.9676397: max_i=1: };
       acts_p {avg=0.1075155: max=0.9676397: max_i=1: };
       acts_m {avg=0.1075155: max=0.9676397: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=7.325147: k1_ithr=0.3048296: ithr_r=3.179316: ithr_diff=0.9583859: tie_brk=0: };
       i_val {kwta=4.51702: g_i=4.51702: gp_g_i=0: g_i_orig=4.51702: };
       un_g_i {avg=4.517021: max=4.51702: max_i=0: };
       adapt_i {avg_avg=0.1098084: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=7;
       misc_state1=3;
       misc_state2=1;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][2]$165$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="B";
     sse=0;
     icon_value=0;
     netin {avg=0.05017898: max=0.4318182: max_i=0: };
     i_thrs {avg=1.084865: max=7.325147: max_i=0: };
     acts {avg=0.1075155: max=0.9676397: max_i=0: };
     acts_p {avg=0.1075155: max=0.9676397: max_i=0: };
     acts_m {avg=0.1075155: max=0.9676399: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=4: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=4.51702: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=162.6127: max=4.51702: max_i=0: };
     adapt_i {avg_avg=0.1098047: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PFCLayerSpec: spec=.projects[0].networks[0].specs.gp[2][4]$166$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
   };
   flags=;
   auto_build=AUTO_BUILD;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   batch=0;
   epoch=0;
   trial=0;
   cycle=0;
   time=0;
   group_name="23_I_ONE";
   trial_name="A";
   output_name=;
   sse_unit_avg=0;
   sse_sqrt=0;
   sse=0;
   sum_sse=0;
   avg_sse=0;
   cnt_err_tol=0;
   cnt_err=0;
   cur_sum_sse=28.62888;
   avg_sse_n=91;
   cur_cnt_err=19;
   train_time {name="train_time": start={usr=6488: sys=788: tot=2674945158: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   epoch_time {name="epoch_time": start={usr=6488: sys=788: tot=2674945158: }: end={usr=29740: sys=3026: tot=2596397842: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   trial_time {name="trial_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   settle_time {name="settle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   cycle_time {name="cycle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   wt_sync_time {name="wt_sync_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   misc_time {name="misc_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   dmem_sync_level=DMEM_SYNC_NETWORK;
   dmem_nprocs=1;
   usr1_save_fmt=JUST_WEIGHTS;
   wt_save_fmt=TEXT;
   lay_layout=THREE_D;
   n_units=234;
   n_cons=5488;
   max_size {x=28: y=7: z=3: };
   font_sizes {
    net_name=0.05;
    net_vals=0.05;
    layer=0.04;
    layer_vals=0.03;
    prjn=0.01;
    unit=0.02;
    un_nm_len=3;
   };
   view_params {
    xy_square=0;
    unit_spacing=0.05;
    prjn_disp=L_R_F;
    prjn_name=0;
    prjn_width=0.001;
    prjn_trans=0.5;
    lay_trans=0.5;
    unit_trans=0;
   };
   phase_order=MINUS_PLUS_PLUS;
   no_plus_test=0;
   trial_init=DECAY_STATE;
   sequence_init=DO_NOTHING;
   first_plus_dwt=ONLY_FIRST_DWT;
   phase=PLUS_PHASE;
   phase_no=0;
   phase_max=3;
   cycle_max=60;
   min_cycles=15;
   min_cycles_phase2=35;
   minus_cycles=47;
   avg_cycles=0;
   avg_cycles_sum=3935;
   avg_cycles_n=91;
   netin_mod=1;
   send_delta=1;
   maxda_stopcrit=0.005;
   maxda=0.004933476;
   trg_max_act_stopcrit=1;
   trg_max_act=0;
   ext_rew=-1.1;
   avg_ext_rew=0;
   avg_ext_rew_sum=23;
   avg_ext_rew_n=35;
  };
 };
};
