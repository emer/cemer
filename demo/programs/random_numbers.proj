// ta_Dump File v3.0 -- code v8.0.0.0 rev9957
LeabraProject .projects["random_numbers"] { 
 Doc_Group @.docs = [2] {
  taDoc @["ProjectDocs"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["user_pinned"] { };
   };
  };
  taDoc @["ChangeLog"] { };
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @["LeabraWizard_0"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["NO_CLIP"] { };
    UserDataItem @["user_pinned"] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @["ControlPanel"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["user_pinned"] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };
  };
  ClusterRun @["ClusterRun"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["user_pinned"] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };

   DataTableCols @.jobs_running.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_running.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_running.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_done.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_done.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_done.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_deleted.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_deleted.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_deleted.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_archive.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_archive.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_archive.control_panel_cells = [0] {
   };

   DataTableCols @.file_list.data = [11] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["file_name"] { };
    String_Data @["tag"] { };
    String_Data @["size"] { };
    String_Data @["kind"] { };
    String_Data @["date_modified"] { };
    String_Data @["date_created"] { };
    String_Data @["svn_file_path"] { };
    String_Data @["proj_file_path"] { };
    String_Data @["file_path"] { };
   };

   DataOpList @.file_list.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.file_list.control_panel_cells = [0] {
   };

   DataTableCols @.cluster_info.data = [6] {
    String_Data @["queue"] { };
    String_Data @["job_no"] { };
    String_Data @["user"] { };
    String_Data @["state"] { };
    String_Data @["procs"] { };
    String_Data @["start_time"] { };
   };

   DataOpList @.cluster_info.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.cluster_info.control_panel_cells = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.param_sets = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp["InputData"] { 
  };
  DataTable_Group @.gp["OutputData"] { 
  };
  DataTable_Group @.gp["AnalysisData"] { 
  };
 };

 Program_TopGroup @.programs = [1] {
  Program @["RndTest"] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @["DocLink"] { };
   };

   ProgObjList @.objs = [3] {
    RndSeed @["MyRndSeed"] { };
    DataTable @["RndValues"] { 
     DataTableCols @.data = [1] {
      float_Data @["rnd_numbers"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["view_panel_wd"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["Histogram"] { 
     DataTableCols @.data = [2] {
      float_Data @["rnd_val"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["view_panel_wd"] { };
       };
      };
      float_Data @["count"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["view_panel_wd"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
   };

   ProgType_List @.types = [1] {
    DynEnumType @["RndType"] { 
     DynEnumItem_List @.enums = [2] {
      DynEnumItem @["NEW_SEED"] { };
      DynEnumItem @["OLD_SEED"] { };
     };
    };
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [7] {
    ProgVar @["rnd_type"] { };
    ProgVar @["n_outer"] { };
    ProgVar @["MAX_INT"] { };
    ProgVar @["n_cpus"] { };
    ProgVar @["MyRndSeed"] { };
    ProgVar @["RndValues"] { };
    ProgVar @["Histogram"] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [2] {
    AssignExpr @[0] { };
    AssignExpr @[1] { };
   };

   ProgEl_List @.prog_code = [8] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [4] {
      ProgVar @["i"] { };
      ProgVar @["j"] { };
      ProgVar @["rnd"] { };
      ProgVar @["tmp_hist"] { };
     };
    };
    Switch @[1] { 
     ProgEl_List @.cases = [2] {
      CaseBlock @[0] { 
       ProgEl_List @.prog_code = [1] {
	MethodCall @[0] { 
	 ProgArg_List @.meth_args = [0] {
	 };
	};
       };
      };
      CaseBlock @[1] { 
       ProgEl_List @.prog_code = [1] {
	MethodCall @[0] { 
	 ProgArg_List @.meth_args = [0] {
	 };
	};
       };
      };
     };
    };
    MethodCall @[2] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    ForLoop @[3] { 
     ProgEl_List @.loop_code = [1] {
      ForLoop @[0] { 
       ProgEl_List @.loop_code = [4] {
	RandomCall @[0] { 
	 ProgArg_List @.meth_args = [1] {
	  ProgArg @[0] { };
	 };
	};
	PrintVar @[1] { };
	MethodCall @[2] { 
	 ProgArg_List @.meth_args = [0] {
	 };
	};
	CssExpr @[3] { };
       };
      };
     };
    };
    MathCall @[4] { 
     ProgArg_List @.meth_args = [6] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
      ProgArg @[4] { };
      ProgArg @[5] { };
     };
    };
    MethodCall @[5] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    CssExpr @[6] { };
    CssExpr @[7] { };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @["Browser2"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["view_win_lft"] { };
    UserDataItem @["view_win_top"] { };
    UserDataItem @["view_win_wd"] { };
    UserDataItem @["view_win_ht"] { };
    UserDataItem @["view_win_iconified"] { };
    UserDataItem @["view_splitter_state"] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @["Application"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_win_visible"] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @["Navigator"] { };
    PanelViewer @["Editor"] { };
    T3PanelViewer @["T3Frames"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_panel_selected"] { };
     };

     T3Panel_List @.panels = [1] {
      T3Panel @["Histogram"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["Histogram_Graph"] { 
	 T3DataView_List @.children = [2] {
	  GraphColView @["rnd_val"] { };
	  GraphColView @["count"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [16] {
	  GraphPlotView @["Histogram_Graph_plot_1"] { };
	  GraphPlotView @["Histogram_Graph_plot_2"] { };
	  GraphPlotView @["Histogram_Graph_plot_3"] { };
	  GraphPlotView @["Histogram_Graph_plot_4"] { };
	  GraphPlotView @["Histogram_Graph_plot_5"] { };
	  GraphPlotView @["Histogram_Graph_plot_6"] { };
	  GraphPlotView @["Histogram_Graph_plot_7"] { };
	  GraphPlotView @["Histogram_Graph_plot_8"] { };
	  GraphPlotView @["Histogram_Graph_plot_9"] { };
	  GraphPlotView @["Histogram_Graph_plot_10"] { };
	  GraphPlotView @["Histogram_Graph_plot_11"] { };
	  GraphPlotView @["Histogram_Graph_plot_12"] { };
	  GraphPlotView @["Histogram_Graph_plot_13"] { };
	  GraphPlotView @["Histogram_Graph_plot_14"] { };
	  GraphPlotView @["Histogram_Graph_plot_15"] { };
	  GraphPlotView @["Histogram_Graph_plot_16"] { };
	 };

	 GraphPlotView_List @.errbars = [16] {
	  GraphPlotView @["Histogram_Graph_err_1"] { };
	  GraphPlotView @["Histogram_Graph_err_2"] { };
	  GraphPlotView @["Histogram_Graph_err_3"] { };
	  GraphPlotView @["Histogram_Graph_err_4"] { };
	  GraphPlotView @["Histogram_Graph_err_5"] { };
	  GraphPlotView @["Histogram_Graph_err_6"] { };
	  GraphPlotView @["Histogram_Graph_err_7"] { };
	  GraphPlotView @["Histogram_Graph_err_8"] { };
	  GraphPlotView @["Histogram_Graph_err_9"] { };
	  GraphPlotView @["Histogram_Graph_err_10"] { };
	  GraphPlotView @["Histogram_Graph_err_11"] { };
	  GraphPlotView @["Histogram_Graph_err_12"] { };
	  GraphPlotView @["Histogram_Graph_err_13"] { };
	  GraphPlotView @["Histogram_Graph_err_14"] { };
	  GraphPlotView @["Histogram_Graph_err_15"] { };
	  GraphPlotView @["Histogram_Graph_err_16"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @["Tools"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_win_lft"] { };
      UserDataItem @["view_win_top"] { };
      UserDataItem @["view_win_wd"] { };
      UserDataItem @["view_win_ht"] { };
      UserDataItem @["view_win_iconified"] { };
      UserDataItem @["view_visible"] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [0] {
 };
};
LeabraProject .projects["random_numbers"] {
 name="random_numbers";
 desc="Tests threaded random number generator and produces histogram of results.";
 tags="Random Numbers, Histogram";
 version {
  major=8;
  minor=0;
  step=2;
 };
 author="Randall C. O'Reilly";
 email="emergent-users@grey.colorado.edu";
 license {
  license=GPLv2;
  owner_name="Regents of the University of Colorado";
  org="CCNLab at the University of Colorado Boulder";
  year="2016";
  custom=;
 };
 pub_cite=;
 wiki {
  wiki="emergent";
  page_name="demos/random_numbers";
 };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
  taDoc @["ProjectDocs"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_104";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="ProjectDocs";
   desc=;
   web_doc=1;
   wiki="emergent";
   url="demos/random_numbers";
   full_url="https://grey.colorado.edu/emergent/index.php/demos/random_numbers";
   text_size=1;
   text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
   html_text="<html>
<head></head>
<body>
<h2> Enter Title Here </h2>
</body>
</html>
";
  };
  taDoc @["ChangeLog"] {
   name="ChangeLog";
   desc=;
   web_doc=0;
   wiki=;
   url="local";
   full_url="local";
   text_size=1;
   text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>


<li>Tue Aug 30 02:35:57 2016 version: 8.0.2 user: oreilly file_name: <code>random_numbers.proj</code> <br>
Project updated on wiki: emergent changes: doc link


<li>Tue Aug 30 02:34:18 2016 version: 8.0.1 user: oreilly file_name: <code>random_numbers.proj</code> <br>
Published on wiki: emergent page: demos/random_numbers with description: Tests threaded random number generator and produces histogram of results. tags: Random Numbers, Histogram author: Randall C. O'Reilly email: emergent-users@grey.colorado.edu version: 8.0.0 pub_cite: 
</ul>
</body>
</html>
";
   html_text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>
<P>
<P>
<li>Tue Aug 30 02:35:57 2016 version: 8.0.2 user: oreilly file_name: <code>random_numbers.proj</code> <br>
Project updated on wiki: emergent changes: doc link
<P>
<P>
<li>Tue Aug 30 02:34:18 2016 version: 8.0.1 user: oreilly file_name: <code>random_numbers.proj</code> <br>
Published on wiki: emergent page: demos/random_numbers with description: Tests threaded random number generator and produces histogram of results. tags: Random Numbers, Histogram author: Randall C. O'Reilly email: emergent-users@grey.colorado.edu version: 8.0.0 pub_cite: 
</ul>
</body>
</html>
";
  };
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @["LeabraWizard_0"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_6";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["NO_CLIP"] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=0;
     val_type_fixed=0;
    };
   };
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  ControlPanel @["ControlPanel"] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="ControlPanel";
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
  ClusterRun @["ClusterRun"] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=0;
     val_type_fixed=0;
    };
   };
   name="ClusterRun";
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   jobs_running {
    name="jobs_running";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_done {
    name="jobs_done";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_deleted {
    name="jobs_deleted";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_archive {
    name="jobs_archive";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   file_list {
    name="file_list";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="cluster where this job was submitted / run";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["file_name"] {
      name="file_name";
      desc="name of file -- does not include any path information";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="job tag associated with this file";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["size"] {
      name="size";
      desc="size of file -- with typical suffixes (K = kilobytes, M = megabytes, G = gigabytes)";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["kind"] {
      name="kind";
      desc="type of file";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["date_modified"] {
      name="date_modified";
      desc="timestamp for when the file was last modified";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["date_created"] {
      name="date_created";
      desc="timestamp for when the file was first created";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["svn_file_path"] {
      name="svn_file_path";
      desc="path to file in SVN repository, relative to root of svn_repo repository";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["proj_file_path"] {
      name="proj_file_path";
      desc="path to file relative to the parent project directory -- e.g., results/filename.dat";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["file_path"] {
      name="file_path";
      desc="full path to file on local file system, including all parent directories and name of file -- takes you directly to the file";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   cluster_info {
    name="cluster_info";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["queue"] {
      name="queue";
      desc="queue that this info relates to";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number or total number of actve jobs";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user name";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["state"] {
      name="state";
      desc="current scheduler state -- or description of global state info";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["procs"] {
      name="procs";
      desc="number of processors for this job or for global state info";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="timestamp for when the job was submitted or started running";
      col_flags=SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
 };
 param_sets {
  name="param_sets";
  el_typ=ParamSet;
  el_def=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp["InputData"] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["OutputData"] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["AnalysisData"] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program @["RndTest"] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @["DocLink"] {
     name="DocLink";
     doc=.projects["random_numbers"].programs["RndTest"].doc$$;
    };
   };
   name="RndTest";
   short_nm="RnTest";
   tags=;
   desc="test random number generator";
   version {
    major=0;
    minor=0;
    step=0;
   };
   author=;
   email=;
   flags=NO_STOP_STEP;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=RndSeed;
    el_def=0;
    RndSeed @["MyRndSeed"] {
     name="MyRndSeed";
     rnd_seed=3640931742;
    };
    DataTable @["RndValues"] {
     name="RndValues";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @["rnd_numbers"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_46";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["view_panel_wd"] {
	 name="view_panel_wd";
	 value 6 0=0.156739816069603;
	 val_type_fixed=0;
	};
       };
       name="rnd_numbers";
       col_flags=SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       ar {
	name="ar";
       [8000] 0.67385542;0.86550319;0.1115974;0.63210696;0.83425665;0.38099498;0.84987813;0.3505972;0.40296596;0.2390628;
0.1741688;0.35115394;0.21424815;0.53699207;0.1693505;0.14301108;0.071661711;0.8489337;0.7576732;0.20910011;
0.25281319;0.39471135;0.77822876;0.78193396;0.19780453;0.4553684;0.23277396;0.19371542;0.47148538;0.48253357;
0.34599394;0.47024584;0.56009877;0.95036459;0.41766927;0.64006585;0.89258754;0.96900952;0.9184972;0.39194217;
0.021789344;0.95171762;0.23693769;0.088012472;0.31060684;0.36193824;0.87310499;0.49760282;0.97694027;0.18755144;
0.63919163;0.83092105;0.54652363;0.017064294;0.016767632;0.67035055;0.35202363;0.060763225;0.31076419;0.35364106;
0.035372522;0.57258767;0.043185052;0.043444451;0.27464706;0.85065508;0.056241073;0.42219087;0.27611351;0.45509326;
0.80147094;0.25848019;0.16608126;0.82832861;0.55539155;0.036098119;0.16953136;0.34477854;0.53229433;0.77832341;
0.65287054;0.31518909;0.8327958;0.73520666;0.54761583;0.99865735;0.2136327;0.83938754;0.97596884;0.70874989;
0.66344905;0.76811069;0.68840307;0.62195969;0.55311751;0.63668483;0.42123425;0.19700958;0.39178887;0.33779868;
0.47320768;0.52029556;0.26571786;0.17069052;0.50373292;0.50912678;0.25708127;0.51401716;0.76157695;0.00099225726;
0.75913537;0.011291557;0.32338887;0.081440479;0.587363;0.31347045;0.44863254;0.10484499;0.4393588;0.56337607;
0.82579517;0.39998481;0.91167074;0.75883961;0.85310829;0.76356941;0.28230929;0.90951949;0.41878131;0.92976964;
0.88680094;0.38332003;0.28963143;0.88312453;0.88338298;0.88312358;0.31732556;0.22301517;0.12772968;0.4746674;
0.1674197;0.63816392;0.13083193;0.18299685;0.42975351;0.8420077;0.53196228;0.29094973;0.42539155;0.85059738;
0.78619999;0.77346349;0.8636604;0.59060144;0.80106896;0.88435572;0.83195484;0.73242188;0.79627234;0.51656741;
0.43752345;0.92810893;0.49505314;0.34680936;0.19121912;0.79625708;0.60915601;0.45686039;0.67229742;0.79973978;
0.038017642;0.72646534;0.86761022;0.97524559;0.90716112;0.28142729;0.62187403;0.37359419;0.85998464;0.50786066;
0.64506805;0.7604931;0.22465943;0.84867853;0.9759568;0.035049316;0.52924836;0.92227584;0.94080067;0.17565829;
0.39978638;0.52432048;0.23119214;0.90840292;0.68571556;0.22188452;0.40694407;0.48259702;0.78144932;0.90696859;
0.11033867;0.70173103;0.42971781;0.16486895;0.24534667;0.1990433;0.66133237;0.14983946;0.24253936;0.23446338;
0.49419969;0.20567378;0.33601505;0.71497715;0.36189762;0.2359588;0.057411361;0.43164629;0.42197195;0.055214342;
0.0571367;0.77974147;0.17237559;0.42217055;0.80844122;0.25364748;0.81946188;0.94140619;0.55084544;0.88167036;
0.19540633;0.86552882;0.9182235;0.68767178;0.18228176;0.75288802;0.50733268;0.56367546;0.65727186;0.15338163;
0.87257773;0.57609528;0.51122391;0.92103171;0.71315753;0.19192258;0.63750118;0.54743361;0.96928352;0.13760211;
0.9847517;0.7902683;0.79228014;0.57226235;0.35914293;0.70495033;0.72633749;0.30837208;0.038901147;0.66633987;
0.98024464;0.40973595;0.41725826;0.29102278;0.59975982;0.57620573;0.75841218;0.74740827;0.50942993;0.18681797;
0.52312481;0.54193598;0.80761302;0.33795923;0.55519378;0.93530715;0.92699552;0.46028444;0.30782753;0.75674796;
0.81663644;0.99839765;0.63356858;0.98106223;0.79292619;0.91706461;0.75535983;0.92986441;0.071527556;0.25362003;
0.76731998;0.017329024;0.063684568;0.78094661;0.027064109;0.77560592;0.87867284;0.90409464;0.38068509;0.99396849;
0.97635972;0.95884311;0.90604776;0.40310088;0.95576084;0.42053214;0.95908701;0.7796219;0.52460504;0.84340668;
0.21653517;0.97231644;0.50383407;0.30203408;0.57594717;0.67679942;0.59413755;0.46138421;0.090747692;0.84518999;
0.81469733;0.50247312;0.28759998;0.75634795;0.60354733;0.033739351;0.53372324;0.031253304;0.79342675;0.34418759;
0.092204303;0.76898265;0.59417826;0.80863273;0.080509104;0.3293409;0.80541492;0.66699165;0.38177112;0.84218848;
0.61816025;0.592677;0.64111263;0.14111073;0.35535696;0.3021262;0.52679604;0.36667833;0.015514031;0.8724215;
0.020884909;0.77233934;0.15676709;0.63880402;0.24487123;0.058046032;0.47955054;0.62408358;0.991723;0.19734074;
0.29056203;0.41922024;0.88797283;0.30493623;0.38065046;0.77443695;0.40359542;0.90579456;0.51421416;0.78532368;
0.078821674;0.62985963;0.6885016;0.93848622;0.57525432;0.36289573;0.56258643;0.037302662;0.58862209;0.6908015;
0.81603414;0.13970488;0.45272091;0.61280721;0.29242948;0.12424378;0.58313555;0.2750344;0.4836219;0.030672118;
0.45872369;0.58589667;0.029224362;0.054234855;0.61238277;0.22492605;0.40052807;0.1590898;0.35808471;0.57907212;
0.059105396;0.90822893;0.17775731;0.017662697;0.39894977;0.80689579;0.80471379;0.43337348;0.44986707;0.63882852;
0.89279705;0.46448424;0.012365402;0.21307978;0.64517629;0.6476329;0.8589052;0.77698612;0.62231261;0.91981137;
0.78520346;0.47124726;0.97853369;0.83405995;0.080127709;0.26421201;0.55333483;0.041095041;0.45903251;0.75262469;
0.41997409;0.79642129;0.85853344;0.69317091;0.9153263;0.91075373;0.97743165;0.1922421;0.78556108;0.65229428;
0.21995713;0.89973158;0.4412466;0.077742271;0.35838521;0.76213878;0.9457624;0.48966268;0.1311579;0.52789265;
0.53961146;0.22765484;0.193414;0.21953624;0.53717011;0.5388791;0.510297;0.69999117;0.73124105;0.57108825;
0.67069775;0.10211019;0.73319417;0.73296529;0.95857203;0.54051679;0.074127659;0.85420239;0.74055189;0.53926528;
0.56285059;0.12158268;0.2100576;0.17526214;0.9744969;0.099268846;0.090674907;0.045256987;0.09601257;0.7170828;
0.62964106;0.14917392;0.12970398;0.72686988;0.60229737;0.18830886;0.008061056;0.13599034;0.12837727;0.97419375;
0.90923506;0.095987521;0.31322363;0.79391152;0.78780359;0.89980537;0.29486006;0.4013994;0.72023439;0.38403353;
0.44350961;0.94347352;0.3444159;0.96703112;0.84061676;0.79973263;0.094178975;0.87520343;0.93677533;0.44522467;
0.85331649;0.33384705;0.07440988;0.3015933;0.81864083;0.17439994;0.28513655;0.48985597;0.46625558;0.84436786;
0.58040744;0.10763738;0.2936309;0.73190969;0.52498943;0.67123735;0.16369079;0.025153756;0.40733498;0.042072691;
0.28423041;0.4166126;0.15730351;0.66308832;0.040607844;0.042591549;0.17414843;0.88353246;0.95132911;0.12007198;
0.3960692;0.77496928;0.95615548;0.98390639;0.1167194;0.99148411;0.96615458;0.098409638;0.093525894;0.3194252;
0.57595044;0.94924766;0.64068824;0.62510121;0.9043076;0.64749342;0.89853215;0.14064828;0.90048504;0.65145302;
0.057369515;0.56504452;0.052757494;0.23663616;0.49728382;0.17942774;0.93139541;0.0045703966;0.44590795;0.21736667;
0.97911668;0.41993716;0.01228489;0.13548376;0.10555054;0.73155904;0.23853876;0.21742718;0.41031185;0.0082566608;
0.081585839;0.077869713;0.044447996;0.14265701;0.93681175;0.40751317;0.89976352;0.91197067;0.76884365;0.41943052;
0.3787047;0.87774533;0.46556908;0.40903324;0.73463809;0.28229469;0.2807256;0.85154796;0.47851297;0.95988667;
0.60473078;0.84692305;0.61645335;0.6003058;0.97191978;0.85860741;0.98022425;0.85227889;0.019443026;0.20817487;
0.97575051;0.0035437862;0.37466627;0.53237236;0.47427949;0.72477442;0.64865506;0.94745046;0.69747955;0.66711873;
0.99237585;0.38915223;0.82049686;0.94578725;0.57496488;0.19534776;0.44727126;0.57670438;0.82084596;0.6019358;
0.32279727;0.19655314;0.92804265;0.41074869;0.17438911;0.98636198;0.61532879;0.45797005;0.050877258;0.429517;
0.30697981;0.10431185;0.86996639;0.33960322;0.025698209;0.62388688;0.11993691;0.61850059;0.83850253;0.48638302;
0.64512259;0.93783402;0.90344542;0.37806001;0.38638589;0.92695409;0.73079664;0.52240556;0.092270866;0.51877636;
0.91002351;0.6168257;0.83577698;0.101564;0.87288254;0.77683353;0.59570199;0.97770345;0.8733691;0.90824193;
0.96959209;0.83987361;0.47597912;0.7457459;0.21644731;0.38351074;0.40932852;0.62879014;0.81411266;0.18983595;
0.48705581;0.70367688;0.67384738;0.25760365;0.20824479;0.60740972;0.53438699;0.65373707;0.55977678;0.90363276;
0.49980474;0.63623732;0.83105063;0.9415012;0.855923;0.45520398;0.69855052;0.83970451;0.84937954;0.68481815;
0.6360808;0.40203157;0.61069411;0.85995311;0.23849504;0.72357768;0.72360826;0.14492826;0.027771726;0.64119291;
0.61371493;0.74191874;0.76477349;0.87428814;0.75760204;0.90093702;0.62588596;0.99055594;0.51990509;0.79146183;
0.36977318;0.3094703;0.28993902;0.27773207;0.4676742;0.77783608;0.31093514;0.30873781;0.95382154;0.42783591;
0.49865344;0.83520997;0.74532425;0.78052688;0.12474889;0.43885428;0.9809311;0.15891583;0.14908957;0.92743331;
0.94553083;0.15493599;0.2682828;0.14084956;0.93504596;0.30220076;0.26310736;0.92723364;0.77876484;0.43090877;
0.39595112;0.2709659;0.76712942;0.18547098;0.69470614;0.99971646;0.68189478;0.18038975;0.21512896;0.72177523;
0.55693948;0.010381695;0.82051116;0.7318483;0.65386552;0.1323711;0.073759787;0.61532742;0.46789971;0.81413096;
0.10517681;0.38202375;0.1827746;0.38462508;0.71988636;0.34559259;0.23095106;0.14291668;0.94612777;0.10947265;
0.20309049;0.55397087;0.080071218;0.73332918;0.2451769;0.57336664;0.28285906;0.090211861;0.027889416;0.55306154;
0.67434072;0.015478327;0.83339608;0.45476714;0.19893716;0.7721473;0.64958853;0.79867399;0.21452419;0.46425813;
0.59472227;0.0027915279;0.076501697;0.67483908;0.88228625;0.74976438;0.33984134;0.098550178;0.55184543;0.95872211;
0.13402663;0.72403365;0.58065218;0.41888008;0.51428044;0.42214251;0.44099656;0.27136105;0.03890948;0.37822166;
0.22642832;0.41170812;0.036491036;0.2871843;0.12274189;0.25109011;0.11874418;0.2039789;0.21698262;0.42228952;
0.11154699;0.32508981;0.25004378;0.85389858;0.52435929;0.3869504;0.2576139;0.98380017;0.75171947;0.810417;
0.91380143;0.81553733;0.50147235;0.78251767;0.76191401;0.35773423;0.87766564;0.80899692;0.79382992;0.68824935;
0.38699737;0.98885477;0.95254928;0.17368177;0.76892382;0.17036976;0.095025226;0.89567244;0.71645731;0.22452395;
0.064967491;0.88289708;0.57623124;0.98449218;0.51734173;0.16395997;0.44668934;0.68865162;0.52567506;0.1392225;
0.074966036;0.23494162;0.96871102;0.68491793;0.20690188;0.82767576;0.58638471;0.0040885769;0.56883955;0.24282154;
0.6467343;0.13748577;0.64142424;0.71124852;0.58426553;0.20763057;0.15457569;0.65480649;0.76764423;0.42064396;
0.94357491;0.95263177;0.5171566;0.89018834;0.20078209;0.98634475;0.57773393;0.40220511;0.91587454;0.5276233;
0.60532171;0.31213287;0.056006443;0.92980623;0.52130371;0.86105078;0.76487345;0.725034;0.99813956;0.41468409;
0.75836784;0.80323356;0.010697794;0.98520738;0.92028683;0.19004676;0.48189047;0.876764;0.90965617;0.90371585;
0.75696242;0.46204582;0.24140486;0.75998396;0.72180676;0.25134152;0.22766408;0.47986796;0.62055784;0.86714107;
0.10535824;0.55317497;0.9291532;0.31216177;0.86665279;0.36494184;0.059920035;0.85847247;0.11625575;0.062056497;
0.4971461;0.77676076;0.86482024;0.3641355;0.088523693;0.25262293;0.29366937;0.0050881365;0.24480386;0.76060122;
0.031424969;0.2845749;0.31850037;0.5301705;0.28017378;0.27974224;0.19374308;0.053485129;0.64687026;0.02136807;
0.28394806;0.41044;0.91041148;0.28251374;0.41288528;0.2851688;0.41239312;0.91164744;0.42239454;0.81487721;
0.0048304051;0.28189024;0.39770764;0.32720453;0.87625831;0.3111504;0.26271385;0.060188305;0.58514053;0.44910857;
0.010299827;0.1294952;0.19142529;0.61970174;0.47077009;0.42267862;0.13550888;0.39429334;0.2288277;0.39137247;
0.02423387;0.39875275;0.80050665;0.99753225;0.95065778;0.7587592;0.86715728;0.25145307;0.94528615;0.94481313;
0.67218059;0.021938346;0.35251981;0.53189051;0.73813093;0.10843781;0.2317581;0.078150079;0.99156946;0.63425064;
0.97841221;0.82199889;0.84065729;0.04329665;0.84410757;0.71512067;0.96627921;0.74718338;0.89990336;0.82498038;
0.77606547;0.5316031;0.88889015;0.6722877;0.23919478;0.12748648;0.21291512;0.033449601;0.28042448;0.57787871;
0.32391122;0.24094507;0.51419073;0.68205875;0.2059352;0.65200782;0.81762987;0.24166876;0.82938063;0.23228663;
0.97361541;0.9632144;0.66870552;0.82432801;0.88230854;0.7963773;0.90815067;0.90569103;0.45770082;0.49462906;
0.18367673;0.2791456;0.49139062;0.34354195;0.42299974;0.38719779;0.75864768;0.35400373;0.28016073;0.88640285;
0.6321491;0.94441992;0.011090931;0.30326235;0.14123142;0.91843617;0.72360021;0.044162877;0.20638447;0.85280877;
0.60924613;0.95440316;0.42341408;0.57198775;0.29020044;0.35594371;0.49034101;0.039642062;0.78376657;0.027855786;
0.56873381;0.40127891;0.39929533;0.54486924;0.72892004;0.75283986;0.00089546014;0.37733784;0.63002819;0.79444844;
0.56743699;0.57062483;0.62761891;0.76243079;0.7018103;0.86251247;0.62515247;0.23707518;0.1663148;0.58398479;
0.85149795;0.55833215;0.30849993;0.12909818;0.3189612;0.49458069;0.64547038;0.46650007;0.25523853;0.43690228;
0.4016934;0.91092795;0.83564848;0.12837948;0.41353416;0.84657311;0.51948708;0.097109094;0.16011764;0.1596141;
0.59379095;0.99463594;0.47708645;0.50886011;0.50001007;0.28788909;0.72071695;0.47049469;0.80173802;0.43381661;
0.91428721;0.80491179;0.92649436;0.76597035;0.30100366;0.92771506;0.55759495;0.72699374;0.47110695;0.5272606;
0.83881551;0.058977611;0.9853031;0.23776841;0.64431787;0.43545336;0.94867837;0.57348597;0.76590306;0.75835615;
0.44409809;0.99376839;0.11950427;0.23912215;0.95982635;0.018429903;0.43590978;0.55539614;0.46569148;0.71493906;
0.3830792;0.80726147;0.086179793;0.35730815;0.28862509;0.28483334;0.94630522;0.36483696;0.18620394;0.68450779;
0.41692916;0.22987381;0.36613581;0.19606887;0.79338837;0.17033045;0.74503511;0.20196275;0.15461347;0.51470006;
0.86072749;0.097176149;0.38859469;0.17260288;0.68285704;0.91719294;0.88402015;0.64861619;0.67501396;0.43658477;
0.64962322;0.90159833;0.21443598;0.9311229;0.20109941;0.11832743;0.23860748;0.79710937;0.71178007;0.47363788;
0.54038632;0.39644364;0.49554783;0.70531046;0.75279176;0.9226594;0.48908821;0.44559011;0.15688661;0.098284826;
0.3385796;0.22527653;0.25454158;0.72348201;0.45180771;0.076068059;0.51060849;0.77550721;0.29308408;0.55958879;
0.50255191;0.81087816;0.55479753;0.30651131;0.26215816;0.65085548;0.17224598;0.2635622;0.28953227;0.010045628;
0.7841633;0.15912373;0.96945554;0.7333703;0.99112308;0.91791129;0.66110474;0.12770239;0.73141718;0.732409;
0.90158665;0.51511735;0.5444141;0.93106651;0.78073752;0.18310165;0.81003046;0.55907774;0.68707424;0.88033116;
0.1932712;0.50167674;0.60971361;0.81675965;0.69952816;0.48608622;0.011606378;0.68336707;0.93875659;0.21635985;
0.12931152;0.14326604;0.70545304;0.73358542;0.29419535;0.27650508;0.34348121;0.40566409;0.10013314;0.95535862;
0.088381618;0.34943292;0.9333089;0.15021932;0.74541515;0.84281367;0.52782309;0.51618826;0.12007856;0.69399279;
0.20005894;0.68807811;0.95172119;0.17491174;0.28962812;0.18422812;0.83016169;0.70519841;0.15389094;0.18356748;
0.69865465;0.12024803;0.3108727;0.049503975;0.33873612;0.72314471;0.010774952;0.44825348;0.43857914;0.040041182;
0.22168227;0.76500845;0.063478768;0.43877774;0.54665858;0.90394473;0.21606019;0.6966576;0.53131038;0.87968332;
0.69973463;0.48810846;0.52918464;0.9783262;0.64189017;0.72710216;0.74842155;0.87596905;0.6273604;0.93405074;
0.27778849;0.40830657;0.23492028;0.40803328;0.34346035;0.47211498;0.35277528;0.45839882;0.83437133;0.74609953;
0.40294176;0.96177167;0.76726502;0.68482029;0.89564943;0.16742168;0.57070589;0.34791297;0.00084943208;0.70468438;
0.63665587;0.39565721;0.15567002;0.28243586;0.68277591;0.21046671;0.68262297;0.58089578;0.96158338;0.54976434;
0.42590353;0.63573277;0.33109835;0.073731065;0.079682134;0.30625719;0.29981771;0.52327597;0.46241099;0.087204508;
0.13152264;0.96376485;0.24895383;0.21434748;0.29189187;0.49086738;0.98671401;0.48551038;0.6023128;0.37930989;
0.73924482;0.72334069;0.60475248;0.91113299;0.10869376;0.95564568;0.683366;0.39587814;0.6971904;0.54856718;
0.57841831;0.36372522;0.20729643;0.97833264;0.24993314;0.25931811;0.079129405;0.039801069;0.019679427;0.81713176;
0.062675998;0.3713195;0.8647067;0.51719075;0.081113771;0.8933199;0.5534265;0.71186572;0.57835633;0.10828941;
0.74938858;0.75558609;0.85469741;0.55365163;0.79745221;0.82901484;0.9903512;0.82402724;0.93386519;0.63370824;
0.93792403;0.85217589;0.8982228;0.53315639;0.94072825;0.74984479;0.10087659;0.7434293;0.72398973;0.071152359;
0.065689929;0.098954096;0.73024565;0.73027617;0.08696574;0.153376;0.40533063;0.10451365;0.4268111;0.5715453;
0.38969752;0.13701858;0.49288091;0.83868766;0.80693591;0.27982378;0.093251161;0.33160952;0.683061;0.75403404;
0.97245866;0.53835398;0.0012771678;0.97389299;0.7575838;0.72210115;0.88014287;0.005671686;0.53252822;0.14416566;
0.49330899;0.69226402;0.63140738;0.13936299;0.10158861;0.21056269;0.51034254;0.041943088;0.58055955;0.73352414;
0.91931057;0.65983415;0.43929902;0.62258232;0.46150118;0.25837302;0.27399808;0.43119758;0.35993931;0.39927608;
0.27399808;0.27521878;0.21368645;0.38876715;0.14648646;0.22851805;0.43612966;0.48257723;0.38095462;0.38141239;
0.78723764;0.057282563;0.7760036;0.87473142;0.56461322;0.61206764;0.14322063;0.51794738;0.56508267;0.50090486;
0.52040511;0.55214399;0.72942036;0.047401287;0.51799476;0.51674348;0.62025684;0.74383372;0.47628587;0.51381195;
0.77653795;0.040993322;0.96990126;0.22059269;0.063398652;0.37732613;0.89102709;0.11024379;0.032118015;0.83440202;
0.018446501;0.89200318;0.62571383;0.15856224;0.20197895;0.51762742;0.94477791;0.62429655;0.46482369;0.22599675;
0.60368925;0.15040103;0.97714227;0.73075205;0.73210609;0.16326857;0.10511885;0.70970029;0.51885903;0.22648206;
0.17129312;0.74182153;0.9616971;0.15112197;0.30889267;0.12756141;0.34011704;0.36198068;0.78344017;0.37835819;
0.24953973;0.47218034;0.16754045;0.77057672;0.35345507;0.22187205;0.21204549;0.31369027;0.4782114;0.073646888;
0.31561288;0.19135435;0.19333328;0.18733798;0.19464195;0.056727499;0.28366762;0.58875078;0.34271717;0.22061191;
0.69552529;0.1660803;0.97710276;0.62136894;0.70287842;0.51861966;0.24385881;0.69301575;0.20435297;0.27274576;
0.30988532;0.21903163;0.028602054;0.44453248;0.046176549;0.29590857;0.32553747;0.90414894;0.40799537;0.27466428;
0.35678759;0.2752744;0.80209774;0.4275884;0.61430585;0.75184399;0.35103706;0.63197094;0.90507686;0.94983774;
0.8445043;0.34287438;0.083017208;0.4315671;0.9720822;0.13545826;0.43628919;0.47712958;0.47684643;0.95758677;
0.19265723;0.88258773;0.41976038;0.14483577;0.098906875;0.39842796;0.68679565;0.4353089;0.12168171;0.97907239;
0.48880488;0.040046755;0.047432695;0.29544207;0.72077835;0.47177681;0.29213038;0.17547411;0.14614615;0.36445639;
0.31559807;0.62089062;0.39958647;0.15127358;0.41509473;0.75721604;0.83974546;0.28485599;0.1980527;0.31452262;
0.69363052;0.86728758;0.1673781;0.29216543;0.56166673;0.15593348;0.38591531;0.90137315;0.43327829;0.80823493;
0.26430011;0.41260538;0.72277564;0.43928331;0.40739465;0.3826077;0.48353899;0.95356417;0.94458562;0.98820829;
0.89401805;0.79949403;0.73120755;0.83867502;0.64090073;0.9207356;0.08581575;0.7089026;0.94129539;0.035065301;
0.42959759;0.50576276;0.81827146;0.6952002;0.44787878;0.38760987;0.92670113;0.39880598;0.35830912;0.43429872;
0.30313766;0.92689925;0.41104001;0.14090064;0.69029778;0.29983631;0.20254283;0.11844323;0.20501162;0.73285425;
0.11178836;0.70519114;0.18609826;0.2380961;0.30243069;0.15553285;0.80588204;0.13225001;0.36217895;0.49251217;
0.70537519;0.32406318;0.11996192;0.8478151;0.071134433;0.94541013;0.78295141;0.15020859;0.69850695;0.99860364;
0.63915628;0.15303177;0.20357744;0.73062646;0.48769501;0.52494526;0.36431286;0.3049987;0.43423018;0.5867545;
0.9928571;0.067818344;0.0098724524;0.74118137;0.6468724;0.22532599;0.47053885;0.65986717;0.88804865;0.67534506;
0.32625252;0.16474864;0.74822557;0.38907987;0.044547681;0.68941921;0.23006079;0.70827776;0.04265156;0.47963157;
0.71403652;0.025562132;0.47230786;0.81152421;0.33900699;0.96353155;0.81382972;0.69835186;0.47563261;0.84187561;
0.71983713;0.61622906;0.61827439;0.24229546;0.36026445;0.10391753;0.8188234;0.32712206;0.24307744;0.099705823;
0.071202561;0.57244051;0.34318891;0.87664574;0.63647127;0.28734118;0.11247493;0.79453313;0.62614888;0.87663049;
0.67633027;0.30324262;0.27794269;0.69146645;0.73879999;0.47137865;0.13869986;0.26468357;0.85761684;0.57897097;
0.51010269;0.8780092;0.7245633;0.68935353;0.62888801;0.55995321;0.39356923;0.20292103;0.46076533;0.4636986;
0.14774916;0.24217173;0.093546577;0.21705073;0.06349434;0.40557784;0.38021794;0.1024044;0.044237912;0.35079452;
0.14043258;0.38819808;0.34385401;0.52440345;0.62341541;0.40156838;0.13264343;0.21654351;0.7361899;0.57522845;
0.72141469;0.61419874;0.86227757;0.6786297;0.79584867;0.64142209;0.9892078;0.61520582;0.20050067;0.41991377;
0.70456153;0.027526505;0.010561612;0.83255047;0.20981406;0.97853452;0.70055336;0.087270707;0.10289554;0.7009806;
0.72789699;0.20065825;0.22838333;0.10336856;0.24210232;0.19044521;0.18701792;0.069604166;0.39468908;0.013752578;
0.41467494;0.14769559;0.43564335;0.91855615;0.92240059;0.44531786;0.34189394;0.47730058;0.91220844;0.91100305;
0.90363932;0.38388464;0.17480975;0.90482926;0.5479582;0.93067116;0.17539692;0.42342001;0.78330296;0.2565504;
0.07825055;0.93788892;0.91562885;0.91768205;0.31990036;0.37015048;0.3311016;0.45826837;0.954395;0.31767431;
0.46803451;0.34510863;0.31959692;0.94462883;0.7204985;0.68091363;0.88602078;0.74592012;0.75171715;0.23967338;
0.76929855;0.64384985;0.48111653;0.67422545;0.42422783;0.49069962;0.16495326;0.71709245;0.55508429;0.1815668;
0.85977536;0.85587674;0.60782892;0.83932865;0.58243078;0.35979632;0.61563379;0.86663419;0.18274547;0.1222287;
0.59882009;0.14905441;0.21793261;0.18503447;0.24185812;0.61415488;0.79746503;0.082511701;0.50671756;0.92839593;
0.65168124;0.21197814;0.02085547;0.5425145;0.014936417;0.2262152;0.43469638;0.23530795;0.19584602;0.67462689;
0.052742004;0.13461842;0.56477749;0.50841212;0.51228744;0.55965126;0.72862691;0.047584407;0.51768959;0.51717073;
0.4512656;0.65439397;0.40823951;0.46338135;0.045016911;0.21326049;0.55331945;0.17954254;0.3863565;0.97219545;
0.65732908;0.36361298;0.31656525;0.26812682;0.80725771;0.88251758;0.47198689;0.94139737;0.89785773;0.29897863;
0.067201525;0.87005925;0.64145374;0.91822892;0.29706728;0.83092642;0.30302227;0.44096988;0.093699105;0.8863315;
0.65964848;0.27894324;0.85136294;0.63857055;0.21820167;0.93281662;0.50810051;0.24304831;0.70973098;0.23033318;
0.75023776;0.69771582;0.96337277;0.80809969;0.72701335;0.052806694;0.57857567;0.70531464;0.97112429;0.78532541;
0.052904416;0.97084963;0.54509765;0.43774673;0.66033256;0.28653276;0.47221065;0.51748389;0.32953647;0.25502363;
0.41825759;0.57496381;0.81324708;0.12485623;0.93018383;0.59644097;0.57886267;0.98471844;0.89136529;0.71340948;
0.83814675;0.58789593;0.14315386;0.09045361;0.62167108;0.21105573;0.17834052;0.20797332;0.11535581;0.61556751;
0.54936713;0.61013144;0.33873963;0.61211127;0.76832968;0.082594335;0.96168566;0.087443359;0.47584784;0.53886926;
0.75368142;0.4084653;0.20244174;0.66397262;0.50713086;0.50757337;0.35101587;0.67501962;0.40149134;0.31848401;
0.1593962;0.065829076;0.5109576;0.13519609;0.26156855;0.44244993;0.97757399;0.27008307;0.35113722;0.30569839;
0.49176627;0.98936868;0.03653134;0.073790662;0.75886029;0.21224795;0.225223;0.65519118;0.016269948;0.54442924;
0.91524172;0.13804398;0.19518606;0.81107682;0.57320386;0.58219844;0.082510263;0.2296256;0.053226016;0.40297365;
0.69155985;0.24267249;0.024446461;0.43550244;0.091315024;0.96954352;0.63825071;0.025242278;0.50958908;0.71509427;
0.68930644;0.74411744;0.14975448;0.52374882;0.34149992;0.18127368;0.48545101;0.42998478;0.27949005;0.20366886;
0.36204332;0.2008298;0.44646585;0.78860587;0.56746548;0.30258811;0.28384009;0.83094805;0.84002143;0.84764808;
0.4322333;0.71531701;0.66303068;0.27946669;0.14973262;0.5792284;0.67954558;0.63579381;0.38539019;0.68047655;
0.48081872;0.33741876;0.41932356;0.5484767;0.99356949;0.19355699;0.78084552;0.38851321;0.64821845;0.82692653;
0.71077543;0.85732865;0.13069209;0.88264036;0.053630121;0.73475057;0.69968581;0.048228279;0.21375626;0.051127851;
0.5882659;0.71184725;0.46219197;0.2551643;0.77078784;0.43832773;0.40359801;0.94633669;0.26346511;0.76517224;
0.23796946;0.77518892;0.59115195;0.007880128;0.17617324;0.32511362;0.68841422;0.87497902;0.86474437;0.12423082;
0.81951344;0.87325895;0.59103298;0.081218936;0.21602806;0.59203649;0.80397689;0.16701633;0.65334648;0.80577737;
0.90138859;0.018597515;0.39161721;0.64260435;0.52966481;0.92238873;0.49809101;0.69418174;0.93521321;0.4079366;
0.97180367;0.46847421;0.82112241;0.50666893;0.75276321;0.7723254;0.56721514;0.029879564;0.52815342;0.52986234;
0.55370313;0.70904654;0.14699271;0.64286131;0.92308426;0.21434729;0.77119821;0.16643268;0.49620372;0.66612273;
0.42387676;0.46681517;0.14854637;0.74829137;0.67198211;0.17418124;0.35712215;0.26086414;0.10306622;0.44607031;
0.45136192;0.4086591;0.47678018;0.33583987;0.88240647;0.019158522;0.032800291;0.98979837;0.81603146;0.70675641;
0.29844669;0.047448188;0.88644183;0.69136125;0.20503499;0.97067064;0.91793609;0.73006248;0.82222879;0.19697843;
0.53821731;0.37052038;0.32953519;0.54490048;0.69864768;0.75311452;0.19718884;0.32387438;0.83370429;0.91706121;
0.99181992;0.95151287;0.748285;0.38503593;0.72921193;0.959364;0.17516364;0.83347422;0.037014537;0.0050123609;
0.016443795;0.85192144;0.53600633;0.27518973;0.49809894;0.68193984;0.14873882;0.49635944;0.39287469;0.71680892;
0.77372777;0.15142435;0.36486918;0.25688922;0.36288589;0.44509757;0.20520297;0.92028821;0.099767223;0.33783114;
0.5133934;0.92340392;0.94438714;0.74200821;0.91235352;0.3915906;0.83614421;0.97302765;0.8414374;0.54055119;
0.59287876;0.8904351;0.5294534;0.18812504;0.57043803;0.61640811;0.46540418;0.76569116;0.021551505;0.45566908;
0.1411847;0.96104592;0.5259518;0.27547401;0.18767233;0.44378445;0.95745814;0.18837424;0.07463479;0.97096115;
0.19426413;0.94425935;0.064136975;0.55006057;0.82204729;0.22416219;0.23284006;0.67004085;0.6957013;0.61596113;
0.24906448;0.085100107;0.26331192;0.1098216;0.023965538;0.54925787;0.021982845;0.039893679;0.66150999;0.15738042;
0.40155098;0.67786723;0.87613928;0.64181709;0.40152779;0.14955281;0.71561885;0.27957511;0.76596171;0.72779483;
0.55936825;0.94757587;0.0061443835;0.75760067;0.90794951;0.4409892;0.13387799;0.83377993;0.98265463;0.31109557;
0.39863768;0.41326597;0.61985892;0.54757035;0.26043162;0.54951584;0.83076477;0.059367467;0.76631165;0.016581539;
0.72766942;0.093560055;0.038373955;0.56108773;0.85438097;0.58483392;0.30314133;0.010695015;0.94760811;0.71759695;
0.94022292;0.90552491;0.50617117;0.65091592;0.70929623;0.71054745;0.38808757;0.032482754;0.82598299;0.25445941;
0.45208108;0.56274027;0.43984818;0.62227714;0.011877739;0.41041714;0.69220352;0.17293647;0.22256854;0.98535877;
0.09363123;0.97240233;0.61169207;0.9124645;0.89488649;0.57888579;0.560911;0.36151746;0.52038378;0.89806032;
0.93368506;0.93991214;0.65715683;0.7824403;0.92953289;0.8158927;0.91588807;0.89528567;0.16029693;0.26957408;
0.32280928;0.053478561;0.44886848;0.87240183;0.46599501;0.34418738;0.65054137;0.50063521;0.00063376449;0.72042745;
0.6192922;0.69619632;0.51040077;0.01113131;0.82202613;0.89579052;0.17121412;0.81573933;0.66971302;0.8256653;
0.66336191;0.41091374;0.86653125;0.64598531;0.22256489;0.94401592;0.586743;0.16831185;0.72496021;0.21315092;
0.71083981;0.8454923;0.80791092;0.53470433;0.83242249;0.82089597;0.79143691;0.77266365;0.020358762;0.81527746;
0.11215575;0.10037544;0.26645154;0.8190769;0.84457421;0.34434724;0.057892781;0.58534318;0.042851042;0.14279133;
0.27420381;0.23665179;0.92651576;0.011585797;0.67288816;0.46209657;0.41370508;0.55858713;0.80322796;0.87118238;
0.30472231;0.37900656;0.29478428;0.87238044;0.10086722;0.28007439;0.20100245;0.80592829;0.61701596;0.36656868;
0.2720896;0.93761456;0.49224311;0.30178332;0.45568314;0.76966161;0.86925566;0.49279219;0.270028;0.11784662;
0.54123652;0.48042977;0.084972203;0.13441709;0.15726563;0.52838832;0.75330639;0.53114265;0.30848387;0.87351418;
0.70252532;0.085503794;0.67909229;0.051404271;0.2424071;0.83626479;0.54766935;0.074762069;0.14841126;0.75492048;
0.534612;0.78044271;0.75036156;0.12176788;0.025532234;0.96478724;0.57384491;0.68158001;0.14559273;0.042759575;
0.84800386;0.42193818;0.13095416;0.81449568;0.66413623;0.81671673;0.12702507;0.37535322;0.38550144;0.19803096;
0.94415462;0.45288429;0.13553102;0.69786155;0.19021849;0.68896544;0.49293506;0.95208716;0.920389;0.31169191;
0.1125605;0.36675659;0.56229895;0.87848806;0.4527916;0.76725024;0.55045474;0.3971889;0.10513665;0.90410674;
0.68130636;0.80753332;0.79081887;0.0057414146;0.86854708;0.98460215;0.90849632;0.67245859;0.36598802;0.57286078;
0.19569317;0.27210853;0.049453605;0.14671323;0.4727917;0.93621618;0.43372995;0.31020957;0.60297;0.76256424;
0.78372473;0.19725972;0.70536458;0.76626766;0.16448605;0.84360486;0.26739687;0.38047573;0.65577555;0.34573483;
0.12265074;0.349251;0.13974451;0.88778657;0.1434841;0.59570843;0.54939568;0.037882134;0.39568201;0.60881597;
0.78237134;0.5312385;0.0077706734;0.12461286;0.2510961;0.2322493;0.10176668;0.67043763;0.013902176;0.049938485;
0.42983085;0.26907623;0.056510489;0.77259487;0.077263355;0.94501436;0.56028068;0.32158247;0.21119347;0.42376426;
0.91770488;0.58281565;0.1010474;0.91186184;0.68492812;0.94621128;0.4024229;0.45076898;0.93093216;0.88524508;
0.23113929;0.30539995;0.53125787;0.97745961;0.63571781;0.90521955;0.65134287;0.73282439;0.85053205;0.94818789;
0.88910621;0.88913673;0.94617325;0.05910816;0.60362178;0.76152974;0.54214966;0.099257737;0.23156807;0.58125216;
0.16570562;0.53052771;0.59743917;0.057622191;0.35393667;0.08039166;0.86611265;0.57175905;0.57267392;0.62407774;
0.35279799;0.15111409;0.86825758;0.069729671;0.48753574;0.0068469569;0.86246175;0.091332681;0.51856774;0.88558489;
0.6100235;0.72714126;0.013795921;0.54760474;0.90789831;0.61642945;0.33515039;0.89416593;0.73214823;0.6788044;
0.58371472;0.084189571;0.59492481;0.13192727;0.69883269;0.70683295;0.85422969;0.18556097;0.46699297;0.71985984;
0.56578237;0.39293751;0.18999808;0.0475659;0.73818594;0.90924895;0.71854562;0.39735389;0.1624344;0.91634709;
0.41042501;0.13313735;0.13509072;0.90846241;0.5393849;0.41732168;0.30053911;0.50163645;0.32535374;0.43935934;
0.30859402;0.63360924;0.94534409;0.11554671;0.72351032;0.60313535;0.54423857;0.22893795;0.86732817;0.11009611;
0.41799992;0.59998161;0.56374723;0.41959992;0.73943627;0.66840076;0.51027852;0.98127007;0.10796801;0.95638478;
0.95517641;0.30297822;0.57490057;0.83293945;0.954656;0.27638122;0.34286955;0.8447684;0.52741641;0.28662068;
0.29606184;0.22002295;0.62832981;0.26666051;0.54082268;0.34178063;0.5380457;0.63117135;0.7020123;0.65967804;
0.81395614;0.73367929;0.950643;0.73524606;0.86885881;0.96299422;0.7346738;0.38885728;0.57671219;0.3341153;
0.23111604;0.89977837;0.32361865;0.7236557;0.65976077;0.48811862;0.0006502691;0.67618167;0.56068051;0.62739712;
0.97335452;0.052974414;0.77553636;0.93963271;0.54369926;0.2246237;0.011958634;0.5143677;0.25644034;0.74730933;
0.49751049;0.97902972;0.21257004;0.060038894;0.10259357;0.1559543;0.083384424;0.99639302;0.99033833;0.63371295;
0.22885644;0.86730397;0.094226345;0.89481425;0.58007383;0.062979952;0.0006617753;0.033323411;0.9153052;0.67306882;
0.76309788;0.067139;0.18543594;0.75832379;0.7996639;0.52363741;0.068912916;0.97350574;0.18428279;0.82084012;
0.73810095;0.14062367;0.48185119;0.52856219;0.52374297;0.62389493;0.24106398;0.19898304;0.56486624;0.0050593675;
0.080073468;0.038928997;0.87362421;0.14483148;0.94797587;0.0035078211;0.061416823;0.94705564;0.9605633;0.65378761;
0.16198692;0.31822413;0.093728475;0.91459918;0.8134436;0.36969858;0.25207454;0.88949811;0.57739085;0.98023957;
0.010951405;0.30213857;0.32819173;0.6725738;0.69748884;0.4135077;0.062109746;0.19705157;0.69684577;0.73853546;
0.074933045;0.29378498;0.31866604;0.1348152;0.37840211;0.97049427;0.44330999;0.37002715;0.6760363;0.04324504;
0.76788598;0.68198693;0.77762866;0.17622499;0.40457919;0.53053617;0.40823287;0.36794272;0.10426988;0.47885075;
0.15847604;0.43837583;0.21902323;0.34741968;0.50188929;0.67847985;0.38729358;0.16400836;0.8699525;0.62374693;
0.2504341;0.24148454;0.6395036;0.41598058;0.42542973;0.0091114501;0.74011934;0.98597151;0.67164713;0.46480781;
0.16826387;0.81361204;0.61861789;0.61235023;0.49923241;0.4074693;0.49958575;0.75869685;0.85705137;0.38913098;
0.89662862;0.38458437;0.93254513;0.86528188;0.76004297;0.99994093;0.51211578;0.32657531;0.08829309;0.51062042;
0.94180453;0.75988889;0.45011094;0.32781133;0.44558251;0.021536281;0.0039281184;0.45467731;0.37896293;0.24846233;
0.27984563;0.029058898;0.15372625;0.10917959;0.29809999;0.12258009;0.080943309;0.018175429;0.05118585;0.011464487;
0.71187598;0.2488405;0.39873427;0.52396327;0.7143501;0.085649431;0.02877407;0.15834659;0.18510523;0.8122744;
0.062302012;0.24882568;0.36500663;0.96472424;0.93532175;0.31132641;0.65623075;0.84529585;0.81158644;0.56868392;
0.99631596;0.78578246;0.908889;0.77897888;0.2155524;0.63718539;0.91648138;0.24451371;0.39548334;0.24262825;
0.81100547;0.68554062;0.61166143;0.16195402;0.99123788;0.11007006;0.5458228;0.18832307;0.74292505;0.6749649;
0.64616263;0.8491376;0.77252901;0.58082759;0.83805585;0.27405405;0.89466345;0.79221249;0.29933923;0.35231367;
0.86793685;0.33776054;0.27614579;0.32878739;0.48707885;0.86183327;0.82250082;0.34152123;0.77874643;0.3230781;
0.70952827;0.99705321;0.62757778;0.82033908;0.27950877;0.035955284;0.12340084;0.47177273;0.14257616;0.16199248;
0.22653016;0.089252152;0.46676028;0.28501427;0.8392328;0.3003909;0.060999092;0.33097294;0.080560036;0.85682625;
0.9197607;0.55675966;0.8269347;0.47798353;0.96206105;0.62437421;0.3174262;0.51531589;0.57937807;0.63794082;
0.67318827;0.62240756;0.64575309;0.5792864;0.55981624;0.68460214;0.2019092;0.78704268;0.5211637;0.58038324;
0.3378711;0.90801775;0.26744944;0.84830791;0.38642451;0.29162538;0.53202111;0.81221187;0.21536741;0.97536755;
0.56071985;0.82236874;0.8442567;0.34868154;0.50374037;0.25581971;0.80099338;0.8910253;0.88535672;0.81371135;
0.6685003;0.11356709;0.56278378;0.62629443;0.59843224;0.63306832;0.07450439;0.57596731;0.87891692;0.27396145;
0.002506909;0.9990955;0.71879035;0.95395261;0.025432972;0.27516696;0.84664685;0.42723596;0.96260554;0.25692081;
0.62330818;0.89090478;0.68985367;0.88334692;0.17705466;0.60305536;0.83556807;0.22957598;0.39943546;0.19299181;
0.94826221;0.57378912;0.21256322;0.041073423;0.80494219;0.54612929;0.38925815;0.23658302;0.78587985;0.57815552;
0.97016662;0.56701362;0.57303667;0.31420073;0.93167311;0.68034202;0.43767402;0.55454791;0.050592124;0.53984976;
0.86925769;0.54018831;0.034626756;0.14234325;0.23178253;0.53535306;0.18455404;0.36640662;0.25974986;0.70634037;
0.41018915;0.85755557;0.77553314;0.33082017;0.20509212;0.019571533;0.52741277;0.23539618;0.060591009;0.20735036;
0.02933713;0.52858746;0.12344614;0.037018027;0.81955117;0.56742024;0.037917707;0.21562451;0.68798161;0.51129639;
0.86353201;0.90078384;0.19230007;0.99779677;0.84354073;0.4330591;0.96216494;0.47298452;0.98501259;0.80092239;
0.50996917;0.96059889;0.68423259;0.48834848;0.65493554;0.77748513;0.90638125;0.34900001;0.77118021;0.44102162;
0.55161035;0.35952985;0.50874358;0.81332803;0.039678875;0.15212484;0.13242982;0.64892286;0.24982619;0.10126949;
0.65621316;0.22733596;0.053457268;0.1387715;0.98495269;0.16828333;0.24336682;0.22965732;0.10911904;0.70328927;
0.30477953;0.7986874;0.86826897;0.7994436;0.15711646;0.4146975;0.12188441;0.80408806;0.75611156;0.55092573;
0.62368912;0.92568159;0.68900669;0.7474246;0.62403566;0.56282228;0.74276823;0.56977922;0.32532418;0.037866727;
0.81629795;0.74145705;0.44655845;0.060260478;0.93609214;0.061299253;0.55162638;0.98076934;0.998806;0.19818255;
0.28542897;0.53740585;0.0022200982;0.84306592;0.25148278;0.60804993;0.31148878;0.48642549;0.25083432;0.32421088;
0.99936837;0.67805302;0.20365787;0.40833679;0.57022619;0.0304974;0.18874215;0.13515769;0.9662891;0.70990455;
0.40836126;0.45460394;0.84940171;0.1089785;0.42372665;0.24537843;0.085414946;0.16734159;0.21465395;0.22906846;
0.36422682;0.13520725;0.4379845;0.24648306;0.54987353;0.11777161;0.01593606;0.057538185;0.94104451;0.13049564;
0.773;0.090258956;0.31318489;0.11849885;0.069377333;0.91545522;0.49194494;0.091077223;0.81825745;0.04990989;
0.44289535;0.21368256;0.66018504;0.94891018;0.1107995;0.085763894;0.66391581;0.73411107;0.57672226;0.74068415;
0.67862093;0.72241026;0.75912684;0.66340995;0.7942555;0.64430416;0.16344559;0.31415042;0.28047645;0.070226677;
0.35607406;0.26248437;0.25985134;0.30449384;0.80163449;0.83099771;0.50429153;0.97277963;0.96813589;0.92181963;
0.87680012;0.80937397;0.91528106;0.72578466;0.74333245;0.89474225;0.94259423;0.68303335;0.86641866;0.73873937;
0.87342411;0.77150869;0.86582935;0.94078463;0.5875634;0.88186038;0.73206663;0.83175576;0.39683491;0.16478817;
0.43769813;0.36909556;0.43513289;0.56022483;0.46201575;0.22514223;0.17885403;0.35442877;0.51388222;0.68117076;
0.19124898;0.28898484;0.53123176;0.83506078;0.73029953;0.22321922;0.88111866;0.20496692;0.61636686;0.10310138;
0.51711136;0.71183348;0.99888688;0.81857884;0.76045251;0.86616468;0.64168161;0.76858735;0.64561933;0.7895968;
0.94185078;0.20530838;0.49427804;0.94352949;0.7267943;0.72084248;0.22679262;0.2267621;0.78434306;0.70314693;
0.44165221;0.4709028;0.58209705;0.023455739;0.19991094;0.18140177;0.83071482;0.31104609;0.3380107;0.88657022;
0.51677758;0.45278448;0.19252925;0.37032813;0.99225307;0.56785709;0.59689844;0.29864374;0.85489947;0.7199477;
0.36065224;0.50729382;0.30603337;0.76100886;0.863069;0.42043743;0.24893269;0.47093248;0.59607488;0.84198189;
0.71510178;0.41592142;0.41764233;0.072101869;0.60882664;0.42742747;0.66146004;0.45499837;0.14946701;0.41883674;
0.62960231;0.54572785;0.34615448;0.45797369;0.88508338;0.9977088;0.10509446;0.43663627;0.63976038;0.072776459;
0.2886875;0.85467958;0.26525009;0.8887676;0.65330786;0.34942803;0.36287439;0.036506746;0.51150262;0.49005353;
0.72059196;0.27203432;0.038301516;0.72800881;0.98771465;0.015566245;0.3158907;0.50490689;0.97849041;0.72922945;
0.15341462;0.91084802;0.91687161;0.50542492;0.10365026;0.98893964;0.039093014;0.96673989;0.316845;0.95017439;
0.99311322;0.30561537;0.38718876;0.77014059;0.98923701;0.99042714;0.66419232;0.60998625;0.36194229;0.72138256;
0.78919375;0.72717327;0.97913498;0.10267915;0.44272232;0.90916675;0.15295899;0.84994334;0.24064067;0.93217957;
0.0046930141;0.48677176;0.023943229;0.91886902;0.95165431;0.24818152;0.30787775;0.4273774;0.84160239;0.97126168;
0.25640774;0.548226;0.55782747;0.95392394;0.3105011;0.0091218418;0.42901805;0.56411159;0.35209396;0.02482648;
0.77454323;0.89046425;0.054659974;0.11038786;0.63219047;0.61220074;0.4944486;0.17414419;0.64869076;0.43881419;
0.43194836;0.22867914;0.37530741;0.62801486;0.27463591;0.26290986;0.038240071;0.3077476;0.028543135;0.77443182;
0.053933915;0.30296403;0.79198521;0.51276577;0.046234068;0.48214984;0.79836231;0.55187589;0.28430545;0.083826579;
0.55995715;0.72280049;0.90913773;0.079392061;0.51329899;0.72781783;0.17500235;0.74327099;0.61345315;0.68995559;
0.93361813;0.67603612;0.6168732;0.74971002;0.68129504;0.63011986;0.9794361;0.5752793;0.31767252;0.28100568;
0.61866331;0.2198762;0.087062083;0.044780198;0.01051793;0.97326839;0.14860936;0.23530138;0.22759096;0.92748022;
0.52052599;0.41412893;0.50401801;0.57137674;0.0018263404;0.09266755;0.76629001;0.71903741;0.27002966;0.091444887;
0.29872572;0.91836214;0.47329375;0.82325882;0.067741886;0.95431399;0.22016707;0.41782522;0.048403937;0.49521846;
0.95801622;0.012759954;0.23593517;0.7843557;0.073337197;0.94684607;0.50125098;0.97669101;0.20750538;0.21387239;
0.84199703;0.76195186;0.33453879;0.40813208;0.59725612;0.96555424;0.4638668;0.21094371;0.68034703;0.75875759;
0.21341243;0.41967249;0.026811857;0.95602334;0.67013246;0.53569788;0.06622263;0.43729714;0.04676703;0.97562432;
0.72672534;0.90337336;0.63403571;0.041245155;0.77646297;0.45802578;0.25365081;0.99001217;0.99283105;0.49745068;
0.41178581;0.43268538;0.54331821;0.79308617;0.68014503;0.48713097;0.93292534;0.2898711;0.83985901;0.43625495;
0.63664198;0.76342368;0.71072215;0.78069568;0.036149677;0.93678898;0.63216311;0.015489362;0.28639287;0.25718838;
0.88844895;0.88747239;0.67543536;0.65067047;0.42198378;0.093154125;0.75475681;0.17023203;0.42869511;0.18753646;
0.33363426;0.9508574;0.97817075;0.3058936;0.27116454;0.77099872;0.98943186;0.98840952;0.91600382;0.28194803;
0.83245409;0.39775684;0.5557245;0.29073402;0.58314008;0.7805317;0.012139854;0.59693474;0.82137924;0.70691228;
0.33528894;0.034632079;0.3412489;0.54201716;0.43819937;0.32856849;0.58827478;0.48675314;0.094693147;0.48442546;
0.088340811;0.83858019;0.34863654;0.43408361;0.18969959;0.86853635;0.39622349;0.43916693;0.9561404;0.40233475;
0.5164184;0.12000227;0.28950563;0.71603453;0.74151361;0.15617961;0.17361096;0.015489503;0.65982497;0.84708202;
0.6166119;0.67959994;0.9725703;0.89773947;0.98819488;0.86270708;0.96732593;0.16957572;0.38464421;0.35798678;
0.60321444;0.17726348;0.50105911;0.23962814;0.15858231;0.95363641;0.6328581;0.082811512;0.23210098;0.27535892;
0.64954609;0.91206193;0.66893333;0.936764;0.74993801;0.19957577;0.58206081;0.87339354;0.21891527;0.9175064;
0.53061342;0.4566116;0.71829677;0.61236984;0.79987079;0.87466836;0.33112285;0.95664018;0.38451847;0.86631083;
0.28860092;0.27276924;0.041228436;0.83044237;0.68627399;0.25236201;0.0054608472;0.32702404;0.29299834;0.56118387;
0.45839182;0.87853622;0.93338519;0.36124676;0.68110698;0.10228741;0.50045103;0.13606818;0.84524226;0.060237329;
0.7628569;0.57011133;0.015915783;0.99258524;0.1376534;0.17988564;0.17946064;0.46609712;0.64433622;0.42174271;
0.39831951;0.51481158;0.032419201;0.41525719;0.28091884;0.66354263;0.79409999;0.043847278;0.69068605;0.86345851;
0.36961287;0.017202463;0.61740428;0.94566268;0.11143855;0.25603729;0.15281042;0.26508909;0.32194209;0.69733888;
0.44217435;0.87351441;0.93984121;0.25977424;0.55149138;0.26696754;0.27253321;0.23872635;0.64041817;0.29052156;
0.65422571;0.35261407;0.45354658;0.010184625;0.043388292;0.48140973;0.39885935;0.19337806;0.28411716;0.031897906;
0.44474363;0.89954126;0.14768045;0.4479782;0.0030619865;0.47394037;0.50941175;0.3837046;0.27783647;0.50273108;
0.047620337;0.3645981;0.46170461;0.11988533;0.80692148;0.057874206;0.7480607;0.64275795;0.72141469;0.59666622;
0.86475909;0.53423828;0.85258335;0.70907098;0.24929124;0.76257646;0.0084728133;0.62436152;0.31294855;0.37562835;
0.39141926;0.3490296;0.89317781;0.71321595;0.49449801;0.91685909;0.58870423;0.16242051;0.72151673;0.22104563;
0.99991244;0.28674978;0.75552827;0.89474905;0.99182534;0.40029091;0.40540156;0.77971345;0.63467342;0.34867373;
0.54449421;0.53646874;0.50991583;0.84812641;0.16277328;0.77584708;0.28679946;0.64453578;0.38313663;0.97479379;
0.025960021;0.527408;0.12763168;0.24147773;0.28736091;0.63835973;0.90421796;0.90142554;0.23557393;0.60308683;
0.1500202;0.7318514;0.47518331;0.40524617;0.23485245;0.31024775;0.41537076;0.8436448;0.37438253;0.44067881;
0.29272443;0.87129962;0.27825144;0.85482299;0.14750966;0.46591866;0.12805752;0.32106295;0.83003455;0.79523671;
0.27154189;0.43445608;0.79177576;0.35367885;0.26795313;0.34946573;0.12769142;0.78948534;0.83488232;0.056848396;
0.35669479;0.83723283;0.96463078;0.84994233;0.61014849;0.73901653;0.45584172;0.53886008;0.90308666;0.53210825;
0.81910199;0.19218554;0.069953427;0.62613869;0.43281034;0.10071479;0.37857699;0.063582771;0.91519243;0.16468413;
0.63815355;0.56735885;0.81076533;0.176305;0.71656585;0.54472405;0.18353085;0.61232185;0.71144527;0.61317146;
0.60912371;0.11109763;0.63277727;0.63244474;0.2493434;0.51017547;0.53942186;0.74644476;0.98277384;0.54225999;
0.97301579;0.039126255;0.85778201;0.73057562;0.68203747;0.22452548;0.12619983;0.14746608;0.9832269;0.012461248;
0.76806056;0.21249317;0.47293329;0.82363129;0.37025324;0.77520066;0.34321404;0.44828194;0.49935496;0.25818947;
0.67819357;0.015216581;0.29858994;0.045069743;0.85255373;0.24952808;0.90981412;0.085268959;0.7867263;0.46752205;
0.24702244;0.40141749;0.64321983;0.82673448;0.74272382;0.38765827;0.59055072;0.52097619;0.075908169;0.054229915;
0.85572153;0.63702083;0.33684778;0.017591575;0.82496017;0.3749004;0.87075901;0.46666306;0.92572659;0.78479266;
0.98762912;0.75430763;0.99503034;0.57548696;0.61237073;0.29003733;0.84556133;0.20845416;0.35497653;0.52784783;
0.99811316;0.91928411;0.71051067;0.40304568;0.983284;0.28906882;0.46172655;0.89249045;0.63845962;0.66398913;
0.24549054;0.60131681;0.88501179;0.50264227;0.84988576;0.21298933;0.60476595;0.65128255;0.68230021;0.21567337;
0.59031677;0.0063844197;0.051121451;0.68840647;0.59526753;0.47488263;0.66271949;0.031481087;0.55224085;0.92884785;
0.66535938;0.97164488;0.068564087;0.22470863;0.37554845;0.22290948;0.15791708;0.64010543;0.0075568855;0.18250874;
0.37462905;0.54988098;0.55961639;0.35946205;0.30038002;0.12407128;0.79793644;0.54844666;0.35668316;0.34860155;
0.5177595;0.81304556;0.49785286;0.99776739;0.75379133;0.82253462;0.57953185;0.042567573;0.86820841;0.68542123;
0.52218747;0.74508089;0.23455864;0.57705611;0.72024304;0.6613971;0.88606727;0.71072149;0.79470468;0.20831887;
0.90603268;0.6526081;0.95142496;0.71965992;0.39884898;0.78194278;0.97437584;0.56429631;0.75125957;0.18440099;
0.57165474;0.67478538;0.39132398;0.22583494;0.99064821;0.54943496;0.37967095;0.23677878;0.83487189;0.18144788;
0.64801323;0.45009619;0.81821984;0.056627452;0.88232416;0.73439658;0.57430005;0.75765878;0.56545776;0.11003175;
0.68450248;0.94822454;0.20387192;0.77556783;0.29994598;0.31863436;0.11729921;0.95701444;0.070673384;0.29137266;
0.73679614;0.25686744;0.10580976;0.11899859;0.036233809;0.58905047;0.32898882;0.69581568;0.80889368;0.11414724;
0.0064595165;0.013053496;0.82768846;0.59001231;0.21718691;0.19162382;0.71122688;0.516482;0.41784286;0.071023434;
0.61221278;0.8086915;0.30144086;0.21939047;0.87356895;0.50972962;0.62191069;0.92101973;0.96658063;0.029782858;
0.84779817;0.41610187;0.33011618;0.89933014;0.62894589;0.3186174;0.60777032;0.64823282;0.97290891;0.423915;
0.37184021;0.87261647;0.72703391;0.12251142;0.78092909;0.13291502;0.68435997;0.52767819;0.50234115;0.57326859;
0.06529662;0.93036747;0.96304286;0.18744996;0.41905954;0.99776942;0.83113378;0.98150569;0.49859545;0.45523986;
0.90890229;0.34710756;0.18459716;0.78814512;0.16558449;0.89660436;0.57796782;0.92697942;0.73602289;0.73871285;
0.69539821;0.42611128;0.74669844;0.93775761;0.22108378;0.80774593;0.61707073;0.6370033;0.2134728;0.30309278;
0.099814951;0.79403871;0.37511513;0.74240589;0.67842478;0.30756307;0.015223886;0.090975352;0.68078446;0.63186967;
0.83668518;0.98352069;0.69286144;0.39023855;0.69894284;0.33123851;0.071360342;0.93449545;0.57957125;0.5011602;
0.76089656;0.58118892;0.77461034;0.11455491;0.90155894;0.52684075;0.16510132;0.9464919;0.15005589;0.029234882;
0.045505162;0.35957661;0.65045834;0.41114888;0.58436668;0.2645793;0.010641597;0.5571143;0.99064779;0.27234241;
0.39690313;0.27332267;0.63441086;0.36821562;0.7964803;0.51051807;0.92005211;0.31274736;0.41422832;0.77337885;
0.57779008;0.89737993;0.24820925;0.097692437;0.65559143;0.96849859;0.229975;0.40656868;0.20117912;0.11927981;
0.55338007;0.09316279;0.29446808;0.51901883;0.42334291;0.51350933;0.71730804;0.48572865;0.97186041;0.016359432;
0.73238283;0.44266638;0.74151731;0.87761688;0.20840669;0.76554644;0.25968897;0.18014733;0.23965681;0.39445022;
0.52286196;0.27336073;0.31456539;0.58577049;0.036179475;0.8459022;0.092706449;0.20956919;0.039314944;0.097554997;
0.15391441;0.28661117;0.82415903;0.006577651;0.46320906;0.3441371;0.31675622;0.86795217;0.34671864;0.63470191;
0.96625715;0.41429865;0.26246157;0.19973288;0.81327808;0.74717265;0.12390252;0.12271821;0.29632983;0.62289846;
0.2246826;0.72705334;0.54760647;0.11801191;0.51638871;0.32398021;0.80966735;0.029912509;0.97703195;0.40884724;
0.81136847;0.86712736;0.24540782;0.12211689;0.12211635;0.19535871;0.092819586;0.69644487;0.23344447;0.10551532;
0.32575044;0.88047445;0.15974425;0.26764563;0.099219546;0.77929389;0.56162059;0.43588105;0.69981652;0.44343737;
0.69346893;0.72566509;0.98103708;0.44760314;0.44929671;0.95299131;0.85657859;0.36074975;0.12054521;0.85102421;
0.60294604;0.82162744;0.097084619;0.34413293;0.70709699;0.65021384;0.48737329;0.21545596;0.53214401;0.067145601;
0.11599578;0.18376495;0.85323739;0.70713592;0.72106355;0.37515831;0.83842772;0.57836765;0.3443979;0.64487898;
0.61685956;0.048258658;0.53263122;0.59900719;0.55851012;0.067653343;0.03458672;0.5341118;0.021973597;0.24892244;
0.13912974;0.21411105;0.32937995;0.18739523;0.271245;0.16780125;0.48663867;0.50877774;0.34811538;0.30492648;
0.42755845;0.61868787;0.86899406;0.069336377;0.25831369;0.59783214;0.27024639;0.42625639;0.28419495;0.20831257;
0.78080183;0.032558627;0.38980973;0.14685304;0.49478278;0.95460206;0.49985126;0.57760936;0.87105113;0.17438284;
0.63396358;0.24536358;0.62868363;0.5302822;0.88957757;0.11556125;0.39344805;0.6718502;0.25958294;0.1321422;
0.4172371;0.30401665;0.13067806;0.53041458;0.052064478;0.1773234;0.083614193;0.98532879;0.94405746;0.70733786;
0.13957617;0.75852472;0.090609208;0.91694015;0.63305748;0.94801128;0.93830639;0.72778416;0.53149456;0.94806826;
0.56470138;0.94019872;0.62690437;0.70090908;0.70863026;0.71116304;0.51340908;0.74000281;0.71604586;0.71625948;
0.81758493;0.28742364;0.79107642;0.37983105;0.80691212;0.83831191;0.78357947;0.83506286;0.28347254;0.72243088;
0.92091447;0.78637642;0.49510938;0.14731206;0.41241717;0.73312825;0.52291524;0.58613873;0.039934535;0.076929018;
0.79252642;0.20845705;0.29651228;0.10015089;0.91210526;0.58773804;0.53450614;0.82281923;0.57662207;0.043872129;
0.53954643;0.51993394;0.51485139;0.2167836;0.71284485;0.57216316;0.63231313;0.10727645;0.20311165;0.69966131;
0.79006344;0.62586617;0.65502203;0.40698579;0.83443338;0.6141305;0.38702974;0.74381769;0.96229571;0.73465067;
0.21300454;0.30164555;0.98278737;0.22283979;0.46531206;0.16726908;0.54769599;0.22370939;0.64625573;0.081018366;
0.91813678;0.21883318;0.77392733;0.7054801;0.2090732;0.92698503;0.39006826;0.54791957;0.032397188;0.97755188;
0.14407757;0.4765597;0.76249397;0.70609969;0.63847101;0.31580517;0.51580864;0.21308719;0.1387857;0.69428271;
0.67173982;0.19769345;0.9611426;0.12094948;0.95791292;0.62718391;0.95923871;0.65912241;0.14778125;0.71615744;
0.99542302;0.18196101;0.46812305;0.64574236;0.86460131;0.74029708;0.59007263;0.19598936;0.4752543;0.5109095;
0.80488455;0.51245797;0.34589776;0.21971656;0.10460585;0.83368117;0.51674384;0.12693051;0.10216283;0.46945757;
0.51179534;0.80032772;0.10705078;0.31089923;0.076708786;0.55929506;0.091209143;0.42120609;0.70486516;0.27651054;
0.92446965;0.75761831;0.048343111;0.2997694;0.72837716;0.48393318;0.058103841;0.32642275;0.84939492;0.89835548;
0.98779291;0.88244677;0.62722462;0.48318368;0.59990984;0.96321082;0.10414109;0.06597849;0.85337126;0.74187213;
0.42733884;0.50781095;0.87425745;0.51078427;0.31075114;0.3647427;0.7946434;0.86625999;0.1706799;0.97659105;
0.68205029;0.86260355;0.9319154;0.26824585;0.06660042;0.84423804;0.89599836;0.75734925;0.44876862;0.36533576;
0.30512851;0.25743297;0.3006345;0.92204684;0.35452369;0.3472636;0.92546237;0.31772164;0.98334938;0.28192359;
0.02215906;0.87766731;0.59638691;0.3837814;0.0084948363;0.26068345;0.5044626;0.5130325;0.3276369;0.091463879;
0.59021991;0.18768695;0.088678293;0.016041311;0.18427816;0.43831876;0.6526947;0.082628779;0.24168371;0.76746792;
0.14399037;0.92129415;0.94099694;0.18524933;0.98558295;0.79051018;0.75791961;0.074846491;0.48103875;0.7045933;
0.1993842;0.33143058;0.7673136;0.67923814;0.30551326;0.26003754;0.89741784;0.84138411;0.85142833;0.9771359;
0.87536198;0.34316146;0.73748749;0.9702552;0.14746866;0.96621555;0.079261556;0.12380212;0.83258104;0.74990654;
0.41632941;0.014471021;0.8285808;0.53566426;0.43629628;0.074870102;0.5333845;0.32804728;0.086931691;0.5056082;
0.038133223;0.5235278;0.59247071;0.68220949;0.21682784;0.65459996;0.77853549;0.20672931;0.83759177;0.22328201;
0.65634024;0.5435701;0.29549128;0.71301115;0.94152832;0.73909611;0.92785555;0.054523982;0.47283536;0.9604544;
0.94905257;0.86395389;0.27644739;0.8901999;0.33124435;0.91186911;0.36483932;0.47324672;0.90269035;0.86664265;
0.2003302;0.44301721;0.64165729;0.96424681;0.60026783;0.59905642;0.52123845;0.0069192592;0.92806894;0.67591429;
0.2602362;0.56331927;0.76454401;0.010426912;0.80727226;0.82728791;0.72136265;0.60417384;0.16618899;0.5391916;
0.93210673;0.88192016;0.67707628;0.31999403;0.625983;0.92905647;0.15931927;0.95807749;0.32966074;0.7316851;
0.41960031;0.48192397;0.40046006;0.13695562;0.91269791;0.14944363;0.77902418;0.89499313;0.69400781;0.31641352;
0.82545394;0.96589994;0.3158538;0.88649297;0.50837409;0.28975087;0.33805063;0.73332548;0.79600483;0.87679106;
0.32136029;0.36450911;0.30773157;0.52850991;0.85316646;0.40030748;0.4615376;0.23471588;0.99617404;0.56472832;
0.87977153;0.4795436;0.98367643;0.34001338;0.86679518;0.89004672;0.87474662;0.88382578;0.058180455;0.40307212;
0.88572437;0.63289285;0.21939208;0.32905212;0.62748903;0.99193639;0.79002661;0.55761641;0.5204466;0.87248468;
0.93846321;0.62383574;0.89305735;0.51609713;0.51134682;0.74119014;0.48507476;0.14379959;0.92277956;0.06919343;
0.36209154;0.1305631;0.18077756;0.89987844;0.19331649;0.040657818;0.084798567;0.31644067;0.56480807;0.49809512;
0.22382782;0.74021;0.4882254;0.12833796;0.25535354;0.6304543;0.97605848;0.22530028;0.92388433;0.54912132;
0.019822411;0.89480096;0.80694044;0.64674646;0.89092523;0.016892709;0.59800893;0.44257966;0.74355417;0.13093159;
0.8390196;0.37244484;0.97218072;0.89718354;0.50606859;0.38522044;0.1860026;0.54198772;0.76021808;0.28366971;
0.40914607;0.40913081;0.14201842;0.49662039;0.21169764;0.55775392;0.41613305;0.94999319;0.83860373;0.42092273;
0.06213193;0.10998181;0.27966219;0.5175125;0.22963303;0.63470125;0.6538434;0.084605575;0.34482431;0.67807698;
0.2271492;0.78729612;0.12293526;0.6788373;0.22198413;0.16638404;0.25314546;0.70212901;0.40055332;0.79395223;
0.49195826;0.6482625;0.38616449;0.19093202;0.61811328;0.52694166;0.27915752;0.19749464;0.85107887;0.55439019;
0.25550875;0.11022288;0.47987163;0.78032088;0.59915739;0.34108171;0.31312475;0.27156815;0.99088496;0.82294428;
0.48114577;0.72556204;0.48724934;0.40964285;0.043918751;0.63948786;0.73093307;0.2318925;0.85181028;0.62684911;
0.64810795;0.4846735;0.96039993;0.50549459;0.27132443;0.72207987;0.83626491;0.32946694;0.79836941;0.29896778;
0.63369364;0.41845489;0.67607003;0.87320918;0.56199813;0.22851498;0.44134355;0.62443709;0.7690286;0.12284423;
0.45458072;0.20408575;0.75741929;0.14364669;0.3857739;0.78808957;0.65976149;0.0070959441;0.010834634;0.1346135;
0.86124301;0.22937746;0.66031581;0.35892028;0.60288507;0.20697553;0.6640318;0.73395026;0.036791809;0.022496408;
0.56599534;0.13261044;0.47865355;0.22851631;0.31853426;0.61886716;0.83366054;0.019446732;0.04099182;0.76990932;
0.98624879;0.05440332;0.30802754;0.055823661;0.043431073;0.056101166;0.57981348;0.59335434;0.36014646;0.19558403;
0.84072411;0.52198744;0.35504723;0.24522084;0.22364467;0.34131339;0.32382762;0.62042075;0.36093631;0.23568405;
0.073957883;0.48449233;0.97102129;0.64516163;0.23880191;0.34385353;0.74040329;0.87874639;0.6283111;0.63078249;
0.17762542;0.73475552;0.57755971;0.70854098;0.67912227;0.17739606;0.13218673;0.95294201;0.48227188;0.21665862;
0.17121886;0.95698941;0.61506045;0.48961079;0.43383113;0.55367988;0.25683242;0.49071562;0.20748283;0.71357226;
0.52780092;0.030026706;0.86968303;0.83145189;0.35469681;0.37967128;0.81835151;0.86274916;0.35678425;0.27601933;
0.33971834;0.40863061;0.38106242;0.907996;0.41102955;0.86142516;0.87915355;0.4853068;0.63012516;0.39425036;
0.15593742;0.72234917;0.96993947;0.94522023;0.25948519;0.38427109;0.36133182;0.045698948;0.55158675;0.30499634;
0.49051222;0.022441419;0.43387532;0.56228334;0.76024425;0.093254276;0.80053127;0.34138501;0.80349034;0.2324512;
0.80753469;0.61011994;0.18997957;0.17177263;0.68713593;0.59059411;0.11127428;0.14038338;0.55599123;0.70034009;
0.71346909;0.41034997;0.69604385;0.59515518;0.74328327;0.25518677;0.19295621;0.99244636;0.69786793;0.80198121;
0.017056502;0.0024848424;0.77507925;0.48957822;0.25101581;0.36591476;0.18136983;0.29608276;0.53433472;0.13882922;
0.27899709;0.41736382;0.28631711;0.7890504;0.33748269;0.28802916;0.0046246978;0.9910109;0.22158314;0.75287277;
0.51588285;0.34886661;0.38764659;0.50701129;0.028250528;0.02134834;0.45099288;0.22836919;0.57095045;0.87494326;
0.64753836;0.066932455;0.091099054;0.83338571;0.71724844;0.62703252;0.37598181;0.80379349;0.53527194;0.77778476;
0.090724282;0.66477036;0.69128036;0.44640443;0.56966799;0.36821944;0.93235821;0.23330843;0.63855249;0.010231967;
0.67107099;0.60266328;0.96725082;0.40993303;0.20655076;0.29906943;0.78947026;0.78721958;0.37961411;0.99852842;
0.79552293;0.83909464;0.18797915;0.39444262;0.18176436;0.25245193;0.4151305;0.95444411;0.24108985;0.69041675;
0.12203693;0.23558721;0.66988367;0.50319761;0.2500163;0.18387251;0.91812748;0.72317708;0.34667838;0.066699274;
0.32596338;0.52303416;0.05532084;0.026205495;0.76509321;0.82525963;0.11418158;0.13408495;0.21487752;0.075183406;
0.060603078;0.24472155;0.39594185;0.90544271;0.7385143;0.16616257;0.91039377;0.96114105;0.64082742;0.74065822;
0.049028918;0.67325604;0.91139627;0.63104218;0.73963428;0.92336226;0.78509337;0.50974756;0.65827173;0.41579503;
0.75567341;0.67671829;0.24575917;0.60089046;0.56557363;0.71790105;0.79966682;0.93173575;0.56348062;0.88235968;
0.14020438;0.51761311;0.82523078;0.77301586;0.77835625;0.40480721;0.43522593;0.22522059;0.87741226;0.87623084;
0.47372654;0.53104049;0.87617648;0.69832397;0.48108092;0.47629496;0.14587845;0.74197906;0.089917421;0.82275754;
0.65112132;0.45584142;0.36046255;0.26071185;0.53188258;0.99931169;0.10784385;0.29164729;0.67655432;0.81587547;
0.68357974;0.4031263;0.24368367;0.97792429;0.61046904;0.86633414;0.29968667;0.68179661;0.38549346;0.33707023;
0.61218596;0.042242192;0.0037405593;0.96445;0.31067738;0.0090033505;0.2156122;0.20582879;0.42750856;0.59695053;
0.37603864;0.54437816;0.60965806;0.89026386;0.5094462;0.55845809;0.78549939;0.30773047;0.78096747;0.020663751;
0.22158173;0.28248778;0.24262752;0.9024241;0.45565814;0.12089743;0.33177051;0.77063465;0.83320576;0.47961444;
0.89892906;0.86861396;0.60074121;0.11751581;0.95307553;0.8799755;0.36507881;0.75241727;0.30847058;0.40131634;
0.66866785;0.88605142;0.20008859;0.83064204;0.66284251;0.95405;0.3892768;0.41696236;0.23482446;0.33658394;
0.41927361;0.80421644;0.36266649;0.45120889;0.56828779;0.64758497;0.46502781;0.13255078;0.90278685;0.68802559;
0.14617287;0.98023057;0.57474577;0.10122166;0.86909276;0.22465764;0.77704507;0.05468142;0.85310435;0.52993196;
0.9738642;0.14673778;0.41610393;0.0048309988;0.8928507;0.24830244;0.91639298;0.21582888;0.14934422;0.71576184;
0.88665986;0.81001174;0.169147;0.62032169;0.32463878;0.42561811;0.43944746;0.59428728;0.0036964435;0.14809483;
0.015000732;0.54225278;0.95130402;0.81729728;0.17254768;0.91474986;0.94896096;0.53923869;0.18884721;0.81542999;
0.39866242;0.22447856;0.52539223;0.32033992;0.047969908;0.24425597;0.94122887;0.4334797;0.72660655;0.52019763;
0.51495016;0.56529897;0.54503298;0.29753926;0.7069872;0.16795969;0.17954081;0.62219411;0.3137652;0.2680836;
0.012954959;0.4276602;0.28165257;0.34390783;0.075798184;0.61972356;0.49015501;0.25226808;0.3624264;0.23768486;
0.053718321;0.85325563;0.29393965;0.53684747;0.8934167;0.24534495;0.40862533;0.92048311;0.59030551;0.055492651;
0.49905363;0.98961824;0.69184482;0.92827612;0.7285611;0.8035174;0.88642216;0.37491852;0.86643583;0.9462418;
0.15064438;0.56350976;0.55639702;0.7069543;0.29169348;0.57452571;0.31114542;0.61400414;0.73720211;0.66915894;
0.62594956;0.87238437;0.71853328;0.12854522;0.93768507;0.48939651;0.24887112;0.23100899;0.43312702;0.86873674;
0.038365439;0.55777162;0.85798329;0.89196795;0.7499842;0.23237027;0.70115209;0.66883814;0.65620333;0.16589117;
0.078072809;0.70214438;0.3148233;0.81774926;0.030885011;0.75155783;0.28012955;0.92233938;0.25093871;0.32089725;
0.61988997;0.54162407;0.77004701;0.77833641;0.73686332;0.026225008;0.64848834;0.52572429;0.09156467;0.68013281;
0.16428013;0.88561177;0.42083958;0.61342376;0.42024305;0.21287692;0.91333765;0.71720135;0.15347205;0.93100381;
0.94694251;0.54098499;0.56330943;0.94752228;0.25187784;0.87217104;0.015163869;0.15559371;0.0099051781;0.99248606;
0.65300298;0.28166002;0.10613688;0.49116054;0.9276818;0.94372988;0.40352717;0.41535759;0.74650717;0.12849367;
0.50361621;0.72611952;0.48049533;0.25666103;0.86902738;0.044064492;0.18378396;0.99986017;0.81559378;0.0023280049;
0.082743853;0.25641727;0.58969152;0.14359936;0.57612747;0.0066815098;0.36988065;0.45575681;0.72774076;0.56921411;
0.075043745;0.84413666;0.92289698;0.23697443;0.33585176;0.095514245;0.55787373;0.40972292;0.082402483;0.69978184;
0.041414954;0.52270275;0.9171809;0.14192265;0.47837055;0.7549693;0.95017236;0.5625518;0.46966815;0.2164373;
0.98834622;0.57950902;0.53726017;0.69458652;0.59251308;0.092452265;0.87477309;0.36524618;0.79543263;0.30672204;
0.29500344;0.52593088;0.63527507;0.30692017;0.049335804;0.2991384;0.0038244152;0.81637132;0.2665641;0.9096548;
0.30683759;0.47289422;0.081452467;0.54476833;0.85381836;0.41876721;0.47046322;0.24884559;0.61678505;0.40163165;
0.78594077;0.71358013;0.63556784;0.1564234;0.49093834;0.76949304;0.84870392;0.11041362;0.48741105;0.20173998;
0.7267943;0.51153892;0.78664267;0.12058408;0.87429595;0.15970202;0.43543425;0.57063502;0.26992646;0.53209436;
0.29809725;0.54943222;0.13887803;0.55695003;0.47011277;0.7842325;0.91204631;0.7323401;0.17475258;0.27481496;
0.89476812;0.080227703;0.099016093;0.90115213;0.29986733;0.65827215;0.9597277;0.86423171;0.44108215;0.19457293;
0.46828577;0.64543086;0.20283788;0.014836163;0.84006399;0.56074095;0.4281216;0.62175244;0.5070796;0.36753905;
0.61580092;0.1252328;0.90979022;0.032673575;0.60622197;0.010530338;0.86874169;0.43230256;0.30054736;0.59548521;
0.01836439;0.90758055;0.25202894;0.68964744;0.08914192;0.78703219;0.38383242;0.39070612;0.66383934;0.038070917;
0.070713386;0.46359944;0.36486682;0.18755192;0.88111615;0.58824414;0.7610954;0.10722835;0.86289239;0.032810882;
0.07885924;0.29538438;0.10612886;0.39289054;0.7253598;0.44489503;0.32756743;0.38184318;0.47206584;0.9654882;
0.56460649;0.22958426;0.16637225;0.84201264;0.97343051;0.19614027;0.10908552;0.9731366;0.43375802;0.96200019;
0.24543498;0.58663112;0.44440031;0.37611341;0.37227038;0.38605601;0.037824824;0.72547591;0.74113166;0.31974706;
0.2567893;0.56503046;0.8578617;0.7306335;0.14143905;0.8950814;0.4878878;0.55183101;0.20045498;0.33499837;
0.29308611;0.70506716;0.84134084;0.86836976;0.76330757;0.71575886;0.89651805;0.89457923;0.76758277;0.79350471;
0.32137465;0.33667135;0.10061952;0.13928682;0.10179184;0.87313914;0.43534288;0.50837791;0.097027741;0.36868781;
0.35892293;0.3106207;0.40928385;0.27142715;0.36826819;0.36893195;0.6464169;0.44748962;0.20301121;0.79132515;
0.92262316;0.98498154;0.030464452;0.66424143;0.58360344;0.61249793;0.75552154;0.70744282;0.52159357;0.65439904;
0.64119077;0.54400343;0.9162063;0.1656823;0.71429694;0.14874582;0.92432654;0.012547258;0.96502221;0.64609462;
0.75979036;0.28950241;0.32909754;0.68521821;0.98223436;0.98554599;0.33718702;0.34961995;0.55017388;0.17225263;
0.7233389;0.11582011;0.97251856;0.69280624;0.9999643;0.67834365;0.60985333;0.29436877;0.5953958;0.26469538;
0.94997525;0.39471322;0.97697151;0.78449345;0.72712767;0.58566695;0.33006608;0.064982295;0.93328744;0.64451945;
0.31352085;0.052970067;0.39203322;0.26802146;0.26536903;0.28713274;0.11729209;0.95799661;0.4681887;0.60243368;
0.25697023;0.23081926;0.87990725;0.024397345;0.32181379;0.1677532;0.06491027;0.4472146;0.79272884;0.76700228;
0.022415867;0.31360099;0.98981041;0.81638068;0.20387052;0.51927763;0.27519011;0.26498577;0.52078503;0.024700867;
0.27909634;0.77648133;0.40555683;0.77890372;0.6143986;0.51589322;0.36231926;0.59706128;0.81203496;0.71857798;
0.55368149;0.81190139;0.90858012;0.5583486;0.76806289;0.57262236;0.65942639;0.64591324;0.95724142;0.34706071;
0.74465668;0.78965801;0.2719906;0.92141432;0.83062416;0.41501504;0.75835449;0.25958472;0.38815871;0.0084256884;
0.11959852;0.65365738;0.29837823;0.0097254748;0.99917138;0.053304523;0.83662063;0.15328731;0.73046726;0.48140478;
0.8175143;0.63983005;0.55173361;0.44762516;0.30781886;0.98531312;0.63887501;0.80132145;0.31622162;0.41983297;
0.2791895;0.95803893;0.42306069;0.52007157;0.081788503;0.20522432;0.24595712;0.60453939;0.76039118;0.75061387;
0.050263274;0.58165455;0.061585102;0.23663318;0.48895577;0.15504649;0.80539566;0.0062720338;0.92268962;0.33466941;
0.00017727843;0.84412575;0.96397787;0.26525724;0.25545228;0.3081286;0.080612749;0.18209465;0.62888497;0.77849543;
0.074820839;0.027977938;0.82403344;0.38564876;0.91252834;0.070675381;0.85331005;0.22856155;0.6837936;0.70214766;
0.80068749;0.35938886;0.3518258;0.85066682;0.044759158;0.55018669;0.17650668;0.91622102;0.17390172;0.36856252;
0.68385559;0.31508005;0.35657379;0.14690076;0.82652724;0.92229033;0.54253423;0.6042341;0.75606972;0.95349789;
0.92716187;0.23679006;0.58950067;0.89417255;0.34422788;0.15312251;0.79026824;0.47362903;0.92992866;0.27297011;
0.58376729;0.4197039;0.55656236;0.98633677;0.36929592;0.46487668;0.71837479;0.76254684;0.41449532;0.25278017;
0.64564097;0.20954962;0.42240858;0.11315798;0.33010557;0.096849658;0.2125302;0.64169264;0.27962941;0.79058814;
0.75414151;0.48193392;0.19899476;0.13685389;0.90139109;0.37299317;0.9390977;0.42773533;0.27820158;0.66464633;
0.64363396;0.54083699;0.28802928;0.50224382;0.081188768;0.39114782;0.28775737;0.85514951;0.3343665;0.48031169;
0.066176377;0.2981312;0.7780326;0.54245198;0.20336315;0.41243789;0.43150258;0.6275323;0.47869813;0.88376838;
0.61668581;0.67726934;0.74920923;0.61513227;0.78801394;0.34954304;0.66272652;0.044925608;0.37498349;0.25174206;
0.92609608;0.46139559;0.93941259;0.46351272;0.66212159;0.46385321;0.75128251;0.189135;0.93997711;0.10665935;
0.2972911;0.74323273;0.81291139;0.57680261;0.097244374;0.85214925;0.31607169;0.062298734;0.75615752;0.87161988;
0.43134126;0.087197058;0.56873786;0.25546163;0.44027483;0.43698284;0.93285334;0.75955915;0.42375454;0.4953526;
0.79031569;0.96776092;0.53730589;0.16985387;0.14470966;0.98201317;0.63971543;0.51875049;0.32900447;0.97335225;
0.43258446;0.45097119;0.70665991;0.52435946;0.28300673;0.43923828;0.95645773;0.91021627;0.87564462;0.8761819;
0.93452871;0.52126914;0.84550089;0.94116336;0.7253316;0.20499252;0.21277869;0.64419413;0.43816775;0.61296457;
0.35200369;0.52375323;0.0016224527;0.99808776;0.38764891;0.15873741;0.18759765;0.063340522;0.38984397;0.035023384;
0.43870005;0.24947211;0.40981025;0.058251299;0.54854834;0.47728464;0.34731096;0.22240873;0.29066655;0.54067516;
0.74666405;0.67761201;0.74715972;0.24186791;0.79335904;0.10220189;0.36796409;0.67569798;0.92158353;0.67252469;
0.24067041;0.12525406;0.89355761;0.52905267;0.48161337;0.16245681;0.62903088;0.12239893;0.094768576;0.34368241;
0.87043422;0.63422436;0.99556947;0.01378822;0.73085326;0.50248057;0.82037252;0.51743752;0.54652572;0.58200961;
0.57927155;0.60641426;0.37827349;0.38093969;0.13063639;0.29875574;0.35788015;0.97331345;0.19097711;0.73833221;
0.3084887;0.15841758;0.38669091;0.12730052;0.24489683;0.090747215;0.46600616;0.97790682;0.54558265;0.88511592;
0.9695676;0.91456115;0.6068334;0.4446997;0.72990912;0.96085453;0.3198944;0.59083062;0.82520634;0.10651488;
0.35895699;0.067696124;0.82722068;0.57497674;0.19980605;0.37770927;0.73421705;0.84500074;0.20410372;0.76277095;
0.79917431;0.20303015;0.20207383;0.80348396;0.29422739;0.72173291;0.27416211;0.46901119;0.12298118;0.56158465;
0.46797264;0.91902405;0.17828974;0.90025961;0.47795793;0.92929423;0.10570814;0.67167729;0.74640971;0.10140388;
0.61925542;0.55049843;0.86447346;0.22765639;0.033991415;0.27102184;0.57416356;0.20283791;0.89915502;0.202392;
0.90466523;0.63673943;0.71018386;0.41588461;0.97742784;0.87100214;0.84203744;0.79497451;0.68899781;0.49740133;
0.90478176;0.040983707;0.22213268;0.18186922;0.1757631;0.12091821;0.34602585;0.12972312;0.23206769;0.9613179;
0.20907353;0.3184;0.30576614;0.76816297;0.35918549;0.36497366;0.60798734;0.51897895;0.14208561;0.78378129;
0.59354645;0.23745015;0.49202001;0.3526406;0.51237398;0.0055936333;0.012741291;0.38972384;0.20124757;0.99619389;
0.051595222;0.43027806;0.88970602;0.73726779;0.43400818;0.73534924;0.19042963;0.24068032;0.023852549;0.74683547;
0.58049506;0.20507787;0.1534052;0.12825008;0.98863029;0.56567442;0.28176615;0.0085853394;0.54820639;0.45188481;
0.76378655;0.55266142;0.084629811;0.58187383;0.56322074;0.22499372;0.75123101;0.75810862;0.98359084;0.66942447;
0.99266648;0.30809063;0.55338818;0.62358427;0.28656456;0.46373001;0.87891406;0.9203099;0.73916745;0.7751388;
0.8552652;0.87410188;0.99732739;0.93953007;0.3646048;0.5345273;0.30015522;0.36698517;0.17319685;0.61632615;
0.67368704;0.048460551;0.50220042;0.75815779;0.29523507;0.76498604;0.79129255;0.25038955;0.78933924;0.29230511;
0.97474957;0.51563388;0.076718502;0.81864703;0.60710251;0.040125161;0.57386976;0.11495704;0.80050409;0.37974674;
0.20660916;0.8475939;0.7120266;0.46401143;0.391;0.65010685;0.62838286;0.64599609;0.18496425;0.6415062;
0.53856999;0.64580882;0.56249934;0.18649086;0.04433563;0.2963323;0.59225905;0.96624905;0.18429218;0.90318298;
0.89006531;0.10997248;0.99527502;0.46642449;0.18653704;0.5466575;0.73499119;0.34440231;0.16226573;0.40203834;
0.46424142;0.69692361;0.15893035;0.83616769;0.40913159;0.52576524;0.22964685;0.89457434;0.5879159;0.46828055;
0.68684638;0.11767486;0.70189619;0.47941777;0.67389202;0.99387228;0.28515697;0.56236976;0.78722137;0.21801478;
0.13001397;0.001131109;0.84602863;0.3349821;0.54527676;0.10531859;0.56842411;0.74478972;0.81564111;0.54048818;
0.0046402039;0.29763973;0.27640736;0.57867771;0.77767956;0.53849691;0.10519983;0.68121445;0.13191548;0.57509285;
0.19522683;0.5192377;0.77122307;0.39075443;0.19885838;0.17948906;0.64954054;0.52587527;0.4095428;0.8434453;
0.51680702;0.337863;0.35217109;0.27616006;0.9043839;0.7820195;0.98002946;0.6169613;0.84746152;0.91389757;
0.54664862;0.63664538;0.73414832;0.60721099;0.1569002;0.95342702;0.12970887;0.032736558;0.0072128191;0.32537305;
0.6283406;0.43431929;0.14187084;0.45127836;0.2381416;0.29587537;0.26991579;0.98514825;0.17536704;0.63210946;
0.97171873;0.58923882;0.33885351;0.40345615;0.92686415;0.68515122;0.13553351;0.82173884;0.010120928;0.73036599;
0.17843999;0.35478857;0.26241994;0.20331314;0.62479085;0.98979324;0.49391907;0.69552058;0.13221455;0.2295123;
0.21035405;0.58547664;0.8423804;0.95759487;0.47398448;0.3558296;0.79351264;0.92155993;0.060451563;0.27085152;
0.54081255;0.8453517;0.82089078;0.048000198;0.3324123;0.61043984;0.79536873;0.19411898;0.13041218;0.76345527;
0.56850576;0.89571643;0.45693415;0.2664769;0.7173962;0.90665513;0.20379989;0.399948;0.20681003;0.95298147;
0.89530265;0.83813524;0.38097841;0.80104995;0.20241088;0.17260665;0.049406789;0.27952892;0.03876232;0.57512665;
0.071069136;0.82477194;0.86629051;0.55119634;0.46484858;0.69055057;0.74694586;0.094719499;0.27479285;0.65398848;
0.55916333;0.38380411;0.86884058;0.43309972;0.98290479;0.40429333;0.87515277;0.99297959;0.66010642;0.21642841;
0.99133259;0.73932707;0.18555766;0.27106363;0.94411677;0.58063936;0.10118428;0.89887714;0.9323374;0.55387431;
0.28416023;0.52182758;0.58577317;0.2284351;0.84388113;0.83441931;0.95608026;0.046332829;0.60344225;0.61789393;
0.96172386;0.060809471;0.49831933;0.56567681;0.60425633;0.18341111;0.20215052;0.3556945;0.6430409;0.71745312;
0.70149243;0.13028647;0.30508262;0.2541714;0.76739842;0.86138189;0.18969007;0.33458635;0.94328934;0.0052377307;
0.58899188;0.81229007;0.26979649;0.092869304;0.75116372;0.33302453;0.20008303;0.51547426;0.069774255;0.27489534;
0.36962244;0.63759106;0.049482722;0.97120136;0.80853641;0.56675601;0.52287477;0.4415307;0.18939264;0.62525684;
0.64678341;0.86604637;0.39181677;0.66405082;0.15564623;0.41465133;0.99197227;0.45279318;0.49003336;0.866346;
0.058792681;0.17794444;0.23022904;0.39392629;0.92280585;0.63101453;0.3335903;0.87657821;0.61014944;0.17478155;
0.77402407;0.98234868;0.22235557;0.13412172;0.91007286;0.33379319;0.47051248;0.39611852;0.36619356;0.77303237;
0.27710146;0.94307649;0.47802961;0.81215423;0.25111774;0.36653554;0.29886588;0.5940153;0.55007082;0.96908396;
0.48004419;0.16377813;0.11942813;0.25769088;0.031382129;0.011526468;0.51126182;0.6854403;0.21811418;0.60927027;
0.65575206;0.60403931;0.75299734;0.85074443;0.11397023;0.0844431;0.68090874;0.37270081;0.41071954;0.60007101;
0.57559866;0.040565904;0.0079339463;0.1204531;0.81195104;0.58531046;0.56311828;0.75252581;0.66105676;0.48535085;
0.98730189;0.97599912;0.7899645;0.4733077;0.35393509;0.97680408;0.97023886;0.8263067;0.59026414;0.31152701;
0.70577168;0.44742662;0.086493872;0.7933923;0.72666317;0.21160245;0.64466625;0.7743144;0.73395908;0.61492431;
0.026469225;0.6607641;0.45772234;0.95522565;0.73067814;0.20329826;0.49287847;0.95536679;0.86152846;0.98816925;
0.6999799;0.84139049;0.032551579;0.47945637;0.95726246;0.83649313;0.28180459;0.35342503;0.58205348;0.84090114;
0.77712083;0.28944746;0.66088372;0.92188078;0.12702674;0.82072812;0.70969373;0.46401274;0.94625223;0.87240082;
0.68345582;0.37686062;0.38884309;0.18114842;0.014580075;0.11427499;0.28348416;0.038295098;0.31276289;0.17868133;
0.11887594;0.86223334;0.63880426;0.26147234;0.060973953;0.83815712;0.91723925;0.38802636;0.22286911;0.57947999;
0.96364182;0.21348058;0.40586317;0.0899463;0.88609928;0.52463639;0.69533718;0.92966914;0.75246072;0.075761035;
0.50715733;0.0092014344;0.83422184;0.17272156;0.75788152;0.56460977;0.66992027;0.42600366;0.15424709;0.50421339;
0.73128408;0.46775672;0.45618647;0.72403741;0.74960184;0.50801122;0.82367408;0.7451455;0.77095592;0.60144722;
0.5122453;0.25765178;0.77349114;0.20812763;0.15222122;0.08340086;0.7624104;0.23080052;0.76767379;0.21401475;
0.29956511;0.96379107;0.88913542;0.4958148;0.20825909;0.93347645;0.51687908;0.91927177;0.024033159;0.26489419;
0.053225577;0.40153289;0.36498368;0.85702568;0.22879335;0.59190446;0.21281627;0.2618441;0.54486406;0.0705707;
0.12188175;0.93622077;0.3703312;0.075408988;0.82789171;0.067943595;0.31794485;0.53623432;0.92139792;0.54459685;
0.44434884;0.067470632;0.24317026;0.18798274;0.18772791;0.75759643;0.48288792;0.73831028;0.82653099;0.1811479;
0.96677572;0.15347482;0.12814574;0.72965276;0.6852805;0.72757095;0.13987166;0.1373768;0.82535082;0.81063974;
0.85088056;0.60464585;0.50370115;0.45852721;0.80537522;0.048071302;0.61868733;0.9153499;0.17313233;0.85330701;
0.54858863;0.32564369;0.54077572;0.41733551;0.026130693;0.85272396;0.78749555;0.29203284;0.34021375;0.92850024;
0.62267369;0.11604968;0.43607166;0.22518338;0.90578836;0.50494242;0.42120728;0.071713872;0.5820713;0.41572335;
0.21146093;0.046555027;0.29089874;0.58895737;0.34739146;0.66374779;0.79845649;0.070206754;0.51512921;0.064413533;
0.83592749;0.59615356;0.91744375;0.57615691;0.4467468;0.57321584;0.207552;0.37249935;0.039296295;0.49642971;
0.088020504;0.35823417;0.47837946;0.59459591;0.52926135;0.7616021;0.56931025;0.40036273;0.69546473;0.99261594;
0.37889713;0.12309647;0.88739371;0.62355858;0.51182389;0.58770484;0.81564438;0.52315694;0.77069366;0.54122806;
0.48184079;0.83306569;0.072762392;0.92607909;0.39400584;0.42959428;0.014302867;0.57530075;0.65370834;0.47243682;
0.70930219;0.17680426;0.72581601;0.92309463;0.87590963;0.19028853;0.2103425;0.57102442;0.85880286;0.29182202;
0.33034655;0.74067092;0.5621962;0.25965413;0.46482569;0.29840642;0.27354646;0.96070397;0.13077885;0.46005747;
0.82248497;0.51050353;0.51795691;0.21796151;0.63275671;0.35282281;0.53768963;0.20541978;0.63496906;0.68948388;
0.083400659;0.50896609;0.040187426;0.12231042;0.016780535;0.1107435;0.54802859;0.04920534;0.64283735;0.98363781;
0.93888736;0.33842927;0.93869185;0.88596791;0.33897531;0.91941422;0.68437088;0.80207556;0.33945963;0.48548409;
0.69186777;0.3244448;0.080402754;0.27431488;0.046165764;0.03911816;0.81911767;0.57223248;0.11299656;0.24717101;
0.70077759;0.50486696;0.83875954;0.71434265;0.21947022;0.74321193;0.90186214;0.51321805;0.54537296;0.90052986;
0.80523795;0.61166835;0.8732962;0.78790468;0.74301237;0.010181088;0.71957797;0.59505147;0.99784434;0.99106026;
0.90439224;0.20719896;0.97406656;0.82811284;0.26695365;0.96205783;0.84225571;0.27681705;0.28389433;0.98394561;
0.71396685;0.27501076;0.36418596;0.56363571;0.5696249;0.077981032;0.59745324;0.79279941;0.76493675;0.50361562;
0.4763571;0.6006881;0.5569362;0.10819391;0.023262311;0.14976208;0.54649395;0.71229494;0.94948912;0.7999419;
0.32562932;0.89027131;0.15394478;0.059698742;0.34882277;0.31208697;0.77264929;0.39808559;0.58928055;0.64295316;
0.38831431;0.69148016;0.7051326;0.52407438;0.96042204;0.97045332;0.077752203;0.076952942;0.51378196;0.85567963;
0.11659649;0.21868961;0.6360206;0.56561863;0.7539441;0.4835678;0.24744038;0.46438336;0.74533981;0.79605514;
0.74328196;0.38807765;0.10634518;0.45634919;0.16998298;0.069294222;0.31841719;0.98918676;0.11468986;0.74841672;
0.5875212;0.9903692;0.48092216;0.39649156;0.85414368;0.84976089;0.35986978;0.38125429;0.27316779;0.64175695;
0.37613073;0.05090744;0.42551193;0.52095622;0.90158463;0.15226841;0.69367677;0.75489384;0.34748393;0.39252481;
0.61587626;0.75033253;0.23488072;0.3083331;0.19545425;0.45158926;0.71718472;0.19911635;0.31682318;0.48271623;
0.45012441;0.95107234;0.59559172;0.15389572;0.18858139;0.93150896;0.62711477;0.21552601;0.20911415;0.22964205;
0.85652548;0.58858407;0.30853423;0.7920146;0.66403145;0.67676246;0.87161851;0.8648091;0.36173618;0.17113334;
0.63368958;0.21568933;0.37427047;0.0058001201;0.072965428;0.49944037;0.46921581;0.13044912;0.91193241;0.8342157;
0.21387333;0.16977291;0.68324554;0.70125067;0.27121949;0.66880941;0.8950243;0.90177929;0.1980332;0.074708134;
0.018480368;0.72639543;0.77932501;0.55199629;0.35584655;0.50009078;0.8055945;0.64347601;0.68317688;0.79914778;
0.07771194;0.51815128;0.042351793;0.13276958;0.28415617;0.090313524;0.61480319;0.81470829;0.42337921;0.91511643;
0.9843908;0.62065262;0.15656839;0.27226603;0.41751334;0.21063946;0.98447585;0.69571012;0.97453904;0.18226485;
0.66993642;0.18623632;0.29034552;0.47847071;0.63794696;0.23481907;0.45529631;0.31329015;0.71723241;0.17604701;
0.5745489;0.17990203;0.017977878;0.082405075;0.59415185;0.036014192;0.20935434;3.3888307e-05;0.22547084;0.59929454;
0.93890375;0.69040895;0.9953084;0.54931849;0.69533348;0.18754402;0.91400945;0.39422143;0.91572142;0.31790093;
0.2823272;0.60970104;0.97873825;0.30149269;0.42841789;0.26143745;0.81848443;0.82371253;0.31214654;0.0078196432;
0.93244809;0.89690679;0.28759521;0.35648349;0.77445132;0.89994007;0.90384632;0.87113136;0.86820167;0.84159023;
0.77445132;0.89920765;0.85824025;0.48295686;0.69581938;0.53960717;0.88146478;0.26422259;0.31700933;0.94484216;
0.077165626;0.6192705;0.11181496;0.66465038;0.090054691;0.61567253;0.10554033;0.024592679;0.021069894;0.017615739;
0.084782712;0.82953757;0.19641194;0.22594224;0.70806086;0.028061325;0.79018331;0.82937193;0.8523069;0.31889477;
0.53050405;0.34745541;0.30511022;0.12072318;0.47273135;0.54644573;0.79528773;0.061999746;0.16937964;0.21976966;
0.85354602;0.3428618;0.026951389;0.8675555;0.53636694;0.2737186;0.12226703;0.40974921;0.98320121;0.099158198;
0.77123457;0.47910401;0.70779377;0.4366762;0.67046028;0.35413671;0.58267438;0.90804636;0.4636302;0.89724296;
0.96471602;0.84890556;0.48346159;0.29400405;0.027627634;0.22062409;0.86606061;0.13104746;0.63841289;0.28464177;
0.56326729;0.53985941;0.83359981;0.39514831;0.54264122;0.13117653;0.20220348;0.77244008;0.79004216;0.13074756;
0.13525105;0.87548411;0.52403736;0.18666901;0.48087773;0.79302037;0.6430347;0.1451721;0.42532524;0.93316615;
0.63588262;0.016265014;0.58248866;0.1472383;0.89416426;0.54481065;0.96064657;0.52843672;0.06117126;0.024009775;
0.11338665;0.4499667;0.02067261;0.65818775;0.10267199;0.085340746;0.41284534;0.76870143;0.26896599;0.82970536;
0.31025323;0.9209246;0.40340659;0.35442609;0.82599419;0.60171783;0.30995563;0.5752027;0.85105819;0.2417355;
0.7387867;0.87355793;0.80682349;0.91622871;0.41625705;0.55828762;0.55679202;0.31068194;0.54946798;0.42454284;
0.21300191;0.46511236;0.45543835;0.46709225;0.45931029;0.49258101;0.34016529;0.46805736;0.38489079;0.21255302;
0.74066156;0.35867232;0.065713957;0.65532911;0.42796713;0.37812558;0.4783271;0.32102028;0.86024529;0.5923478;
0.14720544;0.40721205;0.61532992;0.75118005;0.6680817;0.17564082;0.87891859;0.6105752;0.50900096;0.63381732;
0.32446885;0.49223301;0.46350941;0.6682331;0.744968;0.32277611;0.11075895;0.53628713;0.73377842;0.70674443;
0.32593974;0.66160142;0.17471173;0.50553507;0.48786542;0.038769566;0.12329467;0.93692917;0.45181301;0.031543393;
0.34454787;0.31359795;0.34900159;0.53625661;0.35342592;0.084203534;0.82043087;0.61444253;0.34120777;0.39700967;
0.5890066;0.59892923;0.21386927;0.044146445;0.70596027;0.26112369;0.077838562;0.13820702;0.57261747;0.8031047;
0.70208919;0.25693426;0.9046073;0.28727677;0.25362489;0.22400118;0.97680873;0.94230407;0.59333676;0.52856398;
0.60525542;0.16564241;0.23104215;0.45223263;0.95541799;0.17038915;0.55567497;0.94210708;0.37597179;0.432688;
0.13015722;0.83853167;0.14796908;0.88578236;0.64563012;0.46956924;0.59959066;0.95930457;0.1357969;0.60145479;
0.81549829;0.99792182;0.58636314;0.70554596;0.74480683;0.11148714;0.54608709;0.036288671;0.72997957;0.076067783;
0.86732948;0.25390902;0.099749416;0.30142725;0.86295164;0.70481402;0.2187423;0.39767644;0.92056149;0.079865657;
0.98450524;0.55926681;0.50256491;0.63938278;0.6212244;0.16075453;0.63147879;0.50703621;0.3764455;0.45042387;
0.95817369;0.38349527;0.3176074;0.90749413;0.32591167;0.95213097;0.75949776;0.37639603;0.21724644;0.19280918;
0.76578015;0.38922763;0.51704127;0.7307297;0.84768575;0.49399644;0.4727591;0.64911187;0.94643283;0.31947246;
0.037912797;0.64209902;0.56538939;0.4693301;0.66808051;0.65799963;0.69258827;0.47844347;0.040270336;0.89587802;
0.15892181;0.42013225;0.89868039;0.16963348;0.0065471609;0.40856239;0.0045978432;0.87939328;0.95662183;0.58792788;
0.83182299;0.62010163;0.67476958;0.62974697;0.88037652;0.29767445;0.71292943;0.97261983;0.4820708;0.33131784;
0.91937912;0.37874755;0.49202242;0.37812299;0.15465127;0.79562044;0.53830987;0.66600519;0.13310653;0.37508595;
0.49914169;0.060940493;0.82146877;0.24319579;0.17147058;0.96414554;0.66275007;0.64478147;0.055353642;0.13181223;
0.55420202;0.15822269;0.65215105;0.66399962;0.83097404;0.61413616;0.091422096;0.48029318;0.2250617;0.80459702;
0.77749836;0.30127686;0.014726906;0.47004864;0.81531733;0.1142123;0.12650396;0.10784649;0.33606777;0.58912998;
0.46384373;0.63884908;0.83678353;0.045315214;0.17777209;0.49031875;0.64754701;0.81799245;0.23419413;0.25195023;
0.83256102;0.16523364;0.9976607;0.27673849;0.29588529;0.16914073;0.97611696;0.41179076;0.74301612;0.55853778;
0.81250018;0.0070928708;0.32765016;0.25119543;0.96580303;0.142802;0.81283188;0.010248569;0.94693679;0.084635675;
0.29929537;0.4426598;0.86432934;0.1245543;0.90746611;0.10384922;0.31547534;0.48382869;0.45604384;0.50940782;
0.39170164;0.7594505;0.52957392;0.71864629;0.6666801;0.60739547;0.83026785;0.85742742;0.94484061;0.65544486;
0.65083301;0.29654419;0.71512121;0.5455482;0.56848723;0.51067865;0.76907486;0.097628221;0.8193385;0.6189943;
0.15614495;0.22267465;0.14972502;0.12913719;0.20437159;0.55058652;0.45578197;0.96179616;0.077775925;0.95965773;
0.70645213;0.3777588;0.44414577;0.83615184;0.64230365;0.16321111;0.49223846;0.47862375;0.99028349;0.24809691;
0.24223751;0.4981589;0.11723417;0.99327415;0.87162971;0.63711679;0.94624978;0.98060375;0.96412748;0.62600815;
0.95292962;0.73741823;0.24734807;0.71623009;0.18840879;0.67014104;0.25299561;0.62859416;0.15308918;0.96627772;
0.26297149;0.34682432;0.7808876;0.41308498;0.16263048;0.47484133;0.0019586412;0.81064224;0.37344518;0.64488071;
0.92363787;0.55277139;0.093940161;0.51855075;0.35926807;0.41895908;0.59505367;0.029479755;0.36079001;0.8365379;
0.63671625;0.19698825;0.28320932;0.79152757;0.96703988;0.59095871;0.25187701;0.1834669;0.54545814;0.043111045;
0.14319035;0.08967977;0.31132853;0.89393389;0.88594943;0.93775302;0.28707552;0.26900524;0.38850275;0.99429035;
0.78503722;0.088412017;0.75374293;0.87374926;0.5051657;0.70033485;0.32637393;0.31899223;0.55015868;0.94643605;
0.32493556;0.1952717;0.78639793;0.48004955;0.40041554;0.9647609;0.00050037092;0.02158759;0.37702674;0.18223247;
0.28565744;0.64294314;0.020092221;0.27081034;0.45690629;0.29193959;0.51242006;0.82254618;0.075090759;0.93247741;
0.51440704;0.86884648;0.032290496;0.33824188;0.27629459;0.004729005;0.24601395;0.2318476;0.93305475;0.11213267;
0.32412496;0.41462123;0.67077452;0.74338347;0.46541026;0.25454637;0.936221;0.94616193;0.44976771;0.62247849;
0.99526387;0.62524843;0.37104815;0.57942033;0.22827886;0.77952236;0.75442505;0.14600378;0.41434762;0.97061533;
0.88079035;0.018690769;0.11973143;0.94928879;0.088177167;0.84456956;0.096398942;0.87370855;0.45341402;0.0066786478;
0.69384056;0.068502031;0.06118989;0.4416464;0.46120688;0.84011447;0.059204753;0.53358388;0.35212818;0.22705762;
0.71910167;0.64404923;0.11249515;0.53281933;0.61981189;0.48129842;0.2130401;0.14289694;0.40327382;0.056163985;
0.74685246;0.34397545;0.3421376;0.73676759;0.43527013;0.054191675;0.69793677;0.94186223;0.86376762;0.59173554;
0.72552449;0.37132034;0.99902165;0.74624544;0.95402205;0.98050344;0.49766675;0.42115226;0.51069129;0.88544124;
0.31018531;0.74886161;0.94394648;0.99389946;0.084383301;0.46371752;0.63450325;0.12213212;0.93008655;0.63720471;
0.1318925;0.96369618;0.69050479;0.34296286;0.3146233;0.90662724;0.63023239;0.17411612;0.35129455;0.34312981;
0.29272771;0.49959618;0.15668166;0.40074635;0.17624603;0.26066968;0.65436274;0.57550794;0.65576667;0.3282488;
0.51453489;0.19937736;0.27380243;0.82855403;0.48854259;0.026702337;0.010648252;0.50273836;0.057763822;0.92165905;
0.22695038;0.59006006;0.53334355;0.66184932;0.56101662;0.59214705;0.88994831;0.66353744;0.85367382;0.21726905;
0.62698734;0.49459699;0.059456967;0.66082406;0.63061684;0.97982115;0.40952092;0.15461147;0.52394772;0.056987908;
0.66624415;0.19886629;0.99492449;0.42617401;0.27970061;0.52850699;0.95590675;0.64171016;0.89924908;0.86077183;
0.99604434;0.15987092;0.69923687;0.4951635;0.046408128;0.029499281;0.58929807;0.26518652;0.4076207;0.67357421;
0.017673777;0.27644446;0.58358628;0.36675212;0.41890636;0.50683522;0.98271972;0.55696398;0.56561971;0.55889595;
0.44379249;0.9761852;0.32205474;0.69891161;0.14160945;0.28082722;0.44845521;0.18433192;0.6662423;0.83045435;
0.17099944;0.67631179;0.55628431;0.66010416;0.34215119;0.53456402;0.15283459;0.54144359;0.76357156;0.98410559;
0.35800612;0.18844841;0.089150064;0.27458256;0.65262097;0.28060675;0.18411173;0.62670767;0.61439002;0.3377949;
0.24294196;0.82551372;0.19026774;0.53132337;0.30509761;0.63764846;0.094349265;0.99459374;0.90250313;0.27945143;
0.99167305;0.38102731;0.70954931;0.72719657;0.75541294;0.043962471;0.7393294;0.68523586;0.31341088;0.20219113;
0.89858603;0.78689629;0.40651289;0.97550827;0.47418192;0.23151118;0.81064999;0.79946226;0.93287528;0.93754828;
0.81864303;0.15085706;0.075427607;0.012517137;0.25312272;0.69156641;0.52045178;0.95243829;0.15579854;0.61465561;
0.2609463;0.93849367;0.01398167;0.66822493;0.74915731;0.42297801;0.20852987;0.41172078;0.024319725;0.22322665;
0.22530608;0.64762712;0.9839291;0.46207297;0.14458226;0.27377024;0.44978848;0.88075787;0.36338741;0.82291126;
0.34684816;0.5878067;0.44361138;0.3399415;0.16510458;0.60199648;0.93984878;0.67638773;0.67097127;0.19176638;
0.92232639;0.2015513;0.24769969;0.43609226;0.19872375;0.31982201;0.45654097;0.37001944;0.35884985;0.34319481;
0.08584284;0.082897827;0.3379395;0.60146183;0.15884502;0.18583842;0.016289487;0.031527027;0.72241837;0.60334998;
0.2453555;0.51346308;0.83522242;0.31156123;0.39156616;0.5787518;0.9677732;0.5939821;0.34453714;0.046549238;
0.22323503;0.70111382;0.25822574;0.25225642;0.0055774748;0.7643134;0.72643298;0.11198135;0.4077391;0.09512648;
0.72605938;0.88186479;0.31460565;0.82366002;0.068518482;0.96203572;0.52363068;0.68050885;0.045699023;0.082618959;
0.86090571;0.24498495;0.97103602;0.8659324;0.25025776;0.35705066;0.88631999;0.58388692;0.67350328;0.014392147;
0.19631509;0.35837382;0.080737665;0.86895818;0.17430502;0.37788478;0.58041787;0.2878184;0.17800501;0.99756718;
0.87144059;0.454016;0.085346028;0.25701237;0.53956062;0.40483928;0.97003835;0.47739685;0.042977445;0.064668991;
0.57999629;0.95464981;0.91146326;0.23432626;0.32636759;0.19402537;0.15014218;0.70619762;0.1561674;0.18502627;
0.94354254;0.92974478;0.37695095;0.25842845;0.42517674;0.46020654;0.039875951;0.78726655;0.10664346;0.83754516;
0.70074451;0.44760579;0.95068878;0.85220581;0.53188306;0.93037975;0.27131563;0.15677634;0.2753379;0.51410043;
0.82678497;0.85215479;0.35672536;0.74533457;0.43934682;0.51103818;0.3971149;0.30046943;0.029322464;0.76439005;
0.20489351;0.13999349;0.22856326;0.841847;0.060455054;0.39513797;0.24781099;0.35958654;0.12041213;0.44071802;
0.28974622;0.65963286;0.035016671;0.92924917;0.31496367;0.50932735;0.24829955;0.84775323;0.028845452;0.97213864;
0.51419336;0.087572202;0.006415145;0.01851842;0.95154887;0.4613874;0.36294663;0.61786819;0.24581152;0.22165765;
0.19846681;0.0034832996;0.49470708;0.21529756;0.021373201;0.90760189;0.93741173;0.28170165;0.0035662588;0.52258128;
0.61966926;0.47912154;0.31981134;0.6114893;0.078972876;0.90323508;0.65535152;0.26743191;0.18804616;0.59398389;
0.11124178;0.42339543;0.90842211;0.14753366;0.31285921;0.55927271;0.87583834;0.66488379;0.38399231;0.62781763;
0.52391571;0.89234817;0.6025039;0.14463644;0.55917078;0.59008318;0.76884872;0.14920431;0.50766432;0.3499729;
0.028289156;0.52666658;0.84122705;0.24730872;0.66401535;0.10703176;0.19844733;0.65889156;0.66902447;0.61882305;
0.062833421;0.45935416;0.70417857;0.22617753;0.28293487;0.37376675;0.24165419;0.070094556;0.20005769;0.92226249;
0.050522719;0.7553277;0.83619332;0.2683264;0.74986464;0.10289425;0.9468776;0.79442465;0.92413658;0.32442278;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
     row_indexes {
      name="row_indexes";
     [8000] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
1000;1001;1002;1003;1004;1005;1006;1007;1008;1009;
1010;1011;1012;1013;1014;1015;1016;1017;1018;1019;
1020;1021;1022;1023;1024;1025;1026;1027;1028;1029;
1030;1031;1032;1033;1034;1035;1036;1037;1038;1039;
1040;1041;1042;1043;1044;1045;1046;1047;1048;1049;
1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;
1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;
1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;
1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;
1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;
1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;
1110;1111;1112;1113;1114;1115;1116;1117;1118;1119;
1120;1121;1122;1123;1124;1125;1126;1127;1128;1129;
1130;1131;1132;1133;1134;1135;1136;1137;1138;1139;
1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;
1150;1151;1152;1153;1154;1155;1156;1157;1158;1159;
1160;1161;1162;1163;1164;1165;1166;1167;1168;1169;
1170;1171;1172;1173;1174;1175;1176;1177;1178;1179;
1180;1181;1182;1183;1184;1185;1186;1187;1188;1189;
1190;1191;1192;1193;1194;1195;1196;1197;1198;1199;
1200;1201;1202;1203;1204;1205;1206;1207;1208;1209;
1210;1211;1212;1213;1214;1215;1216;1217;1218;1219;
1220;1221;1222;1223;1224;1225;1226;1227;1228;1229;
1230;1231;1232;1233;1234;1235;1236;1237;1238;1239;
1240;1241;1242;1243;1244;1245;1246;1247;1248;1249;
1250;1251;1252;1253;1254;1255;1256;1257;1258;1259;
1260;1261;1262;1263;1264;1265;1266;1267;1268;1269;
1270;1271;1272;1273;1274;1275;1276;1277;1278;1279;
1280;1281;1282;1283;1284;1285;1286;1287;1288;1289;
1290;1291;1292;1293;1294;1295;1296;1297;1298;1299;
1300;1301;1302;1303;1304;1305;1306;1307;1308;1309;
1310;1311;1312;1313;1314;1315;1316;1317;1318;1319;
1320;1321;1322;1323;1324;1325;1326;1327;1328;1329;
1330;1331;1332;1333;1334;1335;1336;1337;1338;1339;
1340;1341;1342;1343;1344;1345;1346;1347;1348;1349;
1350;1351;1352;1353;1354;1355;1356;1357;1358;1359;
1360;1361;1362;1363;1364;1365;1366;1367;1368;1369;
1370;1371;1372;1373;1374;1375;1376;1377;1378;1379;
1380;1381;1382;1383;1384;1385;1386;1387;1388;1389;
1390;1391;1392;1393;1394;1395;1396;1397;1398;1399;
1400;1401;1402;1403;1404;1405;1406;1407;1408;1409;
1410;1411;1412;1413;1414;1415;1416;1417;1418;1419;
1420;1421;1422;1423;1424;1425;1426;1427;1428;1429;
1430;1431;1432;1433;1434;1435;1436;1437;1438;1439;
1440;1441;1442;1443;1444;1445;1446;1447;1448;1449;
1450;1451;1452;1453;1454;1455;1456;1457;1458;1459;
1460;1461;1462;1463;1464;1465;1466;1467;1468;1469;
1470;1471;1472;1473;1474;1475;1476;1477;1478;1479;
1480;1481;1482;1483;1484;1485;1486;1487;1488;1489;
1490;1491;1492;1493;1494;1495;1496;1497;1498;1499;
1500;1501;1502;1503;1504;1505;1506;1507;1508;1509;
1510;1511;1512;1513;1514;1515;1516;1517;1518;1519;
1520;1521;1522;1523;1524;1525;1526;1527;1528;1529;
1530;1531;1532;1533;1534;1535;1536;1537;1538;1539;
1540;1541;1542;1543;1544;1545;1546;1547;1548;1549;
1550;1551;1552;1553;1554;1555;1556;1557;1558;1559;
1560;1561;1562;1563;1564;1565;1566;1567;1568;1569;
1570;1571;1572;1573;1574;1575;1576;1577;1578;1579;
1580;1581;1582;1583;1584;1585;1586;1587;1588;1589;
1590;1591;1592;1593;1594;1595;1596;1597;1598;1599;
1600;1601;1602;1603;1604;1605;1606;1607;1608;1609;
1610;1611;1612;1613;1614;1615;1616;1617;1618;1619;
1620;1621;1622;1623;1624;1625;1626;1627;1628;1629;
1630;1631;1632;1633;1634;1635;1636;1637;1638;1639;
1640;1641;1642;1643;1644;1645;1646;1647;1648;1649;
1650;1651;1652;1653;1654;1655;1656;1657;1658;1659;
1660;1661;1662;1663;1664;1665;1666;1667;1668;1669;
1670;1671;1672;1673;1674;1675;1676;1677;1678;1679;
1680;1681;1682;1683;1684;1685;1686;1687;1688;1689;
1690;1691;1692;1693;1694;1695;1696;1697;1698;1699;
1700;1701;1702;1703;1704;1705;1706;1707;1708;1709;
1710;1711;1712;1713;1714;1715;1716;1717;1718;1719;
1720;1721;1722;1723;1724;1725;1726;1727;1728;1729;
1730;1731;1732;1733;1734;1735;1736;1737;1738;1739;
1740;1741;1742;1743;1744;1745;1746;1747;1748;1749;
1750;1751;1752;1753;1754;1755;1756;1757;1758;1759;
1760;1761;1762;1763;1764;1765;1766;1767;1768;1769;
1770;1771;1772;1773;1774;1775;1776;1777;1778;1779;
1780;1781;1782;1783;1784;1785;1786;1787;1788;1789;
1790;1791;1792;1793;1794;1795;1796;1797;1798;1799;
1800;1801;1802;1803;1804;1805;1806;1807;1808;1809;
1810;1811;1812;1813;1814;1815;1816;1817;1818;1819;
1820;1821;1822;1823;1824;1825;1826;1827;1828;1829;
1830;1831;1832;1833;1834;1835;1836;1837;1838;1839;
1840;1841;1842;1843;1844;1845;1846;1847;1848;1849;
1850;1851;1852;1853;1854;1855;1856;1857;1858;1859;
1860;1861;1862;1863;1864;1865;1866;1867;1868;1869;
1870;1871;1872;1873;1874;1875;1876;1877;1878;1879;
1880;1881;1882;1883;1884;1885;1886;1887;1888;1889;
1890;1891;1892;1893;1894;1895;1896;1897;1898;1899;
1900;1901;1902;1903;1904;1905;1906;1907;1908;1909;
1910;1911;1912;1913;1914;1915;1916;1917;1918;1919;
1920;1921;1922;1923;1924;1925;1926;1927;1928;1929;
1930;1931;1932;1933;1934;1935;1936;1937;1938;1939;
1940;1941;1942;1943;1944;1945;1946;1947;1948;1949;
1950;1951;1952;1953;1954;1955;1956;1957;1958;1959;
1960;1961;1962;1963;1964;1965;1966;1967;1968;1969;
1970;1971;1972;1973;1974;1975;1976;1977;1978;1979;
1980;1981;1982;1983;1984;1985;1986;1987;1988;1989;
1990;1991;1992;1993;1994;1995;1996;1997;1998;1999;
2000;2001;2002;2003;2004;2005;2006;2007;2008;2009;
2010;2011;2012;2013;2014;2015;2016;2017;2018;2019;
2020;2021;2022;2023;2024;2025;2026;2027;2028;2029;
2030;2031;2032;2033;2034;2035;2036;2037;2038;2039;
2040;2041;2042;2043;2044;2045;2046;2047;2048;2049;
2050;2051;2052;2053;2054;2055;2056;2057;2058;2059;
2060;2061;2062;2063;2064;2065;2066;2067;2068;2069;
2070;2071;2072;2073;2074;2075;2076;2077;2078;2079;
2080;2081;2082;2083;2084;2085;2086;2087;2088;2089;
2090;2091;2092;2093;2094;2095;2096;2097;2098;2099;
2100;2101;2102;2103;2104;2105;2106;2107;2108;2109;
2110;2111;2112;2113;2114;2115;2116;2117;2118;2119;
2120;2121;2122;2123;2124;2125;2126;2127;2128;2129;
2130;2131;2132;2133;2134;2135;2136;2137;2138;2139;
2140;2141;2142;2143;2144;2145;2146;2147;2148;2149;
2150;2151;2152;2153;2154;2155;2156;2157;2158;2159;
2160;2161;2162;2163;2164;2165;2166;2167;2168;2169;
2170;2171;2172;2173;2174;2175;2176;2177;2178;2179;
2180;2181;2182;2183;2184;2185;2186;2187;2188;2189;
2190;2191;2192;2193;2194;2195;2196;2197;2198;2199;
2200;2201;2202;2203;2204;2205;2206;2207;2208;2209;
2210;2211;2212;2213;2214;2215;2216;2217;2218;2219;
2220;2221;2222;2223;2224;2225;2226;2227;2228;2229;
2230;2231;2232;2233;2234;2235;2236;2237;2238;2239;
2240;2241;2242;2243;2244;2245;2246;2247;2248;2249;
2250;2251;2252;2253;2254;2255;2256;2257;2258;2259;
2260;2261;2262;2263;2264;2265;2266;2267;2268;2269;
2270;2271;2272;2273;2274;2275;2276;2277;2278;2279;
2280;2281;2282;2283;2284;2285;2286;2287;2288;2289;
2290;2291;2292;2293;2294;2295;2296;2297;2298;2299;
2300;2301;2302;2303;2304;2305;2306;2307;2308;2309;
2310;2311;2312;2313;2314;2315;2316;2317;2318;2319;
2320;2321;2322;2323;2324;2325;2326;2327;2328;2329;
2330;2331;2332;2333;2334;2335;2336;2337;2338;2339;
2340;2341;2342;2343;2344;2345;2346;2347;2348;2349;
2350;2351;2352;2353;2354;2355;2356;2357;2358;2359;
2360;2361;2362;2363;2364;2365;2366;2367;2368;2369;
2370;2371;2372;2373;2374;2375;2376;2377;2378;2379;
2380;2381;2382;2383;2384;2385;2386;2387;2388;2389;
2390;2391;2392;2393;2394;2395;2396;2397;2398;2399;
2400;2401;2402;2403;2404;2405;2406;2407;2408;2409;
2410;2411;2412;2413;2414;2415;2416;2417;2418;2419;
2420;2421;2422;2423;2424;2425;2426;2427;2428;2429;
2430;2431;2432;2433;2434;2435;2436;2437;2438;2439;
2440;2441;2442;2443;2444;2445;2446;2447;2448;2449;
2450;2451;2452;2453;2454;2455;2456;2457;2458;2459;
2460;2461;2462;2463;2464;2465;2466;2467;2468;2469;
2470;2471;2472;2473;2474;2475;2476;2477;2478;2479;
2480;2481;2482;2483;2484;2485;2486;2487;2488;2489;
2490;2491;2492;2493;2494;2495;2496;2497;2498;2499;
2500;2501;2502;2503;2504;2505;2506;2507;2508;2509;
2510;2511;2512;2513;2514;2515;2516;2517;2518;2519;
2520;2521;2522;2523;2524;2525;2526;2527;2528;2529;
2530;2531;2532;2533;2534;2535;2536;2537;2538;2539;
2540;2541;2542;2543;2544;2545;2546;2547;2548;2549;
2550;2551;2552;2553;2554;2555;2556;2557;2558;2559;
2560;2561;2562;2563;2564;2565;2566;2567;2568;2569;
2570;2571;2572;2573;2574;2575;2576;2577;2578;2579;
2580;2581;2582;2583;2584;2585;2586;2587;2588;2589;
2590;2591;2592;2593;2594;2595;2596;2597;2598;2599;
2600;2601;2602;2603;2604;2605;2606;2607;2608;2609;
2610;2611;2612;2613;2614;2615;2616;2617;2618;2619;
2620;2621;2622;2623;2624;2625;2626;2627;2628;2629;
2630;2631;2632;2633;2634;2635;2636;2637;2638;2639;
2640;2641;2642;2643;2644;2645;2646;2647;2648;2649;
2650;2651;2652;2653;2654;2655;2656;2657;2658;2659;
2660;2661;2662;2663;2664;2665;2666;2667;2668;2669;
2670;2671;2672;2673;2674;2675;2676;2677;2678;2679;
2680;2681;2682;2683;2684;2685;2686;2687;2688;2689;
2690;2691;2692;2693;2694;2695;2696;2697;2698;2699;
2700;2701;2702;2703;2704;2705;2706;2707;2708;2709;
2710;2711;2712;2713;2714;2715;2716;2717;2718;2719;
2720;2721;2722;2723;2724;2725;2726;2727;2728;2729;
2730;2731;2732;2733;2734;2735;2736;2737;2738;2739;
2740;2741;2742;2743;2744;2745;2746;2747;2748;2749;
2750;2751;2752;2753;2754;2755;2756;2757;2758;2759;
2760;2761;2762;2763;2764;2765;2766;2767;2768;2769;
2770;2771;2772;2773;2774;2775;2776;2777;2778;2779;
2780;2781;2782;2783;2784;2785;2786;2787;2788;2789;
2790;2791;2792;2793;2794;2795;2796;2797;2798;2799;
2800;2801;2802;2803;2804;2805;2806;2807;2808;2809;
2810;2811;2812;2813;2814;2815;2816;2817;2818;2819;
2820;2821;2822;2823;2824;2825;2826;2827;2828;2829;
2830;2831;2832;2833;2834;2835;2836;2837;2838;2839;
2840;2841;2842;2843;2844;2845;2846;2847;2848;2849;
2850;2851;2852;2853;2854;2855;2856;2857;2858;2859;
2860;2861;2862;2863;2864;2865;2866;2867;2868;2869;
2870;2871;2872;2873;2874;2875;2876;2877;2878;2879;
2880;2881;2882;2883;2884;2885;2886;2887;2888;2889;
2890;2891;2892;2893;2894;2895;2896;2897;2898;2899;
2900;2901;2902;2903;2904;2905;2906;2907;2908;2909;
2910;2911;2912;2913;2914;2915;2916;2917;2918;2919;
2920;2921;2922;2923;2924;2925;2926;2927;2928;2929;
2930;2931;2932;2933;2934;2935;2936;2937;2938;2939;
2940;2941;2942;2943;2944;2945;2946;2947;2948;2949;
2950;2951;2952;2953;2954;2955;2956;2957;2958;2959;
2960;2961;2962;2963;2964;2965;2966;2967;2968;2969;
2970;2971;2972;2973;2974;2975;2976;2977;2978;2979;
2980;2981;2982;2983;2984;2985;2986;2987;2988;2989;
2990;2991;2992;2993;2994;2995;2996;2997;2998;2999;
3000;3001;3002;3003;3004;3005;3006;3007;3008;3009;
3010;3011;3012;3013;3014;3015;3016;3017;3018;3019;
3020;3021;3022;3023;3024;3025;3026;3027;3028;3029;
3030;3031;3032;3033;3034;3035;3036;3037;3038;3039;
3040;3041;3042;3043;3044;3045;3046;3047;3048;3049;
3050;3051;3052;3053;3054;3055;3056;3057;3058;3059;
3060;3061;3062;3063;3064;3065;3066;3067;3068;3069;
3070;3071;3072;3073;3074;3075;3076;3077;3078;3079;
3080;3081;3082;3083;3084;3085;3086;3087;3088;3089;
3090;3091;3092;3093;3094;3095;3096;3097;3098;3099;
3100;3101;3102;3103;3104;3105;3106;3107;3108;3109;
3110;3111;3112;3113;3114;3115;3116;3117;3118;3119;
3120;3121;3122;3123;3124;3125;3126;3127;3128;3129;
3130;3131;3132;3133;3134;3135;3136;3137;3138;3139;
3140;3141;3142;3143;3144;3145;3146;3147;3148;3149;
3150;3151;3152;3153;3154;3155;3156;3157;3158;3159;
3160;3161;3162;3163;3164;3165;3166;3167;3168;3169;
3170;3171;3172;3173;3174;3175;3176;3177;3178;3179;
3180;3181;3182;3183;3184;3185;3186;3187;3188;3189;
3190;3191;3192;3193;3194;3195;3196;3197;3198;3199;
3200;3201;3202;3203;3204;3205;3206;3207;3208;3209;
3210;3211;3212;3213;3214;3215;3216;3217;3218;3219;
3220;3221;3222;3223;3224;3225;3226;3227;3228;3229;
3230;3231;3232;3233;3234;3235;3236;3237;3238;3239;
3240;3241;3242;3243;3244;3245;3246;3247;3248;3249;
3250;3251;3252;3253;3254;3255;3256;3257;3258;3259;
3260;3261;3262;3263;3264;3265;3266;3267;3268;3269;
3270;3271;3272;3273;3274;3275;3276;3277;3278;3279;
3280;3281;3282;3283;3284;3285;3286;3287;3288;3289;
3290;3291;3292;3293;3294;3295;3296;3297;3298;3299;
3300;3301;3302;3303;3304;3305;3306;3307;3308;3309;
3310;3311;3312;3313;3314;3315;3316;3317;3318;3319;
3320;3321;3322;3323;3324;3325;3326;3327;3328;3329;
3330;3331;3332;3333;3334;3335;3336;3337;3338;3339;
3340;3341;3342;3343;3344;3345;3346;3347;3348;3349;
3350;3351;3352;3353;3354;3355;3356;3357;3358;3359;
3360;3361;3362;3363;3364;3365;3366;3367;3368;3369;
3370;3371;3372;3373;3374;3375;3376;3377;3378;3379;
3380;3381;3382;3383;3384;3385;3386;3387;3388;3389;
3390;3391;3392;3393;3394;3395;3396;3397;3398;3399;
3400;3401;3402;3403;3404;3405;3406;3407;3408;3409;
3410;3411;3412;3413;3414;3415;3416;3417;3418;3419;
3420;3421;3422;3423;3424;3425;3426;3427;3428;3429;
3430;3431;3432;3433;3434;3435;3436;3437;3438;3439;
3440;3441;3442;3443;3444;3445;3446;3447;3448;3449;
3450;3451;3452;3453;3454;3455;3456;3457;3458;3459;
3460;3461;3462;3463;3464;3465;3466;3467;3468;3469;
3470;3471;3472;3473;3474;3475;3476;3477;3478;3479;
3480;3481;3482;3483;3484;3485;3486;3487;3488;3489;
3490;3491;3492;3493;3494;3495;3496;3497;3498;3499;
3500;3501;3502;3503;3504;3505;3506;3507;3508;3509;
3510;3511;3512;3513;3514;3515;3516;3517;3518;3519;
3520;3521;3522;3523;3524;3525;3526;3527;3528;3529;
3530;3531;3532;3533;3534;3535;3536;3537;3538;3539;
3540;3541;3542;3543;3544;3545;3546;3547;3548;3549;
3550;3551;3552;3553;3554;3555;3556;3557;3558;3559;
3560;3561;3562;3563;3564;3565;3566;3567;3568;3569;
3570;3571;3572;3573;3574;3575;3576;3577;3578;3579;
3580;3581;3582;3583;3584;3585;3586;3587;3588;3589;
3590;3591;3592;3593;3594;3595;3596;3597;3598;3599;
3600;3601;3602;3603;3604;3605;3606;3607;3608;3609;
3610;3611;3612;3613;3614;3615;3616;3617;3618;3619;
3620;3621;3622;3623;3624;3625;3626;3627;3628;3629;
3630;3631;3632;3633;3634;3635;3636;3637;3638;3639;
3640;3641;3642;3643;3644;3645;3646;3647;3648;3649;
3650;3651;3652;3653;3654;3655;3656;3657;3658;3659;
3660;3661;3662;3663;3664;3665;3666;3667;3668;3669;
3670;3671;3672;3673;3674;3675;3676;3677;3678;3679;
3680;3681;3682;3683;3684;3685;3686;3687;3688;3689;
3690;3691;3692;3693;3694;3695;3696;3697;3698;3699;
3700;3701;3702;3703;3704;3705;3706;3707;3708;3709;
3710;3711;3712;3713;3714;3715;3716;3717;3718;3719;
3720;3721;3722;3723;3724;3725;3726;3727;3728;3729;
3730;3731;3732;3733;3734;3735;3736;3737;3738;3739;
3740;3741;3742;3743;3744;3745;3746;3747;3748;3749;
3750;3751;3752;3753;3754;3755;3756;3757;3758;3759;
3760;3761;3762;3763;3764;3765;3766;3767;3768;3769;
3770;3771;3772;3773;3774;3775;3776;3777;3778;3779;
3780;3781;3782;3783;3784;3785;3786;3787;3788;3789;
3790;3791;3792;3793;3794;3795;3796;3797;3798;3799;
3800;3801;3802;3803;3804;3805;3806;3807;3808;3809;
3810;3811;3812;3813;3814;3815;3816;3817;3818;3819;
3820;3821;3822;3823;3824;3825;3826;3827;3828;3829;
3830;3831;3832;3833;3834;3835;3836;3837;3838;3839;
3840;3841;3842;3843;3844;3845;3846;3847;3848;3849;
3850;3851;3852;3853;3854;3855;3856;3857;3858;3859;
3860;3861;3862;3863;3864;3865;3866;3867;3868;3869;
3870;3871;3872;3873;3874;3875;3876;3877;3878;3879;
3880;3881;3882;3883;3884;3885;3886;3887;3888;3889;
3890;3891;3892;3893;3894;3895;3896;3897;3898;3899;
3900;3901;3902;3903;3904;3905;3906;3907;3908;3909;
3910;3911;3912;3913;3914;3915;3916;3917;3918;3919;
3920;3921;3922;3923;3924;3925;3926;3927;3928;3929;
3930;3931;3932;3933;3934;3935;3936;3937;3938;3939;
3940;3941;3942;3943;3944;3945;3946;3947;3948;3949;
3950;3951;3952;3953;3954;3955;3956;3957;3958;3959;
3960;3961;3962;3963;3964;3965;3966;3967;3968;3969;
3970;3971;3972;3973;3974;3975;3976;3977;3978;3979;
3980;3981;3982;3983;3984;3985;3986;3987;3988;3989;
3990;3991;3992;3993;3994;3995;3996;3997;3998;3999;
4000;4001;4002;4003;4004;4005;4006;4007;4008;4009;
4010;4011;4012;4013;4014;4015;4016;4017;4018;4019;
4020;4021;4022;4023;4024;4025;4026;4027;4028;4029;
4030;4031;4032;4033;4034;4035;4036;4037;4038;4039;
4040;4041;4042;4043;4044;4045;4046;4047;4048;4049;
4050;4051;4052;4053;4054;4055;4056;4057;4058;4059;
4060;4061;4062;4063;4064;4065;4066;4067;4068;4069;
4070;4071;4072;4073;4074;4075;4076;4077;4078;4079;
4080;4081;4082;4083;4084;4085;4086;4087;4088;4089;
4090;4091;4092;4093;4094;4095;4096;4097;4098;4099;
4100;4101;4102;4103;4104;4105;4106;4107;4108;4109;
4110;4111;4112;4113;4114;4115;4116;4117;4118;4119;
4120;4121;4122;4123;4124;4125;4126;4127;4128;4129;
4130;4131;4132;4133;4134;4135;4136;4137;4138;4139;
4140;4141;4142;4143;4144;4145;4146;4147;4148;4149;
4150;4151;4152;4153;4154;4155;4156;4157;4158;4159;
4160;4161;4162;4163;4164;4165;4166;4167;4168;4169;
4170;4171;4172;4173;4174;4175;4176;4177;4178;4179;
4180;4181;4182;4183;4184;4185;4186;4187;4188;4189;
4190;4191;4192;4193;4194;4195;4196;4197;4198;4199;
4200;4201;4202;4203;4204;4205;4206;4207;4208;4209;
4210;4211;4212;4213;4214;4215;4216;4217;4218;4219;
4220;4221;4222;4223;4224;4225;4226;4227;4228;4229;
4230;4231;4232;4233;4234;4235;4236;4237;4238;4239;
4240;4241;4242;4243;4244;4245;4246;4247;4248;4249;
4250;4251;4252;4253;4254;4255;4256;4257;4258;4259;
4260;4261;4262;4263;4264;4265;4266;4267;4268;4269;
4270;4271;4272;4273;4274;4275;4276;4277;4278;4279;
4280;4281;4282;4283;4284;4285;4286;4287;4288;4289;
4290;4291;4292;4293;4294;4295;4296;4297;4298;4299;
4300;4301;4302;4303;4304;4305;4306;4307;4308;4309;
4310;4311;4312;4313;4314;4315;4316;4317;4318;4319;
4320;4321;4322;4323;4324;4325;4326;4327;4328;4329;
4330;4331;4332;4333;4334;4335;4336;4337;4338;4339;
4340;4341;4342;4343;4344;4345;4346;4347;4348;4349;
4350;4351;4352;4353;4354;4355;4356;4357;4358;4359;
4360;4361;4362;4363;4364;4365;4366;4367;4368;4369;
4370;4371;4372;4373;4374;4375;4376;4377;4378;4379;
4380;4381;4382;4383;4384;4385;4386;4387;4388;4389;
4390;4391;4392;4393;4394;4395;4396;4397;4398;4399;
4400;4401;4402;4403;4404;4405;4406;4407;4408;4409;
4410;4411;4412;4413;4414;4415;4416;4417;4418;4419;
4420;4421;4422;4423;4424;4425;4426;4427;4428;4429;
4430;4431;4432;4433;4434;4435;4436;4437;4438;4439;
4440;4441;4442;4443;4444;4445;4446;4447;4448;4449;
4450;4451;4452;4453;4454;4455;4456;4457;4458;4459;
4460;4461;4462;4463;4464;4465;4466;4467;4468;4469;
4470;4471;4472;4473;4474;4475;4476;4477;4478;4479;
4480;4481;4482;4483;4484;4485;4486;4487;4488;4489;
4490;4491;4492;4493;4494;4495;4496;4497;4498;4499;
4500;4501;4502;4503;4504;4505;4506;4507;4508;4509;
4510;4511;4512;4513;4514;4515;4516;4517;4518;4519;
4520;4521;4522;4523;4524;4525;4526;4527;4528;4529;
4530;4531;4532;4533;4534;4535;4536;4537;4538;4539;
4540;4541;4542;4543;4544;4545;4546;4547;4548;4549;
4550;4551;4552;4553;4554;4555;4556;4557;4558;4559;
4560;4561;4562;4563;4564;4565;4566;4567;4568;4569;
4570;4571;4572;4573;4574;4575;4576;4577;4578;4579;
4580;4581;4582;4583;4584;4585;4586;4587;4588;4589;
4590;4591;4592;4593;4594;4595;4596;4597;4598;4599;
4600;4601;4602;4603;4604;4605;4606;4607;4608;4609;
4610;4611;4612;4613;4614;4615;4616;4617;4618;4619;
4620;4621;4622;4623;4624;4625;4626;4627;4628;4629;
4630;4631;4632;4633;4634;4635;4636;4637;4638;4639;
4640;4641;4642;4643;4644;4645;4646;4647;4648;4649;
4650;4651;4652;4653;4654;4655;4656;4657;4658;4659;
4660;4661;4662;4663;4664;4665;4666;4667;4668;4669;
4670;4671;4672;4673;4674;4675;4676;4677;4678;4679;
4680;4681;4682;4683;4684;4685;4686;4687;4688;4689;
4690;4691;4692;4693;4694;4695;4696;4697;4698;4699;
4700;4701;4702;4703;4704;4705;4706;4707;4708;4709;
4710;4711;4712;4713;4714;4715;4716;4717;4718;4719;
4720;4721;4722;4723;4724;4725;4726;4727;4728;4729;
4730;4731;4732;4733;4734;4735;4736;4737;4738;4739;
4740;4741;4742;4743;4744;4745;4746;4747;4748;4749;
4750;4751;4752;4753;4754;4755;4756;4757;4758;4759;
4760;4761;4762;4763;4764;4765;4766;4767;4768;4769;
4770;4771;4772;4773;4774;4775;4776;4777;4778;4779;
4780;4781;4782;4783;4784;4785;4786;4787;4788;4789;
4790;4791;4792;4793;4794;4795;4796;4797;4798;4799;
4800;4801;4802;4803;4804;4805;4806;4807;4808;4809;
4810;4811;4812;4813;4814;4815;4816;4817;4818;4819;
4820;4821;4822;4823;4824;4825;4826;4827;4828;4829;
4830;4831;4832;4833;4834;4835;4836;4837;4838;4839;
4840;4841;4842;4843;4844;4845;4846;4847;4848;4849;
4850;4851;4852;4853;4854;4855;4856;4857;4858;4859;
4860;4861;4862;4863;4864;4865;4866;4867;4868;4869;
4870;4871;4872;4873;4874;4875;4876;4877;4878;4879;
4880;4881;4882;4883;4884;4885;4886;4887;4888;4889;
4890;4891;4892;4893;4894;4895;4896;4897;4898;4899;
4900;4901;4902;4903;4904;4905;4906;4907;4908;4909;
4910;4911;4912;4913;4914;4915;4916;4917;4918;4919;
4920;4921;4922;4923;4924;4925;4926;4927;4928;4929;
4930;4931;4932;4933;4934;4935;4936;4937;4938;4939;
4940;4941;4942;4943;4944;4945;4946;4947;4948;4949;
4950;4951;4952;4953;4954;4955;4956;4957;4958;4959;
4960;4961;4962;4963;4964;4965;4966;4967;4968;4969;
4970;4971;4972;4973;4974;4975;4976;4977;4978;4979;
4980;4981;4982;4983;4984;4985;4986;4987;4988;4989;
4990;4991;4992;4993;4994;4995;4996;4997;4998;4999;
5000;5001;5002;5003;5004;5005;5006;5007;5008;5009;
5010;5011;5012;5013;5014;5015;5016;5017;5018;5019;
5020;5021;5022;5023;5024;5025;5026;5027;5028;5029;
5030;5031;5032;5033;5034;5035;5036;5037;5038;5039;
5040;5041;5042;5043;5044;5045;5046;5047;5048;5049;
5050;5051;5052;5053;5054;5055;5056;5057;5058;5059;
5060;5061;5062;5063;5064;5065;5066;5067;5068;5069;
5070;5071;5072;5073;5074;5075;5076;5077;5078;5079;
5080;5081;5082;5083;5084;5085;5086;5087;5088;5089;
5090;5091;5092;5093;5094;5095;5096;5097;5098;5099;
5100;5101;5102;5103;5104;5105;5106;5107;5108;5109;
5110;5111;5112;5113;5114;5115;5116;5117;5118;5119;
5120;5121;5122;5123;5124;5125;5126;5127;5128;5129;
5130;5131;5132;5133;5134;5135;5136;5137;5138;5139;
5140;5141;5142;5143;5144;5145;5146;5147;5148;5149;
5150;5151;5152;5153;5154;5155;5156;5157;5158;5159;
5160;5161;5162;5163;5164;5165;5166;5167;5168;5169;
5170;5171;5172;5173;5174;5175;5176;5177;5178;5179;
5180;5181;5182;5183;5184;5185;5186;5187;5188;5189;
5190;5191;5192;5193;5194;5195;5196;5197;5198;5199;
5200;5201;5202;5203;5204;5205;5206;5207;5208;5209;
5210;5211;5212;5213;5214;5215;5216;5217;5218;5219;
5220;5221;5222;5223;5224;5225;5226;5227;5228;5229;
5230;5231;5232;5233;5234;5235;5236;5237;5238;5239;
5240;5241;5242;5243;5244;5245;5246;5247;5248;5249;
5250;5251;5252;5253;5254;5255;5256;5257;5258;5259;
5260;5261;5262;5263;5264;5265;5266;5267;5268;5269;
5270;5271;5272;5273;5274;5275;5276;5277;5278;5279;
5280;5281;5282;5283;5284;5285;5286;5287;5288;5289;
5290;5291;5292;5293;5294;5295;5296;5297;5298;5299;
5300;5301;5302;5303;5304;5305;5306;5307;5308;5309;
5310;5311;5312;5313;5314;5315;5316;5317;5318;5319;
5320;5321;5322;5323;5324;5325;5326;5327;5328;5329;
5330;5331;5332;5333;5334;5335;5336;5337;5338;5339;
5340;5341;5342;5343;5344;5345;5346;5347;5348;5349;
5350;5351;5352;5353;5354;5355;5356;5357;5358;5359;
5360;5361;5362;5363;5364;5365;5366;5367;5368;5369;
5370;5371;5372;5373;5374;5375;5376;5377;5378;5379;
5380;5381;5382;5383;5384;5385;5386;5387;5388;5389;
5390;5391;5392;5393;5394;5395;5396;5397;5398;5399;
5400;5401;5402;5403;5404;5405;5406;5407;5408;5409;
5410;5411;5412;5413;5414;5415;5416;5417;5418;5419;
5420;5421;5422;5423;5424;5425;5426;5427;5428;5429;
5430;5431;5432;5433;5434;5435;5436;5437;5438;5439;
5440;5441;5442;5443;5444;5445;5446;5447;5448;5449;
5450;5451;5452;5453;5454;5455;5456;5457;5458;5459;
5460;5461;5462;5463;5464;5465;5466;5467;5468;5469;
5470;5471;5472;5473;5474;5475;5476;5477;5478;5479;
5480;5481;5482;5483;5484;5485;5486;5487;5488;5489;
5490;5491;5492;5493;5494;5495;5496;5497;5498;5499;
5500;5501;5502;5503;5504;5505;5506;5507;5508;5509;
5510;5511;5512;5513;5514;5515;5516;5517;5518;5519;
5520;5521;5522;5523;5524;5525;5526;5527;5528;5529;
5530;5531;5532;5533;5534;5535;5536;5537;5538;5539;
5540;5541;5542;5543;5544;5545;5546;5547;5548;5549;
5550;5551;5552;5553;5554;5555;5556;5557;5558;5559;
5560;5561;5562;5563;5564;5565;5566;5567;5568;5569;
5570;5571;5572;5573;5574;5575;5576;5577;5578;5579;
5580;5581;5582;5583;5584;5585;5586;5587;5588;5589;
5590;5591;5592;5593;5594;5595;5596;5597;5598;5599;
5600;5601;5602;5603;5604;5605;5606;5607;5608;5609;
5610;5611;5612;5613;5614;5615;5616;5617;5618;5619;
5620;5621;5622;5623;5624;5625;5626;5627;5628;5629;
5630;5631;5632;5633;5634;5635;5636;5637;5638;5639;
5640;5641;5642;5643;5644;5645;5646;5647;5648;5649;
5650;5651;5652;5653;5654;5655;5656;5657;5658;5659;
5660;5661;5662;5663;5664;5665;5666;5667;5668;5669;
5670;5671;5672;5673;5674;5675;5676;5677;5678;5679;
5680;5681;5682;5683;5684;5685;5686;5687;5688;5689;
5690;5691;5692;5693;5694;5695;5696;5697;5698;5699;
5700;5701;5702;5703;5704;5705;5706;5707;5708;5709;
5710;5711;5712;5713;5714;5715;5716;5717;5718;5719;
5720;5721;5722;5723;5724;5725;5726;5727;5728;5729;
5730;5731;5732;5733;5734;5735;5736;5737;5738;5739;
5740;5741;5742;5743;5744;5745;5746;5747;5748;5749;
5750;5751;5752;5753;5754;5755;5756;5757;5758;5759;
5760;5761;5762;5763;5764;5765;5766;5767;5768;5769;
5770;5771;5772;5773;5774;5775;5776;5777;5778;5779;
5780;5781;5782;5783;5784;5785;5786;5787;5788;5789;
5790;5791;5792;5793;5794;5795;5796;5797;5798;5799;
5800;5801;5802;5803;5804;5805;5806;5807;5808;5809;
5810;5811;5812;5813;5814;5815;5816;5817;5818;5819;
5820;5821;5822;5823;5824;5825;5826;5827;5828;5829;
5830;5831;5832;5833;5834;5835;5836;5837;5838;5839;
5840;5841;5842;5843;5844;5845;5846;5847;5848;5849;
5850;5851;5852;5853;5854;5855;5856;5857;5858;5859;
5860;5861;5862;5863;5864;5865;5866;5867;5868;5869;
5870;5871;5872;5873;5874;5875;5876;5877;5878;5879;
5880;5881;5882;5883;5884;5885;5886;5887;5888;5889;
5890;5891;5892;5893;5894;5895;5896;5897;5898;5899;
5900;5901;5902;5903;5904;5905;5906;5907;5908;5909;
5910;5911;5912;5913;5914;5915;5916;5917;5918;5919;
5920;5921;5922;5923;5924;5925;5926;5927;5928;5929;
5930;5931;5932;5933;5934;5935;5936;5937;5938;5939;
5940;5941;5942;5943;5944;5945;5946;5947;5948;5949;
5950;5951;5952;5953;5954;5955;5956;5957;5958;5959;
5960;5961;5962;5963;5964;5965;5966;5967;5968;5969;
5970;5971;5972;5973;5974;5975;5976;5977;5978;5979;
5980;5981;5982;5983;5984;5985;5986;5987;5988;5989;
5990;5991;5992;5993;5994;5995;5996;5997;5998;5999;
6000;6001;6002;6003;6004;6005;6006;6007;6008;6009;
6010;6011;6012;6013;6014;6015;6016;6017;6018;6019;
6020;6021;6022;6023;6024;6025;6026;6027;6028;6029;
6030;6031;6032;6033;6034;6035;6036;6037;6038;6039;
6040;6041;6042;6043;6044;6045;6046;6047;6048;6049;
6050;6051;6052;6053;6054;6055;6056;6057;6058;6059;
6060;6061;6062;6063;6064;6065;6066;6067;6068;6069;
6070;6071;6072;6073;6074;6075;6076;6077;6078;6079;
6080;6081;6082;6083;6084;6085;6086;6087;6088;6089;
6090;6091;6092;6093;6094;6095;6096;6097;6098;6099;
6100;6101;6102;6103;6104;6105;6106;6107;6108;6109;
6110;6111;6112;6113;6114;6115;6116;6117;6118;6119;
6120;6121;6122;6123;6124;6125;6126;6127;6128;6129;
6130;6131;6132;6133;6134;6135;6136;6137;6138;6139;
6140;6141;6142;6143;6144;6145;6146;6147;6148;6149;
6150;6151;6152;6153;6154;6155;6156;6157;6158;6159;
6160;6161;6162;6163;6164;6165;6166;6167;6168;6169;
6170;6171;6172;6173;6174;6175;6176;6177;6178;6179;
6180;6181;6182;6183;6184;6185;6186;6187;6188;6189;
6190;6191;6192;6193;6194;6195;6196;6197;6198;6199;
6200;6201;6202;6203;6204;6205;6206;6207;6208;6209;
6210;6211;6212;6213;6214;6215;6216;6217;6218;6219;
6220;6221;6222;6223;6224;6225;6226;6227;6228;6229;
6230;6231;6232;6233;6234;6235;6236;6237;6238;6239;
6240;6241;6242;6243;6244;6245;6246;6247;6248;6249;
6250;6251;6252;6253;6254;6255;6256;6257;6258;6259;
6260;6261;6262;6263;6264;6265;6266;6267;6268;6269;
6270;6271;6272;6273;6274;6275;6276;6277;6278;6279;
6280;6281;6282;6283;6284;6285;6286;6287;6288;6289;
6290;6291;6292;6293;6294;6295;6296;6297;6298;6299;
6300;6301;6302;6303;6304;6305;6306;6307;6308;6309;
6310;6311;6312;6313;6314;6315;6316;6317;6318;6319;
6320;6321;6322;6323;6324;6325;6326;6327;6328;6329;
6330;6331;6332;6333;6334;6335;6336;6337;6338;6339;
6340;6341;6342;6343;6344;6345;6346;6347;6348;6349;
6350;6351;6352;6353;6354;6355;6356;6357;6358;6359;
6360;6361;6362;6363;6364;6365;6366;6367;6368;6369;
6370;6371;6372;6373;6374;6375;6376;6377;6378;6379;
6380;6381;6382;6383;6384;6385;6386;6387;6388;6389;
6390;6391;6392;6393;6394;6395;6396;6397;6398;6399;
6400;6401;6402;6403;6404;6405;6406;6407;6408;6409;
6410;6411;6412;6413;6414;6415;6416;6417;6418;6419;
6420;6421;6422;6423;6424;6425;6426;6427;6428;6429;
6430;6431;6432;6433;6434;6435;6436;6437;6438;6439;
6440;6441;6442;6443;6444;6445;6446;6447;6448;6449;
6450;6451;6452;6453;6454;6455;6456;6457;6458;6459;
6460;6461;6462;6463;6464;6465;6466;6467;6468;6469;
6470;6471;6472;6473;6474;6475;6476;6477;6478;6479;
6480;6481;6482;6483;6484;6485;6486;6487;6488;6489;
6490;6491;6492;6493;6494;6495;6496;6497;6498;6499;
6500;6501;6502;6503;6504;6505;6506;6507;6508;6509;
6510;6511;6512;6513;6514;6515;6516;6517;6518;6519;
6520;6521;6522;6523;6524;6525;6526;6527;6528;6529;
6530;6531;6532;6533;6534;6535;6536;6537;6538;6539;
6540;6541;6542;6543;6544;6545;6546;6547;6548;6549;
6550;6551;6552;6553;6554;6555;6556;6557;6558;6559;
6560;6561;6562;6563;6564;6565;6566;6567;6568;6569;
6570;6571;6572;6573;6574;6575;6576;6577;6578;6579;
6580;6581;6582;6583;6584;6585;6586;6587;6588;6589;
6590;6591;6592;6593;6594;6595;6596;6597;6598;6599;
6600;6601;6602;6603;6604;6605;6606;6607;6608;6609;
6610;6611;6612;6613;6614;6615;6616;6617;6618;6619;
6620;6621;6622;6623;6624;6625;6626;6627;6628;6629;
6630;6631;6632;6633;6634;6635;6636;6637;6638;6639;
6640;6641;6642;6643;6644;6645;6646;6647;6648;6649;
6650;6651;6652;6653;6654;6655;6656;6657;6658;6659;
6660;6661;6662;6663;6664;6665;6666;6667;6668;6669;
6670;6671;6672;6673;6674;6675;6676;6677;6678;6679;
6680;6681;6682;6683;6684;6685;6686;6687;6688;6689;
6690;6691;6692;6693;6694;6695;6696;6697;6698;6699;
6700;6701;6702;6703;6704;6705;6706;6707;6708;6709;
6710;6711;6712;6713;6714;6715;6716;6717;6718;6719;
6720;6721;6722;6723;6724;6725;6726;6727;6728;6729;
6730;6731;6732;6733;6734;6735;6736;6737;6738;6739;
6740;6741;6742;6743;6744;6745;6746;6747;6748;6749;
6750;6751;6752;6753;6754;6755;6756;6757;6758;6759;
6760;6761;6762;6763;6764;6765;6766;6767;6768;6769;
6770;6771;6772;6773;6774;6775;6776;6777;6778;6779;
6780;6781;6782;6783;6784;6785;6786;6787;6788;6789;
6790;6791;6792;6793;6794;6795;6796;6797;6798;6799;
6800;6801;6802;6803;6804;6805;6806;6807;6808;6809;
6810;6811;6812;6813;6814;6815;6816;6817;6818;6819;
6820;6821;6822;6823;6824;6825;6826;6827;6828;6829;
6830;6831;6832;6833;6834;6835;6836;6837;6838;6839;
6840;6841;6842;6843;6844;6845;6846;6847;6848;6849;
6850;6851;6852;6853;6854;6855;6856;6857;6858;6859;
6860;6861;6862;6863;6864;6865;6866;6867;6868;6869;
6870;6871;6872;6873;6874;6875;6876;6877;6878;6879;
6880;6881;6882;6883;6884;6885;6886;6887;6888;6889;
6890;6891;6892;6893;6894;6895;6896;6897;6898;6899;
6900;6901;6902;6903;6904;6905;6906;6907;6908;6909;
6910;6911;6912;6913;6914;6915;6916;6917;6918;6919;
6920;6921;6922;6923;6924;6925;6926;6927;6928;6929;
6930;6931;6932;6933;6934;6935;6936;6937;6938;6939;
6940;6941;6942;6943;6944;6945;6946;6947;6948;6949;
6950;6951;6952;6953;6954;6955;6956;6957;6958;6959;
6960;6961;6962;6963;6964;6965;6966;6967;6968;6969;
6970;6971;6972;6973;6974;6975;6976;6977;6978;6979;
6980;6981;6982;6983;6984;6985;6986;6987;6988;6989;
6990;6991;6992;6993;6994;6995;6996;6997;6998;6999;
7000;7001;7002;7003;7004;7005;7006;7007;7008;7009;
7010;7011;7012;7013;7014;7015;7016;7017;7018;7019;
7020;7021;7022;7023;7024;7025;7026;7027;7028;7029;
7030;7031;7032;7033;7034;7035;7036;7037;7038;7039;
7040;7041;7042;7043;7044;7045;7046;7047;7048;7049;
7050;7051;7052;7053;7054;7055;7056;7057;7058;7059;
7060;7061;7062;7063;7064;7065;7066;7067;7068;7069;
7070;7071;7072;7073;7074;7075;7076;7077;7078;7079;
7080;7081;7082;7083;7084;7085;7086;7087;7088;7089;
7090;7091;7092;7093;7094;7095;7096;7097;7098;7099;
7100;7101;7102;7103;7104;7105;7106;7107;7108;7109;
7110;7111;7112;7113;7114;7115;7116;7117;7118;7119;
7120;7121;7122;7123;7124;7125;7126;7127;7128;7129;
7130;7131;7132;7133;7134;7135;7136;7137;7138;7139;
7140;7141;7142;7143;7144;7145;7146;7147;7148;7149;
7150;7151;7152;7153;7154;7155;7156;7157;7158;7159;
7160;7161;7162;7163;7164;7165;7166;7167;7168;7169;
7170;7171;7172;7173;7174;7175;7176;7177;7178;7179;
7180;7181;7182;7183;7184;7185;7186;7187;7188;7189;
7190;7191;7192;7193;7194;7195;7196;7197;7198;7199;
7200;7201;7202;7203;7204;7205;7206;7207;7208;7209;
7210;7211;7212;7213;7214;7215;7216;7217;7218;7219;
7220;7221;7222;7223;7224;7225;7226;7227;7228;7229;
7230;7231;7232;7233;7234;7235;7236;7237;7238;7239;
7240;7241;7242;7243;7244;7245;7246;7247;7248;7249;
7250;7251;7252;7253;7254;7255;7256;7257;7258;7259;
7260;7261;7262;7263;7264;7265;7266;7267;7268;7269;
7270;7271;7272;7273;7274;7275;7276;7277;7278;7279;
7280;7281;7282;7283;7284;7285;7286;7287;7288;7289;
7290;7291;7292;7293;7294;7295;7296;7297;7298;7299;
7300;7301;7302;7303;7304;7305;7306;7307;7308;7309;
7310;7311;7312;7313;7314;7315;7316;7317;7318;7319;
7320;7321;7322;7323;7324;7325;7326;7327;7328;7329;
7330;7331;7332;7333;7334;7335;7336;7337;7338;7339;
7340;7341;7342;7343;7344;7345;7346;7347;7348;7349;
7350;7351;7352;7353;7354;7355;7356;7357;7358;7359;
7360;7361;7362;7363;7364;7365;7366;7367;7368;7369;
7370;7371;7372;7373;7374;7375;7376;7377;7378;7379;
7380;7381;7382;7383;7384;7385;7386;7387;7388;7389;
7390;7391;7392;7393;7394;7395;7396;7397;7398;7399;
7400;7401;7402;7403;7404;7405;7406;7407;7408;7409;
7410;7411;7412;7413;7414;7415;7416;7417;7418;7419;
7420;7421;7422;7423;7424;7425;7426;7427;7428;7429;
7430;7431;7432;7433;7434;7435;7436;7437;7438;7439;
7440;7441;7442;7443;7444;7445;7446;7447;7448;7449;
7450;7451;7452;7453;7454;7455;7456;7457;7458;7459;
7460;7461;7462;7463;7464;7465;7466;7467;7468;7469;
7470;7471;7472;7473;7474;7475;7476;7477;7478;7479;
7480;7481;7482;7483;7484;7485;7486;7487;7488;7489;
7490;7491;7492;7493;7494;7495;7496;7497;7498;7499;
7500;7501;7502;7503;7504;7505;7506;7507;7508;7509;
7510;7511;7512;7513;7514;7515;7516;7517;7518;7519;
7520;7521;7522;7523;7524;7525;7526;7527;7528;7529;
7530;7531;7532;7533;7534;7535;7536;7537;7538;7539;
7540;7541;7542;7543;7544;7545;7546;7547;7548;7549;
7550;7551;7552;7553;7554;7555;7556;7557;7558;7559;
7560;7561;7562;7563;7564;7565;7566;7567;7568;7569;
7570;7571;7572;7573;7574;7575;7576;7577;7578;7579;
7580;7581;7582;7583;7584;7585;7586;7587;7588;7589;
7590;7591;7592;7593;7594;7595;7596;7597;7598;7599;
7600;7601;7602;7603;7604;7605;7606;7607;7608;7609;
7610;7611;7612;7613;7614;7615;7616;7617;7618;7619;
7620;7621;7622;7623;7624;7625;7626;7627;7628;7629;
7630;7631;7632;7633;7634;7635;7636;7637;7638;7639;
7640;7641;7642;7643;7644;7645;7646;7647;7648;7649;
7650;7651;7652;7653;7654;7655;7656;7657;7658;7659;
7660;7661;7662;7663;7664;7665;7666;7667;7668;7669;
7670;7671;7672;7673;7674;7675;7676;7677;7678;7679;
7680;7681;7682;7683;7684;7685;7686;7687;7688;7689;
7690;7691;7692;7693;7694;7695;7696;7697;7698;7699;
7700;7701;7702;7703;7704;7705;7706;7707;7708;7709;
7710;7711;7712;7713;7714;7715;7716;7717;7718;7719;
7720;7721;7722;7723;7724;7725;7726;7727;7728;7729;
7730;7731;7732;7733;7734;7735;7736;7737;7738;7739;
7740;7741;7742;7743;7744;7745;7746;7747;7748;7749;
7750;7751;7752;7753;7754;7755;7756;7757;7758;7759;
7760;7761;7762;7763;7764;7765;7766;7767;7768;7769;
7770;7771;7772;7773;7774;7775;7776;7777;7778;7779;
7780;7781;7782;7783;7784;7785;7786;7787;7788;7789;
7790;7791;7792;7793;7794;7795;7796;7797;7798;7799;
7800;7801;7802;7803;7804;7805;7806;7807;7808;7809;
7810;7811;7812;7813;7814;7815;7816;7817;7818;7819;
7820;7821;7822;7823;7824;7825;7826;7827;7828;7829;
7830;7831;7832;7833;7834;7835;7836;7837;7838;7839;
7840;7841;7842;7843;7844;7845;7846;7847;7848;7849;
7850;7851;7852;7853;7854;7855;7856;7857;7858;7859;
7860;7861;7862;7863;7864;7865;7866;7867;7868;7869;
7870;7871;7872;7873;7874;7875;7876;7877;7878;7879;
7880;7881;7882;7883;7884;7885;7886;7887;7888;7889;
7890;7891;7892;7893;7894;7895;7896;7897;7898;7899;
7900;7901;7902;7903;7904;7905;7906;7907;7908;7909;
7910;7911;7912;7913;7914;7915;7916;7917;7918;7919;
7920;7921;7922;7923;7924;7925;7926;7927;7928;7929;
7930;7931;7932;7933;7934;7935;7936;7937;7938;7939;
7940;7941;7942;7943;7944;7945;7946;7947;7948;7949;
7950;7951;7952;7953;7954;7955;7956;7957;7958;7959;
7960;7961;7962;7963;7964;7965;7966;7967;7968;7969;
7970;7971;7972;7973;7974;7975;7976;7977;7978;7979;
7980;7981;7982;7983;7984;7985;7986;7987;7988;7989;
7990;7991;7992;7993;7994;7995;7996;7997;7998;7999;
     };
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["Histogram"] {
     name="Histogram";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @["rnd_val"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_47";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["view_panel_wd"] {
	 name="view_panel_wd";
	 value 6 0=0.156739816069603;
	 val_type_fixed=0;
	};
       };
       name="rnd_val";
       col_flags=SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       ar {
	name="ar";
       [22] 0;0.045454547;0.090909094;0.13636364;0.18181819;0.22727273;0.27272728;0.31818181;0.36363637;0.40909091;
0.45454547;0.5;0.54545456;0.59090906;0.63636363;0.68181819;0.72727275;0.77272725;0.81818181;0.86363637;
0.90909094;0;       };
      };
      float_Data @["count"] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["view_panel_wd"] {
	 name="view_panel_wd";
	 value 6 0=0.156739816069603;
	 val_type_fixed=0;
	};
       };
       name="count";
       col_flags=SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       ar {
	name="ar";
       [22] 0;409;364;384;394;446;415;388;372;395;
376;436;409;420;370;413;394;386;398;411;
419;0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
     row_indexes {
      name="row_indexes";
     [22] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;     };
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @["RndType"] {
     name="RndType";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @["NEW_SEED"] {
       name="NEW_SEED";
       value=0;
       desc=;
      };
      DynEnumItem @["OLD_SEED"] {
       name="OLD_SEED";
       value=1;
       desc=;
      };
     };
     bits=0;
    };
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @["rnd_type"] {
     name="rnd_type";
     var_type=T_DynEnum;
     dyn_enum_val {
      user_data_=NULL;
      enum_type=.projects["random_numbers"].programs["RndTest"].types["RndType"]$$;
      value=1;
     };
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["n_outer"] {
     name="n_outer";
     var_type=T_Int;
     int_val=1000;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["MAX_INT"] {
     name="MAX_INT";
     var_type=T_Int;
     int_val=1073741824;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["n_cpus"] {
     name="n_cpus";
     var_type=T_Int;
     int_val=8;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["MyRndSeed"] {
     name="MyRndSeed";
     var_type=T_Object;
     object_type=RndSeed;
     object_val=.projects["random_numbers"].programs["RndTest"].objs["MyRndSeed"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["RndValues"] {
     name="RndValues";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["random_numbers"].programs["RndTest"].objs["RndValues"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["Histogram"] {
     name="Histogram";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["random_numbers"].programs["RndTest"].objs["Histogram"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
    AssignExpr @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="n_cpus = taMisc::thread_defaults.cpus";
     pre_compile_code_string="n_cpus = taMisc::thread_defaults.cpus";
     result_var=.projects["random_numbers"].programs["RndTest"].vars["n_cpus"]$$;
     expr {
      expr="taMisc::thread_defaults.cpus";
     };
    };
    AssignExpr @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="MAX_INT = pow(2,30)";
     pre_compile_code_string="MAX_INT = pow(2,30)";
     result_var=.projects["random_numbers"].programs["RndTest"].vars["MAX_INT"]$$;
     expr {
      expr="pow(2,30)";
     };
    };
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (4 vars)";
     pre_compile_code_string="LocalVars (4 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @["i"] {
       name="i";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @["j"] {
       name="j";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @["rnd"] {
       name="rnd";
       var_type=T_Real;
       real_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @["tmp_hist"] {
       name="tmp_hist";
       var_type=T_Object;
       object_type=float_Matrix;
       object_val=NULL;
       objs_ptr=0;
       flags=NEW_OBJ|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    Switch @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="switch(rnd_type)";
     pre_compile_code_string="switch(rnd_type)";
     switch_var=.projects["random_numbers"].programs["RndTest"].vars["rnd_type"]$$;
     cases {
      name="cases";
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="case: NEW_SEED";
       pre_compile_code_string="case: NEW_SEED";
       prog_code {
	name="prog_code";
	el_typ=ProgCode;
	el_def=0;
	MethodCall @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="MyRndSeed->NewSeed()";
	 pre_compile_code_string="MyRndSeed->NewSeed()";
	 result_var=NULL;
	 obj=.projects["random_numbers"].programs["RndTest"].vars["MyRndSeed"]$$;
	 method=RndSeed::NewSeed;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	 };
	 meth_sig="void NewSeed()";
	 meth_desc=" set the seed to a new random value (based on time and process id)";
	};
       };
       case_val {
	expr="NEW_SEED";
       };
       is_default=0;
      };
      CaseBlock @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="case: OLD_SEED";
       pre_compile_code_string="case: OLD_SEED";
       prog_code {
	name="prog_code";
	el_typ=ProgCode;
	el_def=0;
	MethodCall @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="MyRndSeed->OldSeed()";
	 pre_compile_code_string="MyRndSeed->OldSeed()";
	 result_var=NULL;
	 obj=$.projects["random_numbers"].programs["RndTest"].vars["MyRndSeed"]$;
	 method=RndSeed::OldSeed;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	 };
	 meth_sig="void OldSeed()";
	 meth_desc=" restore current seed to random num generator";
	};
       };
       case_val {
	expr="OLD_SEED";
       };
       is_default=0;
      };
     };
    };
    MethodCall @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="RndValues->ResetData()";
     pre_compile_code_string="RndValues->ResetData()";
     result_var=NULL;
     obj=.projects["random_numbers"].programs["RndTest"].vars["RndValues"]$$;
     method=DataTable::ResetData;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void ResetData()";
     meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
    };
    ForLoop @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="for (i = 0; i< n_outer; i++)";
     pre_compile_code_string="for (i = 0; i< n_outer; i++)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      ForLoop @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="for (j=0; j<n_cpus; j++)";
       pre_compile_code_string="for (j=0; j<n_cpus; j++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	RandomCall @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="rnd = Random::ZeroOne(j)";
	 pre_compile_code_string="rnd = Random::ZeroOne(j)";
	 result_var=.projects["random_numbers"].programs["RndTest"].prog_code[0].local_vars["rnd"]$$;
	 object_type=Random;
	 method=Random::ZeroOne;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="thr_no";
	   required=0;
	   def_val="-1";
	   prev_expr="MAX_INT";
	   expr {
	    expr="j";
	   };
	  };
	 };
	};
	PrintVar @[1] {
	 desc=;
	 flags=OFF|CAN_REVERT_TO_CODE;
	 code_string="Print  rnd";
	 pre_compile_code_string="Print  rnd";
	 message=;
	 print_var=$.projects["random_numbers"].programs["RndTest"].prog_code[0].local_vars["rnd"]$;
	 print_var2=NULL;
	 print_var3=NULL;
	 print_var4=NULL;
	 print_var5=NULL;
	 print_var6=NULL;
	 debug=0;
	};
	MethodCall @[2] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="RndValues->AddBlankRow()";
	 pre_compile_code_string="RndValues->AddBlankRow()";
	 result_var=NULL;
	 obj=$.projects["random_numbers"].programs["RndTest"].vars["RndValues"]$;
	 method=DataTable::AddBlankRow;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	 };
	 meth_sig="int AddBlankRow()";
	 meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	};
	CssExpr @[3] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="RndValues[0][-1] = rnd;";
	 pre_compile_code_string="RndValues[0][-1] = rnd;";
	 expr {
	  expr="RndValues[0][-1] = rnd;";
	 };
	};
       };
       init {
	expr="j=0";
       };
       test {
	expr="j<n_cpus";
       };
       iter {
	expr="j++";
       };
      };
     };
     init {
      expr="i = 0";
     };
     test {
      expr="i< n_outer";
     };
     iter {
      expr="i++";
     };
    };
    MathCall @[4] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="taMath_float::vec_histogram(tmp_hist, RndValues[0][:], 0.05, 0.0, 1.0, )";
     pre_compile_code_string="taMath_float::vec_histogram(tmp_hist, RndValues[0][:], 0.05, 0.0, 1.0, )";
     result_var=NULL;
     object_type=taMath_float;
     method=taMath_float::vec_histogram;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=float_Matrix_ptr;
       type="float_Matrix*";
       name="hist_vec";
       required=1;
       def_val=;
       prev_expr="tmp_hist";
       expr {
	expr="tmp_hist";
       };
      };
      ProgArg @[1] {
       arg_type=const_float_Matrix_ptr;
       type="float_Matrix*";
       name="src_vec";
       required=1;
       def_val=;
       prev_expr="RndValues[0][:]";
       expr {
	expr="RndValues[0][:]";
       };
      };
      ProgArg @[2] {
       arg_type=float;
       type="float";
       name="bin_size";
       required=1;
       def_val=;
       prev_expr="0.05";
       expr {
	expr="0.05";
       };
      };
      ProgArg @[3] {
       arg_type=float;
       type="float";
       name="min_val";
       required=0;
       def_val="0.0";
       prev_expr="0.0";
       expr {
	expr="0.0";
       };
      };
      ProgArg @[4] {
       arg_type=float;
       type="float";
       name="max_val";
       required=0;
       def_val="0.0";
       prev_expr="1.0";
       expr {
	expr="1.0";
       };
      };
      ProgArg @[5] {
       arg_type=float_Matrix_ptr;
       type="float_Matrix*";
       name="bin_vec";
       required=0;
       def_val="__null";
       prev_expr=;
       expr {
	expr=;
       };
      };
     };
    };
    MethodCall @[5] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Histogram->EnforceRows(tmp_hist.size)";
     pre_compile_code_string="Histogram->EnforceRows(tmp_hist.size)";
     result_var=NULL;
     obj=.projects["random_numbers"].programs["RndTest"].vars["Histogram"]$$;
     method=DataTable::EnforceRows;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=int;
       type="int";
       name="n_rows";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="tmp_hist.size";
       };
      };
     };
     meth_sig="void EnforceRows(int n_rows)";
     meth_desc=" ensure that there are exactly n_rows in the table, removing or adding as needed";
    };
    CssExpr @[6] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Histogram[1][:] = tmp_hist;";
     pre_compile_code_string="Histogram[1][:] = tmp_hist;";
     expr {
      expr="Histogram[1][:] = tmp_hist;";
     };
    };
    CssExpr @[7] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Histogram[0][:] = ((float_Matrix)[0:tmp_hist.size].Expand()) / tmp_hist.size;";
     pre_compile_code_string="Histogram[0][:] = ((float_Matrix)[0:tmp_hist.size].Expand()) / tmp_hist.size;";
     expr {
      expr="Histogram[0][:] = ((float_Matrix)[0:tmp_hist.size].Expand()) / tmp_hist.size;";
     };
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text=;
    html_text=;
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @["Browser2"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_46";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["view_win_lft"] {
     name="view_win_lft";
     value 8 0=0.0003380663;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_top"] {
     name="view_win_top";
     value 8 0=0.04973038;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_wd"] {
     name="view_win_wd";
     value 8 0=0.9983097;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_ht"] {
     name="view_win_ht";
     value 8 0=0.7992811;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_iconified"] {
     name="view_win_iconified";
     value 1 0=0;
     val_type_fixed=0;
    };
    UserDataItem @["view_splitter_state"] {
     name="view_splitter_state";
     value 9 0="AAAA/wAAAAEAAAADAAABAAAAAfwAAAKMAQAAAAcBAAAAAQE=";
     val_type_fixed=0;
    };
   };
   name="Browser2";
   m_data=.projects["random_numbers"]$$;
   cur_font_size=12;
   visible=1;
   win_name=".projects[\"random_numbers\"] - random_numbers.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @["Application"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_47";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_win_visible"] {
       name="view_win_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Application";
     m_data=NULL;
     cur_font_size=12;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @["Navigator"] {
     name="Navigator";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.projects["random_numbers"]$;
    };
    PanelViewer @["Editor"] {
     name="Editor";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
    };
    T3PanelViewer @["T3Frames"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_48";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_panel_selected"] {
       name="view_panel_selected";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="T3Frames";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @["Histogram"] {
       name="Histogram";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["Histogram_Graph"] {
	  name="Histogram_Graph";
	  m_data=$.projects["random_numbers"].programs["RndTest"].objs["Histogram"]$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["rnd_val"] {
	    name="rnd_val";
	    m_data=.projects["random_numbers"].programs["RndTest"].objs["Histogram"].data["rnd_val"]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=-0.05: fix_max=1: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["count"] {
	    name="count";
	    m_data=.projects["random_numbers"].programs["RndTest"].objs["Histogram"].data["count"]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=0: fix_max=0: max=450: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=21: };
	  page_rows=1952796260;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=BAR;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="rnd_val";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=1: min=-0.05: fix_max=1: max=1: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=16;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["Histogram_Graph_plot_1"] {
	    name="Histogram_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="count";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=0: max=446: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_2"] {
	    name="Histogram_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_3"] {
	    name="Histogram_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_4"] {
	    name="Histogram_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_5"] {
	    name="Histogram_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_6"] {
	    name="Histogram_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_7"] {
	    name="Histogram_Graph_plot_7";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_8"] {
	    name="Histogram_Graph_plot_8";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=STAR;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_9"] {
	    name="Histogram_Graph_plot_9";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_10"] {
	    name="Histogram_Graph_plot_10";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_11"] {
	    name="Histogram_Graph_plot_11";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_12"] {
	    name="Histogram_Graph_plot_12";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_13"] {
	    name="Histogram_Graph_plot_13";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_14"] {
	    name="Histogram_Graph_plot_14";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_15"] {
	    name="Histogram_Graph_plot_15";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_plot_16"] {
	    name="Histogram_Graph_plot_16";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=STAR;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["Histogram_Graph_err_1"] {
	    name="Histogram_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_2"] {
	    name="Histogram_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_3"] {
	    name="Histogram_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_4"] {
	    name="Histogram_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_5"] {
	    name="Histogram_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_6"] {
	    name="Histogram_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_7"] {
	    name="Histogram_Graph_err_7";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_8"] {
	    name="Histogram_Graph_err_8";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_9"] {
	    name="Histogram_Graph_err_9";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_10"] {
	    name="Histogram_Graph_err_10";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_11"] {
	    name="Histogram_Graph_err_11";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_12"] {
	    name="Histogram_Graph_err_12";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_13"] {
	    name="Histogram_Graph_err_13";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_14"] {
	    name="Histogram_Graph_err_14";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_15"] {
	    name="Histogram_Graph_err_15";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["Histogram_Graph_err_16"] {
	    name="Histogram_Graph_err_16";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs["C_ColdHot"]$$<ColorScaleSpec,C_ColdHot>;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.425: y=0.43: z=1.658887: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.648887;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @["Tools"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_49";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_win_lft"] {
       name="view_win_lft";
       value 8 0=0;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_top"] {
       name="view_win_top";
       value 8 0=0.005991612;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_wd"] {
       name="view_win_wd";
       value 8 0=0.02772143;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_ht"] {
       name="view_win_ht";
       value 8 0=0.7543439;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_iconified"] {
       name="view_win_iconified";
       value 1 0=0;
       val_type_fixed=0;
      };
      UserDataItem @["view_visible"] {
       name="view_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Tools";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc="Project updated on wiki: emergent changes: doc link";
 tree_state{ .;.docs;.docs[0];.wizards;.ctrl_panels;.param_sets;.data;.data.gp[0];.data.gp[1];.data.gp[2];.programs;.networks; };
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
 };
};
