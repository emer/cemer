// ta_Dump File v3.0 -- code v8.0.4.0 rev10393
LeabraProject .projects["anova"] { 
 Doc_Group @.docs = [0] {
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @["LeabraWizard_0"] { };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @["ControlPanel"] { 
   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };
  };
  ClusterRun @["ClusterRun"] { 
   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };

   DataTableCols @.jobs_running.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { };
    int_Data @["n_threads"] { };
    int_Data @["mpi_nodes"] { };
    int_Data @["mpi_per_node"] { };
    int_Data @["pb_batches"] { };
    int_Data @["pb_nodes"] { };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_running.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_running.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_done.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { };
    int_Data @["n_threads"] { };
    int_Data @["mpi_nodes"] { };
    int_Data @["mpi_per_node"] { };
    int_Data @["pb_batches"] { };
    int_Data @["pb_nodes"] { };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_done.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_done.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_deleted.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { };
    int_Data @["n_threads"] { };
    int_Data @["mpi_nodes"] { };
    int_Data @["mpi_per_node"] { };
    int_Data @["pb_batches"] { };
    int_Data @["pb_nodes"] { };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_deleted.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_deleted.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_archive.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { };
    int_Data @["n_threads"] { };
    int_Data @["mpi_nodes"] { };
    int_Data @["mpi_per_node"] { };
    int_Data @["pb_batches"] { };
    int_Data @["pb_nodes"] { };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_archive.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_archive.control_panel_cells = [0] {
   };

   DataTableCols @.file_list.data = [11] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["file_name"] { };
    String_Data @["tag"] { };
    String_Data @["size"] { };
    String_Data @["kind"] { };
    String_Data @["date_modified"] { };
    String_Data @["date_created"] { };
    String_Data @["svn_file_path"] { };
    String_Data @["proj_file_path"] { };
    String_Data @["file_path"] { };
   };

   DataOpList @.file_list.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.file_list.control_panel_cells = [0] {
   };

   DataTableCols @.cluster_info.data = [6] {
    String_Data @["queue"] { };
    String_Data @["job_no"] { };
    String_Data @["user"] { };
    String_Data @["state"] { };
    String_Data @["procs"] { };
    String_Data @["start_time"] { };
   };

   DataOpList @.cluster_info.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.cluster_info.control_panel_cells = [0] {
   };

   DataTableCols @.clusterscript_timestamp.data = [2] {
    String_Data @["timestamp"] { };
    int_Data @["version"] { };
   };

   DataOpList @.clusterscript_timestamp.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.clusterscript_timestamp.control_panel_cells = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.param_sets = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp["InputData"] { 
  };
  DataTable_Group @.gp["OutputData"] { 
  };
  DataTable_Group @.gp["AnalysisData"] { 
  };
 };

 Program_TopGroup @.programs = [1] {
  Program @["AnovaTest"] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @["DocLink"] { };
    UserDataItem @["user_pinned"] { };
   };

   ProgObjList @.objs = [9] {
    DataTable @["OneWayData"] { 
     DataTableCols @.data = [2] {
      String_Data @["cond"] { };
      float_Data @["data"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["OneWayResults"] { 
     DataTableCols @.data = [8] {
      String_Data @["cond_group"] { };
      float_Data @["data_mean"] { };
      float_Data @["data_ss"] { };
      float_Data @["N"] { };
      float_Data @["b_t"] { };
      float_Data @["b_p"] { };
      float_Data @["c_t"] { };
      float_Data @["c_p"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["OneWayPlot"] { 
     DataTableCols @.data = [3] {
      String_Data @["cond_group"] { };
      float_Data @["data_mean"] { };
      float_Data @["data_sem"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["TwoWayData"] { 
     DataTableCols @.data = [3] {
      String_Data @["seed"] { };
      String_Data @["fert"] { };
      float_Data @["data"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["TwoWayPlot_Seed"] { 
     DataTableCols @.data = [3] {
      String_Data @["seed_group"] { };
      float_Data @["data_mean"] { };
      float_Data @["data_sem"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["TwoWayPlot_Fert"] { 
     DataTableCols @.data = [3] {
      String_Data @["fert_group"] { };
      float_Data @["data_mean"] { };
      float_Data @["data_sem"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["TwoWayResults"] { 
     DataTableCols @.data = [6] {
      String_Data @["source"] { };
      float_Data @["df"] { };
      float_Data @["SS"] { };
      float_Data @["MS"] { };
      float_Data @["F_ratio"] { };
      float_Data @["p"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["ThreeWayData"] { 
     DataTableCols @.data = [4] {
      String_Data @["monitor"] { };
      String_Data @["argument"] { };
      String_Data @["source"] { };
      float_Data @["data"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["ThreeWayResults"] { 
     DataTableCols @.data = [6] {
      String_Data @["source"] { };
      float_Data @["df"] { };
      float_Data @["SS"] { };
      float_Data @["MS"] { };
      float_Data @["F_ratio"] { };
      float_Data @["p"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [9] {
    ProgVar @["one_way_data"] { };
    ProgVar @["one_way_results"] { };
    ProgVar @["two_way_data"] { };
    ProgVar @["two_way_results"] { };
    ProgVar @["one_way_plot"] { };
    ProgVar @["two_way_plot_seed"] { };
    ProgVar @["two_way_plot_fert"] { };
    ProgVar @["three_way_data"] { };
    ProgVar @["three_way_results"] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [7] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [0] {
     };
    };
    DataGroupProg @[1] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["cond_GROUP_0"] { };
      DataGroupEl @["data_MEAN_1"] { };
      DataGroupEl @["data_SEM_2"] { };
     };
    };
    DataAnalCall @[2] { 
     ProgArg_List @.meth_args = [4] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
     };
    };
    DataGroupProg @[3] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["seed_GROUP_0"] { };
      DataGroupEl @["data_MEAN_1"] { };
      DataGroupEl @["data_SEM_2"] { };
     };
    };
    DataGroupProg @[4] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["fert_GROUP_0"] { };
      DataGroupEl @["data_MEAN_1"] { };
      DataGroupEl @["data_SEM_2"] { };
     };
    };
    DataAnalCall @[5] { 
     ProgArg_List @.meth_args = [4] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
     };
    };
    DataAnalCall @[6] { 
     ProgArg_List @.meth_args = [4] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
     };
    };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @["Browser2"] { 
   ToolBar_List @.toolbars = [1] {
    ToolBar @["Application"] { };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @["Navigator"] { };
    PanelViewer @["Editor"] { };
    T3PanelViewer @["Visualizer"] { 
     T3Panel_List @.panels = [1] {
      T3Panel @["Plots"] { 
       T3DataView_List @.root_view.children = [3] {
	GraphTableView @["OneWayPlot_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["cond_group"] { };
	  GraphColView @["data_mean"] { };
	  GraphColView @["data_sem"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["OneWayPlot_Graph_plot_1"] { };
	  GraphPlotView @["OneWayPlot_Graph_plot_2"] { };
	  GraphPlotView @["OneWayPlot_Graph_plot_3"] { };
	  GraphPlotView @["OneWayPlot_Graph_plot_4"] { };
	  GraphPlotView @["OneWayPlot_Graph_plot_5"] { };
	  GraphPlotView @["OneWayPlot_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["OneWayPlot_Graph_err_1"] { };
	  GraphPlotView @["OneWayPlot_Graph_err_2"] { };
	  GraphPlotView @["OneWayPlot_Graph_err_3"] { };
	  GraphPlotView @["OneWayPlot_Graph_err_4"] { };
	  GraphPlotView @["OneWayPlot_Graph_err_5"] { };
	  GraphPlotView @["OneWayPlot_Graph_err_6"] { };
	 };
	};
	GraphTableView @["TwoWayPlot_Seed_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["seed_group"] { };
	  GraphColView @["data_mean"] { };
	  GraphColView @["data_sem"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["TwoWayPlot_Seed_Graph_plot_1"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_plot_2"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_plot_3"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_plot_4"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_plot_5"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["TwoWayPlot_Seed_Graph_err_1"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_err_2"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_err_3"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_err_4"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_err_5"] { };
	  GraphPlotView @["TwoWayPlot_Seed_Graph_err_6"] { };
	 };
	};
	GraphTableView @["TwoWayPlot_Fert_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["fert_group"] { };
	  GraphColView @["data_mean"] { };
	  GraphColView @["data_sem"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["TwoWayPlot_Fert_Graph_plot_1"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_plot_2"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_plot_3"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_plot_4"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_plot_5"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["TwoWayPlot_Fert_Graph_err_1"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_err_2"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_err_3"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_err_4"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_err_5"] { };
	  GraphPlotView @["TwoWayPlot_Fert_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @["Tools"] { };
   };
  };
 };

 Network_Group @.networks = [0] {
 };
};
LeabraProject .projects["anova"] {
 user_data_=NULL;
 name="anova";
 desc=;
 tags=;
 version {
  user_data_=NULL;
  major=0;
  minor=0;
  step=0;
 };
 author="Randall C. O'Reilly";
 email="randy.oreilly@colorado.edu";
 license {
  user_data_=NULL;
  license=GPLv2;
  owner_name="Regents of the University of Colorado";
  org="CCNLab at the University of Colorado Boulder";
  year="2017";
  custom=;
 };
 pub_cite=;
 wiki {
  user_data_=NULL;
  wiki=;
  page_name=;
 };
 docs {
  user_data_=NULL;
  name="docs";
  el_typ=taDoc;
  el_def=0;
 };
 wizards {
  user_data_=NULL;
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @["LeabraWizard_0"] {
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  user_data_=NULL;
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  ControlPanel @["ControlPanel"] {
   user_data_=NULL;
   name="ControlPanel";
   updt_while_running=0;
   desc=;
   mbrs {
    user_data_=NULL;
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    user_data_=NULL;
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
  ClusterRun @["ClusterRun"] {
   user_data_=NULL;
   name="ClusterRun";
   updt_while_running=0;
   desc=;
   mbrs {
    user_data_=NULL;
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    user_data_=NULL;
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   jobs_running {
    user_data_=NULL;
    name="jobs_running";
    desc=;
    data {
     user_data_=NULL;
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      user_data_=NULL;
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      user_data_=NULL;
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      user_data_=NULL;
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      user_data_=NULL;
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      user_data_=NULL;
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      user_data_=NULL;
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      user_data_=NULL;
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      user_data_=NULL;
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      user_data_=NULL;
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      user_data_=NULL;
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      user_data_=NULL;
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      user_data_=NULL;
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      user_data_=NULL;
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      user_data_=NULL;
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      user_data_=NULL;
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      user_data_=NULL;
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      user_data_=NULL;
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      user_data_=NULL;
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      user_data_=NULL;
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      user_data_=NULL;
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      user_data_=NULL;
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      user_data_=NULL;
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      user_data_=NULL;
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      user_data_=NULL;
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      user_data_=NULL;
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      user_data_=NULL;
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     user_data_=NULL;
     name="last_sort_spec";
     ops {
      user_data_=NULL;
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
    control_panel_cells {
     user_data_=NULL;
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_done {
    user_data_=NULL;
    name="jobs_done";
    desc=;
    data {
     user_data_=NULL;
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      user_data_=NULL;
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      user_data_=NULL;
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      user_data_=NULL;
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      user_data_=NULL;
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      user_data_=NULL;
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      user_data_=NULL;
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      user_data_=NULL;
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      user_data_=NULL;
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      user_data_=NULL;
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      user_data_=NULL;
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      user_data_=NULL;
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      user_data_=NULL;
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      user_data_=NULL;
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      user_data_=NULL;
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      user_data_=NULL;
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      user_data_=NULL;
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      user_data_=NULL;
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      user_data_=NULL;
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      user_data_=NULL;
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      user_data_=NULL;
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      user_data_=NULL;
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      user_data_=NULL;
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      user_data_=NULL;
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      user_data_=NULL;
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      user_data_=NULL;
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      user_data_=NULL;
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     user_data_=NULL;
     name="last_sort_spec";
     ops {
      user_data_=NULL;
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
    control_panel_cells {
     user_data_=NULL;
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_deleted {
    user_data_=NULL;
    name="jobs_deleted";
    desc=;
    data {
     user_data_=NULL;
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      user_data_=NULL;
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      user_data_=NULL;
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      user_data_=NULL;
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      user_data_=NULL;
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      user_data_=NULL;
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      user_data_=NULL;
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      user_data_=NULL;
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      user_data_=NULL;
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      user_data_=NULL;
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      user_data_=NULL;
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      user_data_=NULL;
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      user_data_=NULL;
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      user_data_=NULL;
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      user_data_=NULL;
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      user_data_=NULL;
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      user_data_=NULL;
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      user_data_=NULL;
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      user_data_=NULL;
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      user_data_=NULL;
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      user_data_=NULL;
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      user_data_=NULL;
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      user_data_=NULL;
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      user_data_=NULL;
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      user_data_=NULL;
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      user_data_=NULL;
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      user_data_=NULL;
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     user_data_=NULL;
     name="last_sort_spec";
     ops {
      user_data_=NULL;
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
    control_panel_cells {
     user_data_=NULL;
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_archive {
    user_data_=NULL;
    name="jobs_archive";
    desc=;
    data {
     user_data_=NULL;
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      user_data_=NULL;
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      user_data_=NULL;
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      user_data_=NULL;
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      user_data_=NULL;
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      user_data_=NULL;
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      user_data_=NULL;
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      user_data_=NULL;
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      user_data_=NULL;
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      user_data_=NULL;
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      user_data_=NULL;
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      user_data_=NULL;
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      user_data_=NULL;
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      user_data_=NULL;
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      user_data_=NULL;
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      user_data_=NULL;
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      user_data_=NULL;
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      user_data_=NULL;
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      user_data_=NULL;
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      user_data_=NULL;
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      user_data_=NULL;
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      user_data_=NULL;
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      user_data_=NULL;
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      user_data_=NULL;
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      user_data_=NULL;
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      user_data_=NULL;
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      user_data_=NULL;
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     user_data_=NULL;
     name="last_sort_spec";
     ops {
      user_data_=NULL;
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
    control_panel_cells {
     user_data_=NULL;
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   file_list {
    user_data_=NULL;
    name="file_list";
    desc=;
    data {
     user_data_=NULL;
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      user_data_=NULL;
      name="cluster";
      desc="cluster where this job was submitted / run";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      user_data_=NULL;
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["file_name"] {
      user_data_=NULL;
      name="file_name";
      desc="name of file -- does not include any path information";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      user_data_=NULL;
      name="tag";
      desc="job tag associated with this file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["size"] {
      user_data_=NULL;
      name="size";
      desc="size of file -- with typical suffixes (K = kilobytes, M = megabytes, G = gigabytes)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["kind"] {
      user_data_=NULL;
      name="kind";
      desc="type of file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["date_modified"] {
      user_data_=NULL;
      name="date_modified";
      desc="timestamp for when the file was last modified";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["date_created"] {
      user_data_=NULL;
      name="date_created";
      desc="timestamp for when the file was first created";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["svn_file_path"] {
      user_data_=NULL;
      name="svn_file_path";
      desc="path to file in SVN repository, relative to root of svn_repo repository";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["proj_file_path"] {
      user_data_=NULL;
      name="proj_file_path";
      desc="path to file relative to the parent project directory -- e.g., results/filename.dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["file_path"] {
      user_data_=NULL;
      name="file_path";
      desc="full path to file on local file system, including all parent directories and name of file -- takes you directly to the file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     user_data_=NULL;
     name="last_sort_spec";
     ops {
      user_data_=NULL;
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
    control_panel_cells {
     user_data_=NULL;
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   cluster_info {
    user_data_=NULL;
    name="cluster_info";
    desc=;
    data {
     user_data_=NULL;
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["queue"] {
      user_data_=NULL;
      name="queue";
      desc="queue that this info relates to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      user_data_=NULL;
      name="job_no";
      desc="job number or total number of actve jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      user_data_=NULL;
      name="user";
      desc="user name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["state"] {
      user_data_=NULL;
      name="state";
      desc="current scheduler state -- or description of global state info";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["procs"] {
      user_data_=NULL;
      name="procs";
      desc="number of processors for this job or for global state info";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      user_data_=NULL;
      name="start_time";
      desc="timestamp for when the job was submitted or started running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     user_data_=NULL;
     name="last_sort_spec";
     ops {
      user_data_=NULL;
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
    control_panel_cells {
     user_data_=NULL;
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   clusterscript_timestamp {
    user_data_=NULL;
    name="clusterscript_timestamp";
    desc=;
    data {
     user_data_=NULL;
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["timestamp"] {
      user_data_=NULL;
      name="timestamp";
      desc="Timestamp of last interaction from the cluster run script";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["version"] {
      name="version";
      desc="Version number of cluster run script ";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       user_data_=NULL;
       expr=;
      };
      dim_names {
       user_data_=NULL;
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     user_data_=NULL;
     name="last_sort_spec";
     ops {
      user_data_=NULL;
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
    control_panel_cells {
     user_data_=NULL;
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   search_algos {
    user_data_=NULL;
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
 };
 param_sets {
  user_data_=NULL;
  name="param_sets";
  el_typ=ParamSet;
  el_def=0;
 };
 data {
  user_data_=NULL;
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp["InputData"] {
   user_data_=NULL;
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["OutputData"] {
   user_data_=NULL;
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["AnalysisData"] {
   user_data_=NULL;
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  user_data_=NULL;
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program @["AnovaTest"] {
   UserDataItem_List @*(.user_data_) {
    user_data_=NULL;
    name="UserDataItem_List_98";
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @["DocLink"] {
     user_data_=NULL;
     name="DocLink";
     doc=.projects["anova"].programs["AnovaTest"].doc$$;
    };
    UserDataItem @["user_pinned"] {
     user_data_=NULL;
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="AnovaTest";
   short_nm="nvTst";
   tags=;
   desc=;
   version {
    user_data_=NULL;
    major=0;
    minor=0;
    step=0;
   };
   author="Randall C. O'Reilly";
   email="randy.oreilly@colorado.edu";
   flags=NO_STOP_STEP;
   stop_step_cond {
    user_data_=NULL;
    expr=;
   };
   objs {
    user_data_=NULL;
    name="objs";
    el_typ=DataTable;
    el_def=0;
    DataTable @["OneWayData"] {
     user_data_=NULL;
     name="OneWayData";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["cond"] {
       user_data_=NULL;
       name="cond";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [18] "a";"a";"a";"a";"a";"a";"b";"b";"b";"b";
"b";"b";"c";"c";"c";"c";"c";"c";       };
      };
      float_Data @["data"] {
       user_data_=NULL;
       name="data";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [18] 6;8;4;5;3;4;8;12;9;11;
6;8;13;9;11;8;7;12;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [18] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["OneWayResults"] {
     user_data_=NULL;
     name="OneWayResults";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["cond_group"] {
       user_data_=NULL;
       name="cond_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] "a";"b";"c";"Between_mean_MS_df";"Within_mean_MS_df";"Ftest_p_F";       };
      };
      float_Data @["data_mean"] {
       user_data_=NULL;
       name="data_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] 5;9;10;8;8;0.002398774;       };
      };
      float_Data @["data_ss"] {
       user_data_=NULL;
       name="data_ss";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] 16;24;28;42;4.5333333;9.2647057;       };
      };
      float_Data @["N"] {
       user_data_=NULL;
       name="N";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] 6;6;6;2;15;0;       };
      };
      float_Data @["b_t"] {
       user_data_=NULL;
       name="b_t";
       desc="Welch t-test statistic for pairwise comparison between these conditions";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] 3.4641018;0;0;0;0;0;       };
      };
      float_Data @["b_p"] {
       user_data_=NULL;
       name="b_p";
       desc="probability for Welch t-test of pairwise comparison between these conditions";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] 0.0071146488;0;0;0;0;0;       };
      };
      float_Data @["c_t"] {
       user_data_=NULL;
       name="c_t";
       desc="Welch t-test statistic for pairwise comparison between these conditions";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] 4.1286139;0.75955451;0;0;0;0;       };
      };
      float_Data @["c_p"] {
       user_data_=NULL;
       name="c_p";
       desc="probability for Welch t-test of pairwise comparison between these conditions";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [6] 0.0025647879;0.46694881;0;0;0;0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [6] 0;1;2;3;4;5;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["OneWayPlot"] {
     user_data_=NULL;
     name="OneWayPlot";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["cond_group"] {
       user_data_=NULL;
       name="cond_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [3] "a";"b";"c";       };
      };
      float_Data @["data_mean"] {
       user_data_=NULL;
       name="data_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [3] 5;9;10;       };
      };
      float_Data @["data_sem"] {
       user_data_=NULL;
       name="data_sem";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [3] 0.73029673;0.89442718;0.96609175;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [3] 0;1;2;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["TwoWayData"] {
     user_data_=NULL;
     name="TwoWayData";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["seed"] {
       user_data_=NULL;
       name="seed";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [38] "A";"A";"A";"A";"A";"A";"A";"A";"A";"A";
"B";"B";"B";"B";"B";"B";"B";"B";"B";"B";
"C";"C";"C";"C";"C";"C";"C";"C";"C";"C";
;;;;;;;;       };
      };
      String_Data @["fert"] {
       user_data_=NULL;
       name="fert";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [38] "1";"1";"2";"2";"3";"3";"4";"4";"5";"5";
"1";"1";"2";"2";"3";"3";"4";"4";"5";"5";
"1";"1";"2";"2";"3";"3";"4";"4";"5";"5";
;;;;;;;;       };
      };
      float_Data @["data"] {
       user_data_=NULL;
       name="data";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [38] 106;110;95;100;94;107;103;104;100;102;
110;112;98;99;100;101;108;112;105;107;
94;97;86;87;98;99;99;101;94;98;
0;0;0;0;0;0;0;0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [30] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["TwoWayPlot_Seed"] {
     user_data_=NULL;
     name="TwoWayPlot_Seed";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["seed_group"] {
       user_data_=NULL;
       name="seed_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [3] "A";"B";"C";       };
      };
      float_Data @["data_mean"] {
       user_data_=NULL;
       name="data_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [3] 102.1;105.2;95.300003;       };
      };
      float_Data @["data_sem"] {
       user_data_=NULL;
       name="data_sem";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [3] 1.6017351;1.7048948;1.6196707;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [3] 0;1;2;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["TwoWayPlot_Fert"] {
     user_data_=NULL;
     name="TwoWayPlot_Fert";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["fert_group"] {
       user_data_=NULL;
       name="fert_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [5] "1";"2";"3";"4";"5";       };
      };
      float_Data @["data_mean"] {
       user_data_=NULL;
       name="data_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [5] 104.83334;94.166664;99.833336;104.5;101;       };
      };
      float_Data @["data_sem"] {
       user_data_=NULL;
       name="data_sem";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [5] 3.0813055;2.5221243;1.7400512;1.9450793;1.9321835;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [5] 0;1;2;3;4;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["TwoWayResults"] {
     user_data_=NULL;
     name="TwoWayResults";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["source"] {
       user_data_=NULL;
       name="source";
       desc="Source of variability";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [4] "seed";"fert";"seed*fert";"within_error";       };
      };
      float_Data @["df"] {
       user_data_=NULL;
       name="df";
       desc="Degrees of freedom for source -- n-1";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [4] 2;4;8;15;       };
      };
      float_Data @["SS"] {
       user_data_=NULL;
       name="SS";
       desc="Sum of squares due to source ";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [4] 512.86603;449.46695;143.13335;136;       };
      };
      float_Data @["MS"] {
       user_data_=NULL;
       name="MS";
       desc="Mean squares due to source: SS / df";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [4] 256.43301;112.36674;17.891668;9.0666666;       };
      };
      float_Data @["F_ratio"] {
       user_data_=NULL;
       name="F_ratio";
       desc="F-statistic for source: MS_b / MS_w = ratio of MS for source (between factor) over overall MS within groups (error)";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [4] 28.283052;12.393391;1.9733458;0;       };
      };
      float_Data @["p"] {
       user_data_=NULL;
       name="p";
       desc="probability associated with given F statistic for this source -- how likely that differences are due strictly to chance";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [4] 8.1354001e-06;0.00011887187;0.12208981;0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [4] 0;1;2;3;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["ThreeWayData"] {
     user_data_=NULL;
     name="ThreeWayData";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["monitor"] {
       user_data_=NULL;
       name="monitor";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [96] "high";"high";"high";"high";"high";"high";"high";"high";"high";"high";
"high";"high";"high";"high";"high";"high";"high";"high";"high";"high";
"high";"high";"high";"high";"high";"high";"high";"high";"high";"high";
"high";"high";"high";"high";"high";"high";"high";"high";"high";"high";
"high";"high";"high";"high";"high";"high";"high";"high";"low";"low";
"low";"low";"low";"low";"low";"low";"low";"low";"low";"low";
"low";"low";"low";"low";"low";"low";"low";"low";"low";"low";
"low";"low";"low";"low";"low";"low";"low";"low";"low";"low";
"low";"low";"low";"low";"low";"low";"low";"low";"low";"low";
"low";"low";"low";"low";"low";"low";       };
      };
      String_Data @["argument"] {
       user_data_=NULL;
       name="argument";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [96] "strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";
"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";
"strong";"strong";"strong";"strong";"weak";"weak";"weak";"weak";"weak";"weak";
"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";
"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";"strong";"strong";
"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";
"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";"strong";
"strong";"strong";"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";
"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";"weak";
"weak";"weak";"weak";"weak";"weak";"weak";       };
      };
      String_Data @["source"] {
       user_data_=NULL;
       name="source";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [96] "expert";"expert";"expert";"expert";"expert";"expert";"expert";"expert";"expert";"expert";
"expert";"expert";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";
"attrac";"attrac";"attrac";"attrac";"expert";"expert";"expert";"expert";"expert";"expert";
"expert";"expert";"expert";"expert";"expert";"expert";"attrac";"attrac";"attrac";"attrac";
"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"expert";"expert";
"expert";"expert";"expert";"expert";"expert";"expert";"expert";"expert";"expert";"expert";
"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";
"attrac";"attrac";"expert";"expert";"expert";"expert";"expert";"expert";"expert";"expert";
"expert";"expert";"expert";"expert";"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";
"attrac";"attrac";"attrac";"attrac";"attrac";"attrac";       };
      };
      float_Data @["data"] {
       user_data_=NULL;
       name="data";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [96] 4;3;4;5;2;5;4;6;3;4;
5;4;4;4;2;3;5;3;2;3;
4;3;2;4;3;5;3;2;6;4;
4;3;5;3;2;3;5;5;7;5;
6;4;3;5;6;7;7;6;3;5;
5;4;3;2;1;5;3;4;3;4;
5;4;3;2;4;6;2;4;4;3;
4;3;5;6;4;7;6;7;5;6;
4;6;7;5;6;4;4;2;4;5;
4;3;4;2;3;4;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [96] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["ThreeWayResults"] {
     user_data_=NULL;
     name="ThreeWayResults";
     desc=;
     data {
      user_data_=NULL;
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["source"] {
       user_data_=NULL;
       name="source";
       desc="Source of variability";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=16;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [8] "monitor";"argument";"source";"monitor*argument";"monitor*source";"argument*source";"monitor*argument*source";"within_error";       };
      };
      float_Data @["df"] {
       user_data_=NULL;
       name="df";
       desc="Degrees of freedom for source -- n-1";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [8] 1;1;1;1;1;1;1;88;       };
      };
      float_Data @["SS"] {
       user_data_=NULL;
       name="SS";
       desc="Sum of squares due to source ";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [8] 0.041667301;24;0.66666919;0.375;12.04168;0.66666538;35.041687;115.66667;       };
      };
      float_Data @["MS"] {
       user_data_=NULL;
       name="MS";
       desc="Mean squares due to source: SS / df";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [8] 0.041667301;24;0.66666919;0.375;12.04168;0.66666538;35.041687;1.314394;       };
      };
      float_Data @["F_ratio"] {
       user_data_=NULL;
       name="F_ratio";
       desc="F-statistic for source: MS_b / MS_w = ratio of MS for source (between factor) over overall MS within groups (error)";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [8] 0.031700771;18.259365;0.5072065;0.28530258;9.1613932;0.50720358;26.659956;0;       };
      };
      float_Data @["p"] {
       user_data_=NULL;
       name="p";
       desc="probability associated with given F statistic for this source -- how likely that differences are due strictly to chance";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	user_data_=NULL;
	expr=;
       };
       dim_names {
	user_data_=NULL;
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	user_data_=NULL;
	name="ar";
       [8] 0.85910332;4.8661394e-05;0.4782393;0.59459805;0.003241542;0.47824156;1.4915948e-06;0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      user_data_=NULL;
      name="row_indexes";
     [8] 0;1;2;3;4;5;6;7;     };
     last_sort_spec {
      user_data_=NULL;
      name="last_sort_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
     control_panel_cells {
      user_data_=NULL;
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
   };
   types {
    user_data_=NULL;
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    user_data_=NULL;
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    user_data_=NULL;
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @["one_way_data"] {
     user_data_=NULL;
     name="one_way_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["OneWayData"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["one_way_results"] {
     user_data_=NULL;
     name="one_way_results";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["OneWayResults"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["two_way_data"] {
     user_data_=NULL;
     name="two_way_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["TwoWayData"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["two_way_results"] {
     user_data_=NULL;
     name="two_way_results";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["TwoWayResults"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["one_way_plot"] {
     user_data_=NULL;
     name="one_way_plot";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["OneWayPlot"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["two_way_plot_seed"] {
     user_data_=NULL;
     name="two_way_plot_seed";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Seed"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["two_way_plot_fert"] {
     user_data_=NULL;
     name="two_way_plot_fert";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Fert"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["three_way_data"] {
     user_data_=NULL;
     name="three_way_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["ThreeWayData"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["three_way_results"] {
     user_data_=NULL;
     name="three_way_results";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["anova"].programs["AnovaTest"].objs["ThreeWayResults"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    user_data_=NULL;
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    user_data_=NULL;
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    user_data_=NULL;
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     user_data_=NULL;
     desc=;
     flags=0;
     code_string=;
     local_vars {
      user_data_=NULL;
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
     };
    };
    DataGroupProg @[1] {
     user_data_=NULL;
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="group";
     src_data_var=.projects["anova"].programs["AnovaTest"].vars["one_way_data"]$$;
     dest_data_var=.projects["anova"].programs["AnovaTest"].vars["one_way_plot"]$$;
     group_spec {
      user_data_=NULL;
      name="group_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["cond_GROUP_0"] {
	user_data_=NULL;
	col_name="cond";
	name="cond_GROUP_0";
	agg {user_data_=NULL: name="agg": op=GROUP: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["data_MEAN_1"] {
	user_data_=NULL;
	col_name="data";
	name="data_MEAN_1";
	agg {user_data_=NULL: name="agg": op=MEAN: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["data_SEM_2"] {
	user_data_=NULL;
	col_name="data";
	name="data_SEM_2";
	agg {user_data_=NULL: name="agg": op=SEM: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataAnalCall @[2] {
     user_data_=NULL;
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="taDataAnal::AnovaOneWay()";
     result_var=NULL;
     object_type=taDataAnal;
     method=taDataAnal::AnovaOneWay;
     meth_args {
      user_data_=NULL;
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       user_data_=NULL;
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="result_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="one_way_results";
       };
      };
      ProgArg @[1] {
       user_data_=NULL;
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="src_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="one_way_data";
       };
      };
      ProgArg @[2] {
       user_data_=NULL;
       arg_type=const_taString_ref;
       type="taString&";
       name="cond_col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="\"cond\"";
       };
      };
      ProgArg @[3] {
       user_data_=NULL;
       arg_type=const_taString_ref;
       type="taString&";
       name="data_col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="\"data\"";
       };
      };
     };
    };
    DataGroupProg @[3] {
     user_data_=NULL;
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="group";
     src_data_var=.projects["anova"].programs["AnovaTest"].vars["two_way_data"]$$;
     dest_data_var=.projects["anova"].programs["AnovaTest"].vars["two_way_plot_seed"]$$;
     group_spec {
      user_data_=NULL;
      name="group_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["seed_GROUP_0"] {
	user_data_=NULL;
	col_name="seed";
	name="seed_GROUP_0";
	agg {user_data_=NULL: name="agg": op=GROUP: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["data_MEAN_1"] {
	user_data_=NULL;
	col_name="data";
	name="data_MEAN_1";
	agg {user_data_=NULL: name="agg": op=MEAN: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["data_SEM_2"] {
	user_data_=NULL;
	col_name="data";
	name="data_SEM_2";
	agg {user_data_=NULL: name="agg": op=SEM: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataGroupProg @[4] {
     user_data_=NULL;
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="group";
     src_data_var=$.projects["anova"].programs["AnovaTest"].vars["two_way_data"]$;
     dest_data_var=.projects["anova"].programs["AnovaTest"].vars["two_way_plot_fert"]$$;
     group_spec {
      user_data_=NULL;
      name="group_spec";
      ops {
       user_data_=NULL;
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["fert_GROUP_0"] {
	user_data_=NULL;
	col_name="fert";
	name="fert_GROUP_0";
	agg {user_data_=NULL: name="agg": op=GROUP: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["data_MEAN_1"] {
	user_data_=NULL;
	col_name="data";
	name="data_MEAN_1";
	agg {user_data_=NULL: name="agg": op=MEAN: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["data_SEM_2"] {
	user_data_=NULL;
	col_name="data";
	name="data_SEM_2";
	agg {user_data_=NULL: name="agg": op=SEM: rel={user_data_=NULL: name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataAnalCall @[5] {
     user_data_=NULL;
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="taDataAnal::AnovaOneWay()";
     result_var=NULL;
     object_type=taDataAnal;
     method=taDataAnal::AnovaNWay;
     meth_args {
      user_data_=NULL;
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       user_data_=NULL;
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="result_data";
       required=1;
       def_val=;
       prev_expr="one_way_results";
       expr {
	user_data_=NULL;
	expr="two_way_results";
       };
      };
      ProgArg @[1] {
       user_data_=NULL;
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="src_data";
       required=1;
       def_val=;
       prev_expr="one_way_data";
       expr {
	user_data_=NULL;
	expr="two_way_data";
       };
      };
      ProgArg @[2] {
       user_data_=NULL;
       arg_type=const_taString_ref;
       type="taString&";
       name="cond_col_nms";
       required=1;
       def_val=;
       prev_expr="\"cond\"";
       expr {
	user_data_=NULL;
	expr="\"seed fert\"";
       };
      };
      ProgArg @[3] {
       user_data_=NULL;
       arg_type=const_taString_ref;
       type="taString&";
       name="data_col_nm";
       required=1;
       def_val=;
       prev_expr="\"data\"";
       expr {
	user_data_=NULL;
	expr="\"data\"";
       };
      };
     };
    };
    DataAnalCall @[6] {
     user_data_=NULL;
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="taDataAnal::AnovaOneWay()";
     result_var=NULL;
     object_type=taDataAnal;
     method=taDataAnal::AnovaNWay;
     meth_args {
      user_data_=NULL;
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       user_data_=NULL;
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="result_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="three_way_results";
       };
      };
      ProgArg @[1] {
       user_data_=NULL;
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="src_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="three_way_data";
       };
      };
      ProgArg @[2] {
       user_data_=NULL;
       arg_type=const_taString_ref;
       type="taString&";
       name="cond_col_nms";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="\"monitor argument source\"";
       };
      };
      ProgArg @[3] {
       user_data_=NULL;
       arg_type=const_taString_ref;
       type="taString&";
       name="data_col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	user_data_=NULL;
	expr="\"data\"";
       };
      };
     };
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    user_data_=NULL;
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
    html_text="<html>
<head></head>
<body>
<h2> Enter Title Here </h2>
</body>
</html>
";
   };
  };
 };
 viewers {
  user_data_=NULL;
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @["Browser2"] {
   name="Browser2";
   m_data=.projects["anova"]$$;
   cur_font_size=12;
   visible=1;
   win_name=".projects[\"anova\"] - anova.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   revert_to_tab_no=-1;
   toolbars {
    user_data_=NULL;
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @["Application"] {
     name="Application";
     m_data=NULL;
     cur_font_size=12;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    user_data_=NULL;
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @["Navigator"] {
     user_data_=NULL;
     name="Navigator";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.projects["anova"]$;
    };
    PanelViewer @["Editor"] {
     user_data_=NULL;
     name="Editor";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
    };
    T3PanelViewer @["Visualizer"] {
     name="Visualizer";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     panels {
      user_data_=NULL;
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @["Plots"] {
       user_data_=NULL;
       name="Plots";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	user_data_=NULL;
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 user_data_=NULL;
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["OneWayPlot_Graph"] {
	  user_data_=NULL;
	  name="OneWayPlot_Graph";
	  m_data=$.projects["anova"].programs["AnovaTest"].objs["OneWayPlot"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   user_data_=NULL;
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["cond_group"] {
	    user_data_=NULL;
	    name="cond_group";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["OneWayPlot"].data["cond_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	   GraphColView @["data_mean"] {
	    user_data_=NULL;
	    name="data_mean";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["OneWayPlot"].data["data_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	   GraphColView @["data_sem"] {
	    user_data_=NULL;
	    name="data_sem";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["OneWayPlot"].data["data_sem"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   user_data_=NULL;
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   user_data_=NULL;
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=2: };
	  page_rows=-1094795586;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=BAR;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=4;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.6;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis_label_rot=0;
	  x_axis {
	   user_data_=NULL;
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="cond_group";
	   is_string=1;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=1: min=-0.5: fix_max=1: max=2.5: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   user_data_=NULL;
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   user_data_=NULL;
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["OneWayPlot_Graph_plot_1"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="data_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=15: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_plot_2"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_plot_3"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_plot_4"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_plot_5"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_plot_6"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   user_data_=NULL;
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["OneWayPlot_Graph_err_1"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="data_sem";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0.730297: fix_max=0: max=0.966092: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_err_2"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_err_3"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_err_4"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_err_5"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["OneWayPlot_Graph_err_6"] {
	    user_data_=NULL;
	    name="OneWayPlot_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   user_data_=NULL;
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   user_data_=NULL;
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs["C_ColdHot"]$$<ColorScaleSpec,C_ColdHot>;
	   auto_scale=0;
	  };
	  raster_axis {
	   user_data_=NULL;
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	 GraphTableView @["TwoWayPlot_Seed_Graph"] {
	  user_data_=NULL;
	  name="TwoWayPlot_Seed_Graph";
	  m_data=$.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Seed"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=-0.6472943: y=1.359359: z=0: }: };
	  children {
	   user_data_=NULL;
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["seed_group"] {
	    user_data_=NULL;
	    name="seed_group";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Seed"].data["seed_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	   GraphColView @["data_mean"] {
	    user_data_=NULL;
	    name="data_mean";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Seed"].data["data_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	   GraphColView @["data_sem"] {
	    user_data_=NULL;
	    name="data_sem";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Seed"].data["data_sem"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=-0.6472943: y=1.359359: z=0: }: };
	  annotations {
	   user_data_=NULL;
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   user_data_=NULL;
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=2: };
	  page_rows=-1094795586;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=BAR;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=3;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.6;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis_label_rot=0;
	  x_axis {
	   user_data_=NULL;
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="seed_group";
	   is_string=1;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=1: min=-0.5: fix_max=1: max=2.5: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   user_data_=NULL;
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=1;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=14: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  tot_plots=6;
	  plots {
	   user_data_=NULL;
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["TwoWayPlot_Seed_Graph_plot_1"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="data_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=50: fix_max=1: max=120: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_plot_2"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=1;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_plot_3"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_plot_4"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_plot_5"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_plot_6"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   user_data_=NULL;
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["TwoWayPlot_Seed_Graph_err_1"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="data_sem";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0.5: fix_max=0: max=6.5: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_err_2"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_err_3"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_err_4"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_err_5"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Seed_Graph_err_6"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Seed_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   user_data_=NULL;
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   user_data_=NULL;
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   user_data_=NULL;
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	 GraphTableView @["TwoWayPlot_Fert_Graph"] {
	  user_data_=NULL;
	  name="TwoWayPlot_Fert_Graph";
	  m_data=$.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Fert"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7333316: y=1.355266: z=0: }: };
	  children {
	   user_data_=NULL;
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["fert_group"] {
	    user_data_=NULL;
	    name="fert_group";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Fert"].data["fert_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	   GraphColView @["data_mean"] {
	    user_data_=NULL;
	    name="data_mean";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Fert"].data["data_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	   GraphColView @["data_sem"] {
	    user_data_=NULL;
	    name="data_sem";
	    m_data=.projects["anova"].programs["AnovaTest"].objs["TwoWayPlot_Fert"].data["data_sem"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {user_data_=NULL: min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7333316: y=1.355266: z=0: }: };
	  annotations {
	   user_data_=NULL;
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   user_data_=NULL;
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=4: };
	  page_rows=-1094795586;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=BAR;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=3;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.6;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis_label_rot=0;
	  x_axis {
	   user_data_=NULL;
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="fert_group";
	   is_string=1;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=1: min=-0.5: fix_max=1: max=4.5: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   user_data_=NULL;
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=14: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  tot_plots=6;
	  plots {
	   user_data_=NULL;
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["TwoWayPlot_Fert_Graph_plot_1"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="data_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=50: fix_max=1: max=120: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_plot_2"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_plot_3"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_plot_4"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_plot_5"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_plot_6"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   user_data_=NULL;
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["TwoWayPlot_Fert_Graph_err_1"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="data_sem";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0.5: fix_max=0: max=6.5: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_err_2"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_err_3"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_err_4"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_err_5"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["TwoWayPlot_Fert_Graph_err_6"] {
	    user_data_=NULL;
	    name="TwoWayPlot_Fert_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   user_data_=NULL;
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   user_data_=NULL;
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   user_data_=NULL;
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {user_data_=NULL: name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	user_data_=NULL;
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	user_data_=NULL;
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 user_data_=NULL;
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.4614133: y=1.139679: z=3.370142: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=3.370142;
	};
	T3SavedView @["Vw_1"] {
	 user_data_=NULL;
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 user_data_=NULL;
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 user_data_=NULL;
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 user_data_=NULL;
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 user_data_=NULL;
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 user_data_=NULL;
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 user_data_=NULL;
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 user_data_=NULL;
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 user_data_=NULL;
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    user_data_=NULL;
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @["Tools"] {
     name="Tools";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc=;
 tree_state{ .;.docs;.wizards;.ctrl_panels;.data;.data.gp[0];.data.gp[1];.data.gp[2];.programs;.programs[0];.programs[0].objs;.programs[0].objs[7];.programs[0].objs[8];.programs[0].functions;.networks; };
 networks {
  user_data_=NULL;
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
 };
};
