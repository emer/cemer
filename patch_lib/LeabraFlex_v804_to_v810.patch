// ta_Dump File v3.0 -- code v8.0.8.0 rev10704
Patch .projects[0].patches[0] { 
 PatchRec_Group @.patch_recs = [0] {
  PatchRec_Group @.gp[0] = [4] { 
   PatchRec @[0] { };
   PatchRec @[1] { };
   PatchRec @[2] { };
   PatchRec @[3] { };
  };
  PatchRec_Group @.gp[1] = [123] { 
   PatchRec @[0] { };
   PatchRec @[1] { };
   PatchRec @[2] { };
   PatchRec @[3] { };
   PatchRec @[4] { };
   PatchRec @[5] { };
   PatchRec @[6] { };
   PatchRec @[7] { };
   PatchRec @[8] { };
   PatchRec @[9] { };
   PatchRec @[10] { };
   PatchRec @[11] { };
   PatchRec @[12] { };
   PatchRec @[13] { };
   PatchRec @[14] { };
   PatchRec @[15] { };
   PatchRec @[16] { };
   PatchRec @[17] { };
   PatchRec @[18] { };
   PatchRec @[19] { };
   PatchRec @[20] { };
   PatchRec @[21] { };
   PatchRec @[22] { };
   PatchRec @[23] { };
   PatchRec @[24] { };
   PatchRec @[25] { };
   PatchRec @[26] { };
   PatchRec @[27] { };
   PatchRec @[28] { };
   PatchRec @[29] { };
   PatchRec @[30] { };
   PatchRec @[31] { };
   PatchRec @[32] { };
   PatchRec @[33] { };
   PatchRec @[34] { };
   PatchRec @[35] { };
   PatchRec @[36] { };
   PatchRec @[37] { };
   PatchRec @[38] { };
   PatchRec @[39] { };
   PatchRec @[40] { };
   PatchRec @[41] { };
   PatchRec @[42] { };
   PatchRec @[43] { };
   PatchRec @[44] { };
   PatchRec @[45] { };
   PatchRec @[46] { };
   PatchRec @[47] { };
   PatchRec @[48] { };
   PatchRec @[49] { };
   PatchRec @[50] { };
   PatchRec @[51] { };
   PatchRec @[52] { };
   PatchRec @[53] { };
   PatchRec @[54] { };
   PatchRec @[55] { };
   PatchRec @[56] { };
   PatchRec @[57] { };
   PatchRec @[58] { };
   PatchRec @[59] { };
   PatchRec @[60] { };
   PatchRec @[61] { };
   PatchRec @[62] { };
   PatchRec @[63] { };
   PatchRec @[64] { };
   PatchRec @[65] { };
   PatchRec @[66] { };
   PatchRec @[67] { };
   PatchRec @[68] { };
   PatchRec @[69] { };
   PatchRec @[70] { };
   PatchRec @[71] { };
   PatchRec @[72] { };
   PatchRec @[73] { };
   PatchRec @[74] { };
   PatchRec @[75] { };
   PatchRec @[76] { };
   PatchRec @[77] { };
   PatchRec @[78] { };
   PatchRec @[79] { };
   PatchRec @[80] { };
   PatchRec @[81] { };
   PatchRec @[82] { };
   PatchRec @[83] { };
   PatchRec @[84] { };
   PatchRec @[85] { };
   PatchRec @[86] { };
   PatchRec @[87] { };
   PatchRec @[88] { };
   PatchRec @[89] { };
   PatchRec @[90] { };
   PatchRec @[91] { };
   PatchRec @[92] { };
   PatchRec @[93] { };
   PatchRec @[94] { };
   PatchRec @[95] { };
   PatchRec @[96] { };
   PatchRec @[97] { };
   PatchRec @[98] { };
   PatchRec @[99] { };
   PatchRec @[100] { };
   PatchRec @[101] { };
   PatchRec @[102] { };
   PatchRec @[103] { };
   PatchRec @[104] { };
   PatchRec @[105] { };
   PatchRec @[106] { };
   PatchRec @[107] { };
   PatchRec @[108] { };
   PatchRec @[109] { };
   PatchRec @[110] { };
   PatchRec @[111] { };
   PatchRec @[112] { };
   PatchRec @[113] { };
   PatchRec @[114] { };
   PatchRec @[115] { };
   PatchRec @[116] { };
   PatchRec @[117] { };
   PatchRec @[118] { };
   PatchRec @[119] { };
   PatchRec @[120] { };
   PatchRec @[121] { };
   PatchRec @[122] { };
  };
  PatchRec_Group @.gp[2] = [16] { 
   PatchRec @[0] { };
   PatchRec @[1] { };
   PatchRec @[2] { };
   PatchRec @[3] { };
   PatchRec @[4] { };
   PatchRec @[5] { };
   PatchRec @[6] { };
   PatchRec @[7] { };
   PatchRec @[8] { };
   PatchRec @[9] { };
   PatchRec @[10] { };
   PatchRec @[11] { };
   PatchRec @[12] { };
   PatchRec @[13] { };
   PatchRec @[14] { };
   PatchRec @[15] { };
  };
  PatchRec_Group @.gp[3] = [2] { 
   PatchRec @[0] { };
   PatchRec @[1] { };
  };
  PatchRec_Group @.gp[4] = [19] { 
   PatchRec @[0] { };
   PatchRec @[1] { };
   PatchRec @[2] { };
   PatchRec @[3] { };
   PatchRec @[4] { };
   PatchRec @[5] { };
   PatchRec @[6] { };
   PatchRec @[7] { };
   PatchRec @[8] { };
   PatchRec @[9] { };
   PatchRec @[10] { };
   PatchRec @[11] { };
   PatchRec @[12] { };
   PatchRec @[13] { };
   PatchRec @[14] { };
   PatchRec @[15] { };
   PatchRec @[16] { };
   PatchRec @[17] { };
   PatchRec @[18] { };
  };
 };
};
Patch .projects[0].patches[0] {
 name="LeabraFlex_v804_to_v810";
 tags="Leabra, LeabraFlex, v8.0.4, v8.1.0, ParamSet, ConfigTable, Logging, Tag";
 desc="Updates a LeabraFlex-based project from version 8.0.4 to 8.1.0, transitioning from ConfigTable to ParamSet-based configuration, and adding logging / tag code to Interactive runs";
 author="Randall C. O'Reilly";
 email="emergent-users@grey.colorado.edu";
 date="2017_05_08_21_38_24";
 from_name="LeabraFlex_10389_v804";
 to_name="LeabraFlex_10704_v808";
 patch_recs {
  name="patch_recs";
  el_typ=PatchRec;
  el_def=0;
  path=;
  PatchRec_Group @.gp[0] {
   name="data";
   el_typ=PatchRec;
   el_def=0;
   path=;
   PatchRec @[0] {
    off=0;
    action=ASSIGN;
    obj_path_names=".data.gp[\\\"ConfigData\\\"]";
    obj_path_idx=".data.gp[3]";
    obj_type="DataTable_Group";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDataTable_Group .projects[1].data.gp[3] { \\n};\\nDataTable_Group .projects[1].data.gp[3] {\\n name=\\\"ClusterRun\\\";\\n el_typ=DataTable;\\n el_def=0;\\n save_tables=0;\\n};\\n";
   };
   PatchRec @[1] {
    off=0;
    action=INSERT;
    obj_path_names=".data.gp[\\\"OutputData\\\"]";
    obj_path_idx=".data.gp[1]";
    obj_type="DataTable_Group";
    mbr_path=;
    targ_idx=2;
    targ_name="TestTrialOutputData";
    insert_after="EpochOutputData";
    insert_before=;
    new_obj_type="DataTable";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDataTable .projects[1].data.gp[1][2] { \\n DataTableCols @.data = [30] {\\n  int_Data @[0] { };\\n  int_Data @[1] { };\\n  String_Data @[2] { };\\n  int_Data @[3] { };\\n  int_Data @[4] { };\\n  int_Data @[5] { };\\n  float_Data @[6] { };\\n  String_Data @[7] { };\\n  String_Data @[8] { };\\n  String_Data @[9] { };\\n  float_Data @[10] { };\\n  float_Data @[11] { };\\n  float_Data @[12] { };\\n  float_Data @[13] { };\\n  float_Data @[14] { };\\n  float_Data @[15] { };\\n  float_Data @[16] { };\\n  float_Data @[17] { };\\n  float_Data @[18] { };\\n  float_Data @[19] { };\\n  float_Data @[20] { };\\n  float_Data @[21] { };\\n  float_Data @[22] { };\\n  float_Data @[23] { };\\n  float_Data @[24] { };\\n  float_Data @[25] { };\\n  float_Data @[26] { };\\n  float_Data @[27] { };\\n  float_Data @[28] { };\\n  float_Data @[29] { };\\n };\\n\\n DataOpList @.last_sort_spec.ops = [0] {\\n };\\n};\\nDataTable .projects[1].data.gp[1][2] {\\n name=\\\"TestTrialOutputData\\\";\\n desc=;\\n data {\\n  name=\\\"data\\\";\\n  el_typ=int_Data;\\n  el_def=0;\\n  int_Data @[0] {\\n   name=\\\"batch\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  int_Data @[1] {\\n   name=\\\"epoch\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  String_Data @[2] {\\n   name=\\\"train_mode\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n  };\\n  int_Data @[3] {\\n   name=\\\"group\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  int_Data @[4] {\\n   name=\\\"trial\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  int_Data @[5] {\\n   name=\\\"tick\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[6] {\\n   name=\\\"time\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  String_Data @[7] {\\n   name=\\\"trial_name\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n  };\\n  String_Data @[8] {\\n   name=\\\"group_name\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n  };\\n  String_Data @[9] {\\n   name=\\\"output_name\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[10] {\\n   name=\\\"rt_cycles\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=9;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[11] {\\n   name=\\\"sse\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[12] {\\n   name=\\\"norm_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[13] {\\n   name=\\\"cos_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[14] {\\n   name=\\\"ext_rew\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[15] {\\n   name=\\\"Output_lay_sse\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=14;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[16] {\\n   name=\\\"Output_lay_bin_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=18;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[17] {\\n   name=\\\"Output_lay_norm_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=19;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[18] {\\n   name=\\\"Output_lay_cos_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=18;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[19] {\\n   name=\\\"Hidden_lay_net_sd\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=17;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[20] {\\n   name=\\\"Output_lay_net_sd\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=17;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[21] {\\n   name=\\\"net_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=12;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[22] {\\n   name=\\\"net_trial_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=18;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[23] {\\n   name=\\\"net_avg_act_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[24] {\\n   name=\\\"Hidden_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=15;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[25] {\\n   name=\\\"Output_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=15;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[26] {\\n   name=\\\"Hidden_trial_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=21;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[27] {\\n   name=\\\"Output_trial_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=21;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[28] {\\n   name=\\\"Hidden_avg_act_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=19;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[29] {\\n   name=\\\"Output_avg_act_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=19;\\n   matrix_col_width=10;\\n  };\\n };\\n data_flags=AUTO_CALC;\\n auto_load=NO_AUTO_LOAD;\\n auto_load_file=;\\n row_height=1;\\n max_col_width=50;\\n keygen 4 0=0;\\n last_sort_spec {\\n  name=\\\"last_sort_spec\\\";\\n  ops {\\n   name=\\\"ops\\\";\\n   el_typ=DataSortEl;\\n   el_def=0;\\n  };\\n };\\n row_with_hilite=-1;\\n};\\n";
   };
   PatchRec @[2] {
    off=0;
    action=INSERT;
    obj_path_names=".data.gp[\\\"OutputData\\\"]";
    obj_path_idx=".data.gp[1]";
    obj_type="DataTable_Group";
    mbr_path=;
    targ_idx=2;
    targ_name="TestEpochOutputData";
    insert_after="TestTrialOutputData";
    insert_before=;
    new_obj_type="DataTable";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDataTable .projects[1].data.gp[1][3] { \\n DataTableCols @.data = [32] {\\n  int_Data @[0] { };\\n  int_Data @[1] { };\\n  float_Data @[2] { };\\n  float_Data @[3] { };\\n  float_Data @[4] { };\\n  float_Data @[5] { };\\n  float_Data @[6] { };\\n  float_Data @[7] { };\\n  float_Data @[8] { };\\n  float_Data @[9] { };\\n  float_Data @[10] { };\\n  float_Data @[11] { };\\n  float_Data @[12] { };\\n  float_Data @[13] { };\\n  float_Data @[14] { };\\n  float_Data @[15] { };\\n  float_Data @[16] { };\\n  float_Data @[17] { };\\n  float_Data @[18] { };\\n  float_Data @[19] { };\\n  float_Data @[20] { };\\n  float_Data @[21] { };\\n  float_Data @[22] { };\\n  float_Data @[23] { };\\n  float_Data @[24] { };\\n  float_Data @[25] { };\\n  float_Data @[26] { };\\n  float_Data @[27] { };\\n  float_Data @[28] { };\\n  float_Data @[29] { };\\n  float_Data @[30] { };\\n  float_Data @[31] { };\\n };\\n\\n DataOpList @.last_sort_spec.ops = [0] {\\n };\\n};\\nDataTable .projects[1].data.gp[1][3] {\\n name=\\\"TestEpochOutputData\\\";\\n desc=;\\n data {\\n  name=\\\"data\\\";\\n  el_typ=int_Data;\\n  el_def=0;\\n  int_Data @[0] {\\n   name=\\\"batch\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  int_Data @[1] {\\n   name=\\\"epoch\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[2] {\\n   name=\\\"avg_sse\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[3] {\\n   name=\\\"cnt_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[4] {\\n   name=\\\"pct_cor\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[5] {\\n   name=\\\"pct_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=8;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[6] {\\n   name=\\\"avg_norm_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=12;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[7] {\\n   name=\\\"avg_cos_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=11;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[8] {\\n   name=\\\"avg_ext_rew\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=11;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[9] {\\n   name=\\\"avg_cycles\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=10;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[10] {\\n   name=\\\"Output_lay_avg_sse\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=18;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[11] {\\n   name=\\\"Output_lay_cnt_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=18;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[12] {\\n   name=\\\"Output_lay_pct_cor\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=18;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[13] {\\n   name=\\\"Output_lay_pct_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=18;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[14] {\\n   name=\\\"Output_lay_avg_norm_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=23;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[15] {\\n   name=\\\"Output_lay_avg_cos_err\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=22;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[16] {\\n   name=\\\"net_avg_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[17] {\\n   name=\\\"net_avg_trial_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=22;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[18] {\\n   name=\\\"net_avg_avg_act_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=20;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[19] {\\n   name=\\\"Hidden_avg_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=19;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[20] {\\n   name=\\\"Output_avg_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=19;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[21] {\\n   name=\\\"Hidden_avg_trial_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=25;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[22] {\\n   name=\\\"Output_avg_trial_cos_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=25;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[23] {\\n   name=\\\"Hidden_avg_avg_act_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=23;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[24] {\\n   name=\\\"Output_avg_avg_act_diff\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=23;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[25] {\\n   name=\\\"Hidden_avg_net_sd\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=17;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[26] {\\n   name=\\\"Output_avg_net_sd\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=17;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[27] {\\n   name=\\\"Hidden_netmax\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=13;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[28] {\\n   name=\\\"Output_netmax\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=13;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[29] {\\n   name=\\\"Input_avg_act\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=13;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[30] {\\n   name=\\\"Hidden_avg_act\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=14;\\n   matrix_col_width=10;\\n  };\\n  float_Data @[31] {\\n   name=\\\"Output_avg_act\\\";\\n   col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=14;\\n   matrix_col_width=10;\\n  };\\n };\\n data_flags=AUTO_CALC;\\n auto_load=NO_AUTO_LOAD;\\n auto_load_file=;\\n row_height=1;\\n max_col_width=50;\\n keygen 4 0=0;\\n last_sort_spec {\\n  name=\\\"last_sort_spec\\\";\\n  ops {\\n   name=\\\"ops\\\";\\n   el_typ=DataSortEl;\\n   el_def=0;\\n  };\\n };\\n row_with_hilite=-1;\\n};\\n";
   };
   PatchRec @[3] {
    off=0;
    action=DELETE;
    obj_path_names=".data.gp[\\\"ConfigData\\\"][\\\"ConfigTable\\\"]";
    obj_path_idx=".data.gp[3][0]";
    obj_type="DataTable";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDataTable .projects[0].data.gp[3][0] { \\n DataTableCols @.data = [16] {\\n  String_Data @[0] { };\\n  String_Data @[1] { };\\n  String_Data @[2] { };\\n  String_Data @[3] { };\\n  String_Data @[4] { };\\n  int_Data @[5] { };\\n  int_Data @[6] { };\\n  bool_Data @[7] { };\\n  int_Data @[8] { };\\n  int_Data @[9] { };\\n  bool_Data @[10] { };\\n  bool_Data @[11] { };\\n  String_Data @[12] { };\\n  int_Data @[13] { };\\n  int_Data @[14] { };\\n  int_Data @[15] { };\\n };\\n\\n DataOpList @.last_sort_spec.ops = [0] {\\n };\\n};\\nDataTable .projects[0].data.gp[3][0] {\\n name=\\\"ConfigTable\\\";\\n desc=\\\"different configurations of the system\\\";\\n data {\\n  name=\\\"data\\\";\\n  el_typ=String_Data;\\n  el_def=0;\\n  String_Data @[0] {\\n   name=\\\"config_id\\\";\\n   desc=\\\"identifier for this type of configuration\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] \\\"basic_train\\\";   };\\n  };\\n  String_Data @[1] {\\n   name=\\\"config_desc\\\";\\n   desc=\\\"description of this configuration\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] \\\"default basic training\\\";   };\\n  };\\n  String_Data @[2] {\\n   name=\\\"init_prog\\\";\\n   desc=\\\"program to run to initialize at start of training\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] \\\"BasicInit\\\";   };\\n  };\\n  String_Data @[3] {\\n   name=\\\"run_prog\\\";\\n   desc=\\\"program controlling each step of running\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] \\\"BasicRun\\\";   };\\n  };\\n  String_Data @[4] {\\n   name=\\\"startup_prog\\\";\\n   desc=\\\"program for handling startup args specific to this environment\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] \\\"BasicStartup\\\";   };\\n  };\\n  int_Data @[5] {\\n   name=\\\"train_epochs\\\";\\n   desc=\\\"number of total epochs to train for\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=12;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] 50;   };\\n  };\\n  int_Data @[6] {\\n   name=\\\"trials_per_epoch\\\";\\n   desc=\\\"number of individual trials per epoch\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] 50;   };\\n  };\\n  bool_Data @[7] {\\n   name=\\\"save_final_wts\\\";\\n   desc=\\\"save final weights after training (1 = yes, 0 = no)\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=14;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] true;   };\\n  };\\n  int_Data @[8] {\\n   name=\\\"save_wts_interval\\\";\\n   desc=\\\"how frequently to save weights during training (in epochs)\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=17;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] 200;   };\\n  };\\n  int_Data @[9] {\\n   name=\\\"test_interval\\\";\\n   desc=\\\"how frequently to test performance without training -- only applicable to training cases\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=13;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] 1000;   };\\n  };\\n  bool_Data @[10] {\\n   name=\\\"log_trials\\\";\\n   desc=\\\"whether to log trial-level data or not (1 = yes, 0 = no)\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=10;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] false;   };\\n  };\\n  bool_Data @[11] {\\n   name=\\\"load_weights\\\";\\n   desc=\\\"whether to load weights at start\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=12;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] false;   };\\n  };\\n  String_Data @[12] {\\n   name=\\\"weights_file\\\";\\n   desc=\\\"full relative path (from project) to a weights file to load at start of training\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=16;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] ;   };\\n  };\\n  int_Data @[13] {\\n   name=\\\"load_st_epc\\\";\\n   desc=\\\"if loading weights, what epoch does it start at?\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=11;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] 1;   };\\n  };\\n  int_Data @[14] {\\n   name=\\\"lrs_step_epochs\\\";\\n   desc=\\\"how many epochs per given step in the lrate schedule: each step drops the lrate roughly in half (log scale)\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=15;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] 50;   };\\n  };\\n  int_Data @[15] {\\n   name=\\\"lrs_bump_step\\\";\\n   desc=\\\"what step to bump the lrate back up to 1 and then come back down -- 3 typical when used -- gets closer to global maximum, but requires 1.5x as many epochs\\\";\\n   col_flags=SAVE_DATA|AUTO_WIDTH;\\n   is_matrix=0;\\n   cell_geom{ 1;   };\\n   calc_expr {\\n    expr=;\\n   };\\n   dim_names {\\n    name=\\\"dim_names\\\";\\n   [0]    };\\n   width=15;\\n   matrix_col_width=10;\\n   ar {\\n    name=\\\"ar\\\";\\n   [1] -1;   };\\n  };\\n };\\n data_flags=SAVE_ROWS|AUTO_CALC;\\n auto_load=NO_AUTO_LOAD;\\n auto_load_file=;\\n row_height=1;\\n max_col_width=50;\\n keygen 4 0=0;\\n row_indexes {\\n  name=\\\"row_indexes\\\";\\n [1] 0; };\\n last_sort_spec {\\n  name=\\\"last_sort_spec\\\";\\n  ops {\\n   name=\\\"ops\\\";\\n   el_typ=DataSortEl;\\n   el_def=0;\\n  };\\n };\\n row_with_hilite=-1;\\n};\\n";
   };
  };
  PatchRec_Group @.gp[1] {
   name="programs";
   el_typ=PatchRec;
   el_def=0;
   path=;
   PatchRec @[0] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs[\\\"MasterStartup\\\"]";
    obj_path_idx=".programs[0]";
    obj_type="Program";
    mbr_path="author";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="Randall C. O'Reilly";
   };
   PatchRec @[1] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs[\\\"MasterStartup\\\"]";
    obj_path_idx=".programs[0]";
    obj_type="Program";
    mbr_path="email";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="emergent-users@grey.colorado.edu";
   };
   PatchRec @[2] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].vars[\\\"config_id\\\"]";
    obj_path_idx=".programs[0].vars[2]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs[0].vars[2] { };\\nProgVar .projects[0].programs[0].vars[2] {\\n name=\\\"config_id\\\";\\n var_type=T_String;\\n string_val=;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"selector for config to use\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[3] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].vars[\\\"param_set\\\"]";
    obj_path_idx=".programs[0].vars[3]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs[0].vars[3] { };\\nProgVar .projects[0].programs[0].vars[3] {\\n name=\\\"param_set\\\";\\n var_type=T_String;\\n string_val=;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"name of saved parameter set to apply at startup\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[4] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].vars[\\\"Config\\\"]";
    obj_path_idx=".programs[0].vars[7]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs[0].vars[7] { };\\nProgVar .projects[0].programs[0].vars[7] {\\n name=\\\"Config\\\";\\n var_type=T_Object;\\n object_type=DataTable;\\n object_val=.projects[0].data.gp[3][0]$$<DataTable,ConfigTable>;\\n object_scope=NULL;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[5] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].vars[\\\"param_sets\\\"]";
    obj_path_idx=".programs[0].vars[12]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs[0].vars[12] { };\\nProgVar .projects[0].programs[0].vars[12] {\\n name=\\\"param_sets\\\";\\n var_type=T_Object;\\n object_type=ParamSet_Group;\\n object_val=.projects[0].active_params$$<ParamSet_Group,active_params>;\\n object_scope=NULL;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[6] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs[\\\"MasterStartup\\\"].vars[\\\"tag\\\"]";
    obj_path_idx=".programs[0].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs[0].vars[1] { };\\nProgVar .projects[1].programs[0].vars[1] {\\n name=\\\"tag\\\";\\n var_type=T_String;\\n string_val=\\\"_RunMaster_NetMaster\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[7] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs[\\\"MasterStartup\\\"].vars[\\\"log_file_nm\\\"]";
    obj_path_idx=".programs[0].vars[5]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs[0].vars[3] { };\\nProgVar .projects[1].programs[0].vars[3] {\\n name=\\\"log_file_nm\\\";\\n var_type=T_String;\\n string_val=\\\"/Users/oreilly/emergent/proj_templates/LeabraFlex_RunMaster_NetMaster.args\\\";\\n object_scope=NULL;\\n flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"name of log file\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[8] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].functions[\\\"set_n_units\\\"]";
    obj_path_idx=".programs[0].functions[0]";
    obj_type="Function";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nFunction .projects[0].programs[0].functions[0] { \\n ProgVar_List @.args = [2] {\\n  ProgVar @[0] { };\\n  ProgVar @[1] { };\\n };\\n\\n ProgEl_List @.fun_code = [4] {\\n  If @[0] { \\n   ProgEl_List @.true_code = [1] {\\n    ReturnExpr @[0] { };\\n   };\\n  };\\n  MethodCall @[1] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  PrintExpr @[2] { };\\n  ReturnExpr @[3] { };\\n };\\n};\\nFunction .projects[0].programs[0].functions[0] {\\n name=\\\"set_n_units\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"set_n_units(Layer* lay, int n_units) returns: bool\\\";\\n return_type=T_Bool;\\n object_type=taOBase;\\n args {\\n  name=\\\"args\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"lay\\\";\\n   var_type=T_Object;\\n   object_type=Layer;\\n   object_val=NULL;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[1] {\\n   name=\\\"n_units\\\";\\n   var_type=T_Int;\\n   int_val=0;\\n   object_scope=NULL;\\n   flags=LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n };\\n fun_code {\\n  name=\\\"fun_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  If @[0] {\\n   name=\\\"If_iflayungeomnnunitsnunits0\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (lay->un_geom.n == n_units || n_units <= 0)\\\";\\n   cond {\\n    expr=\\\"lay->un_geom.n == n_units || n_units <= 0\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    ReturnExpr @[0] {\\n     name=\\\"ReturnExpr_returnfalse\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"return false\\\";\\n     expr {\\n      expr=\\\"false\\\";\\n     };\\n    };\\n   };\\n  };\\n  MethodCall @[1] {\\n   name=\\\"MethodCall_laySetNUnitsnunits\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"lay->SetNUnits(n_units)\\\";\\n   result_var=NULL;\\n   obj=.projects[0].programs[0].functions[0].args[0]$$;\\n   method=Layer::SetNUnits;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=int;\\n     type=\\\"int\\\";\\n     name=\\\"n_units\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"n_units\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void SetNUnits(int n_units)\\\";\\n   meth_desc=\\\" set number of units in layer in the un_geom member -- attempts to lay out geometry in closest to a square that fits all the units evenly, if possible. note: does NOT rebuild the network. also does not make any changes if current number of units is same as arg, or arg <= 0 (e.g., for startup arg, just init n_units to -1 prior to getting arg val so it won't have any effect if arg not passed)\\\";\\n  };\\n  PrintExpr @[2] {\\n   name=\\\"PrintExpr_Printlayerlaynam_uallylayungeomn\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Print \\\\\\\\\\\\\\\"layer: \\\\\\\\\\\\\\\" << lay->name << \\\\\\\\\\\\\\\" changed to: \\\\\\\\\\\\\\\" << n_units << \\\\\\\\\\\\\\\" units, actually: \\\\\\\\\\\\\\\" << lay->un_geom.n\\\";\\n   expr {\\n    expr=\\\"\\\\\\\\\\\\\\\"layer: \\\\\\\\\\\\\\\" << lay->name << \\\\\\\\\\\\\\\" changed to: \\\\\\\\\\\\\\\" << n_units << \\\\\\\\\\\\\\\" units, actually: \\\\\\\\\\\\\\\" << lay->un_geom.n\\\";\\n   };\\n   debug=0;\\n  };\\n  ReturnExpr @[3] {\\n   name=\\\"ReturnExpr_returntrue\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"return true\\\";\\n   expr {\\n    expr=\\\"true\\\";\\n   };\\n  };\\n };\\n};\\n";
   };
   PatchRec @[9] {
    off=0;
    action=INSERT;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code";
    obj_path_idx=".programs[0].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=3;
    targ_name="AssignExpr_tag";
    insert_after="Comment_Stdvariablesinst_upprogramitself";
    insert_before="ProgVarFmArg_SetVartaginProgr_artupfromArgtag";
    new_obj_type="AssignExpr";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nAssignExpr .projects[1].programs[0].prog_code[3] { };\\nAssignExpr .projects[1].programs[0].prog_code[3] {\\n name=\\\"AssignExpr_tag\\\";\\n desc=\\\"start with empty tag in all cases\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"tag = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n result_var=.projects[1].programs[0].vars[1]$$<ProgVar,tag>;\\n expr {\\n  expr=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n };\\n};\\n";
   };
   PatchRec @[10] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"ProgVarFmArg_SetVarparamsetin_fromArgparamset\\\"]";
    obj_path_idx=".programs[0].prog_code[5]";
    obj_type="ProgVarFmArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVarFmArg .projects[0].programs[0].prog_code[5] { };\\nProgVarFmArg .projects[0].programs[0].prog_code[5] {\\n name=\\\"ProgVarFmArg_SetVarparamsetin_fromArgparamset\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Set Var:param_set in Program:MasterStartup from Arg:param_set\\\";\\n prog=.projects[0].programs[0]$$<Program,MasterStartup>;\\n var_name=\\\"param_set\\\";\\n arg_name=\\\"param_set\\\";\\n};\\n";
   };
   PatchRec @[11] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"ProgVarFmArg_SetVarbatchstart_omArgbatchstart\\\"]";
    obj_path_idx=".programs[0].prog_code[6]";
    obj_type="ProgVarFmArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVarFmArg .projects[0].programs[0].prog_code[6] { };\\nProgVarFmArg .projects[0].programs[0].prog_code[6] {\\n name=\\\"ProgVarFmArg_SetVarbatchstart_omArgbatchstart\\\";\\n desc=\\\"starting batch -- replaces b_start\\\";\\n flags=NEW_EL|CAN_REVERT_TO_CODE;\\n code_string=\\\"Set Var:batch_start in Program:MasterBatch from Arg:batch_start\\\";\\n prog=.projects[0].programs.gp[1][0]$$<Program,MasterBatch>;\\n var_name=\\\"batch_start\\\";\\n arg_name=\\\"batch_start\\\";\\n};\\n";
   };
   PatchRec @[12] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"ProgVarFmArg_SetVarnbatchesin_fromArgnbatches\\\"]";
    obj_path_idx=".programs[0].prog_code[7]";
    obj_type="ProgVarFmArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVarFmArg .projects[0].programs[0].prog_code[7] { };\\nProgVarFmArg .projects[0].programs[0].prog_code[7] {\\n name=\\\"ProgVarFmArg_SetVarnbatchesin_fromArgnbatches\\\";\\n desc=\\\"number of batches to run\\\";\\n flags=NEW_EL|CAN_REVERT_TO_CODE;\\n code_string=\\\"Set Var:n_batches in Program:MasterBatch from Arg:n_batches\\\";\\n prog=.projects[0].programs.gp[1][0]$$<Program,MasterBatch>;\\n var_name=\\\"n_batches\\\";\\n arg_name=\\\"n_batches\\\";\\n};\\n";
   };
   PatchRec @[13] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"ProgVarFmArg_SetVarcurconfigi_infromArgconfig\\\"]";
    obj_path_idx=".programs[0].prog_code[9]";
    obj_type="ProgVarFmArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVarFmArg .projects[0].programs[0].prog_code[9] { };\\nProgVarFmArg .projects[0].programs[0].prog_code[9] {\\n name=\\\"ProgVarFmArg_SetVarcurconfigi_infromArgconfig\\\";\\n desc=\\\"NOTE: set in MasterTrain and copy from there, so it can use that default!\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Set Var:cur_config in Program:MasterTrain from Arg:config\\\";\\n prog=.projects[0].programs.gp[1][1]$$<Program,MasterTrain>;\\n var_name=\\\"cur_config\\\";\\n arg_name=\\\"config\\\";\\n};\\n";
   };
   PatchRec @[14] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"ProgVarFmArg_SetVarconfigidin_infromArgconfig\\\"]";
    obj_path_idx=".programs[0].prog_code[10]";
    obj_type="ProgVarFmArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVarFmArg .projects[0].programs[0].prog_code[10] { };\\nProgVarFmArg .projects[0].programs[0].prog_code[10] {\\n name=\\\"ProgVarFmArg_SetVarconfigidin_infromArgconfig\\\";\\n desc=\\\"NOTE: set in MasterTrain and copy from there, so it can use that default!\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Set Var:config_id in Program:MasterTrain from Arg:config\\\";\\n prog=.projects[0].programs.gp[1][1]$$<Program,MasterTrain>;\\n var_name=\\\"config_id\\\";\\n arg_name=\\\"config\\\";\\n};\\n";
   };
   PatchRec @[15] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"OtherProgramVar_VarsFmprogramMas_gidvar2var3var4\\\"]";
    obj_path_idx=".programs[0].prog_code[11]";
    obj_type="OtherProgramVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nOtherProgramVar .projects[0].programs[0].prog_code[11] { };\\nOtherProgramVar .projects[0].programs[0].prog_code[11] {\\n name=\\\"OtherProgramVar_VarsFmprogramMas_gidvar2var3var4\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Vars Fm:  program=MasterTrain set=from  var_1=config_id  var_2=?  var_3=?  var_4=? \\\";\\n other_prog=.projects[0].programs.gp[1][1]$$<Program,MasterTrain>;\\n set_other=0;\\n var_1=.projects[0].programs[0].vars[2]$$<ProgVar,config_id>;\\n var_2=NULL;\\n var_3=NULL;\\n var_4=NULL;\\n};\\n";
   };
   PatchRec @[16] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"MethodCall_Configmethod\\\"]";
    obj_path_idx=".programs[0].prog_code[12]";
    obj_type="MethodCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nMethodCall .projects[0].programs[0].prog_code[12] { \\n ProgArg_List @.meth_args = [2] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n };\\n};\\nMethodCall .projects[0].programs[0].prog_code[12] {\\n name=\\\"MethodCall_Configmethod\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Config->SetCellsFromRowLookup(\\\\\\\\\\\\\\\"config_id\\\\\\\\\\\\\\\", config_id)\\\";\\n result_var=NULL;\\n obj=.projects[0].programs[0].vars[7]$$<ProgVar,Config>;\\n method=NULL;\\n meth_args {\\n  name=\\\"meth_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=taString;\\n   type=\\\"taString\\\";\\n   name=\\\"column_name\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"\\\\\\\\\\\\\\\"config_id\\\\\\\\\\\\\\\"\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=taString;\\n   type=\\\"taString\\\";\\n   name=\\\"value\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"config_id\\\";\\n   };\\n  };\\n };\\n meth_sig=\\\"void SetCellsFromRowLookup(taString column_name, taString value)\\\";\\n meth_desc=\\\" set the values of table cells in the row with value matching the 'value' arg of column matching 'column_name' arg\\\";\\n};\\n";
   };
   PatchRec @[17] {
    off=0;
    action=INSERT;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code";
    obj_path_idx=".programs[0].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=9;
    targ_name="MethodCall_MyClusterRunActivateAlltrue";
    insert_after="Comment_addourspecialargsfromcommandline";
    insert_before="ProgVarFmArg_SetVarcurconfigi_infromArgconfig";
    new_obj_type="MethodCall";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nMethodCall .projects[1].programs[0].prog_code[7] { \\n ProgArg_List @.meth_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nMethodCall .projects[1].programs[0].prog_code[7] {\\n name=\\\"MethodCall_MyClusterRunActivateAlltrue\\\";\\n desc=\\\"set saved values first, before processing args\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"run_params.CopySavedToActive()\\\";\\n result_var=NULL;\\n obj=.projects[1].programs[0].vars[8]$$<ProgVar,MyClusterRun>;\\n method=ControlPanel::ActivateAll;\\n meth_args {\\n  name=\\\"meth_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=bool;\\n   type=\\\"bool\\\";\\n   name=\\\"info_msg\\\";\\n   required=0;\\n   def_val=\\\"true\\\";\\n   prev_expr=;\\n   expr {\\n    expr=\\\"true\\\";\\n   };\\n  };\\n };\\n meth_sig=\\\"void ActivateAll(bool info_msg = true)\\\";\\n meth_desc=\\\" activate all of the parameter sets on this and any linked param set objects -- copies the saved_value values to be the active (live) values for all parameters -- this one call can be used on a master ClusterRun or ControlPanel to activate everything in Startup program, for example -- info_msg emits a message about each ParamSet as it is activated\\\";\\n};\\n";
   };
   PatchRec @[18] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"If_ifparamsetnonempty\\\"]";
    obj_path_idx=".programs[0].prog_code[14]";
    obj_type="If";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[0].programs[0].prog_code[14] { \\n ProgEl_List @.true_code = [1] {\\n  MethodCall @[0] { \\n   ProgArg_List @.meth_args = [2] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n   };\\n  };\\n };\\n};\\nIf .projects[0].programs[0].prog_code[14] {\\n name=\\\"If_ifparamsetnonempty\\\";\\n desc=\\\"set variables to values stored in a param set\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (param_set.nonempty())\\\";\\n cond {\\n  expr=\\\"param_set.nonempty()\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MethodCall @[0] {\\n   name=\\\"MethodCall_paramsetsActivat_aramSetparamset\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"param_sets->LoadParamSet(param_set)\\\";\\n   result_var=NULL;\\n   obj=.projects[0].programs[0].vars[12]$$<ProgVar,param_sets>;\\n   method=ParamSet_Group::ActivateParamSet;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"set_name\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=\\\"param_set\\\";\\n     expr {\\n      expr=\\\"param_set\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"err_not_found\\\";\\n     required=0;\\n     def_val=\\\"true\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n   };\\n   meth_sig=\\\"bool ActivateParamSet(taString& set_name, bool err_not_found = true)\\\";\\n   meth_desc=\\\" find given parameter set by name within this group, and call CopySavedtoActive(true) on that ParamSet if found, otherwise emit an error (if err_not_found) -- one step function for applying named parameter sets in programs\\\";\\n  };\\n };\\n};\\n";
   };
   PatchRec @[19] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"Comment_TODOAddyourprogr_eremultilinesok\\\"]";
    obj_path_idx=".programs[0].prog_code[15]";
    obj_type="Comment";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nComment .projects[0].programs[0].prog_code[15] { };\\nComment .projects[0].programs[0].prog_code[15] {\\n name=\\\"Comment_TODOAddyourprogr_eremultilinesok\\\";\\n desc=\\\"TODO: Add your program comment here (multi-lines ok).\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"// TODO: Add your program comment here (multi-lines ok).\\\";\\n};\\n";
   };
   PatchRec @[20] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"Comment_Addargstotagname\\\"]";
    obj_path_idx=".programs[0].prog_code[16]";
    obj_type="Comment";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nComment .projects[0].programs[0].prog_code[16] { };\\nComment .projects[0].programs[0].prog_code[16] {\\n name=\\\"Comment_Addargstotagname\\\";\\n desc=\\\"= Add args to tag name =\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"// = Add args to tag name =\\\";\\n};\\n";
   };
   PatchRec @[21] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"If_ifconfigidempty\\\"]";
    obj_path_idx=".programs[0].prog_code[17]";
    obj_type="If";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[0].programs[0].prog_code[17] { \\n ProgEl_List @.true_code = [1] {\\n  MiscCall @[0] { \\n   ProgArg_List @.meth_args = [9] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n    ProgArg @[2] { };\\n    ProgArg @[3] { };\\n    ProgArg @[4] { };\\n    ProgArg @[5] { };\\n    ProgArg @[6] { };\\n    ProgArg @[7] { };\\n    ProgArg @[8] { };\\n   };\\n  };\\n };\\n};\\nIf .projects[0].programs[0].prog_code[17] {\\n name=\\\"If_ifconfigidempty\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (config_id.empty())\\\";\\n cond {\\n  expr=\\\"config_id.empty()\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MiscCall @[0] {\\n   name=\\\"MiscCall_taMiscErrorlesso_tspecifybailing\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"taMisc::Error(\\\\\\\\\\\\\\\"lesson_id is empty -- must specify!  bailing\\\\\\\\\\\\\\\", , , , , , , , )\\\";\\n   result_var=NULL;\\n   object_type=taMisc;\\n   method=taMisc::Error;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"a\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"\\\\\\\\\\\\\\\"lesson_id is empty -- must specify!  bailing\\\\\\\\\\\\\\\"\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"b\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n    ProgArg @[2] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"c\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n    ProgArg @[3] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"d\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n    ProgArg @[4] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"e\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n    ProgArg @[5] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"f\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n    ProgArg @[6] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"g\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n    ProgArg @[7] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"h\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n    ProgArg @[8] {\\n     arg_type=const_taString_ref;\\n     type=\\\"taString&\\\";\\n     name=\\\"i\\\";\\n     required=0;\\n     def_val=\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\";\\n     prev_expr=;\\n     expr {\\n      expr=;\\n     };\\n    };\\n   };\\n  };\\n };\\n};\\n";
   };
   PatchRec @[22] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"AssignExpr_tagconfigidtag\\\"]";
    obj_path_idx=".programs[0].prog_code[18]";
    obj_type="AssignExpr";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nAssignExpr .projects[0].programs[0].prog_code[18] { };\\nAssignExpr .projects[0].programs[0].prog_code[18] {\\n name=\\\"AssignExpr_tagconfigidtag\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"tag = \\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" +  config_id + tag\\\";\\n result_var=.projects[0].programs[0].vars[1]$$<ProgVar,tag>;\\n expr {\\n  expr=\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" +  config_id + tag\\\";\\n };\\n};\\n";
   };
   PatchRec @[23] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"Comment_setanyparamsfromConfig\\\"]";
    obj_path_idx=".programs[0].prog_code[19]";
    obj_type="Comment";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nComment .projects[0].programs[0].prog_code[19] { };\\nComment .projects[0].programs[0].prog_code[19] {\\n name=\\\"Comment_setanyparamsfromConfig\\\";\\n desc=\\\"set any params from Config\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"// set any params from Config\\\";\\n};\\n";
   };
   PatchRec @[24] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"DataColsFmArgs_DataColsFmArgsta_lrowvarconfigid\\\"]";
    obj_path_idx=".programs[0].prog_code[20]";
    obj_type="DataColsFmArgs";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDataColsFmArgs .projects[0].programs[0].prog_code[20] { };\\nDataColsFmArgs .projects[0].programs[0].prog_code[20] {\\n name=\\\"DataColsFmArgs_DataColsFmArgsta_lrowvarconfigid\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Data Cols Fm Args:  table=Config  row_spec=row_val  row_var=config_id \\\";\\n data_var=.projects[0].programs[0].vars[7]$$<ProgVar,Config>;\\n row_spec=ROW_VAL;\\n row_var=.projects[0].programs[0].vars[2]$$<ProgVar,config_id>;\\n};\\n";
   };
   PatchRec @[25] {
    off=0;
    action=INSERT;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code";
    obj_path_idx=".programs[0].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=14;
    targ_name="AssignExpr_tagMyClusterRunParamSetNamestag";
    insert_after="ControlPanelsFmArgs_CtrlPanelFmArgsvarMyClusterRun";
    insert_before="If_ifparamsetnonempty";
    new_obj_type="AssignExpr";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nAssignExpr .projects[1].programs[0].prog_code[9] { };\\nAssignExpr .projects[1].programs[0].prog_code[9] {\\n name=\\\"AssignExpr_tagMyClusterRunParamSetNamestag\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"tag = \\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" +  config_id + tag\\\";\\n result_var=.projects[1].programs[0].vars[1]$$<ProgVar,tag>;\\n expr {\\n  expr=\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" + MyClusterRun->ParamSetNames() + tag\\\";\\n };\\n};\\n";
   };
   PatchRec @[26] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"DataVarProg_DataFromtableCon_rogvar2var3var4\\\"]";
    obj_path_idx=".programs[0].prog_code[26]";
    obj_type="DataVarProg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDataVarProg .projects[0].programs[0].prog_code[26] { };\\nDataVarProg .projects[0].programs[0].prog_code[26] {\\n name=\\\"DataVarProg_DataFromtableCon_rogvar2var3var4\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Data From:  table=Config  row_spec=row_val  row_var=config_id  set=from  all_matches=false  var_1=startup_prog  var_2=?  var_3=?  var_4=? \\\";\\n data_var=.projects[0].programs[0].vars[7]$$<ProgVar,Config>;\\n row_spec=ROW_VAL;\\n row_var=.projects[0].programs[0].vars[2]$$<ProgVar,config_id>;\\n set_data=0;\\n all_matches=0;\\n quiet=0;\\n var_1=.projects[0].programs[0].vars[10]$$<ProgVar,startup_prog>;\\n var_2=NULL;\\n var_3=NULL;\\n var_4=NULL;\\n};\\n";
   };
   PatchRec @[27] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"ControlPanelsFmArgs_CtrlPanelFmArgsvarMyClusterRun\\\"]";
    obj_path_idx=".programs[0].prog_code[13]";
    obj_type="ControlPanelsFmArgs";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CAN_REVERT_TO_CODE";
   };
   PatchRec @[28] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"If_iftaMiscCheckArgByNamebatchstart\\\"]";
    obj_path_idx=".programs[0].prog_code[22]";
    obj_type="If";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CAN_REVERT_TO_CODE";
   };
   PatchRec @[29] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"OtherProgramVar_VarsToprogramSav_tagvar2var3var4\\\"]";
    obj_path_idx=".programs[0].prog_code[24]";
    obj_type="OtherProgramVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nOtherProgramVar .projects[1].programs[0].prog_code[13] { };\\nOtherProgramVar .projects[1].programs[0].prog_code[13] {\\n name=\\\"OtherProgramVar_VarsToprogramSav_tagvar2var3var4\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Vars To:  program=SaveWeights set=to  var_1=tag  var_2=?  var_3=?  var_4=? \\\";\\n other_prog=.projects[1].programs.gp[4].gp[0][0]$$<Program,SaveLogFiles>;\\n set_other=1;\\n var_1=.projects[1].programs[0].vars[1]$$<ProgVar,tag>;\\n var_2=NULL;\\n var_3=NULL;\\n var_4=NULL;\\n};\\n";
   };
   PatchRec @[30] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"StartupProgs\\\"][\\\"BasicStartup\\\"].vars[\\\"tag\\\"]";
    obj_path_idx=".programs.gp[0][0].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[0][0].vars[0] { };\\nProgVar .projects[1].programs.gp[0][0].vars[0] {\\n name=\\\"tag\\\";\\n var_type=T_String;\\n string_val=\\\"_RunMaster_NetMaster\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL;\\n reference=0;\\n desc=;\\n init_from=.projects[1].programs[0]$$<Program,MasterStartup>;\\n};\\n";
   };
   PatchRec @[31] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterBatch\\\"].vars[\\\"n_batches\\\"]";
    obj_path_idx=".programs.gp[1][0].vars[2]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][0].vars[2] { };\\nProgVar .projects[1].programs.gp[1][0].vars[2] {\\n name=\\\"n_batches\\\";\\n var_type=T_Int;\\n int_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"number of batches to run\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[32] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"]";
    obj_path_idx=".programs.gp[1][1]";
    obj_type="Program";
    mbr_path="author";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="Randall C. O'Reilly";
   };
   PatchRec @[33] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"]";
    obj_path_idx=".programs.gp[1][1]";
    obj_type="Program";
    mbr_path="email";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="emergent-users@grey.colorado.edu";
   };
   PatchRec @[34] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].types[\\\"ConfigOptions\\\"]";
    obj_path_idx=".programs.gp[1][1].types[0]";
    obj_type="DynEnumTableCol";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDynEnumTableCol .projects[0].programs.gp[1][1].types[0] { \\n DynEnumItem_List @.enums = [1] {\\n  DynEnumItem @[0] { };\\n };\\n};\\nDynEnumTableCol .projects[0].programs.gp[1][1].types[0] {\\n name=\\\"ConfigOptions\\\";\\n desc=;\\n enums {\\n  name=\\\"enums\\\";\\n  el_typ=DynEnumItem;\\n  el_def=0;\\n  DynEnumItem @[0] {\\n   name=\\\"basic_train\\\";\\n   value=0;\\n   desc=;\\n  };\\n };\\n bits=0;\\n src_table=.projects[0].data.gp[3][0]$$<DataTable,ConfigTable>;\\n src_column=\\\"config_id\\\";\\n};\\n";
   };
   PatchRec @[35] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"Config\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[0] { };\\nProgVar .projects[1].programs.gp[1][1].vars[0] {\\n name=\\\"activate_params\\\";\\n var_type=T_Bool;\\n bool_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"whether to activate selected param sets at start of train -- otherwise just uses current values as-is\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[36] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"cur_config\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[1] { };\\nProgVar .projects[1].programs.gp[1][1].vars[1] {\\n name=\\\"run_params\\\";\\n var_type=T_Object;\\n object_type=ParamSet;\\n object_val=.projects[1].active_params.gp[0][0]$$<ParamSet,RunMaster>;\\n object_scope=.projects[1].active_params.gp[0]$$<ParamSet_Group,RunParams>;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"select parameters for controlling how network is run\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[37] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"config_id\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[2]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[2] { };\\nProgVar .projects[1].programs.gp[1][1].vars[2] {\\n name=\\\"net_params\\\";\\n var_type=T_Object;\\n object_type=ParamSet;\\n object_val=.projects[1].active_params.gp[1][0]$$<ParamSet,NetMaster>;\\n object_scope=.projects[1].active_params.gp[1]$$<ParamSet_Group,NetParams>;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"select other parameters, typically network spec params -- independent of run params\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[38] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars";
    obj_path_idx=".programs.gp[1][1].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=5;
    targ_name="cluster_run";
    insert_after="init_prog";
    insert_before="stop_train";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[5] { };\\nProgVar .projects[1].programs.gp[1][1].vars[5] {\\n name=\\\"cluster_run\\\";\\n var_type=T_Object;\\n object_type=ClusterRun;\\n object_val=.projects[1].ctrl_panels[0]$$<ClusterRun,ClusterRun>;\\n object_scope=NULL;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"used for setting the tag name -- param sets with EXPLORE set will be added to tag\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[39] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars";
    obj_path_idx=".programs.gp[1][1].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=5;
    targ_name="cust_tag";
    insert_after="cluster_run";
    insert_before="stop_train";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[6] { };\\nProgVar .projects[1].programs.gp[1][1].vars[6] {\\n name=\\\"cust_tag\\\";\\n var_type=T_String;\\n string_val=;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"add any custom tag string here -- used for labeling log and weight files along with config info\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[40] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars";
    obj_path_idx=".programs.gp[1][1].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=5;
    targ_name="tag";
    insert_after="cust_tag";
    insert_before="stop_train";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[7] { };\\nProgVar .projects[1].programs.gp[1][1].vars[7] {\\n name=\\\"tag\\\";\\n var_type=T_String;\\n string_val=\\\"__RunMaster_NetMaster\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[41] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"Config\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[0] { };\\nProgVar .projects[1].programs.gp[1][1].vars[0] {\\n name=\\\"activate_params\\\";\\n var_type=T_Bool;\\n bool_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"whether to activate selected param sets at start of train -- otherwise just uses current values as-is\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[42] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"cur_config\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[1] { };\\nProgVar .projects[1].programs.gp[1][1].vars[1] {\\n name=\\\"run_params\\\";\\n var_type=T_Object;\\n object_type=ParamSet;\\n object_val=.projects[1].active_params.gp[0][0]$$<ParamSet,RunMaster>;\\n object_scope=.projects[1].active_params.gp[0]$$<ParamSet_Group,RunParams>;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"select parameters for controlling how network is run\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[43] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"config_id\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[2]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1][1].vars[2] { };\\nProgVar .projects[1].programs.gp[1][1].vars[2] {\\n name=\\\"net_params\\\";\\n var_type=T_Object;\\n object_type=ParamSet;\\n object_val=.projects[1].active_params.gp[1][0]$$<ParamSet,NetMaster>;\\n object_scope=.projects[1].active_params.gp[1]$$<ParamSet_Group,NetParams>;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"select other parameters, typically network spec params -- independent of run params\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[44] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"run_prog\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[3]";
    obj_type="ProgVar";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL";
   };
   PatchRec @[45] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"init_prog\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[4]";
    obj_type="ProgVar";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL";
   };
   PatchRec @[46] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].init_code[\\\"AssignExpr_configidcurconfig\\\"]";
    obj_path_idx=".programs.gp[1][1].init_code[1]";
    obj_type="AssignExpr";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nAssignExpr .projects[0].programs.gp[1][1].init_code[1] { };\\nAssignExpr .projects[0].programs.gp[1][1].init_code[1] {\\n name=\\\"AssignExpr_configidcurconfig\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"config_id = cur_config\\\";\\n result_var=.projects[0].programs.gp[1][1].vars[2]$$<ProgVar,config_id>;\\n expr {\\n  expr=\\\"cur_config\\\";\\n };\\n};\\n";
   };
   PatchRec @[47] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code";
    obj_path_idx=".programs.gp[1][1].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=0;
    targ_name="LocalVars_LocalVars0vars";
    insert_after=;
    insert_before="AssignExpr_stoptrainfalse";
    new_obj_type="LocalVars";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nLocalVars .projects[1].programs.gp[1][1].prog_code[0] { \\n ProgVar_List @.local_vars = [0] {\\n };\\n};\\nLocalVars .projects[1].programs.gp[1][1].prog_code[0] {\\n name=\\\"LocalVars_LocalVars0vars\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"LocalVars (0 vars)\\\";\\n local_vars {\\n  name=\\\"local_vars\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n };\\n};\\n";
   };
   PatchRec @[48] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code[\\\"AssignExpr_configidcurconfig\\\"]";
    obj_path_idx=".programs.gp[1][1].prog_code[1]";
    obj_type="AssignExpr";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nAssignExpr .projects[0].programs.gp[1][1].prog_code[1] { };\\nAssignExpr .projects[0].programs.gp[1][1].prog_code[1] {\\n name=\\\"AssignExpr_configidcurconfig\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"config_id = cur_config\\\";\\n result_var=.projects[0].programs.gp[1][1].vars[2]$$<ProgVar,config_id>;\\n expr {\\n  expr=\\\"cur_config\\\";\\n };\\n};\\n";
   };
   PatchRec @[49] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code[\\\"DataVarProg_DataFromtableCon_runprogvar3var4\\\"]";
    obj_path_idx=".programs.gp[1][1].prog_code[2]";
    obj_type="DataVarProg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nDataVarProg .projects[0].programs.gp[1][1].prog_code[2] { };\\nDataVarProg .projects[0].programs.gp[1][1].prog_code[2] {\\n name=\\\"DataVarProg_DataFromtableCon_runprogvar3var4\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Data From:  table=Config  row_spec=row_val  row_var=config_id  set=from  all_matches=false  var_1=init_prog  var_2=run_prog  var_3=?  var_4=? \\\";\\n data_var=.projects[0].programs.gp[1][1].vars[0]$$<ProgVar,Config>;\\n row_spec=ROW_VAL;\\n row_var=.projects[0].programs.gp[1][1].vars[2]$$<ProgVar,config_id>;\\n set_data=0;\\n all_matches=0;\\n quiet=0;\\n var_1=.projects[0].programs.gp[1][1].vars[4]$$<ProgVar,init_prog>;\\n var_2=.projects[0].programs.gp[1][1].vars[3]$$<ProgVar,run_prog>;\\n var_3=NULL;\\n var_4=NULL;\\n};\\n";
   };
   PatchRec @[50] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code[\\\"MethodCall_Configmethod\\\"]";
    obj_path_idx=".programs.gp[1][1].prog_code[3]";
    obj_type="MethodCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nMethodCall .projects[0].programs.gp[1][1].prog_code[3] { \\n ProgArg_List @.meth_args = [2] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n };\\n};\\nMethodCall .projects[0].programs.gp[1][1].prog_code[3] {\\n name=\\\"MethodCall_Configmethod\\\";\\n desc=;\\n flags=OFF|CAN_REVERT_TO_CODE;\\n code_string=\\\"Config->method()\\\";\\n result_var=NULL;\\n obj=.projects[0].programs.gp[1][1].vars[0]$$<ProgVar,Config>;\\n method=NULL;\\n meth_args {\\n  name=\\\"meth_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=taString;\\n   type=\\\"taString\\\";\\n   name=\\\"column_name\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"\\\\\\\\\\\\\\\"config_id\\\\\\\\\\\\\\\"\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=taString;\\n   type=\\\"taString\\\";\\n   name=\\\"value\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"config_id\\\";\\n   };\\n  };\\n };\\n meth_sig=\\\"void SetCellsFromRowLookup(taString column_name, taString value)\\\";\\n meth_desc=\\\" set the values of table cells in the row with value matching the 'value' arg of column matching 'column_name' arg\\\";\\n};\\n";
   };
   PatchRec @[51] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code[\\\"ProgramCallVar_CallFmproggroupI_networkconfigid\\\"]";
    obj_path_idx=".programs.gp[1][1].prog_code[4]";
    obj_type="ProgramCallVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCallVar .projects[0].programs.gp[1][1].prog_code[4] { \\n ProgArg_List @.prog_args = [2] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n };\\n};\\nProgramCallVar .projects[0].programs.gp[1][1].prog_code[4] {\\n name=\\\"ProgramCallVar_CallFmproggroupI_networkconfigid\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Call Fm: prog_group=InitProgs prog_name_var=init_prog (network, config_id)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=taString;\\n   type=\\\"String\\\";\\n   name=\\\"config_id\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"config_id\\\";\\n   };\\n  };\\n };\\n prog_group=.projects[0].programs.gp[1].gp[0]$$<Program_Group,InitProgs>;\\n prog_name_var=.projects[0].programs.gp[1][1].vars[4]$$<ProgVar,init_prog>;\\n};\\n";
   };
   PatchRec @[52] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code";
    obj_path_idx=".programs.gp[1][1].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=1;
    targ_name="If_iftaMiscinteract_eactivateparams";
    insert_after="AssignExpr_stoptrainfalse";
    insert_before="AssignExpr_configidcurconfig";
    new_obj_type="If";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[1][1].prog_code[2] { \\n ProgEl_List @.true_code = [4] {\\n  AssignExpr @[0] { };\\n  OtherProgramVar @[1] { };\\n  MethodCall @[2] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  MethodCall @[3] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n };\\n};\\nIf .projects[1].programs.gp[1][1].prog_code[2] {\\n name=\\\"If_iftaMiscinteract_eactivateparams\\\";\\n desc=\\\"only if running interactively -- otherwise set in MasterStartup!\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (taMisc::interactive && activate_params)\\\";\\n cond {\\n  expr=\\\"taMisc::interactive && activate_params\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  AssignExpr @[0] {\\n   name=\\\"AssignExpr_tagcusttagcluste_amSetNamesfalse\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"tag = \\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" + cust_tag + \\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" + cluster_run->ParamSetNames(false)\\\";\\n   result_var=.projects[1].programs.gp[1][1].vars[7]$$<ProgVar,tag>;\\n   expr {\\n    expr=\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" + cust_tag + \\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" + cluster_run->ParamSetNames(false)\\\";\\n   };\\n  };\\n  OtherProgramVar @[1] {\\n   name=\\\"OtherProgramVar_VarsToprogramSav_tagvar2var3var4\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Vars To:  program=SaveLogFiles set=to  var_1=tag  var_2=?  var_3=?  var_4=? \\\";\\n   other_prog=.projects[1].programs.gp[4].gp[0][0]$$<Program,SaveLogFiles>;\\n   set_other=1;\\n   var_1=$.projects[1].programs.gp[1][1].vars[7]$;\\n   var_2=NULL;\\n   var_3=NULL;\\n   var_4=NULL;\\n  };\\n  MethodCall @[2] {\\n   name=\\\"MethodCall_runparamsActivatetrue\\\";\\n   desc=\\\"activate config values\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"run_params->Activate(true)\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[1][1].vars[1]$$<ProgVar,run_params>;\\n   method=ParamSet::Activate;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"info_msg\\\";\\n     required=0;\\n     def_val=\\\"false\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"true\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void Activate(bool info_msg = false)\\\";\\n   meth_desc=\\\" copy the saved_value values to be active (live) values on the objects\\\";\\n  };\\n  MethodCall @[3] {\\n   name=\\\"MethodCall_netparamsActivatetrue\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"net_params->Activate(true)\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[1][1].vars[2]$$<ProgVar,net_params>;\\n   method=ParamSet::Activate;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"info_msg\\\";\\n     required=0;\\n     def_val=\\\"false\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"true\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void Activate(bool info_msg = false)\\\";\\n   meth_desc=\\\" copy the saved_value values to be active (live) values on the objects\\\";\\n  };\\n };\\n};\\n";
   };
   PatchRec @[53] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code";
    obj_path_idx=".programs.gp[1][1].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=1;
    targ_name="ProgramCallVar_CallFmproggroupI_initprognetwork";
    insert_after="If_iftaMiscinteract_eactivateparams";
    insert_before="AssignExpr_configidcurconfig";
    new_obj_type="ProgramCallVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCallVar .projects[1].programs.gp[1][1].prog_code[3] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCallVar .projects[1].programs.gp[1][1].prog_code[3] {\\n name=\\\"ProgramCallVar_CallFmproggroupI_initprognetwork\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Call Fm: prog_group=InitProgs prog_name_var=init_prog (network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n prog_group=.projects[1].programs.gp[1].gp[0]$$<Program_Group,InitProgs>;\\n prog_name_var=.projects[1].programs.gp[1][1].vars[4]$$<ProgVar,init_prog>;\\n};\\n";
   };
   PatchRec @[54] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code[\\\"WhileLoop_whilestoptrain\\\"].loop_code[\\\"ProgramCall_MasterRunnetworkconfigidrunprog\\\"]";
    obj_path_idx=".programs.gp[1][1].prog_code[5].loop_code[0]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[1].programs.gp[1][1].prog_code[4].loop_code[0] { \\n ProgArg_List @.prog_args = [2] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n };\\n};\\nProgramCall .projects[1].programs.gp[1][1].prog_code[4].loop_code[0] {\\n name=\\\"ProgramCall_MasterRunnetworkrunprog\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"MasterRun(network, run_prog)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"network\\\";\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=taString;\\n   type=\\\"String\\\";\\n   name=\\\"run_prog\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"config_id\\\";\\n   expr {\\n    expr=\\\"run_prog\\\";\\n   };\\n  };\\n };\\n target=.projects[1].programs.gp[1][2]$$<Program,MasterRun>;\\n targ_ld_init=\\\"*MasterRun*\\\";\\n};\\n";
   };
   PatchRec @[55] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code[\\\"WhileLoop_whilestoptrain\\\"].loop_code[\\\"ProgramCall_MasterRunnetworkconfigidrunprog\\\"]";
    obj_path_idx=".programs.gp[1][1].prog_code[5].loop_code[0]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[1].programs.gp[1][1].prog_code[4].loop_code[0] { \\n ProgArg_List @.prog_args = [2] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n };\\n};\\nProgramCall .projects[1].programs.gp[1][1].prog_code[4].loop_code[0] {\\n name=\\\"ProgramCall_MasterRunnetworkrunprog\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"MasterRun(network, run_prog)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"network\\\";\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=taString;\\n   type=\\\"String\\\";\\n   name=\\\"run_prog\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"config_id\\\";\\n   expr {\\n    expr=\\\"run_prog\\\";\\n   };\\n  };\\n };\\n target=.projects[1].programs.gp[1][2]$$<Program,MasterRun>;\\n targ_ld_init=\\\"*MasterRun*\\\";\\n};\\n";
   };
   PatchRec @[56] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].prog_code[\\\"WhileLoop_whilestoptrain\\\"].loop_code[\\\"ProgramCall_MasterRunnetworkconfigidrunprog\\\"].prog_args[\\\"config_id\\\"]";
    obj_path_idx=".programs.gp[1][1].prog_code[5].loop_code[0].prog_args[1]";
    obj_type="ProgArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgArg .projects[0].programs.gp[1][1].prog_code[5].loop_code[0].prog_args[1] { };\\nProgArg .projects[0].programs.gp[1][1].prog_code[5].loop_code[0].prog_args[1] {\\n arg_type=taString;\\n type=\\\"String\\\";\\n name=\\\"config_id\\\";\\n required=1;\\n def_val=;\\n prev_expr=;\\n expr {\\n  expr=\\\"config_id\\\";\\n };\\n};\\n";
   };
   PatchRec @[57] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"]";
    obj_path_idx=".programs.gp[1][2]";
    obj_type="Program";
    mbr_path="author";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="Randall C. O'Reilly";
   };
   PatchRec @[58] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"]";
    obj_path_idx=".programs.gp[1][2]";
    obj_type="Program";
    mbr_path="email";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="emergent-users@grey.colorado.edu";
   };
   PatchRec @[59] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"].args[\\\"config_id\\\"]";
    obj_path_idx=".programs.gp[1][2].args[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[1][2].args[1] { };\\nProgVar .projects[0].programs.gp[1][2].args[1] {\\n name=\\\"config_id\\\";\\n var_type=T_String;\\n string_val=\\\"basic_train\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n reference=0;\\n desc=\\\"configuration to use -- lookup in Config table\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[60] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"].args[\\\"run_prog\\\"]";
    obj_path_idx=".programs.gp[1][2].args[2]";
    obj_type="ProgVar";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG";
   };
   PatchRec @[61] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"].vars[\\\"Config\\\"]";
    obj_path_idx=".programs.gp[1][2].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[1][2].vars[0] { };\\nProgVar .projects[0].programs.gp[1][2].vars[0] {\\n name=\\\"Config\\\";\\n var_type=T_Object;\\n object_type=DataTable;\\n object_val=.projects[0].data.gp[3][0]$$<DataTable,ConfigTable>;\\n object_scope=NULL;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[62] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"].prog_code[\\\"ProgramCallVar_CallFmproggroupR_networkconfigid\\\"]";
    obj_path_idx=".programs.gp[1][2].prog_code[0]";
    obj_type="ProgramCallVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCallVar .projects[1].programs.gp[1][2].prog_code[0] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCallVar .projects[1].programs.gp[1][2].prog_code[0] {\\n name=\\\"ProgramCallVar_CallFmproggroupR_rrunprognetwork\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Call Fm: prog_group=RunProgs prog_name_var=run_prog (network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"network\\\";\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n prog_group=.projects[1].programs.gp[1].gp[1]$$<Program_Group,RunProgs>;\\n prog_name_var=.projects[1].programs.gp[1][2].args[1]$$<ProgVar,run_prog>;\\n};\\n";
   };
   PatchRec @[63] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"].prog_code[\\\"ProgramCallVar_CallFmproggroupR_networkconfigid\\\"]";
    obj_path_idx=".programs.gp[1][2].prog_code[0]";
    obj_type="ProgramCallVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCallVar .projects[1].programs.gp[1][2].prog_code[0] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCallVar .projects[1].programs.gp[1][2].prog_code[0] {\\n name=\\\"ProgramCallVar_CallFmproggroupR_rrunprognetwork\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Call Fm: prog_group=RunProgs prog_name_var=run_prog (network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"network\\\";\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n prog_group=.projects[1].programs.gp[1].gp[1]$$<Program_Group,RunProgs>;\\n prog_name_var=.projects[1].programs.gp[1][2].args[1]$$<ProgVar,run_prog>;\\n};\\n";
   };
   PatchRec @[64] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterRun\\\"].prog_code[\\\"ProgramCallVar_CallFmproggroupR_networkconfigid\\\"].prog_args[\\\"config_id\\\"]";
    obj_path_idx=".programs.gp[1][2].prog_code[0].prog_args[1]";
    obj_type="ProgArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgArg .projects[0].programs.gp[1][2].prog_code[0].prog_args[1] { };\\nProgArg .projects[0].programs.gp[1][2].prog_code[0].prog_args[1] {\\n arg_type=taString;\\n type=\\\"String\\\";\\n name=\\\"config_id\\\";\\n required=1;\\n def_val=;\\n prev_expr=;\\n expr {\\n  expr=\\\"config_id\\\";\\n };\\n};\\n";
   };
   PatchRec @[65] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"]";
    obj_path_idx=".programs.gp[1].gp[0][0]";
    obj_type="Program";
    mbr_path="author";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="Randall C. O'Reilly";
   };
   PatchRec @[66] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"]";
    obj_path_idx=".programs.gp[1].gp[0][0]";
    obj_type="Program";
    mbr_path="email";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="emergent-users@grey.colorado.edu";
   };
   PatchRec @[67] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"].args[\\\"config_id\\\"]";
    obj_path_idx=".programs.gp[1].gp[0][0].args[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[1].gp[0][0].args[1] { };\\nProgVar .projects[0].programs.gp[1].gp[0][0].args[1] {\\n name=\\\"config_id\\\";\\n var_type=T_String;\\n string_val=\\\"basic_train\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n reference=0;\\n desc=\\\"configuration to use -- lookup in Config table\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[68] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"].vars";
    obj_path_idx=".programs.gp[1].gp[0][0].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=4;
    targ_name="test_run";
    insert_after="prjn_unlesion_list";
    insert_before=;
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1].gp[0][0].vars[4] { };\\nProgVar .projects[1].programs.gp[1].gp[0][0].vars[4] {\\n name=\\\"test_run\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;\\n reference=0;\\n desc=\\\"is this a testing-only run, no training?\\\";\\n init_from=.projects[1].programs.gp[4][4]$$<Program,TrainStart>;\\n};\\n";
   };
   PatchRec @[69] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"].prog_code[\\\"ProgramCall_StdGlobalsInitnetworkconfigid\\\"]";
    obj_path_idx=".programs.gp[1].gp[0][0].prog_code[0]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[0].programs.gp[1].gp[0][0].prog_code[0] { \\n ProgArg_List @.prog_args = [2] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n };\\n};\\nProgramCall .projects[0].programs.gp[1].gp[0][0].prog_code[0] {\\n name=\\\"ProgramCall_StdGlobalsInitnetworkconfigid\\\";\\n desc=\\\"always do std globals init\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"StdGlobalsInit(network, config_id)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=taString;\\n   type=\\\"String\\\";\\n   name=\\\"config_id\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"config_id\\\";\\n   };\\n  };\\n };\\n target=.projects[0].programs.gp[4][0]$$<Program,StdGlobalsInit>;\\n targ_ld_init=\\\"*StdGlobalsInit*\\\";\\n};\\n";
   };
   PatchRec @[70] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"].prog_code[\\\"If_ifconfigidcontainstest\\\"]";
    obj_path_idx=".programs.gp[1].gp[0][0].prog_code[3]";
    obj_type="If";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[1].gp[0][0].prog_code[2] { \\n ProgEl_List @.true_code = [1] {\\n  MemberAssign @[0] { };\\n };\\n};\\nIf .projects[1].programs.gp[1].gp[0][0].prog_code[2] {\\n name=\\\"If_iftestrun\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (test_run)\\\";\\n cond {\\n  expr=\\\"test_run\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MemberAssign @[0] {\\n   name=\\\"MemberAssign_networktrainmode_abraNetworkTEST\\\";\\n   desc=\\\"set network to training mode\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network.train_mode = LeabraNetwork::TEST\\\";\\n   obj=.projects[1].programs.gp[1].gp[0][0].args[0]$$<ProgVar,network>;\\n   path=\\\"train_mode\\\";\\n   expr {\\n    expr=\\\"LeabraNetwork::TEST\\\";\\n   };\\n   update_after=0;\\n  };\\n };\\n};\\n";
   };
   PatchRec @[71] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"].prog_code[\\\"Else_If_ifconfigidcontainstest\\\"]";
    obj_path_idx=".programs.gp[1].gp[0][0].prog_code[4]";
    obj_type="Else";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nElse .projects[1].programs.gp[1].gp[0][0].prog_code[3] { \\n ProgEl_List @.true_code = [1] {\\n  MemberAssign @[0] { };\\n };\\n};\\nElse .projects[1].programs.gp[1].gp[0][0].prog_code[3] {\\n name=\\\"Else_If_iftestrun\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"else\\\";\\n cond {\\n  expr=;\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MemberAssign @[0] {\\n   name=\\\"MemberAssign_networktrainmode_braNetworkTRAIN\\\";\\n   desc=\\\"set network to training mode\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network.train_mode = LeabraNetwork::TRAIN\\\";\\n   obj=.projects[1].programs.gp[1].gp[0][0].args[0]$$<ProgVar,network>;\\n   path=\\\"train_mode\\\";\\n   expr {\\n    expr=\\\"LeabraNetwork::TRAIN\\\";\\n   };\\n   update_after=0;\\n  };\\n };\\n};\\n";
   };
   PatchRec @[72] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"InitProgs\\\"][\\\"BasicInit\\\"].prog_code[\\\"If_ifconfigidcontainstest\\\"]";
    obj_path_idx=".programs.gp[1].gp[0][0].prog_code[3]";
    obj_type="If";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[1].gp[0][0].prog_code[2] { \\n ProgEl_List @.true_code = [1] {\\n  MemberAssign @[0] { };\\n };\\n};\\nIf .projects[1].programs.gp[1].gp[0][0].prog_code[2] {\\n name=\\\"If_iftestrun\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (test_run)\\\";\\n cond {\\n  expr=\\\"test_run\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MemberAssign @[0] {\\n   name=\\\"MemberAssign_networktrainmode_abraNetworkTEST\\\";\\n   desc=\\\"set network to training mode\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network.train_mode = LeabraNetwork::TEST\\\";\\n   obj=.projects[1].programs.gp[1].gp[0][0].args[0]$$<ProgVar,network>;\\n   path=\\\"train_mode\\\";\\n   expr {\\n    expr=\\\"LeabraNetwork::TEST\\\";\\n   };\\n   update_after=0;\\n  };\\n };\\n};\\n";
   };
   PatchRec @[73] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0]";
    obj_type="Program";
    mbr_path="author";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="Randall C. O'Reilly";
   };
   PatchRec @[74] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0]";
    obj_type="Program";
    mbr_path="email";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="emergent-users@grey.colorado.edu";
   };
   PatchRec @[75] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].args[\\\"config_id\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0].args[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[1].gp[1][0].args[1] { };\\nProgVar .projects[0].programs.gp[1].gp[1][0].args[1] {\\n name=\\\"config_id\\\";\\n var_type=T_String;\\n string_val=\\\"basic_train\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;\\n reference=0;\\n desc=\\\"configuration to use -- lookup in Config table\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[76] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].vars[\\\"trials_per_epoch\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[1].gp[1][0].vars[0] { };\\nProgVar .projects[0].programs.gp[1].gp[1][0].vars[0] {\\n name=\\\"trials_per_epoch\\\";\\n var_type=T_Int;\\n int_val=50;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;\\n reference=0;\\n desc=;\\n init_from=.projects[0].programs.gp[4][0]$$<Program,StdGlobalsInit>;\\n};\\n";
   };
   PatchRec @[77] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].vars";
    obj_path_idx=".programs.gp[1].gp[1][0].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=2;
    targ_name="trials_per_epoch_eff";
    insert_after="train_epochs";
    insert_before="update_net_view";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1].gp[1][0].vars[1] { };\\nProgVar .projects[1].programs.gp[1].gp[1][0].vars[1] {\\n name=\\\"trials_per_epoch_eff\\\";\\n var_type=T_Int;\\n int_val=50;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;\\n reference=0;\\n desc=;\\n init_from=.projects[1].programs.gp[4][4]$$<Program,TrainStart>;\\n};\\n";
   };
   PatchRec @[78] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].vars";
    obj_path_idx=".programs.gp[1].gp[1][0].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=2;
    targ_name="test_interval";
    insert_after="trials_per_epoch_eff";
    insert_before="update_net_view";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1].gp[1][0].vars[2] { };\\nProgVar .projects[1].programs.gp[1].gp[1][0].vars[2] {\\n name=\\\"test_interval\\\";\\n var_type=T_Int;\\n int_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;\\n reference=0;\\n desc=;\\n init_from=.projects[1].programs.gp[4][4]$$<Program,TrainStart>;\\n};\\n";
   };
   PatchRec @[79] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].vars[\\\"train_epochs\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[1].gp[1][0].vars[0] { };\\nProgVar .projects[1].programs.gp[1].gp[1][0].vars[0] {\\n name=\\\"train_epochs\\\";\\n var_type=T_Int;\\n int_val=50;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;\\n reference=0;\\n desc=;\\n init_from=.projects[1].programs.gp[4][4]$$<Program,TrainStart>;\\n};\\n";
   };
   PatchRec @[80] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].prog_code[\\\"If_ifnetworktrialtrialsperepoch\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0].prog_code[5]";
    obj_type="If";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[1].gp[1][0].prog_code[5] { \\n ProgEl_List @.true_code = [5] {\\n  ProgramCall @[0] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  If @[1] { \\n   ProgEl_List @.true_code = [1] {\\n    ProgramCall @[0] { \\n     ProgArg_List @.prog_args = [1] {\\n      ProgArg @[0] { };\\n     };\\n    };\\n   };\\n  };\\n  MemberAssign @[2] { };\\n  If @[3] { \\n   ProgEl_List @.true_code = [2] {\\n    ProgramCall @[0] { \\n     ProgArg_List @.prog_args = [1] {\\n      ProgArg @[0] { };\\n     };\\n    };\\n    ReturnExpr @[1] { };\\n   };\\n  };\\n  ProgramCall @[4] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n };\\n};\\nIf .projects[1].programs.gp[1].gp[1][0].prog_code[5] {\\n name=\\\"If_ifnetworktrialtrialsperepocheff\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (network.trial >= trials_per_epoch_eff)\\\";\\n cond {\\n  expr=\\\"network.trial >= trials_per_epoch_eff\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  ProgramCall @[0] {\\n   name=\\\"ProgramCall_EpochEndnetwork\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"EpochEnd(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][7]$$<Program,EpochEnd>;\\n   targ_ld_init=\\\"*EpochEnd*\\\";\\n  };\\n  If @[1] {\\n   name=\\\"If_iftestinterval0n_chtestinterval0\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (test_interval > 0 && network.epoch % test_interval == 0)\\\";\\n   cond {\\n    expr=\\\"test_interval > 0 && network.epoch % test_interval == 0\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    ProgramCall @[0] {\\n     name=\\\"ProgramCall_TestAllnetwork\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"TestAll(network)\\\";\\n     prog_args {\\n      name=\\\"prog_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=LeabraNetwork;\\n       type=\\\"LeabraNetwork*\\\";\\n       name=\\\"network\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=\\\"network\\\";\\n       expr {\\n\\texpr=\\\"network\\\";\\n       };\\n      };\\n     };\\n     target=.projects[1].programs.gp[2][2]$$<Program,TestAll>;\\n     targ_ld_init=\\\"*TestAll*\\\";\\n    };\\n   };\\n  };\\n  MemberAssign @[2] {\\n   name=\\\"MemberAssign_networkepochnetworkepoch1\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network.epoch = network.epoch + 1\\\";\\n   obj=.projects[1].programs.gp[1].gp[1][0].args[0]$$<ProgVar,network>;\\n   path=\\\"epoch\\\";\\n   expr {\\n    expr=\\\"network.epoch + 1\\\";\\n   };\\n   update_after=0;\\n  };\\n  If @[3] {\\n   name=\\\"If_ifnetworkepochtrainepochs\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (network.epoch >= train_epochs)\\\";\\n   cond {\\n    expr=\\\"network.epoch >= train_epochs\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    ProgramCall @[0] {\\n     name=\\\"ProgramCall_TrainEndnetwork\\\";\\n     desc=\\\"calls stop_train and does final training stuff\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"TrainEnd(network)\\\";\\n     prog_args {\\n      name=\\\"prog_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=LeabraNetwork;\\n       type=\\\"LeabraNetwork*\\\";\\n       name=\\\"network\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"network\\\";\\n       };\\n      };\\n     };\\n     target=.projects[1].programs.gp[4][5]$$<Program,TrainEnd>;\\n     targ_ld_init=\\\"*TrainEnd*\\\";\\n    };\\n    ReturnExpr @[1] {\\n     name=\\\"ReturnExpr_return\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"return \\\";\\n     expr {\\n      expr=;\\n     };\\n    };\\n   };\\n  };\\n  ProgramCall @[4] {\\n   name=\\\"ProgramCall_EpochStartnetwork\\\";\\n   desc=\\\"time to start a new epoch!\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"EpochStart(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][6]$$<Program,EpochStart>;\\n   targ_ld_init=\\\"*EpochStart*\\\";\\n  };\\n };\\n};\\n";
   };
   PatchRec @[81] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].prog_code[\\\"If_ifnetworktrialtrialsperepoch\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0].prog_code[5]";
    obj_type="If";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[1].gp[1][0].prog_code[5] { \\n ProgEl_List @.true_code = [5] {\\n  ProgramCall @[0] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  If @[1] { \\n   ProgEl_List @.true_code = [1] {\\n    ProgramCall @[0] { \\n     ProgArg_List @.prog_args = [1] {\\n      ProgArg @[0] { };\\n     };\\n    };\\n   };\\n  };\\n  MemberAssign @[2] { };\\n  If @[3] { \\n   ProgEl_List @.true_code = [2] {\\n    ProgramCall @[0] { \\n     ProgArg_List @.prog_args = [1] {\\n      ProgArg @[0] { };\\n     };\\n    };\\n    ReturnExpr @[1] { };\\n   };\\n  };\\n  ProgramCall @[4] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n };\\n};\\nIf .projects[1].programs.gp[1].gp[1][0].prog_code[5] {\\n name=\\\"If_ifnetworktrialtrialsperepocheff\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (network.trial >= trials_per_epoch_eff)\\\";\\n cond {\\n  expr=\\\"network.trial >= trials_per_epoch_eff\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  ProgramCall @[0] {\\n   name=\\\"ProgramCall_EpochEndnetwork\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"EpochEnd(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][7]$$<Program,EpochEnd>;\\n   targ_ld_init=\\\"*EpochEnd*\\\";\\n  };\\n  If @[1] {\\n   name=\\\"If_iftestinterval0n_chtestinterval0\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (test_interval > 0 && network.epoch % test_interval == 0)\\\";\\n   cond {\\n    expr=\\\"test_interval > 0 && network.epoch % test_interval == 0\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    ProgramCall @[0] {\\n     name=\\\"ProgramCall_TestAllnetwork\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"TestAll(network)\\\";\\n     prog_args {\\n      name=\\\"prog_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=LeabraNetwork;\\n       type=\\\"LeabraNetwork*\\\";\\n       name=\\\"network\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=\\\"network\\\";\\n       expr {\\n\\texpr=\\\"network\\\";\\n       };\\n      };\\n     };\\n     target=.projects[1].programs.gp[2][2]$$<Program,TestAll>;\\n     targ_ld_init=\\\"*TestAll*\\\";\\n    };\\n   };\\n  };\\n  MemberAssign @[2] {\\n   name=\\\"MemberAssign_networkepochnetworkepoch1\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network.epoch = network.epoch + 1\\\";\\n   obj=.projects[1].programs.gp[1].gp[1][0].args[0]$$<ProgVar,network>;\\n   path=\\\"epoch\\\";\\n   expr {\\n    expr=\\\"network.epoch + 1\\\";\\n   };\\n   update_after=0;\\n  };\\n  If @[3] {\\n   name=\\\"If_ifnetworkepochtrainepochs\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (network.epoch >= train_epochs)\\\";\\n   cond {\\n    expr=\\\"network.epoch >= train_epochs\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    ProgramCall @[0] {\\n     name=\\\"ProgramCall_TrainEndnetwork\\\";\\n     desc=\\\"calls stop_train and does final training stuff\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"TrainEnd(network)\\\";\\n     prog_args {\\n      name=\\\"prog_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=LeabraNetwork;\\n       type=\\\"LeabraNetwork*\\\";\\n       name=\\\"network\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"network\\\";\\n       };\\n      };\\n     };\\n     target=.projects[1].programs.gp[4][5]$$<Program,TrainEnd>;\\n     targ_ld_init=\\\"*TrainEnd*\\\";\\n    };\\n    ReturnExpr @[1] {\\n     name=\\\"ReturnExpr_return\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"return \\\";\\n     expr {\\n      expr=;\\n     };\\n    };\\n   };\\n  };\\n  ProgramCall @[4] {\\n   name=\\\"ProgramCall_EpochStartnetwork\\\";\\n   desc=\\\"time to start a new epoch!\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"EpochStart(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][6]$$<Program,EpochStart>;\\n   targ_ld_init=\\\"*EpochStart*\\\";\\n  };\\n };\\n};\\n";
   };
   PatchRec @[82] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].prog_code[\\\"If_ifnetworktrialtrialsperepoch\\\"].true_code";
    obj_path_idx=".programs.gp[1].gp[1][0].prog_code[5].true_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=1;
    targ_name="If_iftestinterval0n_chtestinterval0";
    insert_after="ProgramCall_EpochEndnetwork";
    insert_before="MemberAssign_networkepochnetworkepoch1";
    new_obj_type="If";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[1].gp[1][0].prog_code[5].true_code[1] { \\n ProgEl_List @.true_code = [1] {\\n  ProgramCall @[0] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n };\\n};\\nIf .projects[1].programs.gp[1].gp[1][0].prog_code[5].true_code[1] {\\n name=\\\"If_iftestinterval0n_chtestinterval0\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (test_interval > 0 && network.epoch % test_interval == 0)\\\";\\n cond {\\n  expr=\\\"test_interval > 0 && network.epoch % test_interval == 0\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  ProgramCall @[0] {\\n   name=\\\"ProgramCall_TestAllnetwork\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"TestAll(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=\\\"network\\\";\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[2][2]$$<Program,TestAll>;\\n   targ_ld_init=\\\"*TestAll*\\\";\\n  };\\n };\\n};\\n";
   };
   PatchRec @[83] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"TaskProgs\\\"]";
    obj_path_idx=".programs.gp[2]";
    obj_type="Program_Group";
    mbr_path=;
    targ_idx=1;
    targ_name="BasicTest";
    insert_after="BasicTrain";
    insert_before=;
    new_obj_type="Program";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgram .projects[1].programs.gp[2][1] { \\n UserDataItem_List @*(.user_data_) {\\n  UserData_DocLink @[0] { };\\n };\\n\\n ProgObjList @.objs = [1] {\\n  TimeUsed @[0] { };\\n };\\n\\n ProgType_List @.types = [0] {\\n };\\n\\n ProgVar_List @.args = [3] {\\n  ProgVar @[0] { };\\n  ProgVar @[1] { };\\n  ProgVar @[2] { };\\n };\\n\\n ProgVar_List @.vars = [1] {\\n  ProgVar @[0] { };\\n };\\n\\n Function_List @.functions = [0] {\\n };\\n\\n ProgEl_List @.init_code = [1] {\\n  MethodCall @[0] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n };\\n\\n ProgEl_List @.prog_code = [19] {\\n  MethodCall @[0] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  Comment @[1] { };\\n  ProgramCall @[2] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  ProgramCall @[3] { \\n   ProgArg_List @.prog_args = [3] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n    ProgArg @[2] { };\\n   };\\n  };\\n  ProgramCall @[4] { \\n   ProgArg_List @.prog_args = [2] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n   };\\n  };\\n  Comment @[5] { };\\n  ProgramCall @[6] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  MethodCall @[7] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  NetUpdateView @[8] { };\\n  StopStepPoint @[9] { };\\n  Comment @[10] { };\\n  MethodCall @[11] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  ProgramCall @[12] { \\n   ProgArg_List @.prog_args = [2] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n   };\\n  };\\n  ProgramCall @[13] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  MethodCall @[14] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  NetUpdateView @[15] { };\\n  ProgramCall @[16] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  MethodCall @[17] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  ProgramCall @[18] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n };\\n};\\nProgram .projects[1].programs.gp[2][1] {\\n UserDataItem_List @*(.user_data_) {\\n  name=;\\n  el_typ=UserData_DocLink;\\n  el_def=0;\\n  UserData_DocLink @[0] {name=\\\"DocLink\\\": doc=.projects[1].programs.gp[2][0].doc$$<taDoc,doc>: };\\n };\\n name=\\\"BasicTest\\\";\\n short_nm=\\\"BscTst\\\";\\n tags=;\\n desc=\\\"basic training -- this is a standard Leabra minus-plus trial\\\";\\n version {\\n  major=0;\\n  minor=0;\\n  step=0;\\n };\\n author=\\\"Randall C. O'Reilly\\\";\\n email=\\\"emergent-users@grey.colorado.edu\\\";\\n flags=2;\\n stop_step_cond {\\n  expr=;\\n };\\n objs {\\n  name=\\\"objs\\\";\\n  el_typ=taNBase;\\n  el_def=0;\\n  TimeUsed @[0] {name=\\\"BasicTrainTime\\\": start={usr=1846: sys=268: tot=149402574332: }: end={usr=1847: sys=268: tot=149402574332: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };\\n };\\n types {\\n  name=\\\"types\\\";\\n  el_typ=DynEnumType;\\n  el_def=0;\\n };\\n args {\\n  name=\\\"args\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"network\\\";\\n   var_type=T_Object;\\n   object_type=LeabraNetwork;\\n   object_val=.projects[1].networks[0]$$<LeabraNetwork,Network_0>;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=\\\"network to operate on -- updates batch counter on network and passes it to train program\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[1] {\\n   name=\\\"input_data\\\";\\n   var_type=T_Object;\\n   object_type=DataTable;\\n   object_val=.projects[1].data.gp[0][0]$$<DataTable,StdInputData>;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[2] {\\n   name=\\\"update_net_view\\\";\\n   var_type=T_Bool;\\n   bool_val=0;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=\\\"if true, will update network views at end of settling\\\";\\n   init_from=NULL;\\n  };\\n };\\n vars {\\n  name=\\\"vars\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"basic_train_time\\\";\\n   var_type=T_Object;\\n   object_type=TimeUsed;\\n   object_val=.projects[1].programs.gp[2][1].objs[0]$$;\\n   object_scope=NULL;\\n   objs_ptr=1;\\n   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n };\\n functions {\\n  name=\\\"functions\\\";\\n  el_typ=Function;\\n  el_def=0;\\n };\\n init_code {\\n  name=\\\"init_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MethodCall @[0] {\\n   name=\\\"MethodCall_basictraintimeResetUsed\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"basic_train_time->ResetUsed()\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[2][1].vars[0]$$;\\n   method=TimeUsed::ResetUsed;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void ResetUsed()\\\";\\n   meth_desc=\\\" reset time used information\\\";\\n  };\\n };\\n prog_code {\\n  name=\\\"prog_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MethodCall @[0] {\\n   name=\\\"MethodCall_basictraintimeStartTimerfalse\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"basic_train_time->StartTimer(false)\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[2][1].vars[0]$;\\n   method=TimeUsed::StartTimer;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"reset_used\\\";\\n     required=0;\\n     def_val=\\\"true\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"false\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void StartTimer(bool reset_used = true)\\\";\\n   meth_desc=\\\" record the current time as the starting time, and optionally reset the time used information\\\";\\n  };\\n  Comment @[1] {\\n   name=\\\"Comment_StartTrial\\\";\\n   desc=\\\"=== Start Trial ===\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"// === Start Trial ===\\\";\\n  };\\n  ProgramCall @[2] {\\n   name=\\\"ProgramCall_TrialStartnetwork\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"TrialStart(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][8]$$<Program,TrialStart>;\\n   targ_ld_init=\\\"*TrialStart*\\\";\\n  };\\n  ProgramCall @[3] {\\n   name=\\\"ProgramCall_ChooseNextEventn_rkinputdatatrue\\\";\\n   desc=\\\"pick next event permuted..\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"ChooseNextEvent(network, input_data, true)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=DataTable;\\n     type=\\\"DataTable*\\\";\\n     name=\\\"input_data\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"input_data\\\";\\n     };\\n    };\\n    ProgArg @[2] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"permuted\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"true\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[3][0]$$<Program,ChooseNextEvent>;\\n   targ_ld_init=\\\"*ChooseNextEvent*\\\";\\n  };\\n  ProgramCall @[4] {\\n   name=\\\"ProgramCall_ApplyInputsnetworkinputdata\\\";\\n   desc=\\\"apply std external input activations from the input_data table to the network\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"ApplyInputs(network, input_data)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=Network;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=DataTable;\\n     type=\\\"DataTable*\\\";\\n     name=\\\"input_data\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"input_data\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[3][2]$$<Program,ApplyInputs>;\\n   targ_ld_init=\\\"*ApplyInputs*\\\";\\n  };\\n  Comment @[5] {\\n   name=\\\"Comment_RunMinusPhase\\\";\\n   desc=\\\"=== Run Minus Phase ===\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"// === Run Minus Phase ===\\\";\\n  };\\n  ProgramCall @[6] {\\n   name=\\\"ProgramCall_SettleMinusnetwork\\\";\\n   desc=\\\"settle for minus phase, using ct_time.minus as fixed number of cycles to run\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"SettleMinus(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][10]$$<Program,SettleMinus>;\\n   targ_ld_init=\\\"*SettleMinus*\\\";\\n  };\\n  MethodCall @[7] {\\n   name=\\\"MethodCall_networkComputePhaseStats\\\";\\n   desc=\\\"compute stats appropriate for given phase\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network->Compute_PhaseStats()\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[2][1].args[0]$$;\\n   method=LeabraNetwork::Compute_PhaseStats;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void Compute_PhaseStats()\\\";\\n   meth_desc=\\\" compute MinusStats at the end of the minus phase, and PlusStats at the end of the plus phase -- this is preferred over the previous implementation of calling TrialStats only at the end of the minus phase, which required targets to be present in the minus phase, which is not always the case\\\";\\n  };\\n  NetUpdateView @[8] {\\n   name=\\\"NetUpdateView_NetUpdateView\\\";\\n   desc=\\\"update network views, if update_net_view == true\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Net Update View\\\";\\n   network_var=$.projects[1].programs.gp[2][1].args[0]$;\\n   update_var=.projects[1].programs.gp[2][1].args[2]$$;\\n  };\\n  StopStepPoint @[9] {\\n   name=\\\"StopStepPoint_StopStepPoint\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Stop_Step Point\\\";\\n   cond {\\n    expr=;\\n   };\\n  };\\n  Comment @[10] {\\n   name=\\\"Comment_RunPlusPhase\\\";\\n   desc=\\\"=== Run Plus Phase ===\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"// === Run Plus Phase ===\\\";\\n  };\\n  MethodCall @[11] {\\n   name=\\\"MethodCall_networkInitInputData\\\";\\n   desc=\\\"only need to re-apply if something is new!\\\";\\n   flags=OFF|CAN_REVERT_TO_CODE;\\n   code_string=\\\"network->Init_InputData()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[2][1].args[0]$;\\n   method=Network::Init_InputData;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void Init_InputData()\\\";\\n   meth_desc=\\\" Initializes external and target inputs\\\";\\n  };\\n  ProgramCall @[12] {\\n   name=\\\"ProgramCall_ApplyInputsnetworkinputdata_1\\\";\\n   desc=\\\"only need to re-apply if something is new!\\\";\\n   flags=OFF|CAN_REVERT_TO_CODE;\\n   code_string=\\\"ApplyInputs(network, input_data)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=Network;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=DataTable;\\n     type=\\\"DataTable*\\\";\\n     name=\\\"input_data\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"input_data\\\";\\n     };\\n    };\\n   };\\n   target=$.projects[1].programs.gp[3][2]$;\\n   targ_ld_init=\\\"*ApplyInputs*\\\";\\n  };\\n  ProgramCall @[13] {\\n   name=\\\"ProgramCall_SettlePlusnetwork\\\";\\n   desc=\\\"settle for designated plus phase number of cycles\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"SettlePlus(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][11]$$<Program,SettlePlus>;\\n   targ_ld_init=\\\"*Settle*\\\";\\n  };\\n  MethodCall @[14] {\\n   name=\\\"MethodCall_networkComputePhaseStats_1\\\";\\n   desc=\\\"compute stats appropriate for given phase\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network->Compute_PhaseStats()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[2][1].args[0]$;\\n   method=LeabraNetwork::Compute_PhaseStats;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void Compute_PhaseStats()\\\";\\n   meth_desc=\\\" compute MinusStats at the end of the minus phase, and PlusStats at the end of the plus phase -- this is preferred over the previous implementation of calling TrialStats only at the end of the minus phase, which required targets to be present in the minus phase, which is not always the case\\\";\\n  };\\n  NetUpdateView @[15] {\\n   name=\\\"NetUpdateView_NetUpdateView_1\\\";\\n   desc=\\\"update network views, if update_net_view == true\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Net Update View\\\";\\n   network_var=$.projects[1].programs.gp[2][1].args[0]$;\\n   update_var=$.projects[1].programs.gp[2][1].args[2]$;\\n  };\\n  ProgramCall @[16] {\\n   name=\\\"ProgramCall_TrialEndnetwork\\\";\\n   desc=\\\"standard end of trial stuff\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"TrialEnd(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=LeabraNetwork;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4][9]$$<Program,TrialEnd>;\\n   targ_ld_init=\\\"*TrialEnd*\\\";\\n  };\\n  MethodCall @[17] {\\n   name=\\\"MethodCall_basictraintimeEndTimer\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"basic_train_time->EndTimer()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[2][1].vars[0]$;\\n   method=TimeUsed::EndTimer;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void EndTimer()\\\";\\n   meth_desc=\\\" record the current time as the ending time, and compute difference as the time used\\\";\\n  };\\n  ProgramCall @[18] {\\n   name=\\\"ProgramCall_LeabraTestTrialMonitornetwork\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"LeabraTestTrialMonitor(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=Network;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4].gp[0][3]$$<Program,LeabraTestTrialMonitor>;\\n   targ_ld_init=\\\"*LeabraTestTrialMonitor*\\\";\\n  };\\n };\\n step_prog=.projects[1].programs.gp[4][14]$$<Program,Cycle>;\\n step_n=1;\\n doc {\\n  name=\\\"doc\\\";\\n  desc=;\\n  web_doc=0;\\n  wiki=;\\n  url=\\\"local\\\";\\n  full_url=\\\"local\\\";\\n  text_size=1;\\n  text=;\\n  html_text=;\\n };\\n};\\n";
   };
   PatchRec @[84] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"TaskProgs\\\"]";
    obj_path_idx=".programs.gp[2]";
    obj_type="Program_Group";
    mbr_path=;
    targ_idx=1;
    targ_name="TestAll";
    insert_after="BasicTest";
    insert_before=;
    new_obj_type="Program";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgram .projects[1].programs.gp[2][2] { \\n UserDataItem_List @*(.user_data_) {\\n  UserData_DocLink @[0] { };\\n };\\n\\n ProgObjList @.objs = [0] {\\n };\\n\\n ProgType_List @.types = [0] {\\n };\\n\\n ProgVar_List @.args = [1] {\\n  ProgVar @[0] { };\\n };\\n\\n ProgVar_List @.vars = [7] {\\n  ProgVar @[0] { };\\n  ProgVar @[1] { };\\n  ProgVar @[2] { };\\n  ProgVar @[3] { };\\n  ProgVar @[4] { };\\n  ProgVar @[5] { };\\n  ProgVar @[6] { };\\n };\\n\\n Function_List @.functions = [0] {\\n };\\n\\n ProgEl_List @.init_code = [1] {\\n  NetCounterInit @[0] { };\\n };\\n\\n ProgEl_List @.prog_code = [6] {\\n  NetCounterInit @[0] { };\\n  MethodCall @[1] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  MethodCall @[2] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  NetDataLoop @[3] { \\n   ProgEl_List @.loop_code = [2] {\\n    ProgramCall @[0] { \\n     ProgArg_List @.prog_args = [3] {\\n      ProgArg @[0] { };\\n      ProgArg @[1] { };\\n      ProgArg @[2] { };\\n     };\\n    };\\n    If @[1] { \\n     ProgEl_List @.true_code = [1] {\\n      StopStepPoint @[0] { };\\n     };\\n    };\\n   };\\n  };\\n  MethodCall @[4] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  ProgramCall @[5] { \\n   ProgArg_List @.prog_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n };\\n};\\nProgram .projects[1].programs.gp[2][2] {\\n UserDataItem_List @*(.user_data_) {\\n  name=;\\n  el_typ=UserData_DocLink;\\n  el_def=0;\\n  UserData_DocLink @[0] {name=\\\"DocLink\\\": doc=.projects[1].programs.gp[2][2].doc$$: };\\n };\\n name=\\\"TestAll\\\";\\n short_nm=\\\"TesAll\\\";\\n tags=\\\"Leabra, Std\\\";\\n desc=\\\"test all items in a data table and save to a separate monitor\\\";\\n version {\\n  major=8;\\n  minor=0;\\n  step=0;\\n };\\n author=\\\"Randall C. O'Reilly\\\";\\n email=\\\"emergent-users@grey.colorado.edu\\\";\\n flags=NO_STOP_STEP;\\n stop_step_cond {\\n  expr=;\\n };\\n objs {\\n  name=\\\"objs\\\";\\n  el_typ=taNBase;\\n  el_def=0;\\n };\\n types {\\n  name=\\\"types\\\";\\n  el_typ=DynEnumType;\\n  el_def=0;\\n };\\n args {\\n  name=\\\"args\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"network\\\";\\n   var_type=T_Object;\\n   object_type=LeabraNetwork;\\n   object_val=.projects[1].networks[0]$$<LeabraNetwork,Network_0>;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=\\\"network to operate on\\\";\\n   init_from=NULL;\\n  };\\n };\\n vars {\\n  name=\\\"vars\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"input_data\\\";\\n   var_type=T_Object;\\n   object_type=DataTable;\\n   object_val=.projects[1].data.gp[0][0]$$<DataTable,StdInputData>;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"table of patterns to present to the network, one row at a time\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[1] {\\n   name=\\\"data_loop_order\\\";\\n   var_type=T_HardEnum;\\n   int_val=0;\\n   object_scope=NULL;\\n   hard_enum_type=DataLoop::Order;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"controls the order in which events (rows of the input data datatable) are presented to the network\\\\\\n(SEQUENTIAL, PERMUTED, RANDOM)\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[2] {\\n   name=\\\"trial\\\";\\n   var_type=T_Int;\\n   int_val=0;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"current trial (event) within the epoch -- increments automatically\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[3] {\\n   name=\\\"trial_mon_data\\\";\\n   var_type=T_Object;\\n   object_type=DataTable;\\n   object_val=.projects[1].data.gp[1][2]$$<DataTable,TestTrialOutputData>;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[4] {\\n   name=\\\"step_on_err\\\";\\n   var_type=T_Bool;\\n   bool_val=0;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"when you step at the Epoch level, this will automatically step through to the next point at which an error was made -- you can use the netview history to replay what happend\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[5] {\\n   name=\\\"data_loop_index\\\";\\n   var_type=T_Int;\\n   int_val=6;\\n   object_scope=NULL;\\n   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"index counter for the looping over items in the input_data datatable (not always the same as trial counter, depending on distributed memory computation)\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[6] {\\n   name=\\\"test_updt_view\\\";\\n   var_type=T_Bool;\\n   bool_val=0;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"update display when testing items?\\\";\\n   init_from=NULL;\\n  };\\n };\\n functions {\\n  name=\\\"functions\\\";\\n  el_typ=Function;\\n  el_def=0;\\n };\\n init_code {\\n  name=\\\"init_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  NetCounterInit @[0] {\\n   name=\\\"NetCounterInit_NetCounterInittrial\\\";\\n   desc=\\\"initialize trial counter (local variable and in the network)\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Net Counter Init: trial\\\";\\n   network_var=.projects[1].programs.gp[2][2].args[0]$$;\\n   local_ctr_var=.projects[1].programs.gp[2][2].vars[2]$$;\\n   counter=Network::trial;\\n   update_after=0;\\n  };\\n };\\n prog_code {\\n  name=\\\"prog_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  NetCounterInit @[0] {\\n   name=\\\"NetCounterInit_NetCounterInittrial\\\";\\n   desc=\\\"initialize trial counter (local variable and in the network)\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Net Counter Init: trial\\\";\\n   network_var=$.projects[1].programs.gp[2][2].args[0]$;\\n   local_ctr_var=$.projects[1].programs.gp[2][2].vars[2]$;\\n   counter=Network::trial;\\n   update_after=0;\\n  };\\n  MethodCall @[1] {\\n   name=\\\"MethodCall_networkInitEpoch\\\";\\n   desc=\\\"added in 8.0: essential for param_seqs\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network->Init_Epoch()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[2][2].args[0]$;\\n   method=Network::Init_Epoch;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void Init_Epoch()\\\";\\n   meth_desc=\\\" Initializes network state at the start of a new epoch -- updates parameters according to param_seq for example\\\";\\n  };\\n  MethodCall @[2] {\\n   name=\\\"MethodCall_trialmondataResetData\\\";\\n   desc=\\\"reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn flags OFF to accumulate trial data across entire training run)\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trial_mon_data->ResetData()\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[2][2].vars[3]$$;\\n   method=DataTable::ResetData;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void ResetData()\\\";\\n   meth_desc=\\\" deletes all the data (rows), but keeps the column structure -- this cannot be undone!\\\";\\n  };\\n  NetDataLoop @[3] {\\n   name=\\\"NetDataLoop_NetDataLoopSEQUE_ardatalooporder\\\";\\n   desc=\\\"iterates over the events/rows of input_data, according to data_loop_order variable\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Net Data Loop (SEQUENTIAL):  table=input_data  index=data_loop_index  order_var=data_loop_order \\\";\\n   loop_code {\\n    name=\\\"loop_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    ProgramCall @[0] {\\n     name=\\\"ProgramCall_BasicTestnetwork_atatestupdtview\\\";\\n     desc=\\\"run the trial program, passing network and input_data\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"BasicTest(network, input_data, test_updt_view)\\\";\\n     prog_args {\\n      name=\\\"prog_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=LeabraNetwork;\\n       type=\\\"LeabraNetwork*\\\";\\n       name=\\\"network\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=\\\"network\\\";\\n       expr {\\n\\texpr=\\\"network\\\";\\n       };\\n      };\\n      ProgArg @[1] {\\n       arg_type=DataTable;\\n       type=\\\"DataTable*\\\";\\n       name=\\\"input_data\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=\\\"input_data\\\";\\n       expr {\\n\\texpr=\\\"input_data\\\";\\n       };\\n      };\\n      ProgArg @[2] {\\n       arg_type=bool;\\n       type=\\\"bool\\\";\\n       name=\\\"update_net_view\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"test_updt_view\\\";\\n       };\\n      };\\n     };\\n     target=.projects[1].programs.gp[2][1]$$<Program,BasicTest>;\\n     targ_ld_init=\\\"*BasicTest*\\\";\\n    };\\n    If @[1] {\\n     name=\\\"If_ifsteponerrnetworksse00\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"if (step_on_err && network.sse > 0.0)\\\";\\n     cond {\\n      expr=\\\"step_on_err && network.sse > 0.0\\\";\\n     };\\n     true_code {\\n      name=\\\"true_code\\\";\\n      el_typ=ProgCode;\\n      el_def=0;\\n      StopStepPoint @[0] {\\n       name=\\\"StopStepPoint_StopStepPoint\\\";\\n       desc=;\\n       flags=CAN_REVERT_TO_CODE;\\n       code_string=\\\"Stop_Step Point\\\";\\n       cond {\\n\\texpr=;\\n       };\\n      };\\n     };\\n    };\\n   };\\n   data_var=.projects[1].programs.gp[2][2].vars[0]$$;\\n   index_var=.projects[1].programs.gp[2][2].vars[5]$$;\\n   order_var=.projects[1].programs.gp[2][2].vars[1]$$;\\n   order=SEQUENTIAL;\\n   update_after=0;\\n   dmem_nprocs=1;\\n   dmem_this_proc=0;\\n   grouped=0;\\n   group_col 9 0=\\\"Group\\\";\\n   group_index_var=NULL;\\n   group_order_var=NULL;\\n   group_order=PERMUTED;\\n   group_idx_list{    };\\n  };\\n  MethodCall @[4] {\\n   name=\\\"MethodCall_networkComputeEpochStats\\\";\\n   desc=\\\"network accumulates some core statistics over the epoch -- this finalizes that process and computes summary stats\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network->Compute_EpochStats()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[2][2].args[0]$;\\n   method=LeabraNetwork::Compute_EpochStats;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void Compute_EpochStats()\\\";\\n   meth_desc=\\\" compute epoch-level statistics; calls DMem_ComputeAggs (if dmem) and EpochSSE -- specific algos may add more compute epoch-level statistics, including SSE, AvgExtRew and AvgCycles\\\";\\n  };\\n  ProgramCall @[5] {\\n   name=\\\"ProgramCall_LeabraTestEpochMonitornetwork\\\";\\n   desc=\\\"run program that records data from network and possibly other sources about the epoch\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"LeabraTestEpochMonitor(network)\\\";\\n   prog_args {\\n    name=\\\"prog_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=Network;\\n     type=\\\"LeabraNetwork*\\\";\\n     name=\\\"network\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   target=.projects[1].programs.gp[4].gp[0][4]$$<Program,LeabraTestEpochMonitor>;\\n   targ_ld_init=\\\"*LeabraTestEpochMonitor*\\\";\\n  };\\n };\\n step_prog=NULL;\\n step_n=1;\\n doc {\\n  name=\\\"doc\\\";\\n  desc=;\\n  web_doc=1;\\n  wiki=\\\"emergent\\\";\\n  url=\\\"LeabraEpoch\\\";\\n  full_url=\\\"https://grey.colorado.edu/emergent/index.php/LeabraEpoch\\\";\\n  text_size=1;\\n  text=;\\n  html_text=;\\n };\\n};\\n";
   };
   PatchRec @[85] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"EnviroProgs\\\"][\\\"ChooseNextEvent\\\"].vars[\\\"input_idx\\\"]";
    obj_path_idx=".programs.gp[3][0].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[3][0].vars[1] { };\\nProgVar .projects[1].programs.gp[3][0].vars[1] {\\n name=\\\"input_idx\\\";\\n var_type=T_Int;\\n int_val=3;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[86] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"StdGlobalsInit\\\"]";
    obj_path_idx=".programs.gp[4][0]";
    obj_type="Program";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgram .projects[0].programs.gp[4][0] { \\n UserDataItem_List @*(.user_data_) {\\n  UserData_DocLink @[0] { };\\n };\\n\\n ProgObjList @.objs = [0] {\\n };\\n\\n ProgType_List @.types = [0] {\\n };\\n\\n ProgVar_List @.args = [2] {\\n  ProgVar @[0] { };\\n  ProgVar @[1] { };\\n };\\n\\n ProgVar_List @.vars = [13] {\\n  ProgVar @[0] { };\\n  ProgVar @[1] { };\\n  ProgVar @[2] { };\\n  ProgVar @[3] { };\\n  ProgVar @[4] { };\\n  ProgVar @[5] { };\\n  ProgVar @[6] { };\\n  ProgVar @[7] { };\\n  ProgVar @[8] { };\\n  ProgVar @[9] { };\\n  ProgVar @[10] { };\\n  ProgVar @[11] { };\\n  ProgVar @[12] { };\\n };\\n\\n Function_List @.functions = [0] {\\n };\\n\\n ProgEl_List @.init_code = [0] {\\n };\\n\\n ProgEl_List @.prog_code = [4] {\\n  Comment @[0] { };\\n  DataVarProg @[1] { };\\n  AssignExpr @[2] { };\\n  If @[3] { \\n   ProgEl_List @.true_code = [2] {\\n    AssignExpr @[0] { };\\n    If @[1] { \\n     ProgEl_List @.true_code = [1] {\\n      VarIncr @[0] { };\\n     };\\n    };\\n   };\\n  };\\n };\\n};\\nProgram .projects[0].programs.gp[4][0] {\\n UserDataItem_List @*(.user_data_) {\\n  name=;\\n  el_typ=UserData_DocLink;\\n  el_def=0;\\n  UserData_DocLink @[0] {name=\\\"DocLink\\\": doc=.projects[0].programs.gp[4][0].doc$$: };\\n };\\n name=\\\"StdGlobalsInit\\\";\\n short_nm=\\\"GlobInit\\\";\\n tags=;\\n desc=\\\"initialize standard global params, which live here too -- set other programs to init_from these guys\\\";\\n version {\\n  major=0;\\n  minor=0;\\n  step=0;\\n };\\n author=\\\"Randall C. O'Reilly\\\";\\n email=\\\"randy.oreilly@colorado.edu\\\";\\n flags=NO_STOP_STEP;\\n stop_step_cond {\\n  expr=;\\n };\\n objs {\\n  name=\\\"objs\\\";\\n  el_typ=taNBase;\\n  el_def=0;\\n };\\n types {\\n  name=\\\"types\\\";\\n  el_typ=DynEnumType;\\n  el_def=0;\\n };\\n args {\\n  name=\\\"args\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"network\\\";\\n   var_type=T_Object;\\n   object_type=LeabraNetwork;\\n   object_val=.projects[0].networks[0]$$<LeabraNetwork,Network_0>;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=\\\"network to operate on -- updates batch counter on network and passes it to train program\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[1] {\\n   name=\\\"config_id\\\";\\n   var_type=T_String;\\n   string_val=\\\"basic_train\\\";\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=\\\"configuration to use -- lookup in Config table\\\";\\n   init_from=NULL;\\n  };\\n };\\n vars {\\n  name=\\\"vars\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"Config\\\";\\n   var_type=T_Object;\\n   object_type=DataTable;\\n   object_val=.projects[0].data.gp[3][0]$$<DataTable,ConfigTable>;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[1] {\\n   name=\\\"trials_per_epoch\\\";\\n   var_type=T_Int;\\n   int_val=50;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[2] {\\n   name=\\\"trials_per_epoch_orig\\\";\\n   var_type=T_Int;\\n   int_val=50;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"original specification from Config\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[3] {\\n   name=\\\"train_epochs\\\";\\n   var_type=T_Int;\\n   int_val=50;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[4] {\\n   name=\\\"save_final_wts\\\";\\n   var_type=T_Int;\\n   int_val=1;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[5] {\\n   name=\\\"save_wts_interval\\\";\\n   var_type=T_Int;\\n   int_val=200;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[6] {\\n   name=\\\"test_interval\\\";\\n   var_type=T_Int;\\n   int_val=1000;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[7] {\\n   name=\\\"log_trials\\\";\\n   var_type=T_Int;\\n   int_val=0;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[8] {\\n   name=\\\"load_weights\\\";\\n   var_type=T_Bool;\\n   bool_val=0;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[9] {\\n   name=\\\"weights_file\\\";\\n   var_type=T_String;\\n   string_val=;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[10] {\\n   name=\\\"load_st_epc\\\";\\n   var_type=T_Int;\\n   int_val=1;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[11] {\\n   name=\\\"lrs_step_epochs\\\";\\n   var_type=T_Int;\\n   int_val=50;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n  ProgVar @[12] {\\n   name=\\\"lrs_bump_step\\\";\\n   var_type=T_Int;\\n   int_val=-1;\\n   object_scope=NULL;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n };\\n functions {\\n  name=\\\"functions\\\";\\n  el_typ=Function;\\n  el_def=0;\\n };\\n init_code {\\n  name=\\\"init_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n };\\n prog_code {\\n  name=\\\"prog_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  Comment @[0] {\\n   name=\\\"Comment_GrabGlobalParams_currentconfigid\\\";\\n   desc=\\\"== Grab Global Params from Config Table for current config_id ==\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"// == Grab Global Params from Config Table for current config_id ==\\\";\\n  };\\n  DataVarProg @[1] {\\n   name=\\\"DataVarProg_DataFromtableCon_mallmatchestrue\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"Data From:  table=Config  row_spec=row_val  row_var=config_id  set=from  all_matches=true \\\";\\n   data_var=.projects[0].programs.gp[4][0].vars[0]$$;\\n   row_spec=ROW_VAL;\\n   row_var=.projects[0].programs.gp[4][0].args[1]$$;\\n   set_data=0;\\n   all_matches=1;\\n   quiet=0;\\n   var_1=NULL;\\n   var_2=NULL;\\n   var_3=NULL;\\n   var_4=NULL;\\n  };\\n  AssignExpr @[2] {\\n   name=\\\"AssignExpr_trialsperepochorigtrialsperepoch\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trials_per_epoch_orig = trials_per_epoch\\\";\\n   result_var=.projects[0].programs.gp[4][0].vars[2]$$;\\n   expr {\\n    expr=\\\"trials_per_epoch\\\";\\n   };\\n  };\\n  If @[3] {\\n   name=\\\"If_iftaMiscdmemnprocs1\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (taMisc::dmem_nprocs > 1)\\\";\\n   cond {\\n    expr=\\\"taMisc::dmem_nprocs > 1\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    AssignExpr @[0] {\\n     name=\\\"AssignExpr_trialsperepochtr_aMiscdmemnprocs\\\";\\n     desc=\\\"dmem means that each guy does less -- uses randomization to get good mix across processors\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"trials_per_epoch = trials_per_epoch / taMisc::dmem_nprocs\\\";\\n     result_var=.projects[0].programs.gp[4][0].vars[1]$$;\\n     expr {\\n      expr=\\\"trials_per_epoch / taMisc::dmem_nprocs\\\";\\n     };\\n    };\\n    If @[1] {\\n     name=\\\"If_iftrialsperepoch_alsperepochorig\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"if (trials_per_epoch * taMisc::dmem_nprocs < trials_per_epoch_orig)\\\";\\n     cond {\\n      expr=\\\"trials_per_epoch * taMisc::dmem_nprocs < trials_per_epoch_orig\\\";\\n     };\\n     true_code {\\n      name=\\\"true_code\\\";\\n      el_typ=ProgCode;\\n      el_def=0;\\n      VarIncr @[0] {\\n       name=\\\"VarIncr_trialsperepoch1\\\";\\n       desc=\\\"round up..\\\";\\n       flags=CAN_REVERT_TO_CODE;\\n       code_string=\\\"trials_per_epoch += 1\\\";\\n       var=$.projects[0].programs.gp[4][0].vars[1]$;\\n       expr {\\n\\texpr=\\\"1\\\";\\n       };\\n      };\\n     };\\n    };\\n   };\\n  };\\n };\\n step_prog=NULL;\\n step_n=1;\\n doc {\\n  name=\\\"doc\\\";\\n  desc=;\\n  web_doc=0;\\n  wiki=;\\n  url=\\\"local\\\";\\n  full_url=\\\"local\\\";\\n  text_size=1;\\n  text=;\\n  html_text=;\\n };\\n};\\n";
   };
   PatchRec @[87] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=0;
    targ_name="dmem_rnd_seed";
    insert_after=;
    insert_before="weights_file";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[0] { };\\nProgVar .projects[1].programs.gp[4][4].vars[0] {\\n name=\\\"dmem_rnd_seed\\\";\\n var_type=T_Object;\\n object_type=RndSeed;\\n object_val=.projects[1].programs.gp[4][4].objs[0]$$<RndSeed,dmem_rnd_seed>;\\n object_scope=NULL;\\n objs_ptr=1;\\n flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[88] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=0;
    targ_name="load_weights";
    insert_after="dmem_rnd_seed";
    insert_before="weights_file";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[1] { };\\nProgVar .projects[1].programs.gp[4][4].vars[1] {\\n name=\\\"load_weights\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"load initial weights from a file (specified in weights_file)\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[89] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"load_weights\\\"]";
    obj_path_idx=".programs.gp[4][5].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[4][5].vars[1] { };\\nProgVar .projects[0].programs.gp[4][5].vars[1] {\\n name=\\\"load_weights\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;\\n reference=0;\\n desc=\\\"fm enviro\\\";\\n init_from=.projects[0].programs.gp[4][0]$$<Program,StdGlobalsInit>;\\n};\\n";
   };
   PatchRec @[90] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=4;
    targ_name="lrs_n_steps";
    insert_after="lrs_step_epochs";
    insert_before="lrs_bump_step";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[5] { };\\nProgVar .projects[1].programs.gp[4][4].vars[5] {\\n name=\\\"lrs_n_steps\\\";\\n var_type=T_Int;\\n int_val=7;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"number of steps in the learning rate schedule\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[91] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"dmem_rnd_seed\\\"]";
    obj_path_idx=".programs.gp[4][5].vars[6]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[4][5].vars[6] { };\\nProgVar .projects[0].programs.gp[4][5].vars[6] {\\n name=\\\"dmem_rnd_seed\\\";\\n var_type=T_Object;\\n object_type=RndSeed;\\n object_val=.projects[0].programs.gp[4][5].objs[0]$$<RndSeed,dmem_rnd_seed>;\\n object_scope=NULL;\\n objs_ptr=1;\\n flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[92] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=8;
    targ_name="train_epochs";
    insert_after="dmem_new_seed";
    insert_before=;
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[9] { };\\nProgVar .projects[1].programs.gp[4][4].vars[9] {\\n name=\\\"train_epochs\\\";\\n var_type=T_Int;\\n int_val=50;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n reference=0;\\n desc=\\\"number of epochs to train network for\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[93] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=8;
    targ_name="trials_per_epoch";
    insert_after="train_epochs";
    insert_before=;
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[10] { };\\nProgVar .projects[1].programs.gp[4][4].vars[10] {\\n name=\\\"trials_per_epoch\\\";\\n var_type=T_Int;\\n int_val=50;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"number of trials per epoch\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[94] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=8;
    targ_name="trials_per_epoch_eff";
    insert_after="trials_per_epoch";
    insert_before=;
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[11] { };\\nProgVar .projects[1].programs.gp[4][4].vars[11] {\\n name=\\\"trials_per_epoch_eff\\\";\\n var_type=T_Int;\\n int_val=50;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"effective value, taking into account number of MPI processors\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[95] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=8;
    targ_name="test_run";
    insert_after="trials_per_epoch_eff";
    insert_before=;
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[12] { };\\nProgVar .projects[1].programs.gp[4][4].vars[12] {\\n name=\\\"test_run\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n reference=0;\\n desc=\\\"is this a testing-only run, no training?\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[96] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][5].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=8;
    targ_name="test_interval";
    insert_after="test_run";
    insert_before=;
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[13] { };\\nProgVar .projects[1].programs.gp[4][4].vars[13] {\\n name=\\\"test_interval\\\";\\n var_type=T_Int;\\n int_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;\\n reference=0;\\n desc=\\\"how frequently (epochs) to run a test during training\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[97] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"weights_file\\\"]";
    obj_path_idx=".programs.gp[4][5].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[2] { };\\nProgVar .projects[1].programs.gp[4][4].vars[2] {\\n name=\\\"weights_file\\\";\\n var_type=T_String;\\n string_val=;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"full relative path (from project) of weights file to load -- use CRR: prefix to load from cluster run results directory\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[98] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"load_st_epc\\\"]";
    obj_path_idx=".programs.gp[4][5].vars[2]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[3] { };\\nProgVar .projects[1].programs.gp[4][4].vars[3] {\\n name=\\\"load_st_epc\\\";\\n var_type=T_Int;\\n int_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"after loading weights, reset epoch counter to this value (-1 = leave at value from the loaded weights)\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[99] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"lrs_step_epochs\\\"]";
    obj_path_idx=".programs.gp[4][5].vars[3]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[4] { };\\nProgVar .projects[1].programs.gp[4][4].vars[4] {\\n name=\\\"lrs_step_epochs\\\";\\n var_type=T_Int;\\n int_val=50;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"learning rate schedule epochs per step of decrease in learning rate\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[100] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"lrs_bump_step\\\"]";
    obj_path_idx=".programs.gp[4][5].vars[4]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[6] { };\\nProgVar .projects[1].programs.gp[4][4].vars[6] {\\n name=\\\"lrs_bump_step\\\";\\n var_type=T_Int;\\n int_val=-1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"if positive (3 is typical), then bump up the learning rate at this step in the schedule -- can help improve final performance level\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[101] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].functions";
    obj_path_idx=".programs.gp[4][5].functions";
    obj_type="Function_List";
    mbr_path=;
    targ_idx=0;
    targ_name="DMemSafeTrialsPerEpoch";
    insert_after=;
    insert_before=;
    new_obj_type="Function";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nFunction .projects[1].programs.gp[4][4].functions[0] { \\n ProgVar_List @.args = [0] {\\n };\\n\\n ProgEl_List @.fun_code = [3] {\\n  LocalVars @[0] { \\n   ProgVar_List @.local_vars = [0] {\\n   };\\n  };\\n  AssignExpr @[1] { };\\n  If @[2] { \\n   ProgEl_List @.true_code = [2] {\\n    AssignExpr @[0] { };\\n    If @[1] { \\n     ProgEl_List @.true_code = [1] {\\n      VarIncr @[0] { };\\n     };\\n    };\\n   };\\n  };\\n };\\n};\\nFunction .projects[1].programs.gp[4][4].functions[0] {\\n name=\\\"DMemSafeTrialsPerEpoch\\\";\\n desc=;\\n flags=NEW_EL|CAN_REVERT_TO_CODE;\\n code_string=\\\"DMemSafeTrialsPerEpoch() returns: int\\\";\\n return_type=T_Int;\\n object_type=taOBase;\\n args {\\n  name=\\\"args\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n };\\n fun_code {\\n  name=\\\"fun_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  LocalVars @[0] {\\n   name=\\\"LocalVars_LocalVars0vars\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"LocalVars (0 vars)\\\";\\n   local_vars {\\n    name=\\\"local_vars\\\";\\n    el_typ=ProgVar;\\n    el_def=0;\\n   };\\n  };\\n  AssignExpr @[1] {\\n   name=\\\"AssignExpr_trialsperepochefftrialsperepoch\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trials_per_epoch_eff = trials_per_epoch\\\";\\n   result_var=.projects[1].programs.gp[4][4].vars[11]$$<ProgVar,trials_per_epoch_eff>;\\n   expr {\\n    expr=\\\"trials_per_epoch\\\";\\n   };\\n  };\\n  If @[2] {\\n   name=\\\"If_iftaMiscdmemnprocs1\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (taMisc::dmem_nprocs > 1)\\\";\\n   cond {\\n    expr=\\\"taMisc::dmem_nprocs > 1\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    AssignExpr @[0] {\\n     name=\\\"AssignExpr_trialsperepochef_aMiscdmemnprocs\\\";\\n     desc=\\\"dmem means that each guy does less -- uses randomization to get good mix across processors\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"trials_per_epoch_eff = trials_per_epoch / taMisc::dmem_nprocs\\\";\\n     result_var=$.projects[1].programs.gp[4][4].vars[11]$;\\n     expr {\\n      expr=\\\"trials_per_epoch / taMisc::dmem_nprocs\\\";\\n     };\\n    };\\n    If @[1] {\\n     name=\\\"If_iftrialsperepoch_strialsperepoch\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"if (trials_per_epoch_eff * taMisc::dmem_nprocs < trials_per_epoch)\\\";\\n     cond {\\n      expr=\\\"trials_per_epoch_eff * taMisc::dmem_nprocs < trials_per_epoch\\\";\\n     };\\n     true_code {\\n      name=\\\"true_code\\\";\\n      el_typ=ProgCode;\\n      el_def=0;\\n      VarIncr @[0] {\\n       name=\\\"VarIncr_trialsperepocheff1\\\";\\n       desc=\\\"round up..\\\";\\n       flags=CAN_REVERT_TO_CODE;\\n       code_string=\\\"trials_per_epoch_eff += 1\\\";\\n       var=$.projects[1].programs.gp[4][4].vars[11]$;\\n       expr {\\n\\texpr=\\\"1\\\";\\n       };\\n      };\\n     };\\n    };\\n   };\\n  };\\n };\\n};\\n";
   };
   PatchRec @[102] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].prog_code";
    obj_path_idx=".programs.gp[4][5].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=0;
    targ_name="FunctionCall_DMemSafeTrialsPerEpoch";
    insert_after=;
    insert_before="ProgramCall_BatchRndSeednetwork";
    new_obj_type="FunctionCall";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nFunctionCall .projects[1].programs.gp[4][4].prog_code[0] { \\n ProgArg_List @.fun_args = [0] {\\n };\\n};\\nFunctionCall .projects[1].programs.gp[4][4].prog_code[0] {\\n name=\\\"FunctionCall_DMemSafeTrialsPerEpoch\\\";\\n desc=;\\n flags=NEW_EL|CAN_REVERT_TO_CODE;\\n code_string=\\\"DMemSafeTrialsPerEpoch()\\\";\\n result_var=NULL;\\n fun=.projects[1].programs.gp[4][4].functions[0]$$<Function,DMemSafeTrialsPerEpoch>;\\n fun_args {\\n  name=\\\"fun_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n };\\n};\\n";
   };
   PatchRec @[103] {
    off=0;
    action=REPLACE;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].prog_code";
    obj_path_idx=".programs.gp[4][5].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=2;
    targ_name="If_iftaMiscinteractive";
    insert_after=;
    insert_before=;
    new_obj_type="ProgramCall";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[1].programs.gp[4][4].prog_code[3] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCall .projects[1].programs.gp[4][4].prog_code[3] {\\n name=\\\"ProgramCall_SaveLogFilesnetwork\\\";\\n desc=\\\"save log files for all jobs -- after network is fully built and configed\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"SaveLogFiles(network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n target=.projects[1].programs.gp[4].gp[0][0]$$<Program,SaveLogFiles>;\\n targ_ld_init=\\\"*SaveLogFiles*\\\";\\n};\\n";
   };
   PatchRec @[104] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].prog_code[\\\"MethodCall_LRSConSpecLogLra_chs5lrsbumpstep\\\"]";
    obj_path_idx=".programs.gp[4][5].prog_code[6]";
    obj_type="MethodCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nMethodCall .projects[1].programs.gp[4][4].prog_code[7] { \\n ProgArg_List @.meth_args = [3] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n  ProgArg @[2] { };\\n };\\n};\\nMethodCall .projects[1].programs.gp[4][4].prog_code[7] {\\n name=\\\"MethodCall_LRSConSpecLogLra_tepslrsbumpstep\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"LRSConSpec->LogLrateSched(lrs_step_epochs, lrs_n_steps, lrs_bump_step)\\\";\\n result_var=NULL;\\n obj=.projects[1].programs.gp[4][4].vars[7]$$<ProgVar,LRSConSpec>;\\n method=LeabraConSpec::LogLrateSched;\\n meth_args {\\n  name=\\\"meth_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=int;\\n   type=\\\"int\\\";\\n   name=\\\"epcs_per_step\\\";\\n   required=0;\\n   def_val=\\\"50\\\";\\n   prev_expr=\\\"lrs_step_epochs\\\";\\n   expr {\\n    expr=\\\"lrs_step_epochs\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=int;\\n   type=\\\"int\\\";\\n   name=\\\"n_steps\\\";\\n   required=0;\\n   def_val=\\\"5\\\";\\n   prev_expr=\\\"7\\\";\\n   expr {\\n    expr=\\\"lrs_n_steps\\\";\\n   };\\n  };\\n  ProgArg @[2] {\\n   arg_type=int;\\n   type=\\\"int\\\";\\n   name=\\\"bump_step\\\";\\n   required=0;\\n   def_val=\\\"-1\\\";\\n   prev_expr=;\\n   expr {\\n    expr=\\\"lrs_bump_step\\\";\\n   };\\n  };\\n };\\n meth_sig=\\\"void LogLrateSched(int epcs_per_step = 50, int n_steps = 5, int bump_step = -1)\\\";\\n meth_desc=\\\" establish a logarithmic learning rate schedule with given total number of steps (including first step at lrate) and epochs per step: numbers go down in sequence: 1, .5, .2, .1, .05, .02, .01, etc.. this is a particularly good lrate schedule for large nets on hard tasks -- if bump_step > 0 (3 is a good default), the lrate bumps back up to 1 and back down to that step level, and then proceeds from there -- this can pop a model out of a local minimum and result in better final performance\\\";\\n};\\n";
   };
   PatchRec @[105] {
    off=0;
    action=REPLACE;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].prog_code[\\\"If_ifloadweightsweightsfilenonempty\\\"].true_code";
    obj_path_idx=".programs.gp[4][5].prog_code[5].true_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=2;
    targ_name="MemberAssign_networkepochloadstepc";
    insert_after=;
    insert_before=;
    new_obj_type="If";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[4][4].prog_code[6].true_code[2] { \\n ProgEl_List @.true_code = [1] {\\n  MemberAssign @[0] { };\\n };\\n};\\nIf .projects[1].programs.gp[4][4].prog_code[6].true_code[2] {\\n name=\\\"If_ifloadstepc0\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (load_st_epc >= 0)\\\";\\n cond {\\n  expr=\\\"load_st_epc >= 0\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MemberAssign @[0] {\\n   name=\\\"MemberAssign_networkepochloadstepc\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network.epoch = load_st_epc\\\";\\n   obj=.projects[1].programs.gp[4][4].args[0]$$<ProgVar,network>;\\n   path=\\\"epoch\\\";\\n   expr {\\n    expr=\\\"load_st_epc\\\";\\n   };\\n   update_after=1;\\n  };\\n };\\n};\\n";
   };
   PatchRec @[106] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].prog_code[\\\"MethodCall_LRSConSpecLogLra_chs5lrsbumpstep\\\"]";
    obj_path_idx=".programs.gp[4][5].prog_code[6]";
    obj_type="MethodCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nMethodCall .projects[1].programs.gp[4][4].prog_code[7] { \\n ProgArg_List @.meth_args = [3] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n  ProgArg @[2] { };\\n };\\n};\\nMethodCall .projects[1].programs.gp[4][4].prog_code[7] {\\n name=\\\"MethodCall_LRSConSpecLogLra_tepslrsbumpstep\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"LRSConSpec->LogLrateSched(lrs_step_epochs, lrs_n_steps, lrs_bump_step)\\\";\\n result_var=NULL;\\n obj=.projects[1].programs.gp[4][4].vars[7]$$<ProgVar,LRSConSpec>;\\n method=LeabraConSpec::LogLrateSched;\\n meth_args {\\n  name=\\\"meth_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=int;\\n   type=\\\"int\\\";\\n   name=\\\"epcs_per_step\\\";\\n   required=0;\\n   def_val=\\\"50\\\";\\n   prev_expr=\\\"lrs_step_epochs\\\";\\n   expr {\\n    expr=\\\"lrs_step_epochs\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=int;\\n   type=\\\"int\\\";\\n   name=\\\"n_steps\\\";\\n   required=0;\\n   def_val=\\\"5\\\";\\n   prev_expr=\\\"7\\\";\\n   expr {\\n    expr=\\\"lrs_n_steps\\\";\\n   };\\n  };\\n  ProgArg @[2] {\\n   arg_type=int;\\n   type=\\\"int\\\";\\n   name=\\\"bump_step\\\";\\n   required=0;\\n   def_val=\\\"-1\\\";\\n   prev_expr=;\\n   expr {\\n    expr=\\\"lrs_bump_step\\\";\\n   };\\n  };\\n };\\n meth_sig=\\\"void LogLrateSched(int epcs_per_step = 50, int n_steps = 5, int bump_step = -1)\\\";\\n meth_desc=\\\" establish a logarithmic learning rate schedule with given total number of steps (including first step at lrate) and epochs per step: numbers go down in sequence: 1, .5, .2, .1, .05, .02, .01, etc.. this is a particularly good lrate schedule for large nets on hard tasks -- if bump_step > 0 (3 is a good default), the lrate bumps back up to 1 and back down to that step level, and then proceeds from there -- this can pop a model out of a local minimum and result in better final performance\\\";\\n};\\n";
   };
   PatchRec @[107] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].prog_code[\\\"MethodCall_LRSConSpecLogLra_chs5lrsbumpstep\\\"].meth_args[\\\"n_steps\\\"]";
    obj_path_idx=".programs.gp[4][5].prog_code[6].meth_args[1]";
    obj_type="ProgArg";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgArg .projects[1].programs.gp[4][4].prog_code[7].meth_args[1] { };\\nProgArg .projects[1].programs.gp[4][4].prog_code[7].meth_args[1] {\\n arg_type=int;\\n type=\\\"int\\\";\\n name=\\\"n_steps\\\";\\n required=0;\\n def_val=\\\"5\\\";\\n prev_expr=\\\"7\\\";\\n expr {\\n  expr=\\\"lrs_n_steps\\\";\\n };\\n};\\n";
   };
   PatchRec @[108] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainEnd\\\"].vars[\\\"save_final_wts\\\"]";
    obj_path_idx=".programs.gp[4][6].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][5].vars[0] { };\\nProgVar .projects[1].programs.gp[4][5].vars[0] {\\n name=\\\"save_final_wts\\\";\\n var_type=T_Bool;\\n bool_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"should final weights after training is complete be saved?\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[109] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"EpochEnd\\\"].vars[\\\"save_wts_interval\\\"]";
    obj_path_idx=".programs.gp[4][8].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][7].vars[0] { };\\nProgVar .projects[1].programs.gp[4][7].vars[0] {\\n name=\\\"save_wts_interval\\\";\\n var_type=T_Int;\\n int_val=200;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"how frequently (epochs) to save weights during training\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[110] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"Trial\\\"].vars[\\\"update_net_view\\\"]";
    obj_path_idx=".programs.gp[4][13].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][12].vars[0] { };\\nProgVar .projects[1].programs.gp[4][12].vars[0] {\\n name=\\\"update_net_view\\\";\\n var_type=T_Bool;\\n bool_val=1;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"determines whether to update any network view displays after trial is completed\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[111] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"Quarter\\\"]";
    obj_path_idx=".programs.gp[4][14]";
    obj_type="Program";
    mbr_path="author";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="Randall C. O'Reilly";
   };
   PatchRec @[112] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"Quarter\\\"]";
    obj_path_idx=".programs.gp[4][14]";
    obj_type="Program";
    mbr_path="email";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="emergent-users@grey.colorado.edu";
   };
   PatchRec @[113] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"Quarter\\\"].vars[\\\"update_net_view\\\"]";
    obj_path_idx=".programs.gp[4][14].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][13].vars[1] { };\\nProgVar .projects[1].programs.gp[4][13].vars[1] {\\n name=\\\"update_net_view\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"if true, will update network views at end of settling\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[114] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"SaveWeights\\\"].vars[\\\"tag\\\"]";
    obj_path_idx=".programs.gp[4][16].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][15].vars[0] { };\\nProgVar .projects[1].programs.gp[4][15].vars[0] {\\n name=\\\"tag\\\";\\n var_type=T_String;\\n string_val=\\\"__RunMaster_NetMaster\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;\\n reference=0;\\n desc=\\\"user defined tag (set by startup script)\\\";\\n init_from=.projects[1].programs.gp[4].gp[0][0]$$<Program,SaveLogFiles>;\\n};\\n";
   };
   PatchRec @[115] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"SaveWeights\\\"].vars[\\\"fname\\\"]";
    obj_path_idx=".programs.gp[4][16].vars[2]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][15].vars[2] { };\\nProgVar .projects[1].programs.gp[4][15].vars[2] {\\n name=\\\"fname\\\";\\n var_type=T_String;\\n string_val=\\\"/Users/oreilly/emergent/proj_templates/LeabraFlex_RunMaster_NetMaster.00_0050.wts.gz\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[116] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"SaveWeights\\\"].vars[\\\"final_tag\\\"]";
    obj_path_idx=".programs.gp[4][16].vars[5]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][15].vars[5] { };\\nProgVar .projects[1].programs.gp[4][15].vars[5] {\\n name=\\\"final_tag\\\";\\n var_type=T_String;\\n string_val=\\\"_RunMaster_NetMaster.00_0050\\\";\\n object_scope=NULL;\\n flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"batch + epoch\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[117] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"].gp[\\\"Monitors\\\"]";
    obj_path_idx=".programs.gp[4].gp[0]";
    obj_type="Program_Group";
    mbr_path=;
    targ_idx=3;
    targ_name="LeabraTestTrialMonitor";
    insert_after="LeabraEpochMonitor";
    insert_before=;
    new_obj_type="Program";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgram .projects[1].programs.gp[4].gp[0][3] { \\n UserDataItem_List @*(.user_data_) {\\n  UserData_DocLink @[0] { };\\n };\\n\\n ProgObjList @.objs = [1] {\\n  NetMonitor @[0] { \\n   NetMonItem_List @.items = [26] {\\n    NetMonItem @[0] { };\\n    NetMonItem @[1] { };\\n    NetMonItem @[2] { };\\n    NetMonItem @[3] { };\\n    NetMonItem @[4] { };\\n    NetMonItem @[5] { };\\n    NetMonItem @[6] { };\\n    NetMonItem @[7] { };\\n    NetMonItem @[8] { };\\n    NetMonItem @[9] { };\\n    NetMonItem @[10] { };\\n    NetMonItem @[11] { };\\n    NetMonItem @[12] { };\\n    NetMonItem @[13] { };\\n    NetMonItem @[14] { };\\n    NetMonItem @[15] { };\\n    NetMonItem @[16] { };\\n    NetMonItem @[17] { };\\n    NetMonItem @[18] { };\\n    NetMonItem @[19] { };\\n    NetMonItem @[20] { };\\n    NetMonItem @[21] { };\\n    NetMonItem @[22] { };\\n    NetMonItem @[23] { };\\n    NetMonItem @[24] { };\\n    NetMonItem @[25] { };\\n   };\\n  };\\n };\\n\\n ProgType_List @.types = [0] {\\n };\\n\\n ProgVar_List @.args = [1] {\\n  ProgVar @[0] { };\\n };\\n\\n ProgVar_List @.vars = [3] {\\n  ProgVar @[0] { };\\n  ProgVar @[1] { };\\n  ProgVar @[2] { };\\n };\\n\\n Function_List @.functions = [0] {\\n };\\n\\n ProgEl_List @.init_code = [4] {\\n  MethodCall @[0] { \\n   ProgArg_List @.meth_args = [2] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n   };\\n  };\\n  MethodCall @[1] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  MethodCall @[2] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  AssignExpr @[3] { };\\n };\\n\\n ProgEl_List @.prog_code = [5] {\\n  If @[0] { \\n   ProgEl_List @.true_code = [3] {\\n    MethodCall @[0] { \\n     ProgArg_List @.meth_args = [2] {\\n      ProgArg @[0] { };\\n      ProgArg @[1] { };\\n     };\\n    };\\n    MethodCall @[1] { \\n     ProgArg_List @.meth_args = [1] {\\n      ProgArg @[0] { };\\n     };\\n    };\\n    AssignExpr @[2] { };\\n   };\\n  };\\n  MethodCall @[1] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  MethodCall @[2] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  MethodCall @[3] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  MethodCall @[4] { \\n   ProgArg_List @.meth_args = [2] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n   };\\n  };\\n };\\n};\\nProgram .projects[1].programs.gp[4].gp[0][3] {\\n UserDataItem_List @*(.user_data_) {\\n  name=;\\n  el_typ=UserData_DocLink;\\n  el_def=0;\\n  UserData_DocLink @[0] {name=\\\"DocLink\\\": doc=.projects[1].programs.gp[4].gp[0][1].doc$$<taDoc,doc>: };\\n };\\n name=\\\"LeabraTestTrialMonitor\\\";\\n short_nm=\\\"TsTrMn\\\";\\n tags=\\\"Leabra, Std, Monitor\\\";\\n desc=\\\"monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis \\\";\\n version {\\n  major=0;\\n  minor=0;\\n  step=0;\\n };\\n author=\\\"Randall C. O'Reilly\\\";\\n email=\\\"emergent-users@grey.colorado.edu\\\";\\n flags=NO_STOP_STEP;\\n stop_step_cond {\\n  expr=;\\n };\\n objs {\\n  name=\\\"objs\\\";\\n  el_typ=NetMonitor;\\n  el_def=0;\\n  NetMonitor @[0] {\\n   name=\\\"trial_netmon\\\";\\n   items {\\n    name=\\\"items\\\";\\n    el_typ=NetMonItem;\\n    el_def=0;\\n    NetMonItem @[0] {\\n     name=\\\"batch\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=.projects[1].networks[0]$$<LeabraNetwork,Network_0>;\\n     variable=\\\"batch\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[1] {\\n     name=\\\"epoch\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"epoch\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[2] {\\n     name=\\\"train_mode\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"train_mode\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[3] {\\n     name=\\\"group\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"group\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[4] {\\n     name=\\\"trial\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"trial\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[5] {\\n     name=\\\"tick\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"tick\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[6] {\\n     name=\\\"time\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"time\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[7] {\\n     name=\\\"trial_name\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"trial_name\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[8] {\\n     name=\\\"group_name\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"group_name\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[9] {\\n     name=\\\"output_name\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"minus_output_name\\\";\\n     var_label=;\\n     name_style=MY_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[10] {\\n     name=\\\"rt_cycles\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"rt_cycles\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[11] {\\n     name=\\\"sse\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"sse\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[12] {\\n     name=\\\"norm_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"norm_err\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[13] {\\n     name=\\\"cos_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"cos_err\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[14] {\\n     name=\\\"ext_rew\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"ext_rew\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[15] {\\n     name=\\\"lay_sse\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.sse\\\";\\n     var_label=\\\"lay_sse\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[16] {\\n     name=\\\"lay_bin_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.bin_err\\\";\\n     var_label=\\\"lay_bin_err\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[17] {\\n     name=\\\"lay_norm_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.norm_err\\\";\\n     var_label=\\\"lay_norm_err\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[18] {\\n     name=\\\"lay_cos_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.cos_err\\\";\\n     var_label=\\\"lay_cos_err\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[19] {\\n     name=\\\"lay_net_sd\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.net_sd\\\";\\n     var_label=\\\"lay_net_sd\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[20] {\\n     name=\\\"net_cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"cos_diff\\\";\\n     var_label=\\\"net_cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[21] {\\n     name=\\\"net_trial_cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"trial_cos_diff\\\";\\n     var_label=\\\"net_trial_cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[22] {\\n     name=\\\"net_avg_act_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_act_diff\\\";\\n     var_label=\\\"net_avg_act_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[23] {\\n     name=\\\"cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.cos_diff\\\";\\n     var_label=\\\"cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=8;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[24] {\\n     name=\\\"trial_cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.trial_cos_diff\\\";\\n     var_label=\\\"trial_cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=8;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[25] {\\n     name=\\\"avg_act_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_act_diff\\\";\\n     var_label=\\\"avg_act_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=8;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n   };\\n   network=$.projects[1].networks[0]$;\\n   data=.projects[1].data.gp[1][2]$$<DataTable,TestTrialOutputData>;\\n   rmv_orphan_cols=1;\\n  };\\n };\\n types {\\n  name=\\\"types\\\";\\n  el_typ=DynEnumType;\\n  el_def=0;\\n };\\n args {\\n  name=\\\"args\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"network\\\";\\n   var_type=T_Object;\\n   object_type=Network;\\n   object_val=$.projects[1].networks[0]$;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=\\\"network to record data from\\\";\\n   init_from=NULL;\\n  };\\n };\\n vars {\\n  name=\\\"vars\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"trial_mon_data\\\";\\n   var_type=T_Object;\\n   object_type=DataTable;\\n   object_val=$.projects[1].data.gp[1][2]$;\\n   object_scope=.projects[1].data.gp[1]$$<DataTable_Group,OutputData>;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"data table to record trial-level data to (this program writes new data to this table!)\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[1] {\\n   name=\\\"trial_netmon\\\";\\n   var_type=T_Object;\\n   object_type=NetMonitor;\\n   object_val=.projects[1].programs.gp[4].gp[0][3].objs[0]$$;\\n   object_scope=NULL;\\n   objs_ptr=1;\\n   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[2] {\\n   name=\\\"run_already\\\";\\n   var_type=T_Bool;\\n   bool_val=0;\\n   object_scope=NULL;\\n   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n };\\n functions {\\n  name=\\\"functions\\\";\\n  el_typ=Function;\\n  el_def=0;\\n };\\n init_code {\\n  name=\\\"init_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MethodCall @[0] {\\n   name=\\\"MethodCall_trialnetmonSetDa_lmondatanetwork\\\";\\n   desc=\\\"set the network and datatable for the NetMonitor\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trial_netmon->SetDataNetwork(trial_mon_data, network)\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[4].gp[0][3].vars[1]$$;\\n   method=NetMonitor::SetDataNetwork;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=DataTable_ptr;\\n     type=\\\"DataTable*\\\";\\n     name=\\\"dt\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"trial_mon_data\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=Network_ptr;\\n     type=\\\"Network*\\\";\\n     name=\\\"net\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void SetDataNetwork(DataTable* dt, Network* net)\\\";\\n   meth_desc=\\\" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table\\\";\\n  };\\n  MethodCall @[1] {\\n   name=\\\"MethodCall_trialnetmonCheckConfigfalse\\\";\\n   desc=\\\"check the configuration of the network monitor -- will emit warnings and errors for misconfigurations\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trial_netmon->CheckConfig(false)\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][3].vars[1]$;\\n   method=taBase::CheckConfig;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"quiet\\\";\\n     required=0;\\n     def_val=\\\"false\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"false\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"bool CheckConfig(bool quiet = false)\\\";\\n   meth_desc=\\\" check the configuration of this object and all its children (defaults to no confirm of success)\\\";\\n  };\\n  MethodCall @[2] {\\n   name=\\\"MethodCall_trialnetmonUpdateMonitorstrue\\\";\\n   desc=\\\"update the monitor items and data schema based on current settings of the NetMonitor object\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trial_netmon->UpdateMonitors(true)\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][3].vars[1]$;\\n   method=NetMonitor::UpdateMonitors;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"reset_first\\\";\\n     required=0;\\n     def_val=\\\"false\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"true\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void UpdateMonitors(bool reset_first = false)\\\";\\n   meth_desc=\\\" old name for UpdateDataTable\\\";\\n  };\\n  AssignExpr @[3] {\\n   name=\\\"AssignExpr_runalreadyfalse\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"run_already = false\\\";\\n   result_var=.projects[1].programs.gp[4].gp[0][3].vars[2]$$;\\n   expr {\\n    expr=\\\"false\\\";\\n   };\\n  };\\n };\\n prog_code {\\n  name=\\\"prog_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  If @[0] {\\n   name=\\\"If_ifrunalready\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (!run_already)\\\";\\n   cond {\\n    expr=\\\"!run_already\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    MethodCall @[0] {\\n     name=\\\"MethodCall_trialnetmonSetDa_lmondatanetwork\\\";\\n     desc=\\\"set the network and datatable for the NetMonitor\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"trial_netmon->SetDataNetwork(trial_mon_data, network)\\\";\\n     result_var=NULL;\\n     obj=$.projects[1].programs.gp[4].gp[0][3].vars[1]$;\\n     method=NetMonitor::SetDataNetwork;\\n     meth_args {\\n      name=\\\"meth_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=DataTable_ptr;\\n       type=\\\"DataTable*\\\";\\n       name=\\\"dt\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"trial_mon_data\\\";\\n       };\\n      };\\n      ProgArg @[1] {\\n       arg_type=Network_ptr;\\n       type=\\\"Network*\\\";\\n       name=\\\"net\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"network\\\";\\n       };\\n      };\\n     };\\n     meth_sig=\\\"void SetDataNetwork(DataTable* dt, Network* net)\\\";\\n     meth_desc=\\\" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table\\\";\\n    };\\n    MethodCall @[1] {\\n     name=\\\"MethodCall_trialnetmonUpdateMonitorstrue\\\";\\n     desc=\\\"update the monitor items and data schema based on current settings of the NetMonitor object\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"trial_netmon->UpdateMonitors(true)\\\";\\n     result_var=NULL;\\n     obj=$.projects[1].programs.gp[4].gp[0][3].vars[1]$;\\n     method=NetMonitor::UpdateMonitors;\\n     meth_args {\\n      name=\\\"meth_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=bool;\\n       type=\\\"bool\\\";\\n       name=\\\"reset_first\\\";\\n       required=0;\\n       def_val=\\\"false\\\";\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"true\\\";\\n       };\\n      };\\n     };\\n     meth_sig=\\\"void UpdateMonitors(bool reset_first = false)\\\";\\n     meth_desc=\\\" old name for UpdateDataTable\\\";\\n    };\\n    AssignExpr @[2] {\\n     name=\\\"AssignExpr_runalreadytrue\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"run_already = true\\\";\\n     result_var=$.projects[1].programs.gp[4].gp[0][3].vars[2]$;\\n     expr {\\n      expr=\\\"true\\\";\\n     };\\n    };\\n   };\\n  };\\n  MethodCall @[1] {\\n   name=\\\"MethodCall_trialmondataAddBlankRow\\\";\\n   desc=\\\"add a new blank row to the data\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trial_mon_data->AddBlankRow()\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[4].gp[0][3].vars[0]$$;\\n   method=DataTable::AddBlankRow;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"int AddBlankRow()\\\";\\n   meth_desc=\\\" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row \\\";\\n  };\\n  MethodCall @[2] {\\n   name=\\\"MethodCall_trialnetmonGetMonVals\\\";\\n   desc=\\\"get the new monitor data from the network and other sources -- this does the main work\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trial_netmon->GetMonVals()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][3].vars[1]$;\\n   method=NetMonitor::GetMonVals;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void GetMonVals()\\\";\\n   meth_desc=\\\" get all the values and store in current row of data table -- call in program to get new data\\\";\\n  };\\n  MethodCall @[3] {\\n   name=\\\"MethodCall_trialmondataWriteClose\\\";\\n   desc=\\\"update views and other things after writing new data to monitor data table\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"trial_mon_data->WriteClose()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][3].vars[0]$;\\n   method=DataTable::WriteClose;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void WriteClose()\\\";\\n   meth_desc=\\\" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc\\\";\\n  };\\n  MethodCall @[4] {\\n   name=\\\"MethodCall_networkDMemShare_tatrialmondata1\\\";\\n   desc=\\\"only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"network->DMem_ShareTrialData(trial_mon_data, 1)\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[4].gp[0][3].args[0]$$;\\n   method=Network::DMem_ShareTrialData;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=DataTable_ptr;\\n     type=\\\"DataTable*\\\";\\n     name=\\\"dt\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"trial_mon_data\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=int;\\n     type=\\\"int\\\";\\n     name=\\\"n_rows\\\";\\n     required=0;\\n     def_val=\\\"1\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"1\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void DMem_ShareTrialData(DataTable* dt, int n_rows = 1)\\\";\\n   meth_desc=\\\" share trial data from given datatable across the trial-level dmem communicator (outer loop) -- each processor gets data from all other processors; if called every trial with n_rows = 1, data will be identical to non-dmem; if called at end of epoch with n_rows = -1 data will be grouped by processor but this is more efficient\\\";\\n  };\\n };\\n step_prog=.projects[1].programs.gp[4].gp[0][3]$$;\\n step_n=1;\\n doc {\\n  name=\\\"doc\\\";\\n  desc=;\\n  web_doc=1;\\n  wiki=\\\"emergent\\\";\\n  url=\\\"Monitor_Data\\\";\\n  full_url=\\\"https://grey.colorado.edu/emergent/index.php/Monitor_Data\\\";\\n  text_size=1;\\n  text=;\\n  html_text=;\\n };\\n};\\n";
   };
   PatchRec @[118] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"].gp[\\\"Monitors\\\"]";
    obj_path_idx=".programs.gp[4].gp[0]";
    obj_type="Program_Group";
    mbr_path=;
    targ_idx=3;
    targ_name="LeabraTestEpochMonitor";
    insert_after="LeabraTestTrialMonitor";
    insert_before=;
    new_obj_type="Program";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgram .projects[1].programs.gp[4].gp[0][4] { \\n UserDataItem_List @*(.user_data_) {\\n  UserData_DocLink @[0] { };\\n };\\n\\n ProgObjList @.objs = [1] {\\n  NetMonitor @[0] { \\n   NetMonItem_List @.items = [25] {\\n    NetMonItem @[0] { };\\n    NetMonItem @[1] { };\\n    NetMonItem @[2] { };\\n    NetMonItem @[3] { };\\n    NetMonItem @[4] { };\\n    NetMonItem @[5] { };\\n    NetMonItem @[6] { };\\n    NetMonItem @[7] { };\\n    NetMonItem @[8] { };\\n    NetMonItem @[9] { };\\n    NetMonItem @[10] { };\\n    NetMonItem @[11] { };\\n    NetMonItem @[12] { };\\n    NetMonItem @[13] { };\\n    NetMonItem @[14] { };\\n    NetMonItem @[15] { };\\n    NetMonItem @[16] { };\\n    NetMonItem @[17] { };\\n    NetMonItem @[18] { };\\n    NetMonItem @[19] { };\\n    NetMonItem @[20] { };\\n    NetMonItem @[21] { };\\n    NetMonItem @[22] { };\\n    NetMonItem @[23] { };\\n    NetMonItem @[24] { };\\n   };\\n  };\\n };\\n\\n ProgType_List @.types = [0] {\\n };\\n\\n ProgVar_List @.args = [1] {\\n  ProgVar @[0] { };\\n };\\n\\n ProgVar_List @.vars = [3] {\\n  ProgVar @[0] { };\\n  ProgVar @[1] { };\\n  ProgVar @[2] { };\\n };\\n\\n Function_List @.functions = [0] {\\n };\\n\\n ProgEl_List @.init_code = [4] {\\n  MethodCall @[0] { \\n   ProgArg_List @.meth_args = [2] {\\n    ProgArg @[0] { };\\n    ProgArg @[1] { };\\n   };\\n  };\\n  MethodCall @[1] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  MethodCall @[2] { \\n   ProgArg_List @.meth_args = [1] {\\n    ProgArg @[0] { };\\n   };\\n  };\\n  AssignExpr @[3] { };\\n };\\n\\n ProgEl_List @.prog_code = [5] {\\n  If @[0] { \\n   ProgEl_List @.true_code = [3] {\\n    MethodCall @[0] { \\n     ProgArg_List @.meth_args = [2] {\\n      ProgArg @[0] { };\\n      ProgArg @[1] { };\\n     };\\n    };\\n    MethodCall @[1] { \\n     ProgArg_List @.meth_args = [1] {\\n      ProgArg @[0] { };\\n     };\\n    };\\n    AssignExpr @[2] { };\\n   };\\n  };\\n  MethodCall @[1] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  MethodCall @[2] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  MethodCall @[3] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n  Comment @[4] { };\\n };\\n};\\nProgram .projects[1].programs.gp[4].gp[0][4] {\\n UserDataItem_List @*(.user_data_) {\\n  name=;\\n  el_typ=UserData_DocLink;\\n  el_def=0;\\n  UserData_DocLink @[0] {name=\\\"DocLink\\\": doc=.projects[1].programs.gp[4].gp[0][2].doc$$<taDoc,doc>: };\\n };\\n name=\\\"LeabraTestEpochMonitor\\\";\\n short_nm=\\\"TstMnt\\\";\\n tags=\\\"Leabra, Std, Monitor\\\";\\n desc=\\\"monitor epoch-level data from the network to a datatable (EpochOutputData typically) for use in graphing and viewing and further analysis\\\";\\n version {\\n  major=0;\\n  minor=0;\\n  step=0;\\n };\\n author=\\\"Randall C. O'Reilly\\\";\\n email=\\\"emergent-users@grey.colorado.edu\\\";\\n flags=NO_STOP_STEP;\\n stop_step_cond {\\n  expr=;\\n };\\n objs {\\n  name=\\\"objs\\\";\\n  el_typ=NetMonitor;\\n  el_def=0;\\n  NetMonitor @[0] {\\n   name=\\\"epoch_netmon\\\";\\n   items {\\n    name=\\\"items\\\";\\n    el_typ=NetMonItem;\\n    el_def=0;\\n    NetMonItem @[0] {\\n     name=\\\"batch\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=.projects[1].networks[0]$$<LeabraNetwork,Network_0>;\\n     variable=\\\"batch\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[1] {\\n     name=\\\"epoch\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"epoch\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[2] {\\n     name=\\\"avg_sse\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_sse\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[3] {\\n     name=\\\"cnt_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"cnt_err\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[4] {\\n     name=\\\"pct_cor\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"pct_cor\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[5] {\\n     name=\\\"pct_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"pct_err\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[6] {\\n     name=\\\"avg_norm_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_norm_err\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[7] {\\n     name=\\\"avg_cos_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_cos_err\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[8] {\\n     name=\\\"avg_ext_rew\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_ext_rew\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[9] {\\n     name=\\\"avg_cycles\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_cycles\\\";\\n     var_label=;\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[10] {\\n     name=\\\"lay_avg_sse\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_sse\\\";\\n     var_label=\\\"lay_avg_sse\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[11] {\\n     name=\\\"lay_cnt_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.cnt_err\\\";\\n     var_label=\\\"lay_cnt_err\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[12] {\\n     name=\\\"lay_pct_cor\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.pct_cor\\\";\\n     var_label=\\\"lay_pct_cor\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[13] {\\n     name=\\\"lay_pct_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.pct_err\\\";\\n     var_label=\\\"lay_pct_err\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[14] {\\n     name=\\\"lay_avg_norm_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_norm_err\\\";\\n     var_label=\\\"lay_avg_norm_err\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[15] {\\n     name=\\\"lay_avg_cos_err\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_cos_err\\\";\\n     var_label=\\\"lay_avg_cos_err\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=\\\"agg_col\\\";\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=\\\"select_spec\\\";\\n      name=\\\"select_spec_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[16] {\\n     name=\\\"net_avg_cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_cos_diff\\\";\\n     var_label=\\\"net_avg_cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[17] {\\n     name=\\\"net_avg_trial_cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_trial_cos_diff\\\";\\n     var_label=\\\"net_avg_trial_cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[18] {\\n     name=\\\"net_avg_avg_act_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"avg_avg_act_diff\\\";\\n     var_label=\\\"net_avg_avg_act_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[19] {\\n     name=\\\"avg_cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_cos_diff\\\";\\n     var_label=\\\"avg_cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=8;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[20] {\\n     name=\\\"avg_trial_cos_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_trial_cos_diff\\\";\\n     var_label=\\\"avg_trial_cos_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=8;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[21] {\\n     name=\\\"avg_avg_act_diff\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_avg_act_diff\\\";\\n     var_label=\\\"avg_avg_act_diff\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=8;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[22] {\\n     name=\\\"avg_net_sd\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_net_sd\\\";\\n     var_label=\\\"avg_net_sd\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=8;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 0 1;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[23] {\\n     name=\\\"netmax\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\"layers.avg_netin.max\\\";\\n     var_label=\\\"netmax\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 2 0=0;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n    NetMonItem @[24] {\\n     name=\\\"avg_act\\\";\\n     computed=0;\\n     object_type=LeabraNetwork;\\n     object=$.projects[1].networks[0]$;\\n     variable=\\\".layers.acts_p_avg\\\";\\n     var_label=\\\"avg_act\\\";\\n     name_style=AUTO_NAME;\\n     max_name_len=6;\\n     options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;\\n     val_type=VT_FLOAT;\\n     matrix=0;\\n     matrix_geom{      };\\n     data_agg=0;\\n     data_src=NULL;\\n     agg_col {\\n      col_name=;\\n     };\\n     agg {name=\\\"agg\\\": op=NONE: rel={name=\\\"rel\\\": rel=LESSTHANOREQUAL: val=0: val_string=\\\"\\\": use_var=0: var=NULL: }: };\\n     select_rows=0;\\n     select_spec {\\n      col_name=;\\n      name=\\\"_EQUAL_\\\";\\n      on=1;\\n      rel=EQUAL;\\n      use_var=0;\\n      cmp 2 0=0;\\n      var=NULL;\\n      enable_var=NULL;\\n     };\\n     pre_proc_1 {name=\\\"pre_proc_1\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_2 {name=\\\"pre_proc_2\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n     pre_proc_3 {name=\\\"pre_proc_3\\\": opr=NONE: arg=0: lw=-1: hi=1: };\\n    };\\n   };\\n   network=$.projects[1].networks[0]$;\\n   data=.projects[1].data.gp[1][3]$$<DataTable,TestEpochOutputData>;\\n   rmv_orphan_cols=1;\\n  };\\n };\\n types {\\n  name=\\\"types\\\";\\n  el_typ=DynEnumType;\\n  el_def=0;\\n };\\n args {\\n  name=\\\"args\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"network\\\";\\n   var_type=T_Object;\\n   object_type=Network;\\n   object_val=$.projects[1].networks[0]$;\\n   object_scope=NULL;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;\\n   reference=0;\\n   desc=\\\"network to get data from\\\";\\n   init_from=NULL;\\n  };\\n };\\n vars {\\n  name=\\\"vars\\\";\\n  el_typ=ProgVar;\\n  el_def=0;\\n  ProgVar @[0] {\\n   name=\\\"epoch_mon_data\\\";\\n   var_type=T_Object;\\n   object_type=DataTable;\\n   object_val=$.projects[1].data.gp[1][3]$;\\n   object_scope=.projects[1].data.gp[1]$$<DataTable_Group,OutputData>;\\n   objs_ptr=0;\\n   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"data table to write the epoch data to\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[1] {\\n   name=\\\"epoch_netmon\\\";\\n   var_type=T_Object;\\n   object_type=NetMonitor;\\n   object_val=.projects[1].programs.gp[4].gp[0][4].objs[0]$$;\\n   object_scope=NULL;\\n   objs_ptr=1;\\n   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=\\\"network monitor object that contains full specs for what to record and where to get it\\\";\\n   init_from=NULL;\\n  };\\n  ProgVar @[2] {\\n   name=\\\"run_already\\\";\\n   var_type=T_Bool;\\n   bool_val=0;\\n   object_scope=NULL;\\n   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n   reference=0;\\n   desc=;\\n   init_from=NULL;\\n  };\\n };\\n functions {\\n  name=\\\"functions\\\";\\n  el_typ=Function;\\n  el_def=0;\\n };\\n init_code {\\n  name=\\\"init_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MethodCall @[0] {\\n   name=\\\"MethodCall_epochnetmonSetDa_hmondatanetwork\\\";\\n   desc=\\\"set data and network on NetMonitor object\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"epoch_netmon->SetDataNetwork(epoch_mon_data, network)\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[4].gp[0][4].vars[1]$$;\\n   method=NetMonitor::SetDataNetwork;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=DataTable_ptr;\\n     type=\\\"DataTable*\\\";\\n     name=\\\"dt\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"epoch_mon_data\\\";\\n     };\\n    };\\n    ProgArg @[1] {\\n     arg_type=Network_ptr;\\n     type=\\\"Network*\\\";\\n     name=\\\"net\\\";\\n     required=1;\\n     def_val=;\\n     prev_expr=;\\n     expr {\\n      expr=\\\"network\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void SetDataNetwork(DataTable* dt, Network* net)\\\";\\n   meth_desc=\\\" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table\\\";\\n  };\\n  MethodCall @[1] {\\n   name=\\\"MethodCall_epochnetmonCheckConfigfalse\\\";\\n   desc=\\\"check configuration and emit errors/warnings for problems\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"epoch_netmon->CheckConfig(false)\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][4].vars[1]$;\\n   method=taBase::CheckConfig;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"quiet\\\";\\n     required=0;\\n     def_val=\\\"false\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"false\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"bool CheckConfig(bool quiet = false)\\\";\\n   meth_desc=\\\" check the configuration of this object and all its children (defaults to no confirm of success)\\\";\\n  };\\n  MethodCall @[2] {\\n   name=\\\"MethodCall_epochnetmonUpdateMonitorstrue\\\";\\n   desc=\\\"update the monitor items and data schema based on current settings of NetMonitor\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"epoch_netmon->UpdateMonitors(true)\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][4].vars[1]$;\\n   method=NetMonitor::UpdateMonitors;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n    ProgArg @[0] {\\n     arg_type=bool;\\n     type=\\\"bool\\\";\\n     name=\\\"reset_first\\\";\\n     required=0;\\n     def_val=\\\"false\\\";\\n     prev_expr=;\\n     expr {\\n      expr=\\\"true\\\";\\n     };\\n    };\\n   };\\n   meth_sig=\\\"void UpdateMonitors(bool reset_first = false)\\\";\\n   meth_desc=\\\" old name for UpdateDataTable\\\";\\n  };\\n  AssignExpr @[3] {\\n   name=\\\"AssignExpr_runalreadyfalse\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"run_already = false\\\";\\n   result_var=.projects[1].programs.gp[4].gp[0][4].vars[2]$$;\\n   expr {\\n    expr=\\\"false\\\";\\n   };\\n  };\\n };\\n prog_code {\\n  name=\\\"prog_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  If @[0] {\\n   name=\\\"If_ifrunalready\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"if (!run_already)\\\";\\n   cond {\\n    expr=\\\"!run_already\\\";\\n   };\\n   true_code {\\n    name=\\\"true_code\\\";\\n    el_typ=ProgCode;\\n    el_def=0;\\n    MethodCall @[0] {\\n     name=\\\"MethodCall_epochnetmonSetDa_hmondatanetwork\\\";\\n     desc=\\\"set data and network on NetMonitor object\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"epoch_netmon->SetDataNetwork(epoch_mon_data, network)\\\";\\n     result_var=NULL;\\n     obj=$.projects[1].programs.gp[4].gp[0][4].vars[1]$;\\n     method=NetMonitor::SetDataNetwork;\\n     meth_args {\\n      name=\\\"meth_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=DataTable_ptr;\\n       type=\\\"DataTable*\\\";\\n       name=\\\"dt\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"epoch_mon_data\\\";\\n       };\\n      };\\n      ProgArg @[1] {\\n       arg_type=Network_ptr;\\n       type=\\\"Network*\\\";\\n       name=\\\"net\\\";\\n       required=1;\\n       def_val=;\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"network\\\";\\n       };\\n      };\\n     };\\n     meth_sig=\\\"void SetDataNetwork(DataTable* dt, Network* net)\\\";\\n     meth_desc=\\\" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table\\\";\\n    };\\n    MethodCall @[1] {\\n     name=\\\"MethodCall_epochnetmonUpdateMonitorstrue\\\";\\n     desc=\\\"update the monitor items and data schema based on current settings of NetMonitor\\\";\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"epoch_netmon->UpdateMonitors(true)\\\";\\n     result_var=NULL;\\n     obj=$.projects[1].programs.gp[4].gp[0][4].vars[1]$;\\n     method=NetMonitor::UpdateMonitors;\\n     meth_args {\\n      name=\\\"meth_args\\\";\\n      el_typ=ProgArg;\\n      el_def=0;\\n      ProgArg @[0] {\\n       arg_type=bool;\\n       type=\\\"bool\\\";\\n       name=\\\"reset_first\\\";\\n       required=0;\\n       def_val=\\\"false\\\";\\n       prev_expr=;\\n       expr {\\n\\texpr=\\\"true\\\";\\n       };\\n      };\\n     };\\n     meth_sig=\\\"void UpdateMonitors(bool reset_first = false)\\\";\\n     meth_desc=\\\" old name for UpdateDataTable\\\";\\n    };\\n    AssignExpr @[2] {\\n     name=\\\"AssignExpr_runalreadytrue\\\";\\n     desc=;\\n     flags=CAN_REVERT_TO_CODE;\\n     code_string=\\\"run_already = true\\\";\\n     result_var=$.projects[1].programs.gp[4].gp[0][4].vars[2]$;\\n     expr {\\n      expr=\\\"true\\\";\\n     };\\n    };\\n   };\\n  };\\n  MethodCall @[1] {\\n   name=\\\"MethodCall_epochmondataAddBlankRow\\\";\\n   desc=\\\"add a new blank row to the data\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"epoch_mon_data->AddBlankRow()\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[4].gp[0][4].vars[0]$$;\\n   method=DataTable::AddBlankRow;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"int AddBlankRow()\\\";\\n   meth_desc=\\\" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row \\\";\\n  };\\n  MethodCall @[2] {\\n   name=\\\"MethodCall_epochnetmonGetMonVals\\\";\\n   desc=\\\"get the new monitor data and stor it into the data table -- this does the main job here\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"epoch_netmon->GetMonVals()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][4].vars[1]$;\\n   method=NetMonitor::GetMonVals;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void GetMonVals()\\\";\\n   meth_desc=\\\" get all the values and store in current row of data table -- call in program to get new data\\\";\\n  };\\n  MethodCall @[3] {\\n   name=\\\"MethodCall_epochmondataWriteClose\\\";\\n   desc=\\\"update after writing new data to monitor data table\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"epoch_mon_data->WriteClose()\\\";\\n   result_var=NULL;\\n   obj=$.projects[1].programs.gp[4].gp[0][4].vars[0]$;\\n   method=DataTable::WriteClose;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void WriteClose()\\\";\\n   meth_desc=\\\" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc\\\";\\n  };\\n  Comment @[4] {\\n   name=\\\"Comment_NOTEifdoingaTest_atablecorrectly\\\";\\n   desc=\\\"NOTE: if doing a TestEpoch and wanting to include test results in this train epoch log, then see these instructions:\\\\\\nhttp://grey.colorado.edu/emergent/index.php/Test_Programs\\\\\\nquick summary here:\\\\\\n* Add computed, data_agg, op = LAST items to epoch_netmon to grab from the EpochTestOutputData table.\\\\\\n* duplicate this program, call the new one LeabraEpochMonitor_postest, remove all netmon items for training, leaving only test,\\\\\\n  turn off rmv_orphan_cols flag, and set arg for UpdateMonitors in init_code to false\\\\\\n* in original LeabraEpochMonitor, click OFF flag for WriteClose() line\\\\\\n* in LeabraEpoch add call to LeabraEpochTest, then _posttest after the first LeabraEpochMonitor call.\\\\\\nThis will ensure that training data is monitored first, right after the training epoch, and then the test epoch is run,\\\\\\nand the testing data is updated.  The first epoch monitor should have all the items, so that it formats the data table correctly.\\\\\\n \\\\\\n\\\";\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"// NOTE: if doing a TestEpoch and wanting to include test results in this train epoch log, then see these instructions:\\\\\\nhttp://grey.colorado.edu/emergent/index.php/Test_Programs\\\\\\nquick summary here:\\\\\\n* Add computed, data_agg, op = LAST items to epoch_netmon to grab from the EpochTestOutputData table.\\\\\\n* duplicate this program, call the new one LeabraEpochMonitor_postest, remove all netmon items for training, leaving only test,\\\\\\n  turn off rmv_orphan_cols flag, and set arg for UpdateMonitors in init_code to false\\\\\\n* in original LeabraEpochMonitor, click OFF flag for WriteClose() line\\\\\\n* in LeabraEpoch add call to LeabraEpochTest, then _posttest after the first LeabraEpochMonitor call.\\\\\\nThis will ensure that training data is monitored first, right after the training epoch, and then the test epoch is run,\\\\\\nand the testing data is updated.  The first epoch monitor should have all the items, so that it formats the data table correctly.\\\\\\n \\\\\\n\\\";\\n  };\\n };\\n step_prog=.projects[1].programs.gp[4].gp[0][4]$$;\\n step_n=1;\\n doc {\\n  name=\\\"doc\\\";\\n  desc=;\\n  web_doc=1;\\n  wiki=\\\"emergent\\\";\\n  url=\\\"Monitor_Data\\\";\\n  full_url=\\\"https://grey.colorado.edu/emergent/index.php/Monitor_Data\\\";\\n  text_size=1;\\n  text=;\\n  html_text=;\\n };\\n};\\n";
   };
   PatchRec @[119] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"].gp[\\\"Monitors\\\"][\\\"SaveLogFiles\\\"].vars[\\\"tag\\\"]";
    obj_path_idx=".programs.gp[4].gp[0][0].vars[0]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4].gp[0][0].vars[0] { };\\nProgVar .projects[1].programs.gp[4].gp[0][0].vars[0] {\\n name=\\\"tag\\\";\\n var_type=T_String;\\n string_val=\\\"__RunMaster_NetMaster\\\";\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"this is set by MasterStartup or MasterTrain -- is primary source of tag for any other programs (SaveWeights copies from here)\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[120] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"].gp[\\\"Monitors\\\"][\\\"SaveLogFiles\\\"].vars[\\\"log_trials\\\"]";
    obj_path_idx=".programs.gp[4].gp[0][0].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4].gp[0][0].vars[1] { };\\nProgVar .projects[1].programs.gp[4].gp[0][0].vars[1] {\\n name=\\\"log_trials\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"should trial-level data be saved to log files?\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[121] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"].gp[\\\"Monitors\\\"][\\\"SaveLogFiles\\\"].vars[\\\"log_file_nm\\\"]";
    obj_path_idx=".programs.gp[4].gp[0][0].vars[3]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4].gp[0][0].vars[3] { };\\nProgVar .projects[1].programs.gp[4].gp[0][0].vars[3] {\\n name=\\\"log_file_nm\\\";\\n var_type=T_String;\\n string_val=\\\"/Users/oreilly/emergent/proj_templates/LeabraFlex__RunMaster_NetMaster.trn_epc.dat\\\";\\n object_scope=NULL;\\n flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"name of log file\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[122] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"].gp[\\\"Monitors\\\"][\\\"SaveLogFiles\\\"].init_code";
    obj_path_idx=".programs.gp[4].gp[0][0].init_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=0;
    targ_name="If_iftaMiscinteractive";
    insert_after=;
    insert_before=;
    new_obj_type="If";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nIf .projects[1].programs.gp[4].gp[0][0].init_code[0] { \\n ProgEl_List @.true_code = [1] {\\n  MethodCall @[0] { \\n   ProgArg_List @.meth_args = [0] {\\n   };\\n  };\\n };\\n};\\nIf .projects[1].programs.gp[4].gp[0][0].init_code[0] {\\n name=\\\"If_iftaMiscinteractive\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"if (taMisc::interactive)\\\";\\n cond {\\n  expr=\\\"taMisc::interactive\\\";\\n };\\n true_code {\\n  name=\\\"true_code\\\";\\n  el_typ=ProgCode;\\n  el_def=0;\\n  MethodCall @[0] {\\n   name=\\\"MethodCall_epochoutputdataCloseDataLog\\\";\\n   desc=;\\n   flags=CAN_REVERT_TO_CODE;\\n   code_string=\\\"epoch_output_data->CloseDataLog()\\\";\\n   result_var=NULL;\\n   obj=.projects[1].programs.gp[4].gp[0][0].vars[4]$$<ProgVar,epoch_output_data>;\\n   method=DataTable::CloseDataLog;\\n   meth_args {\\n    name=\\\"meth_args\\\";\\n    el_typ=ProgArg;\\n    el_def=0;\\n   };\\n   meth_sig=\\\"void CloseDataLog()\\\";\\n   meth_desc=\\\" close the data log file if it was previously open\\\";\\n  };\\n };\\n};\\n";
   };
  };
  PatchRec_Group @.gp[2] {
   name="ctrl_panels";
   el_typ=PatchRec;
   el_def=0;
   path=;
   PatchRec @[0] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ClusterRun\\\"].mbrs";
    obj_path_idx=".ctrl_panels[0].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="run_params";
    insert_after=;
    insert_before=;
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[0].mbrs[0] { };\\nControlPanelMember .projects[1].ctrl_panels[0].mbrs[0] {\\n label=\\\"run_params\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"select parameters for controlling how network is run\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[1][1].vars[1]$$<ProgVar,run_params>;\\n mbr=ProgVar::object_val;\\n data {ctrl_type=CLUSTER_RUN: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"\\\": range=\\\"\\\": notes=\\\"set to explore for name to be added to tag\\\": };\\n};\\n";
   };
   PatchRec @[1] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ClusterRun\\\"].mbrs";
    obj_path_idx=".ctrl_panels[0].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="net_params";
    insert_after="run_params";
    insert_before=;
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[0].mbrs[1] { };\\nControlPanelMember .projects[1].ctrl_panels[0].mbrs[1] {\\n label=\\\"net_params\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"select other parameters, typically network spec params -- independent of run params\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[1][1].vars[2]$$<ProgVar,net_params>;\\n mbr=ProgVar::object_val;\\n data {ctrl_type=CLUSTER_RUN: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"\\\": range=\\\"\\\": notes=\\\"\\\": };\\n};\\n";
   };
   PatchRec @[2] {
    off=0;
    action=DELETE;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs[\\\"cur_config\\\"]";
    obj_path_idx=".ctrl_panels[1].mbrs[0]";
    obj_type="ControlPanelMember";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[0] { };\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[0] {\\n label=\\\"cur_config\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"configuration to run -- selects from configs in the Config data table\\\";\\n cust_desc=1;\\n base=.projects[0].programs.gp[1][1].vars[1].dyn_enum_val$$<DynEnum,>;\\n mbr=DynEnum::value;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"\\\": range=\\\"0:1:0.1\\\": notes=\\\"\\\": };\\n};\\n";
   };
   PatchRec @[3] {
    off=0;
    action=DELETE;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs[\\\"mstr_run_stop_step_grain\\\"]";
    obj_path_idx=".ctrl_panels[1].mbrs[1]";
    obj_type="ControlPanelMember";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[1] { };\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[1] {\\n label=\\\"mstr_run_stop_step_grain\\\";\\n short_label=0;\\n cust_label=1;\\n desc=\\\"what grain to stop / step for the MasterRun program (MstrRun) -- can expand this by editing MasterRun program\\\";\\n cust_desc=1;\\n base=.projects[0].programs.gp[1][2].vars[1].dyn_enum_val$$<DynEnum,>;\\n mbr=DynEnum::value;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"\\\": range=\\\"0:1:0.1\\\": notes=\\\"\\\": };\\n};\\n";
   };
   PatchRec @[4] {
    off=0;
    action=DELETE;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs[\\\"Cycle_update_net_view\\\"]";
    obj_path_idx=".ctrl_panels[1].mbrs[2]";
    obj_type="ControlPanelMember";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[2] { };\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[2] {\\n label=\\\"Cycle_update_net_view\\\";\\n short_label=0;\\n cust_label=1;\\n desc=\\\"determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)\\\";\\n cust_desc=1;\\n base=.projects[0].programs.gp[4][15].vars[0]$$<ProgVar,update_net_view>;\\n mbr=ProgVar::bool_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"\\\": range=\\\"0:1:0.1\\\": notes=\\\"\\\": };\\n};\\n";
   };
   PatchRec @[5] {
    off=0;
    action=DELETE;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs[\\\"cycle_qtr\\\"]";
    obj_path_idx=".ctrl_panels[1].mbrs[3]";
    obj_type="ControlPanelMember";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[3] { };\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[3] {\\n label=\\\"cycle_qtr\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"[Default: true]  one CycleRun runs for a full quarter number of actual cycles -- this greatly speeds up processing by reducing threading overhead, but prevents e.g., interactive viewing at the individual cycle level -- this is not saved -- have to re-engage it when needed, to prevent unintentionally slowing everything down\\\";\\n cust_desc=0;\\n base=.projects[0].networks[0].times$$<LeabraTimes,>;\\n mbr=LeabraTimes::cycle_qtr;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"\\\": range=\\\"0:1:0.1\\\": notes=\\\"\\\": };\\n};\\n";
   };
   PatchRec @[6] {
    off=0;
    action=DELETE;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs[\\\"leabra_con_spec_0_lrate\\\"]";
    obj_path_idx=".ctrl_panels[1].mbrs[4]";
    obj_type="ControlPanelMember";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[4] { };\\nControlPanelMember .projects[0].ctrl_panels[1].mbrs[4] {\\n label=\\\"leabra_con_spec_0_lrate\\\";\\n short_label=0;\\n cust_label=0;\\n desc=\\\"[Default: 0.04]  learning rate -- how fast the weights change per experience -- since version 7.8.5, a hidden factor of 2 has been removed, so this should be 2x what you used to use previously (e.g., default used to be .02, now is .04) -- this governs the rate of change for the fastest adapting weights -- see slow_wts for a more slowly adapting factor\\\";\\n cust_desc=0;\\n base=.projects[0].networks[0].specs[2]$$<LeabraConSpec,LeabraConSpec_0>;\\n mbr=LeabraConSpec::lrate;\\n data {ctrl_type=CONTROL: is_numeric=1: is_single=1: state=EXPLORE: saved_value=\\\"\\\": range=\\\"0:1:0.1\\\": notes=\\\"\\\": };\\n};\\n";
   };
   PatchRec @[7] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="activate_params";
    insert_after=;
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[0] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[0] {\\n label=\\\"activate_params\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"whether to activate selected param sets at start of train -- otherwise just uses current values as-is\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[1][1].vars[0]$$<ProgVar,activate_params>;\\n mbr=ProgVar::bool_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"true\\\": range=\\\"\\\": notes=\\\"should MasterTrain activate param sets at start\\\": };\\n};\\n";
   };
   PatchRec @[8] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="run_params";
    insert_after="activate_params";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[1] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[1] {\\n label=\\\"run_params\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"select parameters for controlling how network is run\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[1][1].vars[1]$$<ProgVar,run_params>;\\n mbr=ProgVar::object_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\".projects[\\\\\\\"LeabraFlexParamSetExperiment\\\\\\\"].active_params.gp[\\\\\\\"RunParams\\\\\\\"][\\\\\\\"SpecialTrain\\\\\\\"]\\\": range=\\\"\\\": notes=\\\"MasterTrain sets these params at start\\\": };\\n};\\n";
   };
   PatchRec @[9] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="net_params";
    insert_after="run_params";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[2] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[2] {\\n label=\\\"net_params\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"select other parameters, typically network spec params -- independent of run params\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[1][1].vars[2]$$<ProgVar,net_params>;\\n mbr=ProgVar::object_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\".projects[\\\\\\\"LeabraFlexParamSetExperiment\\\\\\\"].active_params.gp[\\\\\\\"MiscParams\\\\\\\"][\\\\\\\"MiscOne\\\\\\\"]\\\": range=\\\"\\\": notes=\\\"add extra params as needed..\\\": };\\n};\\n";
   };
   PatchRec @[10] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="master_run_stop_step_grain";
    insert_after="net_params";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[3] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[3] {\\n label=\\\"master_run_stop_step_grain\\\";\\n short_label=0;\\n cust_label=0;\\n desc=\\\"select grain size for Step function on MasterRun program -- can extend this functionality -- very useful!\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[1][2].vars[0].dyn_enum_val$$<DynEnum,>;\\n mbr=DynEnum::value;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"0\\\": range=\\\"0:1:0.1\\\": notes=\\\"MasterRun step can do many different things -- very useful!\\\": };\\n};\\n";
   };
   PatchRec @[11] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="network_cycle_qtr";
    insert_after="master_run_stop_step_grain";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[4] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[4] {\\n label=\\\"network_cycle_qtr\\\";\\n short_label=0;\\n cust_label=1;\\n desc=\\\"[Default: true]  one CycleRun runs for a full quarter number of actual cycles -- this greatly speeds up processing by reducing threading overhead, but prevents e.g., interactive viewing at the individual cycle level -- this is not saved -- have to re-engage it when needed, to prevent unintentionally slowing everything down\\\";\\n cust_desc=0;\\n base=.projects[1].networks[0].times$$<LeabraTimes,>;\\n mbr=LeabraTimes::cycle_qtr;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"true\\\": range=\\\"0:1:0.1\\\": notes=\\\"turn OFF to see individual cycles, ON for MUCH faster running\\\": };\\n};\\n";
   };
   PatchRec @[12] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="cycle_update_net_view";
    insert_after="network_cycle_qtr";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[5] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[5] {\\n label=\\\"cycle_update_net_view\\\";\\n short_label=0;\\n cust_label=0;\\n desc=\\\"determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[4][14].vars[0]$$<ProgVar,update_net_view>;\\n mbr=ProgVar::bool_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"true\\\": range=\\\"0:1:0.1\\\": notes=\\\"update network view at cycle level -- actual value depends on cycle_qtr\\\": };\\n};\\n";
   };
   PatchRec @[13] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="quarter_update_net_view";
    insert_after="cycle_update_net_view";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[6] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[6] {\\n label=\\\"quarter_update_net_view\\\";\\n short_label=0;\\n cust_label=0;\\n desc=\\\"if true, will update network views at end of settling\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[4][13].vars[1]$$<ProgVar,update_net_view>;\\n mbr=ProgVar::bool_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"redundant with cycle for cycle_qtr = ON\\\": };\\n};\\n";
   };
   PatchRec @[14] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="trial_update_net_view";
    insert_after="quarter_update_net_view";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[7] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[7] {\\n label=\\\"trial_update_net_view\\\";\\n short_label=0;\\n cust_label=0;\\n desc=\\\"determines whether to update any network view displays after trial is completed\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[4][12].vars[0]$$<ProgVar,update_net_view>;\\n mbr=ProgVar::bool_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"mostly redundant but some updates happen after trial\\\": };\\n};\\n";
   };
   PatchRec @[15] {
    off=0;
    action=INSERT;
    obj_path_names=".ctrl_panels[\\\"ControlPanel\\\"].mbrs";
    obj_path_idx=".ctrl_panels[1].mbrs";
    obj_type="ControlPanelMember_Group";
    mbr_path=;
    targ_idx=0;
    targ_name="cust_tag";
    insert_after="trial_update_net_view";
    insert_before="cur_config";
    new_obj_type="ControlPanelMember";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[8] { };\\nControlPanelMember .projects[1].ctrl_panels[1].mbrs[8] {\\n label=\\\"cust_tag\\\";\\n short_label=1;\\n cust_label=0;\\n desc=\\\"add any custom tag string here -- used for labeling log and weight files along with config info\\\";\\n cust_desc=0;\\n base=.projects[1].programs.gp[1][1].vars[6]$$<ProgVar,cust_tag>;\\n mbr=ProgVar::string_val;\\n data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value=\\\"mtau10_mrg1st.5\\\": range=\\\"\\\": notes=\\\"update this to label log files -- will also be labeled with config names \\\": };\\n};\\n";
   };
  };
  PatchRec_Group @.gp[3] {
   name="active_params";
   el_typ=PatchRec;
   el_def=0;
   path=;
   PatchRec @[0] {
    off=0;
    action=INSERT;
    obj_path_names=".active_params.gp";
    obj_path_idx=".active_params.gp";
    obj_type="taSubGroup";
    mbr_path=;
    targ_idx=0;
    targ_name="RunParams";
    insert_after=;
    insert_before=;
    new_obj_type="ParamSet_Group";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nParamSet_Group .projects[1].active_params.gp[0] { \\n ParamSet @[0] { \\n  ControlPanelMember_Group @.mbrs = [18] {\\n   ControlPanelMember @[0] { };\\n   ControlPanelMember @[1] { };\\n   ControlPanelMember @[2] { };\\n   ControlPanelMember @[3] { };\\n   ControlPanelMember @[4] { };\\n   ControlPanelMember @[5] { };\\n   ControlPanelMember @[6] { };\\n   ControlPanelMember @[7] { };\\n   ControlPanelMember @[8] { };\\n   ControlPanelMember @[9] { };\\n   ControlPanelMember @[10] { };\\n   ControlPanelMember @[11] { };\\n   ControlPanelMember @[12] { };\\n   ControlPanelMember @[13] { };\\n   ControlPanelMember @[14] { };\\n   ControlPanelMember @[15] { };\\n   ControlPanelMember @[16] { };\\n   ControlPanelMember @[17] { };\\n  };\\n\\n  ControlPanelMethod_Group @.mths = [0] {\\n  };\\n };\\n ParamSet @[1] { \\n  ControlPanelMember_Group @.mbrs = [18] {\\n   ControlPanelMember @[0] { };\\n   ControlPanelMember @[1] { };\\n   ControlPanelMember @[2] { };\\n   ControlPanelMember @[3] { };\\n   ControlPanelMember @[4] { };\\n   ControlPanelMember @[5] { };\\n   ControlPanelMember @[6] { };\\n   ControlPanelMember @[7] { };\\n   ControlPanelMember @[8] { };\\n   ControlPanelMember @[9] { };\\n   ControlPanelMember @[10] { };\\n   ControlPanelMember @[11] { };\\n   ControlPanelMember @[12] { };\\n   ControlPanelMember @[13] { };\\n   ControlPanelMember @[14] { };\\n   ControlPanelMember @[15] { };\\n   ControlPanelMember @[16] { };\\n   ControlPanelMember @[17] { };\\n  };\\n\\n  ControlPanelMethod_Group @.mths = [0] {\\n  };\\n };\\n};\\nParamSet_Group .projects[1].active_params.gp[0] {\\n name=\\\"RunParams\\\";\\n el_typ=ParamSet;\\n el_def=0;\\n master_and_clones=1;\\n ParamSet @[0] {\\n  name=\\\"RunMaster\\\";\\n  cp_state=MASTER;\\n  updt_while_running=0;\\n  desc=\\\"default values for basic training parameters -- this is a 'master' param set -- make changes here and all others in group will auto-update\\\";\\n  mbrs {\\n   name=\\\"mbrs\\\";\\n   el_typ=ControlPanelMember;\\n   el_def=0;\\n   ControlPanelMember @[0] {\\n    label=\\\"run_prog\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"name of run program to run -- must exist in the RunProgs group\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[1][1].vars[3]$$<ProgVar,run_prog>;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"BasicRun\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[1] {\\n    label=\\\"init_prog\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"name of init program -- must exist in the InitProgs group\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[1][1].vars[4]$$<ProgVar,init_prog>;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"BasicInit\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[2] {\\n    label=\\\"startup_prog\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"additional configuration-specific startup code to run, in the StartupProgs -- any global startup stuff should still be in MasterStartup -- this should only be for startup that is specific to a particular configuration (rare)\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs[0].vars[7]$$<ProgVar,startup_prog>;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"BasicStartup\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[3] {\\n    label=\\\"train_epochs\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of epochs to train network for\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[9]$$<ProgVar,train_epochs>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"50\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[4] {\\n    label=\\\"trials_per_epoch\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of trials per epoch\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[10]$$<ProgVar,trials_per_epoch>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"50\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[5] {\\n    label=\\\"save_final_wts\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"should final weights after training is complete be saved?\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][5].vars[0]$$<ProgVar,save_final_wts>;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"true\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[6] {\\n    label=\\\"save_wts_interval\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"how frequently (epochs) to save weights during training\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][7].vars[0]$$<ProgVar,save_wts_interval>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"200\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[7] {\\n    label=\\\"test_run\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"is this a testing-only run, no training?\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[12]$$<ProgVar,test_run>;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[8] {\\n    label=\\\"test_interval\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"how frequently (epochs) to run a test during training\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[13]$$<ProgVar,test_interval>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[9] {\\n    label=\\\"log_trials\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"should trial-level data be saved to log files?\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4].gp[0][0].vars[1]$$<ProgVar,log_trials>;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[10] {\\n    label=\\\"load_weights\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"load initial weights from a file (specified in weights_file)\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[1]$$<ProgVar,load_weights>;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[11] {\\n    label=\\\"weights_file\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"full relative path (from project) of weights file to load -- use CRR: prefix to load from cluster run results directory\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[2]$$<ProgVar,weights_file>;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[12] {\\n    label=\\\"load_st_epc\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"after loading weights, reset epoch counter to this value (-1 = leave at value from the loaded weights)\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[3]$$<ProgVar,load_st_epc>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[13] {\\n    label=\\\"lrs_step_epochs\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"learning rate schedule epochs per step of decrease in learning rate\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[4]$$<ProgVar,lrs_step_epochs>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"50\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[14] {\\n    label=\\\"lrs_n_steps\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of steps in the learning rate schedule\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[5]$$<ProgVar,lrs_n_steps>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"7\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[15] {\\n    label=\\\"lrs_bump_step\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"if positive (3 is typical), then bump up the learning rate at this step in the schedule -- can help improve final performance level\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[4][4].vars[6]$$<ProgVar,lrs_bump_step>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"-1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[16] {\\n    label=\\\"n_batches\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of batches to run\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[1][0].vars[2]$$<ProgVar,n_batches>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[17] {\\n    label=\\\"batch_start\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"batch number to start on\\\";\\n    cust_desc=0;\\n    base=.projects[1].programs.gp[1][0].vars[1]$$<ProgVar,batch_start>;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"0\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n  };\\n  mths {\\n   name=\\\"mths\\\";\\n   el_typ=ControlPanelMethod;\\n   el_def=0;\\n   group_type=GT_BUTTONS;\\n  };\\n  date=\\\"2017_05_06_08_09_21\\\";\\n };\\n ParamSet @[1] {\\n  name=\\\"RunConfig1\\\";\\n  cp_state=CLONE;\\n  updt_while_running=0;\\n  desc=\\\"another configuration of run parameters to choose from.. make as many as you need!  this is a 'clone' of the master and will auto-update for any additions or changes to members\\\";\\n  mbrs {\\n   name=\\\"mbrs\\\";\\n   el_typ=ControlPanelMember;\\n   el_def=0;\\n   ControlPanelMember @[0] {\\n    label=\\\"run_prog\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"name of run program to run -- must exist in the RunProgs group\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[1][1].vars[3]$;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"BasicRun\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[1] {\\n    label=\\\"init_prog\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"name of init program -- must exist in the InitProgs group\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[1][1].vars[4]$;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"BasicInit\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[2] {\\n    label=\\\"startup_prog\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"additional configuration-specific startup code to run, in the StartupProgs -- any global startup stuff should still be in MasterStartup -- this should only be for startup that is specific to a particular configuration (rare)\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs[0].vars[7]$;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"BasicStartup\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[3] {\\n    label=\\\"train_epochs\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of epochs to train network for\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[9]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"5\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[4] {\\n    label=\\\"trials_per_epoch\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of trials per epoch\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[10]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"25\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[5] {\\n    label=\\\"save_final_wts\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"should final weights after training is complete be saved?\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][5].vars[0]$;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[6] {\\n    label=\\\"save_wts_interval\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"how frequently (epochs) to save weights during training\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][7].vars[0]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"200\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[7] {\\n    label=\\\"test_run\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"is this a testing-only run, no training?\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[12]$;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[8] {\\n    label=\\\"test_interval\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"how frequently (epochs) to run a test during training\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[13]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[9] {\\n    label=\\\"log_trials\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"should trial-level data be saved to log files?\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4].gp[0][0].vars[1]$;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[10] {\\n    label=\\\"load_weights\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"load initial weights from a file (specified in weights_file)\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[1]$;\\n    mbr=ProgVar::bool_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"false\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[11] {\\n    label=\\\"weights_file\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"full relative path (from project) of weights file to load -- use CRR: prefix to load from cluster run results directory\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[2]$;\\n    mbr=ProgVar::string_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=0: is_single=1: state=STABLE: saved_value=\\\"\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[12] {\\n    label=\\\"load_st_epc\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"after loading weights, reset epoch counter to this value (-1 = leave at value from the loaded weights)\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[3]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[13] {\\n    label=\\\"lrs_step_epochs\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"learning rate schedule epochs per step of decrease in learning rate\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[4]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"50\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[14] {\\n    label=\\\"lrs_n_steps\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of steps in the learning rate schedule\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[5]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"7\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[15] {\\n    label=\\\"lrs_bump_step\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"if positive (3 is typical), then bump up the learning rate at this step in the schedule -- can help improve final performance level\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[4][4].vars[6]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"-1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[16] {\\n    label=\\\"n_batches\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"number of batches to run\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[1][0].vars[2]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"1\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n   ControlPanelMember @[17] {\\n    label=\\\"batch_start\\\";\\n    short_label=1;\\n    cust_label=0;\\n    desc=\\\"batch number to start on\\\";\\n    cust_desc=0;\\n    base=$.projects[1].programs.gp[1][0].vars[1]$;\\n    mbr=ProgVar::int_val;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"0\\\": range=\\\"\\\": notes=\\\"\\\": };\\n   };\\n  };\\n  mths {\\n   name=\\\"mths\\\";\\n   el_typ=ControlPanelMethod;\\n   el_def=0;\\n   group_type=GT_BUTTONS;\\n  };\\n  date=;\\n };\\n};\\n";
   };
   PatchRec @[1] {
    off=0;
    action=INSERT;
    obj_path_names=".active_params.gp";
    obj_path_idx=".active_params.gp";
    obj_type="taSubGroup";
    mbr_path=;
    targ_idx=0;
    targ_name="NetParams";
    insert_after="RunParams";
    insert_before=;
    new_obj_type="ParamSet_Group";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nParamSet_Group .projects[1].active_params.gp[1] { \\n ParamSet @[0] { \\n  ControlPanelMember_Group @.mbrs = [1] {\\n   ControlPanelMember @[0] { };\\n  };\\n\\n  ControlPanelMethod_Group @.mths = [0] {\\n  };\\n };\\n ParamSet @[1] { \\n  ControlPanelMember_Group @.mbrs = [1] {\\n   ControlPanelMember @[0] { };\\n  };\\n\\n  ControlPanelMethod_Group @.mths = [0] {\\n  };\\n };\\n};\\nParamSet_Group .projects[1].active_params.gp[1] {\\n name=\\\"NetParams\\\";\\n el_typ=ParamSet;\\n el_def=0;\\n master_and_clones=1;\\n ParamSet @[0] {\\n  name=\\\"NetMaster\\\";\\n  cp_state=MASTER;\\n  updt_while_running=0;\\n  desc=\\\"Network params -- this contains default values for all params -- this is a 'master' param set -- make changes here and all others in group will auto-update\\\";\\n  mbrs {\\n   name=\\\"mbrs\\\";\\n   el_typ=ControlPanelMember;\\n   el_def=0;\\n   ControlPanelMember @[0] {\\n    label=\\\"leabra_con_spec_0_lrate\\\";\\n    short_label=0;\\n    cust_label=0;\\n    desc=\\\"[Default: 0.04]  learning rate -- how fast the weights change per experience -- since version 7.8.5, a hidden factor of 2 has been removed, so this should be 2x what you used to use previously (e.g., default used to be .02, now is .04) -- this governs the rate of change for the fastest adapting weights -- see slow_wts for a more slowly adapting factor\\\";\\n    cust_desc=0;\\n    base=.projects[1].networks[0].specs[2]$$<LeabraConSpec,LeabraConSpec_0>;\\n    mbr=LeabraConSpec::lrate;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"0.04\\\": range=\\\"0:1:0.1\\\": notes=\\\"\\\": };\\n   };\\n  };\\n  mths {\\n   name=\\\"mths\\\";\\n   el_typ=ControlPanelMethod;\\n   el_def=0;\\n   group_type=GT_BUTTONS;\\n  };\\n  date=\\\"2017_05_06_08_09_21\\\";\\n };\\n ParamSet @[1] {\\n  name=\\\"NetConfig1\\\";\\n  cp_state=CLONE;\\n  updt_while_running=0;\\n  desc=\\\"another configuration of misc parameters to choose from.. make as many as you need!  this is a 'clone' of the master and will auto-update for any additions or changes to members\\\";\\n  mbrs {\\n   name=\\\"mbrs\\\";\\n   el_typ=ControlPanelMember;\\n   el_def=0;\\n   ControlPanelMember @[0] {\\n    label=\\\"leabra_con_spec_0_lrate\\\";\\n    short_label=0;\\n    cust_label=0;\\n    desc=\\\"[Default: 0.04]  learning rate -- how fast the weights change per experience -- since version 7.8.5, a hidden factor of 2 has been removed, so this should be 2x what you used to use previously (e.g., default used to be .02, now is .04) -- this governs the rate of change for the fastest adapting weights -- see slow_wts for a more slowly adapting factor\\\";\\n    cust_desc=0;\\n    base=$.projects[1].networks[0].specs[2]$;\\n    mbr=LeabraConSpec::lrate;\\n    data {ctrl_type=PARAM_SET: is_numeric=1: is_single=1: state=STABLE: saved_value=\\\"0.02\\\": range=\\\"0:1:0.1\\\": notes=\\\"\\\": };\\n   };\\n  };\\n  mths {\\n   name=\\\"mths\\\";\\n   el_typ=ControlPanelMethod;\\n   el_def=0;\\n   group_type=GT_BUTTONS;\\n  };\\n  date=;\\n };\\n};\\n";
   };
  };
  PatchRec_Group @.gp[4] {
   name="programs_1";
   el_typ=PatchRec;
   el_def=0;
   path=;
   PatchRec @[0] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"OtherProgramVar_VarsFmprogramMas_ar1var2var3var4\\\"]";
    obj_path_idx=".programs[0].prog_code[8]";
    obj_type="OtherProgramVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nOtherProgramVar .projects[1].programs[0].prog_code[8] { };\\nOtherProgramVar .projects[1].programs[0].prog_code[8] {\\n name=\\\"OtherProgramVar_VarsFmprogramMas_ar1var2var3var4\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Vars Fm:  program=MasterTrain set=from  var_1=config_id  var_2=?  var_3=?  var_4=? \\\";\\n other_prog=.projects[1].programs.gp[1][1]$$<Program,MasterTrain>;\\n set_other=0;\\n var_1=NULL;\\n var_2=NULL;\\n var_3=NULL;\\n var_4=NULL;\\n};\\n";
   };
   PatchRec @[1] {
    off=0;
    action=DELETE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code[\\\"MethodCall_objectmethod\\\"]";
    obj_path_idx=".programs[0].prog_code[9]";
    obj_type="MethodCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nMethodCall .projects[1].programs[0].prog_code[9] { \\n ProgArg_List @.meth_args = [2] {\\n  ProgArg @[0] { };\\n  ProgArg @[1] { };\\n };\\n};\\nMethodCall .projects[1].programs[0].prog_code[9] {\\n name=\\\"MethodCall_objectmethod\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"Config->SetCellsFromRowLookup(\\\\\\\\\\\\\\\"config_id\\\\\\\\\\\\\\\", config_id)\\\";\\n result_var=NULL;\\n obj=NULL;\\n method=NULL;\\n meth_args {\\n  name=\\\"meth_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=taString;\\n   type=\\\"taString\\\";\\n   name=\\\"column_name\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"\\\\\\\\\\\\\\\"config_id\\\\\\\\\\\\\\\"\\\";\\n   };\\n  };\\n  ProgArg @[1] {\\n   arg_type=taString;\\n   type=\\\"taString\\\";\\n   name=\\\"value\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"config_id\\\";\\n   };\\n  };\\n };\\n meth_sig=\\\"void SetCellsFromRowLookup(taString column_name, taString value)\\\";\\n meth_desc=\\\" set the values of table cells in the row with value matching the 'value' arg of column matching 'column_name' arg\\\";\\n};\\n";
   };
   PatchRec @[2] {
    off=0;
    action=REPLACE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code";
    obj_path_idx=".programs[0].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=12;
    targ_name="DataColsFmArgs_DataColsFmArgsta_pecrowvalrowvar";
    insert_after=;
    insert_before=;
    new_obj_type="Comment";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nComment .projects[0].programs[0].prog_code[10] { };\\nComment .projects[0].programs[0].prog_code[10] {\\n name=\\\"Comment_Setlogfiles\\\";\\n desc=\\\"Set log files\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"// Set log files\\\";\\n};\\n";
   };
   PatchRec @[3] {
    off=0;
    action=REPLACE;
    obj_path_names=".programs[\\\"MasterStartup\\\"].prog_code";
    obj_path_idx=".programs[0].prog_code";
    obj_type="ProgEl_List";
    mbr_path=;
    targ_idx=16;
    targ_name="DataVarProg_DataFromtablerow_rogvar2var3var4";
    insert_after=;
    insert_before=;
    new_obj_type="Comment";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nComment .projects[0].programs[0].prog_code[14] { };\\nComment .projects[0].programs[0].prog_code[14] {\\n name=\\\"Comment_Callsubstartupprograms\\\";\\n desc=\\\"= Call sub-startup programs =\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"// = Call sub-startup programs =\\\";\\n};\\n";
   };
   PatchRec @[4] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"run_params\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[1][1].vars[1] { };\\nProgVar .projects[0].programs.gp[1][1].vars[1] {\\n name=\\\"run_params\\\";\\n var_type=T_Object;\\n object_type=ParamSet;\\n object_val=.projects[0].active_params.gp[0][0]$$<ParamSet,RunMaster>;\\n object_scope=.projects[0].active_params.gp[0]$$<ParamSet_Group,RunParams>;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"select parameters for controlling how network is run\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[5] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"][\\\"MasterTrain\\\"].vars[\\\"net_params\\\"]";
    obj_path_idx=".programs.gp[1][1].vars[2]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[1][1].vars[2] { };\\nProgVar .projects[0].programs.gp[1][1].vars[2] {\\n name=\\\"net_params\\\";\\n var_type=T_Object;\\n object_type=ParamSet;\\n object_val=.projects[0].active_params.gp[1][0]$$<ParamSet,NetMaster>;\\n object_scope=.projects[0].active_params.gp[1]$$<ParamSet_Group,NetParams>;\\n objs_ptr=0;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"select other parameters, typically network spec params -- independent of run params\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[6] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].prog_code[\\\"If_ifnetworktrialtrialsperepocheff\\\"].true_code[\\\"If_iftestinterval0n_chtestinterval0\\\"].true_code[\\\"ProgramCall_programname\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0].prog_code[5].true_code[1].true_code[0]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[0].programs.gp[1].gp[1][0].prog_code[5].true_code[1].true_code[0] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCall .projects[0].programs.gp[1].gp[1][0].prog_code[5].true_code[1].true_code[0] {\\n name=\\\"ProgramCall_TestAllnetwork\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"TestAll(network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"network\\\";\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n target=.projects[0].programs.gp[2][2]$$<Program,TestAll>;\\n targ_ld_init=\\\"*TestAll*\\\";\\n};\\n";
   };
   PatchRec @[7] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"ConfigProgs\\\"].gp[\\\"RunProgs\\\"][\\\"BasicRun\\\"].prog_code[\\\"If_ifnetworktrialtrialsperepocheff\\\"].true_code[\\\"If_iftestinterval0n_chtestinterval0\\\"].true_code[\\\"ProgramCall_programname\\\"]";
    obj_path_idx=".programs.gp[1].gp[1][0].prog_code[5].true_code[1].true_code[0]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[0].programs.gp[1].gp[1][0].prog_code[5].true_code[1].true_code[0] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCall .projects[0].programs.gp[1].gp[1][0].prog_code[5].true_code[1].true_code[0] {\\n name=\\\"ProgramCall_TestAllnetwork\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"TestAll(network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=LeabraNetwork;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=\\\"network\\\";\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n target=.projects[0].programs.gp[2][2]$$<Program,TestAll>;\\n targ_ld_init=\\\"*TestAll*\\\";\\n};\\n";
   };
   PatchRec @[8] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"TaskProgs\\\"][\\\"BasicTest\\\"].prog_code[\\\"ProgramCall_programname\\\"]";
    obj_path_idx=".programs.gp[2][1].prog_code[18]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[0].programs.gp[2][1].prog_code[18] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCall .projects[0].programs.gp[2][1].prog_code[18] {\\n name=\\\"ProgramCall_LeabraTestTrialMonitornetwork\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"LeabraTestTrialMonitor(network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=Network;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n target=.projects[0].programs.gp[4].gp[0][3]$$<Program,LeabraTestTrialMonitor>;\\n targ_ld_init=\\\"*LeabraTestTrialMonitor*\\\";\\n};\\n";
   };
   PatchRec @[9] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"TaskProgs\\\"][\\\"BasicTest\\\"].prog_code[\\\"ProgramCall_programname\\\"]";
    obj_path_idx=".programs.gp[2][1].prog_code[18]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[0].programs.gp[2][1].prog_code[18] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCall .projects[0].programs.gp[2][1].prog_code[18] {\\n name=\\\"ProgramCall_LeabraTestTrialMonitornetwork\\\";\\n desc=;\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"LeabraTestTrialMonitor(network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=Network;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n target=.projects[0].programs.gp[4].gp[0][3]$$<Program,LeabraTestTrialMonitor>;\\n targ_ld_init=\\\"*LeabraTestTrialMonitor*\\\";\\n};\\n";
   };
   PatchRec @[10] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"TaskProgs\\\"][\\\"TestAll\\\"].prog_code[\\\"ProgramCall_programname\\\"]";
    obj_path_idx=".programs.gp[2][2].prog_code[5]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[0].programs.gp[2][2].prog_code[5] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCall .projects[0].programs.gp[2][2].prog_code[5] {\\n name=\\\"ProgramCall_LeabraTestEpochMonitornetwork\\\";\\n desc=\\\"run program that records data from network and possibly other sources about the epoch\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"LeabraTestEpochMonitor(network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=Network;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n target=.projects[0].programs.gp[4].gp[0][4]$$<Program,LeabraTestEpochMonitor>;\\n targ_ld_init=\\\"*LeabraTestEpochMonitor*\\\";\\n};\\n";
   };
   PatchRec @[11] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"TaskProgs\\\"][\\\"TestAll\\\"].prog_code[\\\"ProgramCall_programname\\\"]";
    obj_path_idx=".programs.gp[2][2].prog_code[5]";
    obj_type="ProgramCall";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgramCall .projects[0].programs.gp[2][2].prog_code[5] { \\n ProgArg_List @.prog_args = [1] {\\n  ProgArg @[0] { };\\n };\\n};\\nProgramCall .projects[0].programs.gp[2][2].prog_code[5] {\\n name=\\\"ProgramCall_LeabraTestEpochMonitornetwork\\\";\\n desc=\\\"run program that records data from network and possibly other sources about the epoch\\\";\\n flags=CAN_REVERT_TO_CODE;\\n code_string=\\\"LeabraTestEpochMonitor(network)\\\";\\n prog_args {\\n  name=\\\"prog_args\\\";\\n  el_typ=ProgArg;\\n  el_def=0;\\n  ProgArg @[0] {\\n   arg_type=Network;\\n   type=\\\"LeabraNetwork*\\\";\\n   name=\\\"network\\\";\\n   required=1;\\n   def_val=;\\n   prev_expr=;\\n   expr {\\n    expr=\\\"network\\\";\\n   };\\n  };\\n };\\n target=.projects[0].programs.gp[4].gp[0][4]$$<Program,LeabraTestEpochMonitor>;\\n targ_ld_init=\\\"*LeabraTestEpochMonitor*\\\";\\n};\\n";
   };
   PatchRec @[12] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][4].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=0;
    targ_name="dmem_rnd_seed";
    insert_after=;
    insert_before="weights_file";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[4][4].vars[0] { };\\nProgVar .projects[0].programs.gp[4][4].vars[0] {\\n name=\\\"dmem_rnd_seed\\\";\\n var_type=T_Object;\\n object_type=RndSeed;\\n object_val=.projects[0].programs.gp[4][4].objs[0]$$<RndSeed,dmem_rnd_seed>;\\n object_scope=NULL;\\n objs_ptr=1;\\n flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[13] {
    off=0;
    action=INSERT;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars";
    obj_path_idx=".programs.gp[4][4].vars";
    obj_type="ProgVar_List";
    mbr_path=;
    targ_idx=0;
    targ_name="load_weights";
    insert_after="dmem_rnd_seed";
    insert_before="weights_file";
    new_obj_type="ProgVar";
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[0].programs.gp[4][4].vars[1] { };\\nProgVar .projects[0].programs.gp[4][4].vars[1] {\\n name=\\\"load_weights\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"load initial weights from a file (specified in weights_file)\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[14] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"load_weights\\\"]";
    obj_path_idx=".programs.gp[4][4].vars[1]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[1] { };\\nProgVar .projects[1].programs.gp[4][4].vars[1] {\\n name=\\\"load_weights\\\";\\n var_type=T_Bool;\\n bool_val=0;\\n object_scope=NULL;\\n flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=\\\"fm enviro\\\";\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[15] {
    off=0;
    action=DELETE;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"dmem_rnd_seed\\\"]";
    obj_path_idx=".programs.gp[4][4].vars[7]";
    obj_type="ProgVar";
    mbr_path=;
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="// ta_Dump File v3.0 -- code v8.0.8.0 rev10701\\nProgVar .projects[1].programs.gp[4][4].vars[7] { };\\nProgVar .projects[1].programs.gp[4][4].vars[7] {\\n name=\\\"dmem_rnd_seed\\\";\\n var_type=T_Object;\\n object_type=RndSeed;\\n object_val=.projects[1].programs.gp[4][4].objs[0]$$<RndSeed,dmem_rnd_seed>;\\n object_scope=NULL;\\n objs_ptr=1;\\n flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;\\n reference=0;\\n desc=;\\n init_from=NULL;\\n};\\n";
   };
   PatchRec @[16] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"lrs_step_epochs\\\"]";
    obj_path_idx=".programs.gp[4][4].vars[3]";
    obj_type="ProgVar";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL";
   };
   PatchRec @[17] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"][\\\"TrainStart\\\"].vars[\\\"lrs_bump_step\\\"]";
    obj_path_idx=".programs.gp[4][4].vars[5]";
    obj_type="ProgVar";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL";
   };
   PatchRec @[18] {
    off=0;
    action=ASSIGN;
    obj_path_names=".programs.gp[\\\"UtilProgs\\\"].gp[\\\"Monitors\\\"][\\\"SaveLogFiles\\\"].vars[\\\"tag\\\"]";
    obj_path_idx=".programs.gp[4].gp[0][0].vars[0]";
    obj_type="ProgVar";
    mbr_path="flags";
    targ_idx=0;
    targ_name=;
    insert_after=;
    insert_before=;
    new_obj_type=;
    value="CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL";
   };
  };
 };
};
