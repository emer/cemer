// ta_Dump File v2.0
LeabraProject .projects[0] { 
  Wizard_Group @.wizards = [1] {
    LeabraWizard @[0] { 
      taBase_List @.layer_cfg = [3] {
	LayerWizEl @[0] { };
	LayerWizEl @[1] { };
	LayerWizEl @[2] { };
      };
    };
  };

  DataTable_Group @.data = [0] {
    DataTable_Group @.gp[0] = [5] { 
      DataTable @[0] { 
	DataTableCols @.data = [3] {
	  String_Data @[0] { };
	  float_Data @[1] { };
	  float_Data @[2] { };
	};
      };
      DataTable @[1] { 
	DataTableCols @.data = [3] {
	  String_Data @[0] { };
	  float_Data @[1] { };
	  float_Data @[2] { };
	};
      };
      DataTable @[2] { 
	DataTableCols @.data = [2] {
	  String_Data @[0] { };
	  float_Data @[1] { };
	};
      };
      DataTable @[3] { 
	DataTableCols @.data = [3] {
	  String_Data @[0] { };
	  float_Data @[1] { };
	  float_Data @[2] { };
	};
      };
      DataTable @[4] { 
	DataTableCols @.data = [3] {
	  String_Data @[0] { };
	  float_Data @[1] { };
	  float_Data @[2] { };
	};
      };
    };
    DataTable_Group @.gp[1] = [2] { 
      DataTable @[0] { 
	DataTableCols @.data = [9] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[2] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  String_Data @[3] { };
	  String_Data @[4] { };
	  int_Data @[5] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	};
      };
      DataTable @[1] { 
	DataTableCols @.data = [9] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	  float_Data @[5] { };
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	};
      };
    };
    DataTable_Group @.gp[2] { };
  };

  Program_Group @.programs = [1] {
    Program @[0] { 
      ProgEl_List @.prog_code = [1] {
	UserScript @[0] { };
      };
    };
    Program_Group @.gp[0] = [10] { 
      Program @[0] { 
	ProgVar_List @.args = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  NetCounterInit @[0] { };
	  WhileLoop @[1] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	    };
	  };
	};
      };
      Program @[1] { 
	ProgObjList @.objs = [2] {
	  RndSeed @[0] { };
	  TimeUsed @[1] { };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [6] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	};

	ProgEl_List @.init_code = [4] {
	  MethodCall @[0] { };
	  NetCounterInit @[1] { };
	  MethodCall @[2] { };
	  MethodCall @[3] { };
	};

	ProgEl_List @.prog_code = [6] {
	  MethodCall @[0] { };
	  NetCounterInit @[1] { };
	  UserScript @[2] { };
	  MethodCall @[3] { };
	  WhileLoop @[4] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfBreak @[2] { };
	    };
	  };
	  MethodCall @[5] { };
	};
      };
      Program @[2] { 
	ProgObjList @.objs = [1] {
	  TimeUsed @[0] { };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [8] {
	  NetCounterInit @[0] { };
	  ProgramCall @[1] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[2] { };
	  BasicDataLoop @[3] { 
	    ProgEl_List @.loop_code = [3] {
	      UserScript @[0] { };
	      ProgramCall @[1] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      IfElse @[2] { 
		ProgEl_List @.true_code = [1] {
		  MethodCall @[0] { };
		};
	      };
	    };
	  };
	  IfElse @[4] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  MethodCall @[5] { };
	  MethodCall @[6] { };
	  ProgramCall @[7] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};
      };
      Program @[3] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [6] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  WhileLoop @[2] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      MethodCall @[2] { };
	    };
	  };
	  MethodCall @[3] { };
	  ProgramCall @[4] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  NetUpdateView @[5] { };
	};
      };
      Program @[4] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [10] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  ProgramCall @[2] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[3] { };
	  UserScript @[4] { };
	  WhileLoop @[5] { 
	    ProgEl_List @.loop_code = [4] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [1] {
		  ProgArg @[0] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfContinue @[2] { };
	      IfBreak @[3] { };
	    };
	  };
	  MethodCall @[6] { };
	  IfElse @[7] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  IfElse @[8] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  NetUpdateView @[9] { };
	};
      };
      Program @[5] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  NetUpdateView @[1] { };
	};
      };
      Program @[6] { 
	ProgObjList @.objs = [1] {
	  LayerWriter @[0] { 
	    LayerDataEl_List @.layer_data = [3] {
	      LayerWriterEl @[0] { };
	      LayerWriterEl @[1] { };
	      LayerWriterEl @[2] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [2] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	};

	ProgEl_List @.prog_code = [1] {
	  MethodCall @[0] { };
	};
      };
      Program @[7] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [9] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [4] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  MethodCall @[2] { };
	  MethodCall @[3] { };
	};

	ProgEl_List @.prog_code = [4] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  MethodCall @[2] { };
	  MethodCall @[3] { };
	};
      };
      Program @[8] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [9] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [3] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  MethodCall @[2] { };
	};

	ProgEl_List @.prog_code = [4] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  UserScript @[2] { };
	  MethodCall @[3] { };
	};
      };
      Program @[9] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [4] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	};

	ProgEl_List @.prog_code = [5] {
	  MiscCall @[0] { };
	  MiscCall @[1] { };
	  AssignExpr @[2] { };
	  MethodCall @[3] { };
	  MethodCall @[4] { };
	};
      };
    };
  };

  DataViewer_List @.viewers = [1] {
    MainWindowViewer @[0] { 
      ToolBar_List @.toolbars = [1] {
	ToolBar @[0] { };
      };

      FrameViewer_List @.frames = [3] {
	tabBrowseViewer @[0] { };
	PanelViewer @[1] { };
	T3DataViewer @[2] { 
	  T3DataViewFrame_List @.frames = [1] {
	    T3DataViewFrame @[0] { 
	      T3DataView_List @.children = [2] {
		NetView @[0] { 
		  T3DataView_List @.children = [6] {
		    LayerView @[0] { };
		    LayerView @[1] { };
		    LayerView @[2] { };
		    PrjnView @[3] { };
		    PrjnView @[4] { };
		    PrjnView @[5] { };
		  };

		  ScaleRange_List @.scale_ranges = [2] {
		    ScaleRange @[0] { };
		    ScaleRange @[1] { };
		  };
		};
		GridTableView @[1] { 
	 GridTableViewSpec @.view_spec { 
		    DataColViewSpecs @.col_specs = [9] {
		      GridColViewSpec @[0] { };
		      GridColViewSpec @[1] { };
		      GridColViewSpec @[2] { };
		      GridColViewSpec @[3] { };
		      GridColViewSpec @[4] { };
		      GridColViewSpec @[5] { };
		      GridColViewSpec @[6] { };
		      GridColViewSpec @[7] { };
		      GridColViewSpec @[8] { };
		    };
	 };

		  DataColViewSpecs @.col_specs = [9] {
		    GridColViewSpec @[0] { };
		    GridColViewSpec @[1] { };
		    GridColViewSpec @[2] { };
		    GridColViewSpec @[3] { };
		    GridColViewSpec @[4] { };
		    GridColViewSpec @[5] { };
		    GridColViewSpec @[6] { };
		    GridColViewSpec @[7] { };
		    GridColViewSpec @[8] { };
		  };
		};
	      };
	    };
	  };
	};
      };

      DockViewer_List @.docks = [1] {
	ToolBoxDockViewer @[0] { };
      };
    };
  };

  Network_Group @.networks = [1] {
    LeabraNetwork @[0] { 
      BaseSpec_Group @.specs = [5] {
	LeabraUnitSpec @[0] { };
	LeabraConSpec @[1] { };
	LeabraLayerSpec @[2] { 
	  BaseSpec_Group @.children = [3] {
	    LeabraLayerSpec @[0] { };
	    LeabraLayerSpec @[1] { };
	    LeabraLayerSpec @[2] { };
	  };
	};
	FullPrjnSpec @[3] { };
	LeabraBiasSpec @[4] { };
      };

      Layer_Group @.layers = [3] {
	LeabraLayer @[0] { 
	  Unit_Group @.units = [25] {
	    LeabraUnit @[0] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[1] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[2] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[3] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[4] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[5] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[6] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[7] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[8] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[9] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[10] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[11] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[12] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[13] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[14] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[15] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[16] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[17] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[18] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[19] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[20] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[21] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[22] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[23] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[24] { 
	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	  };
	};
	LeabraLayer @[1] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [25] {
	    LeabraUnit @[0] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[1] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[2] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[3] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[4] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[5] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[6] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[7] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[8] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[9] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[10] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[11] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[12] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[13] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[14] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[15] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[16] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[17] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[18] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[19] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[20] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[21] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[22] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[23] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[24] { 
	      RecvCons_List @.recv = [2] {
		LeabraRecvCons @[0] { };
		LeabraRecvCons @[1] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	  };
	};
	LeabraLayer @[2] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [10] {
	    LeabraUnit @[0] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[1] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[2] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[3] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[4] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[5] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[6] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[7] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[8] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	    LeabraUnit @[9] { 
	      RecvCons_List @.recv = [1] {
		LeabraRecvCons @[0] { };
	      };

	      SendCons_List @.send = [1] {
		LeabraSendCons @[0] { };
	      };
	    };
	  };
	};
      };
    };
  };

  RGBA_List @.view_colors = [20] {
    RGBA @[0] { };
    RGBA @[1] { };
    RGBA @[2] { };
    RGBA @[3] { };
    RGBA @[4] { };
    RGBA @[5] { };
    RGBA @[6] { };
    RGBA @[7] { };
    RGBA @[8] { };
    RGBA @[9] { };
    RGBA @[10] { };
    RGBA @[11] { };
    RGBA @[12] { };
    RGBA @[13] { };
    RGBA @[14] { };
    RGBA @[15] { };
    RGBA @[16] { };
    RGBA @[17] { };
    RGBA @[18] { };
    RGBA @[19] { };
  };
};
LeabraProject .projects[0] {
 name="LeabraProject_0";
 desc="


";
 templates {
  name=;
  el_typ=taBase;
  el_def=0;
 };
 wizards {
  name=;
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   name="LeabraWizard_1";
   auto_open=0;
   n_layers=3;
   layer_cfg {
    name=;
    el_typ=LayerWizEl;
    el_def=0;
    LayerWizEl @[0] {
     name="Input";
     n_units=25;
     io_type=INPUT;
    };
    LayerWizEl @[1] {
     name="Hidden";
     n_units=25;
     io_type=HIDDEN;
    };
    LayerWizEl @[2] {
     name="Output";
     n_units=25;
     io_type=OUTPUT;
    };
   };
   connectivity=BIDIRECTIONAL;
   event_type=Event;
  };
 };
 edits {
  name=;
  el_typ=SelectEdit;
  el_def=0;
 };
 data {
  name=;
  el_typ=DataTable;
  el_def=0;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="lines_5x5x2_categs";
    desc=;
    save_data=1;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [45] "V0_V1";"V0_V2";"V0_V3";"V0_V4";"V0_H0";"V0_H1";"V0_H2";"V0_H3";"V0_H4";"V1_V2";"V1_V3";"V1_V4";"V1_H0";"V1_H1";"V1_H2";"V1_H3";"V1_H4";"V2_V3";"V2_V4";"V2_H0";"V2_H1";"V2_H2";"V2_H3";"V2_H4";"V3_V4";"V3_H0";"V3_H1";"V3_H2";"V3_H3";"V3_H4";"V4_H0";"V4_H1";"V4_H2";"V4_H3";"V4_H4";"H0_H1";"H0_H2";"H0_H3";"H0_H4";"H1_H2";"H1_H3";"H1_H4";"H2_H3";"H2_H4";"H3_H4";      };
     };
     float_Data @[1] {
      name="Input";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;5;      };
      ar{ [5 5 45] 1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;1;1;1;1;1;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;1;1;1;1;1;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;1;1;1;1;1;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;1;1;1;1;1;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;1;1;1;1;1;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;1;1;1;1;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;1;1;1;1;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;1;1;1;1;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;1;1;1;1;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;1;1;1;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;1;1;1;1;1;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;1;1;1;1;1;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;1;1;1;1;1;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;1;1;1;1;1;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;1;1;1;1;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;      };
     };
     float_Data @[2] {
      name="Output";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;2;      };
      ar{ [5 2 45] 1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;1;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;1;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;1;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;1;1;      };
     };
    };
   };
   DataTable @[1] {
    name="lines_5x5x1_categs";
    desc=;
    save_data=1;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [10] "V0";"V1";"V2";"V3";"V4";"H0";"H1";"H2";"H3";"H4";      };
     };
     float_Data @[1] {
      name="Input";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;5;      };
      ar{ [5 5 10] 1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;      };
     };
     float_Data @[2] {
      name="Output";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;2;      };
      ar{ [5 2 10] 1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;      };
     };
    };
   };
   DataTable @[2] {
    name="MonitorEnv";
    desc=;
    save_data=1;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [0]       };
     };
     float_Data @[1] {
      name="Input";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;5;      };
      ar{ [5 5 0]       };
     };
    };
   };
   DataTable @[3] {
    name="l5c_g10_2.trn";
    desc=;
    save_data=1;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [35] "V0_V1";"V0_V2";"V0_H0";"V0_H1";"V0_H2";"V1_V2";"V1_V3";"V1_V4";"V1_H0";"V1_H2";"V1_H3";"V2_V3";"V2_V4";"V2_H0";"V2_H1";"V2_H2";"V2_H3";"V3_V4";"V3_H0";"V3_H1";"V3_H3";"V3_H4";"V4_H1";"V4_H2";"V4_H3";"V4_H4";"H0_H1";"H0_H2";"H0_H3";"H0_H4";"H1_H2";"H1_H4";"H2_H3";"H2_H4";"H3_H4";      };
     };
     float_Data @[1] {
      name="Input";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;5;      };
      ar{ [5 5 35] 1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;1;1;1;1;1;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;1;1;1;1;1;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;1;1;1;1;1;0;1;0;0;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;1;1;1;1;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;1;1;1;1;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;1;1;1;1;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;1;1;1;1;1;0;0;1;0;0;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;0;0;0;1;1;1;1;1;1;1;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;1;1;1;1;1;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;1;1;1;1;1;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;1;1;1;1;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;      };
     };
     float_Data @[2] {
      name="Output";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;2;      };
      ar{ [5 2 35] 1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;1;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;1;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;1;1;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;1;1;      };
     };
    };
   };
   DataTable @[4] {
    name="l5c_g10_2.tst";
    desc=;
    save_data=1;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [10] "H1_H3";"V4_H0";"V3_H2";"V2_H4";"V1_H4";"V1_H1";"V0_H4";"V0_H3";"V0_V4";"V0_V3";      };
     };
     float_Data @[1] {
      name="Input";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;5;      };
      ar{ [5 5 10] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
     float_Data @[2] {
      name="Output";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;2;      };
      ar{ [5 2 10] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
    };
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    save_data=1;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] 9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;      };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="trial";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] 0;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;      };
     };
     String_Data @[3] {
      name="trial_name";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] "H0_H2";"V2_V4";"V4_H4";"V1_V3";"V1_H2";"V2_H3";"V2_H1";"H2_H4";"V3_V4";"H1_H2";"H2_H3";"V2_H0";"V4_H1";"V4_H2";"V0_V1";"V3_H0";"V2_V3";"V0_V2";"V0_H0";      };
     };
     String_Data @[4] {
      name="group_name";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] ;;;;;;;;;;;;;;;;;;;      };
     };
     int_Data @[5] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="phase_no";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] 2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;      };
     };
     float_Data @[6] {
      name="minus_cycles";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] 27;37;30;25;28;33;26;30;33;28;35;27;27;26;29;26;31;31;26;      };
     };
     float_Data @[7] {
      name="sse";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
     float_Data @[8] {
      name="ext_rew";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [19] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
    };
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    save_data=1;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 0;0;0;0;0;0;0;0;0;      };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 0;1;2;3;4;5;6;7;8;      };
     };
     float_Data @[2] {
      name="avg_sse";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 2.1564801;1.3557094;0.67111766;0.3582584;0.19822153;0.2296593;0.049810547;0;0;      };
     };
     float_Data @[3] {
      name="cnt_err";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 35;28;16;11;6;6;2;0;0;      };
     };
     float_Data @[4] {
      name="avg_ext_rew";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 0;0;0;0;0;0;0;0;0;      };
     };
     float_Data @[5] {
      name="avg_cycles";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 41.971428;41.114285;39.285713;36.742859;34.771427;34.42857;31.485714;29.657143;28.971428;      };
     };
     float_Data @[6] {
      name="Hidden_Fm_Input_r_wt";
      pin=0;
      is_matrix=1;
      cell_geom{ 5;5;5;5;      };
      ar{ [5 5 5 5 9] 0.33520606;0.18545589;0.35541692;0.25596777;0.2323094;0.13484666;0.23085213;0.3762078;0.38477632;0.31103575;0.17700817;0.2847155;0.086743057;0.25193131;0.44815597;0.28560793;0.17485701;0.20667322;0.31141868;0.43399712;0.24655204;0.10106011;0.31749937;0.21133;0.32417879;0.1161236;0.23856086;0.1568034;0.23948051;0.20970877;0.2768403;0.32194209;0.18299586;0.18400393;0.32674101;0.10108227;0.36197472;0.40008807;0.3106333;0.43562987;0.095584802;0.26107123;0.27745995;0.073985398;0.13539921;0.3176955;0.46625298;0.12809622;0.30177644;0.079429202;0.19362018;0.20381397;0.15387337;0.31248721;0.50706768;0.30079785;0.21431407;0.11896117;0.22918482;0.12024307;0.46636641;0.088981323;0.34628862;0.36770576;0.41628852;0.43466461;0.2611635;0.25948316;0.22084957;0.4143455;0.32935327;0.37435573;0.22190243;0.10759789;0.49609113;0.46441317;0.4055663;0.43392035;0.070216201;0.22309156;0.15907392;0.16965277;0.22578099;0.15815127;0.1167736;0.27289027;0.23785859;0.26716289;0.37305641;0.37418914;0.26741508;0.3220312;0.23474737;0.35946187;0.051170092;0.33757469;0.42402098;0.076572217;0.12659493;0.24425595;0.40813425;0.28621778;0.36376622;0.33561853;0.14667694;0.16717476;0.27934557;0.13361096;0.31289265;0.31074291;0.28191543;0.2076662;0.35435408;0.20184916;0.21381466;0.33839276;0.37651518;0.3730534;0.31416857;0.32345086;0.36469162;0.060344439;0.30398268;0.074298039;0.39883614;0.36276066;0.40281186;0.43054223;0.10557082;0.44033021;0.42652115;0.082656592;0.13807848;0.31612474;0.10475299;0.1882592;0.17680387;0.26589447;0.0781326;0.13140187;0.233384;0.26658398;0.11307617;0.23911949;0.35652521;0.23194732;0.33933806;0.24837919;0.1412909;0.25379595;0.16548289;0.12941559;0.16116437;0.19833274;0.067680784;0.28955597;0.15943396;0.4091002;0.15980808;0.18283382;0.19896267;0.26426339;0.16262344;0.25360468;0.056486629;0.3405318;0.24626702;0.33808115;0.11585549;0.36117131;0.40502614;0.43054861;0.46443689;0.45767596;0.15141453;0.27469665;0.21870105;0.10837522;0.12588969;0.1560698;0.27376619;0.049516894;0.22593752;0.42804691;0.27870923;0.39599204;0.1608431;0.19054927;0.17041899;0.17189516;0.16649565;0.20461845;0.16663054;0.21868937;0.32072577;0.17387471;0.12508719;0.46890691;0.21053207;0.27395323;0.16296929;0.38358086;0.23608999;0.27837887;0.22350948;0.38808435;0.38234156;0.16512306;0.063848607;0.082343429;0.17309962;0.37745178;0.37406805;0.058661964;0.084951669;0.29919273;0.11561452;0.067990571;0.12286447;0.1563423;0.38042125;0.16101076;0.3297978;0.35224453;0.31803462;0.4072412;0.12440144;0.40249625;0.26798573;0.15374471;0.21319506;0.46066603;0.094381794;0.088645473;0.23981974;0.35475478;0.25580311;0.13393067;0.27553186;0.20295015;0.15776528;0.35477373;0.055711836;0.10253739;0.35681921;0.40624243;0.45706525;0.23801818;0.29730007;0.21467495;0.061985143;0.21768086;0.10814714;0.15449114;0.35689944;0.24024938;0.38065651;0.39173615;0.26588356;0.052284636;0.36098212;0.26821569;0.17622013;0.19599818;0.31424424;0.45379427;0.15264331;0.42940342;0.43813458;0.4280138;0.14948754;0.30776978;0.38200051;0.37038308;0.058630545;0.08767198;0.086891189;0.29204756;0.2442081;0.32420209;0.22912553;0.13417864;0.056011993;0.41976994;0.29548773;0.090458378;0.38838753;0.41570443;0.22875097;0.19680649;0.31329021;0.30974334;0.3487047;0.43920746;0.39037803;0.20192188;0.070823468;0.44089973;0.067756586;0.21043399;0.15206479;0.26220316;0.36233345;0.25743797;0.41571179;0.22399171;0.40107808;0.15894203;0.12552479;0.28969136;0.33991545;0.25010556;0.33346325;0.20697083;0.24261506;0.38595483;0.17817065;0.34744576;0.067750305;0.2669383;0.32280734;0.14720111;0.13528793;0.30654907;0.29211733;0.30835906;0.23391593;0.42020065;0.35842544;0.36914992;0.41343042;0.12868775;0.28983721;0.2916564;0.16043369;0.47225687;0.12439729;0.18745463;0.37079501;0.18628632;0.35155267;0.17255294;0.16612536;0.34849757;0.27746421;0.36143687;0.16704537;0.30214557;0.37402469;0.39948648;0.20972247;0.27180362;0.3021377;0.046095669;0.18986;0.34265539;0.13303448;0.088655606;0.25658017;0.29265976;0.25781608;0.25686002;0.35789177;0.095846236;0.11033299;0.1893263;0.19346094;0.35638076;0.18338875;0.1862032;0.071092367;0.2476196;0.29657283;0.1976476;0.20220481;0.28925946;0.37030098;0.3661902;0.3474125;0.27368155;0.25123474;0.18141252;0.089614585;0.15748553;0.35589528;0.17346106;0.093738176;0.36015886;0.09806858;0.34362677;0.32421544;0.11393122;0.099117897;0.29103407;0.22215648;0.25262731;0.34517613;0.37129417;0.31798482;0.065890178;0.38587478;0.17302327;0.27508277;0.1021151;0.28427786;0.066955142;0.17647396;0.28844464;0.36688673;0.3445445;0.047519617;0.30657706;0.27968052;0.29193163;0.28550181;0.064158045;0.27066198;0.23157468;0.13886556;0.3004452;0.14292721;0.10025642;0.38004804;0.4039236;0.043388419;0.20705989;0.1276273;0.14207371;0.25822034;0.34470275;0.29463103;0.23348853;0.21396624;0.38413951;0.30559686;0.26014677;0.38270336;0.2884185;0.12664683;0.41341504;0.37287891;0.060250588;0.11895606;0.43825999;0.24647132;0.27661481;0.1958856;0.41096005;0.30511582;0.090233922;0.28882378;0.11718521;0.067252487;0.1372263;0.099840276;0.24481015;0.19581418;0.43673316;0.34074229;0.21969615;0.29150772;0.19661915;0.29289857;0.27675655;0.34358534;0.35835806;0.26749173;0.095578238;0.2574448;0.26551193;0.21303856;0.14747827;0.09676373;0.27347115;0.21697593;0.22275853;0.29032409;0.086166337;0.059458494;0.12806003;0.1254579;0.29501912;0.18763629;0.4097352;0.28564093;0.20566277;0.44211474;0.40997851;0.37751022;0.20900129;0.14671378;0.30748123;0.080693036;0.39290348;0.23864089;0.32784516;0.1564278;0.28910956;0.10495839;0.068651684;0.17487359;0.2241054;0.19011405;0.23032965;0.29004818;0.43623668;0.36442202;0.21678692;0.10292794;0.19125868;0.31955764;0.070829272;0.37873796;0.27213579;0.47719476;0.36051267;0.046850055;0.33207598;0.26616672;0.31885952;0.21347879;0.054546468;0.40904796;0.35829201;0.076050214;0.19197942;0.12394191;0.18909176;0.36963311;0.30829003;0.35060865;0.37027183;0.091938555;0.34671512;0.18468805;0.19014169;0.13401219;0.3769649;0.20286407;0.20372006;0.39220101;0.1491372;0.057682775;0.14831336;0.10829175;0.13439223;0.11761978;0.10157536;0.33198592;0.27793166;0.21775886;0.34052664;0.14790961;0.41158581;0.35856888;0.24012937;0.3807359;0.28677967;0.057666998;0.2276047;0.16952541;0.40833294;0.21135814;0.22388823;0.16088367;0.16217126;0.37837061;0.27751502;0.32411432;0.054051444;0.30118439;0.067624561;0.32639751;0.37242728;0.16665262;0.085376538;0.085815534;0.12496011;0.36822197;0.085992441;0.31724867;0.19918187;0.048326164;0.098214909;0.11572601;0.28942722;0.37758312;0.20621789;0.27394903;0.30972868;0.44612768;0.075958133;0.17582369;0.41181538;0.18933047;0.1499753;0.44351363;0.28872281;0.31425506;0.081332378;0.41160887;0.047488768;0.35187024;0.061723195;0.1336886;0.40472052;0.093441412;0.25173318;0.28708106;0.081915587;0.25481853;0.36296192;0.33833623;0.10967884;0.30438071;0.17587294;0.29030529;0.38232538;0.31049916;0.049700815;0.47371367;0.1782243;0.37932578;0.072336175;0.18315782;0.29418012;0.17504436;0.32501918;0.22175978;0.2450318;0.15293542;0.27054539;0.41036931;0.38463366;0.38557908;0.16213278;0.28068337;0.084291689;0.21971279;0.47277486;0.25412753;0.16788773;0.19139311;0.27971229;0.44965878;0.25630039;0.11821411;0.34051791;0.21056424;0.36666504;0.11370855;0.2194733;0.14275683;0.23295143;0.20362154;0.26214251;0.28757972;0.16057888;0.17207614;0.3111043;0.10426161;0.34465161;0.38273799;0.31374025;0.42571461;0.093692653;0.24074282;0.25484991;0.071950592;0.13189456;0.30287012;0.42528513;0.11264026;0.2851992;0.076364934;0.18808076;0.1772777;0.1325094;0.27235171;0.47265166;0.24512263;0.16348697;0.089091152;0.17794308;0.099172741;0.43921176;0.086424679;0.3246074;0.35311648;0.40963265;0.42915374;0.25394234;0.24509317;0.21263257;0.40825498;0.31324065;0.34079283;0.19972202;0.097852848;0.47002858;0.49618149;0.4222984;0.41157639;0.074433401;0.24238205;0.18997757;0.20607325;0.22392979;0.18243949;0.14404254;0.2748895;0.22782049;0.22906952;0.34163973;0.35572821;0.29199314;0.33143285;0.20174247;0.35366118;0.054991219;0.3559818;0.42462593;0.063321009;0.12091846;0.24716905;0.38594458;0.26679248;0.34834221;0.33306098;0.13999595;0.16250598;0.26476941;0.12899435;0.31525689;0.30296865;0.2595934;0.18890068;0.33337653;0.1974446;0.20039713;0.3056069;0.3472991;0.34049729;0.28506461;0.29755908;0.34425899;0.055970889;0.29074147;0.075290121;0.38442197;0.3287231;0.40364656;0.42393532;0.11775064;0.46515897;0.35986608;0.075433686;0.12299962;0.31140158;0.10196566;0.15339343;0.15121178;0.23190081;0.07255166;0.11992142;0.18970999;0.24424429;0.10016821;0.23381893;0.34610909;0.18642861;0.30864596;0.21918625;0.13686036;0.24357511;0.15948631;0.13562502;0.16353752;0.20580985;0.066168532;0.26074782;0.15128885;0.38089564;0.15577793;0.16109221;0.18570282;0.26566076;0.15665627;0.25431019;0.053155623;0.32426059;0.25357825;0.33250636;0.11598374;0.34556827;0.38421613;0.43318024;0.45555389;0.44966415;0.15411572;0.25264189;0.19930072;0.090216078;0.12332401;0.14078712;0.24269328;0.043237187;0.18292622;0.40662625;0.24675073;0.38972566;0.1587884;0.17303729;0.17897119;0.16713379;0.19051561;0.23098695;0.17481832;0.23987742;0.34630802;0.20325463;0.14801447;0.47980532;0.23428698;0.30931237;0.16052222;0.38292691;0.23581694;0.27701899;0.22310813;0.39483908;0.38916323;0.17008121;0.066411883;0.085475355;0.17043504;0.37667012;0.37352672;0.058312628;0.084753662;0.29505405;0.11533036;0.067890257;0.12214392;0.15598911;0.38807419;0.16852929;0.34129015;0.3627713;0.32908839;0.41583213;0.13980436;0.40127572;0.27488118;0.15699507;0.21371073;0.48350126;0.092666507;0.089700453;0.23812124;0.35220361;0.26920456;0.12888163;0.27249548;0.1983716;0.16630851;0.37058949;0.057678312;0.10836446;0.36404532;0.41416445;0.48611853;0.23801948;0.30321842;0.21896064;0.058166862;0.23392029;0.11482004;0.15048759;0.37406939;0.22280359;0.39549935;0.39762038;0.25527212;0.056669366;0.33851725;0.28331557;0.18254058;0.1888182;0.32800341;0.43913639;0.16902295;0.4434489;0.43255791;0.4496944;0.13713995;0.32051933;0.3858856;0.35478485;0.063069716;0.086497188;0.084382109;0.26695514;0.22314882;0.30746296;0.22389787;0.12900536;0.050433427;0.38615793;0.27980205;0.097265892;0.40057749;0.40035525;0.22471604;0.19657008;0.31068456;0.305316;0.32063287;0.42009926;0.36971653;0.2007608;0.069421306;0.41042468;0.062041607;0.20045729;0.15574801;0.29571328;0.37937143;0.27297211;0.437608;0.21915984;0.40751094;0.15753824;0.1184871;0.28288954;0.30603561;0.23341164;0.31311801;0.1694404;0.21362847;0.36838514;0.18328618;0.3378256;0.061017755;0.2586638;0.34149319;0.17502744;0.15359421;0.31148803;0.31605929;0.30254266;0.22767945;0.41159946;0.34483784;0.37651822;0.36511344;0.11307517;0.2594372;0.26743266;0.15375948;0.47291335;0.12721926;0.1898509;0.38640276;0.20135573;0.3543182;0.17223841;0.16837458;0.36030814;0.29025397;0.35463151;0.1623151;0.29631048;0.3737464;0.38778916;0.21134865;0.26695654;0.31049579;0.046090238;0.18634599;0.35013723;0.13369516;0.093946613;0.26011622;0.29367438;0.26139396;0.25410259;0.3691076;0.096400514;0.10909414;0.18448742;0.18345334;0.35188583;0.17614539;0.17653674;0.069381699;0.23464951;0.29490897;0.1897198;0.19134848;0.29462653;0.39856458;0.41191733;0.35988292;0.29540756;0.2482502;0.18562253;0.10103742;0.1614942;0.34985423;0.17764558;0.099321157;0.39355823;0.10442533;0.34388584;0.33424211;0.12420776;0.11787279;0.30542779;0.23089705;0.23784639;0.33299395;0.37620577;0.32488266;0.063046612;0.38672888;0.18344215;0.3042694;0.12214131;0.27310219;0.060465194;0.16804816;0.29529342;0.38691539;0.30045718;0.0456824;0.30555111;0.30258861;0.32852978;0.26104951;0.062577471;0.27343115;0.25461897;0.16591349;0.27819306;0.12695782;0.094718158;0.38001648;0.44264382;0.036562894;0.18481359;0.11847125;0.12351975;0.26383469;0.33594206;0.29881352;0.23696736;0.20464635;0.40932339;0.3022224;0.22981595;0.35496491;0.25033748;0.13086347;0.41504744;0.37270051;0.066910282;0.12014516;0.46159288;0.2699838;0.30317906;0.22799861;0.43168968;0.34782672;0.11492771;0.29091492;0.11660938;0.067234471;0.13644846;0.1022251;0.25211778;0.20170464;0.44587088;0.34858742;0.22612822;0.29365116;0.19573125;0.29260051;0.27538225;0.34861872;0.36062655;0.26631054;0.095526278;0.25611159;0.27002132;0.21482114;0.14676264;0.096711688;0.27206519;0.22102462;0.23027796;0.27950171;0.085855499;0.05434816;0.12639332;0.13562754;0.29201806;0.19290896;0.39031416;0.29014751;0.22815226;0.45717132;0.43925917;0.38231826;0.23106255;0.16096982;0.29880869;0.085459061;0.37887028;0.24676296;0.33504009;0.15001242;0.28594002;0.095208675;0.067293353;0.17325357;0.21258995;0.20952772;0.21410492;0.28929362;0.43309569;0.35094762;0.24191825;0.096277677;0.19668432;0.35466868;0.082365505;0.44753087;0.28422916;0.49525806;0.35419992;0.045429215;0.35669157;0.2403591;0.31631279;0.20543981;0.051358648;0.42563829;0.31987256;0.076892368;0.2055008;0.1254344;0.18862386;0.36830488;0.30705389;0.36922652;0.38881394;0.098254256;0.36094272;0.19495778;0.20360814;0.13562469;0.3761805;0.20205924;0.20286824;0.41103253;0.15083019;0.0575579;0.14767253;0.10778984;0.14497286;0.11906206;0.10133526;0.33074191;0.276788;0.19535452;0.31783137;0.14689144;0.45499438;0.33275104;0.19027533;0.3193638;0.24821563;0.061316583;0.18334612;0.15215276;0.37874675;0.20817822;0.26182309;0.14991108;0.14890532;0.36017171;0.27964184;0.3624084;0.054181714;0.24676296;0.060447555;0.29705819;0.37890658;0.15278038;0.088941224;0.092881732;0.11187353;0.38519269;0.079306915;0.34572482;0.22842392;0.048464082;0.11639956;0.1184111;0.2899293;0.38187227;0.18304616;0.28803238;0.28539076;0.44690022;0.083690621;0.15945229;0.40467721;0.17692906;0.15064642;0.44189441;0.25507107;0.34070364;0.073087618;0.42552125;0.053184826;0.35010567;0.06865488;0.14553119;0.41531259;0.091859877;0.2262587;0.28275049;0.080514349;0.24761133;0.32992196;0.30084214;0.097841896;0.27503532;0.18475424;0.28631732;0.34833503;0.30634648;0.048918888;0.49807721;0.18431717;0.35790783;0.075608142;0.18931741;0.28357098;0.17126043;0.31726891;0.21973865;0.25119853;0.16327764;0.28719473;0.42499769;0.40599853;0.41540778;0.15445442;0.27210799;0.081782788;0.21839309;0.47373345;0.23987114;0.16062069;0.18454704;0.27465644;0.44717225;0.26056334;0.12406264;0.34850892;0.22392131;0.38773456;0.11194319;0.22736079;0.1405496;0.2378975;0.20200874;0.26051721;0.29885364;0.15960574;0.17782466;0.31088179;0.10854004;0.36496451;0.39173305;0.33214739;0.43403977;0.0922295;0.24903966;0.25120687;0.074304499;0.13092676;0.30167651;0.4383654;0.11259186;0.29344121;0.077891119;0.18233843;0.17327324;0.13708103;0.25842997;0.48936683;0.22352043;0.1502091;0.086987339;0.15976401;0.10077504;0.44198859;0.091176949;0.34577903;0.35815632;0.44985855;0.4282223;0.25479931;0.25804928;0.20939204;0.43878481;0.32226005;0.35242447;0.21967994;0.10386375;0.50873119;0.51036131;0.42720485;0.39867222;0.077410713;0.25121522;0.19865443;0.22255519;0.22685277;0.2050406;0.15573433;0.27903226;0.22453021;0.21086597;0.34429884;0.35028511;0.29600567;0.32303762;0.1841622;0.35450029;0.05409224;0.35305014;0.40798613;0.056393709;0.12007893;0.23733094;0.37198415;0.26344863;0.34812778;0.32872406;0.13068829;0.15638325;0.25611132;0.12752861;0.30492848;0.27995148;0.25014526;0.18737575;0.33469898;0.19560792;0.1884591;0.31504491;0.36523929;0.34418511;0.3018797;0.30026621;0.33495107;0.056149729;0.29460725;0.075387128;0.36738285;0.34787026;0.44143397;0.44757375;0.13658953;0.50187421;0.34030536;0.075214103;0.12730387;0.30828086;0.099941455;0.14308901;0.14943267;0.23517276;0.071580246;0.11675252;0.18099934;0.24495135;0.10424488;0.23500395;0.34389266;0.17645396;0.30837008;0.2254595;0.13692306;0.24052474;0.16827376;0.1439224;0.18159112;0.2123372;0.071527474;0.24970983;0.14455159;0.38138354;0.14955075;0.15460914;0.18317549;0.26249513;0.16198614;0.24665865;0.053100239;0.32766423;0.25709948;0.34277654;0.1163359;0.3506496;0.40354669;0.45339715;0.4913885;0.46096548;0.16661245;0.24567027;0.19371186;0.087497085;0.11854908;0.14862247;0.22945736;0.04085096;0.17258579;0.3936525;0.25052691;0.38766691;0.15838535;0.1724183;0.17658104;0.17962413;0.19085087;0.23127049;0.17518614;0.23551615;0.36633149;0.21780238;0.16007675;0.49852103;0.24527729;0.32874182;0.15870488;0.38281021;0.23592864;0.27512661;0.22361305;0.40335384;0.39765909;0.17630664;0.069731399;0.089722618;0.16810587;0.37593874;0.37293309;0.057762444;0.084829748;0.29101306;0.11489988;0.067676097;0.12077489;0.15580596;0.40084782;0.17940344;0.35734648;0.37672377;0.34474033;0.42575282;0.15157631;0.40724364;0.28222814;0.16377884;0.21290089;0.49530971;0.091755927;0.08942169;0.23778374;0.3494612;0.27447894;0.12605849;0.26811129;0.19641307;0.16490069;0.3771117;0.056342203;0.10640284;0.35975277;0.42480731;0.50934523;0.24399215;0.31124222;0.22638476;0.057574589;0.22322004;0.12095339;0.13749515;0.39025262;0.2136056;0.37127203;0.4029457;0.22769552;0.060023401;0.32505089;0.2633675;0.19004555;0.1671356;0.33568707;0.44484735;0.16639739;0.4630821;0.41029817;0.47524938;0.13175507;0.30040646;0.39246821;0.32060578;0.067050807;0.085133493;0.083458237;0.2808935;0.21832608;0.30627424;0.22061306;0.12759908;0.054853477;0.37912133;0.27882189;0.09899772;0.40541103;0.42110768;0.22638351;0.20082814;0.3218337;0.31583989;0.3349565;0.430812;0.38223419;0.1940399;0.067356125;0.41985816;0.059469167;0.19606358;0.167777;0.31793272;0.37960443;0.28320929;0.43515673;0.22669716;0.41837645;0.16565929;0.11654846;0.2726641;0.29182333;0.22933398;0.30541408;0.14841937;0.19302942;0.35374659;0.18137549;0.33004716;0.053620443;0.23583545;0.35033745;0.18898165;0.16569492;0.29893747;0.310821;0.27375343;0.19878681;0.40329623;0.31440702;0.3784045;0.32193053;0.095568493;0.24940491;0.23557726;0.1485081;0.46407637;0.12081493;0.20434864;0.38042399;0.22300005;0.34903759;0.1632636;0.18166398;0.3527104;0.31505379;0.3292855;0.14344192;0.29712629;0.34423491;0.3920112;0.2075844;0.25627092;0.29907006;0.04445539;0.16677566;0.35523236;0.12961172;0.090356611;0.25395781;0.26833609;0.24979268;0.23750794;0.35487121;0.090245984;0.094504967;0.20096034;0.19472495;0.33854172;0.18833576;0.17537619;0.071253732;0.23194122;0.28426138;0.18872866;0.17682081;0.27077717;0.37200665;0.36642981;0.33327892;0.27121112;0.24238959;0.18277757;0.095727958;0.15587634;0.33583933;0.17240642;0.098097868;0.38255143;0.10079075;0.3291803;0.31787086;0.12050328;0.11829419;0.28876022;0.2183032;0.22098517;0.31415012;0.33888629;0.30078515;0.060839485;0.39043641;0.19336842;0.30833039;0.13217093;0.26975536;0.061873496;0.17756653;0.29841089;0.4039301;0.29438603;0.046445314;0.31512493;0.30560082;0.34220457;0.25330409;0.0635418;0.28289041;0.26040387;0.17426978;0.2699528;0.12670879;0.099505484;0.37761879;0.45440811;0.03536636;0.17342712;0.11611673;0.11804212;0.26832372;0.33036137;0.28828353;0.2328683;0.19696648;0.41207939;0.29632482;0.21510018;0.34602901;0.23873967;0.13384756;0.40695825;0.36146569;0.068158306;0.11872087;0.47197443;0.27131444;0.29679403;0.23235919;0.42881912;0.36151275;0.11753054;0.29129362;0.11602528;0.067118011;0.13571462;0.1036494;0.25608706;0.20467058;0.45038104;0.35236719;0.22917648;0.29381976;0.19462845;0.29170877;0.27382913;0.35118318;0.36098081;0.26511556;0.095340401;0.25485748;0.27261561;0.21520574;0.14603595;0.096522532;0.2707392;0.22337291;0.23661564;0.26127723;0.08584933;0.049665004;0.12497102;0.14149693;0.275067;0.19388664;0.36523998;0.28890651;0.24552296;0.45728707;0.46134445;0.38202906;0.24862529;0.16833653;0.28132108;0.086668849;0.35555214;0.24682435;0.34177989;0.13923645;0.28449219;0.086795524;0.066455498;0.17293638;0.20783946;0.19927588;0.20884165;0.28739864;0.46202588;0.37435806;0.25681216;0.10391105;0.21995187;0.36166263;0.084313273;0.43802696;0.27629349;0.49962255;0.3200641;0.03941495;0.32913753;0.20090576;0.28366905;0.21540129;0.054273482;0.4197225;0.3107191;0.08092805;0.2179244;0.12470271;0.18871537;0.36451414;0.30382457;0.38355514;0.39885998;0.10376011;0.36942205;0.20247461;0.21577576;0.1353623;0.37694493;0.20032047;0.20122133;0.42778125;0.14993653;0.057683744;0.14583518;0.10647819;0.15480484;0.11836416;0.10147242;0.32718423;0.2737779;0.21917772;0.35580415;0.18296635;0.50223875;0.35883665;0.19020937;0.33045566;0.2720564;0.068193041;0.18313517;0.15830845;0.39796662;0.22360341;0.28897855;0.15603918;0.14054899;0.35487187;0.29099208;0.36470261;0.051346034;0.25133497;0.067827374;0.32977286;0.4028945;0.15760829;0.091512218;0.093939923;0.10967386;0.40134227;0.077495158;0.36754465;0.24733047;0.052725311;0.12708047;0.12643109;0.29504716;0.38804919;0.18280147;0.30713731;0.28380331;0.45775622;0.085636891;0.15950452;0.42379111;0.1764604;0.15425755;0.44370651;0.25037774;0.35639098;0.071418308;0.42776722;0.055798188;0.35733762;0.071861647;0.15116818;0.40980726;0.090654582;0.22399966;0.27944747;0.079453088;0.24270587;0.31798914;0.29189721;0.093746386;0.2645624;0.18242687;0.28296506;0.34488615;0.30282006;0.048269965;0.49749544;0.18567288;0.35972041;0.076450102;0.19067693;0.27123439;0.16408506;0.30631566;0.21345763;0.25477973;0.1636392;0.28889826;0.42442286;0.4086366;0.43052742;0.14730269;0.26131883;0.079559579;0.21248509;0.47388521;0.22988728;0.15441954;0.17839311;0.26817328;0.44916776;0.25024429;0.11954045;0.33815372;0.21893421;0.39047441;0.10998049;0.22852609;0.13747463;0.23583293;0.19765201;0.25489068;0.29839268;0.15526381;0.17523107;0.3064267;0.10951129;0.36977938;0.39145616;0.33559927;0.43081307;0.090611644;0.25025466;0.24613644;0.073699087;0.12810618;0.296215;0.43845299;0.10978957;0.29012638;0.076245308;0.18007094;0.17527965;0.1338049;0.24833164;0.46798182;0.19593902;0.13693255;0.076179095;0.13869889;0.091664307;0.43181494;0.092868052;0.33476201;0.34765148;0.43094966;0.41370711;0.25438619;0.24924301;0.19950514;0.41605118;0.30860144;0.34988368;0.21141049;0.1038598;0.48038971;0.51852077;0.4111768;0.38311097;0.077442341;0.25189218;0.20443317;0.2134185;0.21577527;0.20377041;0.15452437;0.28267607;0.21361956;0.19823471;0.33854848;0.34545302;0.299169;0.30390731;0.17070709;0.34506223;0.052706525;0.35361722;0.38307169;0.051800791;0.11533812;0.22926928;0.36678657;0.25987652;0.34609842;0.32505059;0.1286784;0.15500468;0.25442126;0.12746416;0.30349645;0.27793905;0.24743994;0.18566824;0.3342858;0.19423114;0.18660286;0.31285816;0.36283118;0.34262526;0.29986423;0.2982707;0.33015054;0.05536234;0.2929309;0.074507415;0.36272982;0.37244913;0.44380489;0.44922936;0.15115994;0.52730638;0.33531535;0.068987414;0.11642323;0.30373764;0.097404025;0.14882274;0.14484477;0.22656608;0.07523796;0.1205603;0.17877135;0.22582664;0.095652863;0.23201786;0.33709002;0.17380081;0.28530255;0.20708764;0.1349424;0.2348074;0.16450718;0.1586379;0.18558311;0.21900956;0.080042377;0.22793007;0.14777158;0.36349198;0.14411664;0.15723345;0.16660717;0.26652169;0.15446031;0.23802;0.054610949;0.30001816;0.26006484;0.32378986;0.11311903;0.35244146;0.41163045;0.49700457;0.51047254;0.48558506;0.18799292;0.23811968;0.18801852;0.084072344;0.11207864;0.14573525;0.2235534;0.03993373;0.16706075;0.37709397;0.24679537;0.38378274;0.15726759;0.16973615;0.17092645;0.17917612;0.18984959;0.23050122;0.17331205;0.22750039;0.36419058;0.23044522;0.17099574;0.5123111;0.25090596;0.33111861;0.15487787;0.38338768;0.23106432;0.2756362;0.22477774;0.39604414;0.39914602;0.17256778;0.07019262;0.09061569;0.16275409;0.37444976;0.36390445;0.057459526;0.084699638;0.28251991;0.11430976;0.065670975;0.12010031;0.15546086;0.3957977;0.18195999;0.35356385;0.38032454;0.34826726;0.41406947;0.15254924;0.39202073;0.27307349;0.15884766;0.20727351;0.50061256;0.088381872;0.087097734;0.23268451;0.34456941;0.27956092;0.12308519;0.26448965;0.19451112;0.16196211;0.38266566;0.054873329;0.10465625;0.35526642;0.41052145;0.50913703;0.232262;0.30006355;0.21781959;0.055778924;0.22877525;0.12829222;0.13198486;0.40622118;0.2041914;0.37353548;0.4079774;0.21594772;0.064646482;0.30379525;0.25879315;0.19858615;0.1536248;0.33889949;0.44761109;0.1777636;0.48210794;0.4072749;0.50212234;0.12587674;0.30324236;0.39796489;0.30547553;0.072344877;0.083554789;0.082353458;0.27199358;0.21343796;0.29408523;0.21675706;0.1258814;0.053237457;0.37177566;0.26760438;0.10030707;0.4089137;0.41306299;0.22722593;0.19689496;0.32190084;0.31592697;0.32797301;0.43047756;0.37118578;0.18995106;0.066239975;0.40676224;0.057872031;0.18697429;0.16445231;0.32092291;0.37145108;0.28408128;0.435388;0.21838064;0.4182671;0.15972158;0.11456185;0.26878321;0.27669263;0.22556145;0.29105681;0.14274807;0.18643513;0.33700407;0.17881708;0.31527817;0.051683273;0.22852054;0.33891818;0.18992181;0.16074096;0.29418281;0.30664378;0.27796867;0.19995399;0.41605714;0.32108203;0.38079044;0.29978096;0.085880481;0.23850884;0.21836111;0.140614;0.4563944;0.11702956;0.20650324;0.37573445;0.21697593;0.34272993;0.15641199;0.18301286;0.34501296;0.30396;0.3375504;0.14592345;0.31373656;0.3498494;0.393742;0.21085024;0.25405487;0.30734798;0.044166002;0.16523328;0.36190698;0.12982374;0.094179131;0.25465289;0.26852676;0.25313431;0.2352031;0.36370698;0.089533456;0.093509652;0.20596249;0.19467981;0.34743595;0.18857612;0.17535433;0.072852805;0.22989257;0.29234987;0.1874266;0.17519669;0.27802336;0.36741689;0.38910082;0.32138535;0.27482468;0.26393601;0.18829721;0.11296399;0.15396853;0.3467463;0.18219332;0.097283691;0.41664732;0.095183924;0.32738534;0.34116954;0.12442235;0.13823691;0.28424609;0.22715965;0.2243374;0.29925072;0.34993348;0.27625591;0.060100645;0.37950718;0.18567277;0.30512157;0.13302326;0.25976107;0.062733576;0.17760971;0.30655479;0.41418716;0.29189187;0.046164356;0.30807149;0.31353867;0.34582767;0.24598794;0.067230269;0.29075173;0.27482095;0.18316543;0.27594444;0.11984242;0.093604684;0.36684501;0.44404024;0.033312764;0.16545686;0.1112214;0.11327394;0.2694903;0.33992153;0.29854542;0.24332954;0.20690374;0.43528423;0.31163934;0.20816836;0.33720705;0.23229848;0.1371499;0.42036957;0.35432643;0.067227051;0.11708906;0.47713962;0.28520036;0.29699984;0.23394845;0.4295108;0.3733989;0.12909681;0.2923114;0.11529707;0.067069702;0.13485186;0.10777659;0.26597118;0.21275504;0.46230382;0.36290386;0.2379014;0.29454565;0.1932501;0.29091522;0.27198082;0.35937428;0.36204985;0.2636098;0.095242448;0.25337175;0.28034055;0.21609913;0.14512819;0.096421823;0.26917702;0.23033294;0.22857463;0.25388375;0.084545858;0.047415141;0.11984227;0.14113811;0.2754716;0.19647515;0.36117494;0.28648457;0.24981363;0.46274248;0.46520954;0.3863233;0.25295821;0.16868049;0.2815862;0.088829219;0.35290596;0.24582818;0.33702716;0.13793164;0.28426194;0.084572069;0.065078504;0.17467259;0.21053229;0.20729515;0.20188659;0.28439867;0.46211138;0.375245;0.26502997;0.10019409;0.21736868;0.3680827;0.087523952;0.45015562;0.27081534;0.49553305;0.31025079;0.038315121;0.325984;0.18373978;0.26758176;0.21674787;0.055212021;0.42632765;0.29596668;0.079150558;0.22217381;0.1246912;0.18925905;0.36129421;0.30167985;0.38869369;0.40084022;0.10495705;0.36935744;0.20259967;0.21988384;0.13570578;0.37805602;0.19873697;0.20014353;0.43335825;0.14987946;0.057992615;0.14427888;0.10560721;0.15820096;0.11835133;0.10189629;0.32415676;0.27176744;0.21031822;0.34341636;0.1779042;0.50382441;0.34687042;0.17698039;0.31982684;0.26349092;0.070065916;0.17564179;0.15038855;0.38956046;0.21808015;0.29878944;0.15292354;0.13087416;0.3422527;0.2826139;0.36688104;0.049596805;0.23762883;0.067595303;0.32428482;0.40659305;0.15372515;0.092978097;0.094827451;0.10944019;0.40806994;0.075432278;0.37270319;0.25281918;0.053981435;0.13216287;0.12559238;0.29789114;0.39370802;0.18556066;0.31833693;0.28164682;0.466351;0.087746531;0.16260447;0.4334383;0.17586188;0.15655193;0.44538394;0.24957639;0.36302364;0.069715828;0.4474453;0.058646098;0.37067011;0.075348817;0.15723163;0.41920611;0.08947657;0.22433716;0.27621955;0.078419194;0.24985285;0.31839147;0.29656893;0.094282828;0.26507211;0.18889646;0.27970189;0.34498674;0.29939064;0.047642849;0.51702833;0.19018506;0.36954615;0.078923121;0.19525781;0.2567707;0.1580186;0.29792783;0.20767504;0.25896782;0.16124493;0.28617537;0.4199498;0.40492895;0.4405151;0.13943172;0.25250202;0.077831462;0.20747513;0.47557539;0.21730684;0.14850049;0.17328477;0.26117125;0.45074171;0.23852985;0.11598028;0.33134905;0.21478833;0.39488763;0.10808765;0.22972584;0.13512385;0.23359472;0.19660491;0.25255606;0.30153096;0.15380861;0.17482804;0.30661142;0.11061964;0.37514296;0.39322129;0.33929408;0.43409929;0.089044936;0.25149018;0.2422267;0.073018253;0.12749498;0.29137051;0.43917403;0.10777797;0.28709149;0.076076753;0.18908142;0.18683836;0.14156516;0.25901261;0.4923861;0.18730609;0.13279036;0.072808005;0.13271204;0.09192992;0.45055902;0.1034918;0.35460985;0.36883831;0.46282655;0.41125369;0.25594404;0.24834654;0.19827901;0.42420742;0.30411634;0.34876686;0.20852469;0.10295767;0.48466939;0.52906305;0.40979022;0.38009453;0.077300996;0.25045437;0.21164581;0.21651556;0.21704449;0.20646618;0.15592179;0.28804001;0.21032798;0.19297782;0.33220521;0.3373625;0.30543929;0.29688042;0.16498898;0.33699185;0.050977115;0.35918304;0.37383214;0.049895152;0.1119206;0.22149904;0.36304578;0.25704643;0.3446846;0.32214937;0.12708753;0.15389998;0.25302404;0.12758802;0.30230489;0.27627686;0.24538654;0.18414007;0.33388227;0.19297297;0.18495122;0.3127;0.36226311;0.34250337;0.29946625;0.29788128;0.32743269;0.054882862;0.29244712;0.07401558;0.35979739;0.38487637;0.45661691;0.4620187;0.15883116;0.53981417;0.33080202;0.067928441;0.11542537;0.29905093;0.094861925;0.14635992;0.14202666;0.22366095;0.073898681;0.11706434;0.17639114;0.22216861;0.094949059;0.22843547;0.3294937;0.17133956;0.28060573;0.20495284;0.13276365;0.22887553;0.16095297;0.15583462;0.18368395;0.21661401;0.082818575;0.22294198;0.14502442;0.35954049;0.14248271;0.16125336;0.16273528;0.26155978;0.1528063;0.23504715;0.05663335;0.29572225;0.25700313;0.32061172;0.11280045;0.35963821;0.42760068;0.513955;0.52976805;0.50188255;0.19948441;0.23123835;0.18240073;0.081460707;0.10681215;0.14288191;0.21888945;0.039139263;0.16349413;0.36416566;0.24321267;0.37956429;0.15548521;0.16778496;0.16607052;0.17860293;0.18992786;0.23043208;0.1734454;0.22148082;0.36334908;0.24124187;0.18004321;0.52533311;0.25542903;0.33402503;0.15412657;0.38215512;0.23041487;0.27465129;0.22448781;0.39685932;0.39995429;0.17314012;0.070495442;0.091268897;0.16187201;0.37306887;0.36282256;0.05719791;0.084578432;0.28114411;0.11379116;0.065444246;0.11956;0.15520102;0.39718297;0.18312617;0.35547239;0.3820073;0.34990004;0.41096142;0.15911764;0.38841721;0.2707333;0.1579413;0.20266153;0.51041424;0.086205252;0.085047945;0.22778888;0.34084657;0.28814709;0.12154096;0.26127365;0.19252729;0.15987562;0.39238131;0.054136664;0.10323139;0.35108376;0.40418589;0.52022809;0.22774103;0.2947394;0.21377043;0.053895727;0.22693466;0.12455808;0.12869693;0.40236586;0.1949752;0.36706999;0.39387581;0.20817633;0.063518904;0.28617185;0.24956053;0.1922064;0.14521836;0.32698545;0.45077983;0.18388799;0.48301533;0.41057613;0.51011211;0.12063869;0.29907724;0.38582081;0.29648036;0.071532518;0.082154676;0.08139158;0.27102125;0.20971873;0.29138908;0.21343867;0.12445476;0.05324997;0.36631411;0.2652244;0.10045902;0.40963057;0.4142119;0.22677356;0.19832729;0.32420146;0.31814376;0.33202028;0.43270007;0.37317041;0.18688187;0.065474011;0.40513784;0.056820791;0.18516187;0.16003256;0.31195435;0.36065939;0.27285758;0.41964662;0.21945177;0.42103726;0.16294754;0.11269849;0.26569286;0.25904626;0.21120459;0.27534583;0.12921521;0.17011541;0.33479267;0.17827685;0.31610766;0.049950227;0.22249942;0.34035096;0.19184101;0.16402157;0.28872135;0.30251849;0.25911209;0.18648727;0.40531388;0.30795929;0.37322149;0.28431177;0.079090498;0.23084253;0.20756486;0.13601255;0.43326387;0.11032981;0.20221518;0.36470494;0.21345113;0.33013633;0.14964561;0.18222687;0.3385137;0.30293509;0.32476816;0.13945712;0.31321833;0.34183487;0.39194128;0.21150738;0.25154397;0.30934072;0.043757409;0.16348922;0.3651574;0.13101839;0.09622021;0.25662902;0.27026296;0.2526505;0.23177163;0.36577612;0.088243231;0.092032388;0.20843625;0.19438876;0.34958026;0.1884591;0.1751074;0.073286854;0.22757253;0.29431203;0.1857014;0.17336042;0.2614598;0.34841004;0.35806841;0.30138201;0.25775528;0.26143709;0.19270691;0.1088561;0.14936525;0.3417443;0.15793654;0.087249741;0.38029286;0.080378883;0.28630242;0.33592859;0.12696786;0.13308732;0.27427569;0.22227861;0.22013415;0.30175275;0.33664083;0.26576734;0.058821719;0.37885046;0.1895642;0.31024924;0.1421679;0.26491201;0.060868561;0.18332252;0.30441862;0.42130387;0.28831002;0.043110281;0.30431575;0.30393186;0.34208182;0.23440903;0.066367909;0.30131078;0.27496427;0.19024339;0.27623704;0.11573108;0.097126983;0.36363047;0.45051411;0.033168301;0.1473916;0.10629826;0.10814323;0.26822183;0.33628666;0.27664104;0.22547176;0.19131635;0.41747454;0.29592162;0.18787585;0.32710218;0.2245362;0.13858454;0.4187766;0.32737306;0.066095151;0.11479016;0.47927436;0.2864787;0.27814418;0.23382938;0.42778161;0.38151652;0.13279606;0.29357582;0.114402;0.06666515;0.13378572;0.10748647;0.26820031;0.21464674;0.46484682;0.36525887;0.23991659;0.29554364;0.19162317;0.28904456;0.26978466;0.35802156;0.36337864;0.26176;0.0946621;0.25153029;0.27950111;0.21721372;0.14401546;0.095835462;0.26724395;0.22963934;0.2310534;0.25733924;0.090384148;0.04782521;0.12050214;0.14047444;0.27482894;0.20308052;0.35570014;0.28227776;0.2711702;0.48973835;0.49046579;0.41133237;0.27442968;0.16875267;0.28087741;0.093396232;0.34901971;0.24336711;0.33197987;0.13627572;0.28922552;0.082127675;0.063380957;0.17497091;0.20507112;0.21022703;0.19541182;0.2811152;0.46384409;0.37281764;0.27405548;0.099811696;0.21870908;0.37670863;0.088804394;0.46223891;0.2711333;0.49819806;0.30198562;0.036093831;0.32185838;0.17131776;0.25616014;0.21422614;0.052902553;0.42553148;0.28129801;0.077030942;0.24044475;0.12428299;0.18827353;0.35826725;0.2992174;0.41159421;0.42365593;0.11535782;0.39018968;0.2184688;0.23794688;0.13515742;0.37602586;0.19664821;0.19820037;0.45671362;0.14947882;0.057756472;0.1429273;0.10468721;0.17293131;0.11804789;0.10144678;0.32150739;0.26964405;0.21417879;0.35237113;0.1880195;0.52111024;0.35085571;0.17359328;0.31579313;0.26395375;0.071706168;0.16932417;0.15393639;0.39329568;0.22273137;0.313207;0.15375902;0.12795188;0.33605894;0.28188649;0.36701995;0.047809813;0.23341164;0.067766286;0.32531327;0.40856522;0.14873323;0.095891073;0.095533893;0.10702474;0.40952569;0.073331319;0.38051888;0.26567945;0.056462355;0.13968702;0.12938379;0.30313513;0.39292702;0.18143813;0.31937003;0.27423701;0.47677961;0.089369476;0.16219561;0.43764082;0.17448278;0.16058724;0.4460313;0.2444779;0.36455646;0.067821048;0.43504599;0.056095459;0.35824376;0.072103947;0.15016383;0.42183381;0.088088542;0.2256164;0.27274117;0.077335477;0.23854509;0.2991291;0.28357038;0.087924384;0.24865524;0.19093336;0.2754676;0.34595472;0.2953774;0.046913721;0.52105403;0.18804434;0.371925;0.078170627;0.19337434;0.24578834;0.15232103;0.30984455;0.20238143;0.28334525;0.17518324;0.3072041;0.44253168;0.42796487;0.50081247;0.13418746;0.24538387;0.08446984;0.20366573;0.50208944;0.20759802;0.14300139;0.18278238;0.25445506;0.47569901;0.24785461;0.12383235;0.36734849;0.22804606;0.42246416;0.10610619;0.23077561;0.13190049;0.23124805;0.19620167;0.24933361;0.30377474;0.15086292;0.1738143;0.3069545;0.11055428;0.37776491;0.39195195;0.34028953;0.4354192;0.087406084;0.25256523;0.23684232;0.072309308;0.12732647;0.28687593;0.44039419;0.10531738;0.28450507;0.076151527;0.18311036;0.18238525;0.13038392;0.2524969;0.49624088;0.17829774;0.12748605;0.065882668;0.12721241;0.092362352;0.42798427;0.098586231;0.33621743;0.35210684;0.45443556;0.40653366;0.25474632;0.23463485;0.19654928;0.4322966;0.298262;0.34453121;0.19506367;0.10211444;0.48872161;0.53551739;0.41202018;0.3580859;0.077850431;0.25077552;0.21703573;0.23326699;0.21547642;0.22011879;0.16698731;0.2917428;0.20926224;0.17697369;0.32665706;0.33104077;0.30798039;0.29162395;0.14834093;0.32770827;0.049197681;0.3606706;0.36735418;0.044750866;0.10830623;0.21406966;0.35520801;0.25462034;0.34869888;0.31977439;0.12563072;0.15359262;0.25253126;0.12846199;0.30202165;0.27532646;0.2398628;0.1826486;0.3384169;0.1917931;0.18320341;0.30912071;0.36240706;0.34818941;0.29970685;0.2981292;0.32046816;0.054425966;0.29665157;0.073568165;0.356727;0.39643967;0.46849382;0.47386321;0.16604422;0.55139261;0.32576436;0.066910513;0.11362027;0.29438633;0.09236078;0.14402722;0.1397327;0.22010821;0.072805002;0.11398554;0.17361513;0.21861434;0.093539044;0.22484235;0.32188216;0.16856395;0.27610955;0.20165218;0.13063309;0.22305763;0.15746762;0.15307288;0.18260023;0.21378534;0.080254689;0.21840331;0.14258249;0.35687101;0.1408004;0.15632847;0.15986483;0.25795001;0.15197285;0.23281136;0.05521002;0.2913022;0.25391328;0.3185091;0.11213605;0.35135123;0.42785472;0.51493961;0.5341807;0.50142866;0.20049821;0.22480644;0.17715737;0.079023972;0.10050547;0.13249715;0.21442652;0.038370464;0.16005673;0.34766579;0.22818148;0.37513959;0.1535558;0.16569187;0.15899266;0.16856034;0.18958367;0.22988375;0.17315114;0.21235846;0.34791192;0.24428135;0.18271166;0.52824563;0.2486368;0.32299283;0.15276051;0.38066775;0.23146261;0.2734513;0.22412452;0.39907765;0.40217668;0.17476009;0.071367659;0.092670366;0.16046648;0.37165394;0.36402813;0.056930695;0.084501177;0.27883866;0.11321995;0.065922365;0.11896072;0.15494694;0.3977184;0.18441372;0.3598651;0.38384554;0.35168821;0.40670669;0.16511235;0.38373071;0.26759824;0.15592514;0.1979582;0.51930261;0.08399795;0.083001241;0.22215375;0.3367475;0.29630005;0.11983727;0.25790259;0.18974413;0.15775055;0.40147614;0.053406842;0.10186341;0.34606478;0.3960802;0.52881891;0.222049;0.28808877;0.20874849;0.05218149;0.22538508;0.12580667;0.12534241;0.39853525;0.18657236;0.36101556;0.39149863;0.20049936;0.062407911;0.27976546;0.24994081;0.19326442;0.14290924;0.32626355;0.45539698;0.19068357;0.49682379;0.41426775;0.51876086;0.11586861;0.29516292;0.38509965;0.2874133;0.070801698;0.080656469;0.08043097;0.26978663;0.20596097;0.28832003;0.20987336;0.12302222;0.053201556;0.36074427;0.26249126;0.10036885;0.40991741;0.41474152;0.22598161;0.19936164;0.32667506;0.32059518;0.33625263;0.43517512;0.37522417;0.1835811;0.064706504;0.40314355;0.055764068;0.18307884;0.16407631;0.31819758;0.3709487;0.27582082;0.42165372;0.22017129;0.41934234;0.16438419;0.11017285;0.25905964;0.25632408;0.20990632;0.27672997;0.12562977;0.16491219;0.33133599;0.1773231;0.31756002;0.048587143;0.21604824;0.33947456;0.1926692;0.16716717;0.28412631;0.29774696;0.2548779;0.17975898;0.40811804;0.30461323;0.39491704;0.26416209;0.070853412;0.23334073;0.19331075;0.13798693;0.44591966;0.11540414;0.2073717;0.38158178;0.24433066;0.32564592;0.14353399;0.18609451;0.33479044;0.3199234;0.33755967;0.14397366;0.33480805;0.35435376;0.40999162;0.21047227;0.24867645;0.32526401;0.043283228;0.16150263;0.36644471;0.12633716;0.099410519;0.24806489;0.26102489;0.25103977;0.22908518;0.38265714;0.0872676;0.090879962;0.20936196;0.1938948;0.36633149;0.18815914;0.17467465;0.073698543;0.22492683;0.30990151;0.18371169;0.17126673;0.27627397;0.35123056;0.38086808;0.30150449;0.25897083;0.26725736;0.18538454;0.11715123;0.14139053;0.32618436;0.16730292;0.087617174;0.39886516;0.079319738;0.2826694;0.34730852;0.12660666;0.14470671;0.26918435;0.21849117;0.22994617;0.29980457;0.35487023;0.260515;0.057809792;0.38716626;0.19146189;0.328109;0.14952458;0.26849234;0.058300626;0.17153217;0.31695187;0.40793055;0.26958707;0.048252583;0.31871921;0.31618363;0.36654833;0.24648765;0.068846643;0.30293572;0.28944653;0.19693495;0.2768653;0.11680247;0.096396342;0.37569928;0.45606664;0.033035822;0.14100544;0.10224129;0.1043664;0.26930404;0.33332267;0.27326688;0.22356725;0.19007546;0.4243938;0.29852387;0.18146618;0.31843412;0.21873876;0.1413358;0.41755128;0.32099709;0.065277047;0.11353965;0.48404348;0.28826299;0.27776781;0.23491521;0.42890021;0.39251253;0.13687463;0.29633793;0.11348643;0.067393005;0.13268907;0.10705277;0.27314454;0.21732293;0.47056723;0.36861315;0.24276219;0.29823056;0.19009945;0.290582;0.26770443;0.35652122;0.36633083;0.2598601;0.095589466;0.24962656;0.27834439;0.21959271;0.14287409;0.096769691;0.2652486;0.22867271;0.22715764;0.25452521;0.087528221;0.046573594;0.11752756;0.13885114;0.27315849;0.19781293;0.34916022;0.27708665;0.27132949;0.49017584;0.48921034;0.4106124;0.2745811;0.16768824;0.27915514;0.091525719;0.344042;0.23998831;0.32411242;0.13355125;0.27835849;0.079128616;0.06123253;0.17354673;0.2004097;0.21131995;0.18812895;0.27754119;0.46365401;0.36900553;0.27854481;0.098057777;0.2179541;0.381194;0.089392982;0.47056893;0.26858598;0.49839252;0.29198959;0.034096465;0.31511563;0.15893061;0.24471487;0.21011274;0.050856188;0.42169723;0.26613823;0.074889131;0.25092614;0.12349197;0.18802345;0.35328788;0.29510874;0.4165881;0.41806671;0.11747721;0.38260898;0.21383758;0.2483989;0.13477567;0.37495425;0.19414398;0.19588234;0.46960729;0.14848195;0.058181848;0.14055108;0.1030243;0.18151359;0.11728194;0.10175703;0.31682518;0.26580322;0.21233408;0.35402125;0.189105;0.53037041;0.34492746;0.16721137;0.31194088;0.25893512;0.073201627;0.16172422;0.1492133;0.38751328;0.22028093;0.31861681;0.14779492;0.12222706;0.3295247;0.27504933;0.36590722;0.045443974;0.22343403;0.067230955;0.31774154;0.40699932;0.14231417;0.10103532;0.096036702;0.10550366;0.41240191;0.071204871;0.39376673;0.28091809;0.06037996;0.15005967;0.13465896;0.31355375;0.39409608;0.17981634;0.32386142;0.2685537;0.49297169;0.090863504;0.16302732;0.44340989;0.1729973;0.16828252;0.44660398;0.24138597;0.36747196;0.066060878;0.43930095;0.056257021;0.34209087;0.072291449;0.15035862;0.40497789;0.081556939;0.21181941;0.25455153;0.071611002;0.24109583;0.29739988;0.26861948;0.087437563;0.24721958;0.19317205;0.27213752;0.32680503;0.29191738;0.046288829;0.5248543;0.18608604;0.35260427;0.077355795;0.19139464;0.23641774;0.14657806;0.30160743;0.19685054;0.28680661;0.17660315;0.31090984;0.44593289;0.43155876;0.51744121;0.1296746;0.23778757;0.082790427;0.19926549;0.504489;0.19933815;0.13747838;0.17751789;0.24741249;0.47569394;0.24022326;0.12021732;0.36027545;0.22357914;0.42557728;0.10405851;0.23182186;0.12936635;0.22858165;0.19998989;0.24605004;0.30614665;0.14875984;0.17263153;0.31278107;0.1142512;0.38886806;0.39894995;0.34904119;0.44503507;0.085713558;0.25363085;0.23259461;0.071482688;0.1302699;0.28227019;0.44167256;0.10345548;0.28162619;0.078410305;0.17781787;0.17822284;0.1270237;0.24690168;0.50153017;0.17054157;0.1227364;0.063253857;0.12255302;0.093301155;0.42236611;0.098820008;0.33366153;0.35041273;0.46293095;0.40328699;0.25403723;0.23376691;0.19576006;0.44201282;0.29245812;0.33969212;0.19183202;0.1010843;0.49408245;0.54414213;0.4141641;0.35857251;0.07839068;0.25103387;0.22049105;0.23319909;0.21282263;0.21739639;0.16446067;0.29531375;0.2089911;0.17455466;0.3222585;0.32594079;0.30939081;0.28634459;0.14358242;0.31843778;0.047461558;0.36167118;0.36076349;0.04330318;0.1047295;0.20672111;0.35170332;0.25244689;0.34776971;0.31810215;0.12446178;0.15219775;0.25096244;0.12838538;0.30108973;0.27353844;0.23751417;0.18125924;0.33790705;0.19098677;0.18174408;0.31089014;0.36422518;0.35032302;0.30146289;0.29988563;0.31763181;0.054055639;0.29629976;0.073334232;0.35428807;0.40827936;0.48056358;0.48590392;0.17360036;0.56307131;0.32079327;0.065923974;0.11189345;0.28976941;0.089923657;0.14171147;0.13746448;0.21663028;0.07170964;0.11095075;0.17086184;0.21510258;0.092175327;0.22126094;0.31433439;0.16582577;0.27168483;0.19845355;0.1285242;0.21733244;0.1541688;0.15042914;0.18038189;0.21144396;0.08491461;0.21392535;0.14011021;0.35261148;0.13931392;0.16361596;0.15658465;0.25372785;0.15016878;0.23034276;0.058761396;0.28679517;0.25066939;0.31482109;0.11156502;0.36297858;0.44990203;0.53769779;0.55818969;0.52326989;0.21677741;0.21913148;0.1725471;0.076908961;0.093705632;0.12546523;0.21050389;0.037701342;0.15706666;0.32896888;0.21726158;0.36654431;0.14953493;0.16135928;0.14831436;0.16169527;0.18928427;0.22939013;0.17292659;0.20129921;0.3360647;0.25724632;0.1936318;0.54355568;0.24893501;0.31610858;0.152081;0.37927154;0.23080897;0.27232957;0.22349229;0.40034348;0.40344918;0.17560822;0.071796276;0.093371563;0.15982246;0.37037671;0.36319116;0.056705266;0.084317178;0.27755955;0.1126394;0.065696336;0.11834931;0.15441731;0.39940393;0.18558452;0.3619349;0.38552073;0.35332248;0.40263483;0.17143439;0.37939703;0.26460418;0.15430257;0.19358708;0.52880186;0.081993677;0.081099488;0.21729952;0.3328799;0.30493578;0.11830546;0.25472322;0.18748592;0.15575448;0.411028;0.052754212;0.10057921;0.34185189;0.38903728;0.53867531;0.21721493;0.28231287;0.2044223;0.050372615;0.22327405;0.12521885;0.12207644;0.39440313;0.17846079;0.35501632;0.38562259;0.19358005;0.061407119;0.27096066;0.24791411;0.19191979;0.13939083;0.32327217;0.4607673;0.1980949;0.50758392;0.41944656;0.52864307;0.11161527;0.2920588;0.38163158;0.28001347;0.070290841;0.079151452;0.07953167;0.26679471;0.20283934;0.2886132;0.20625646;0.12166083;0.052648898;0.3560622;0.26293403;0.10060265;0.41123912;0.41632387;0.22651681;0.20156279;0.33160949;0.32546833;0.34088677;0.44036713;0.38294524;0.18043809;0.064062864;0.39935318;0.054960392;0.18371138;0.1679444;0.32509476;0.37796569;0.2794942;0.42566651;0.22006327;0.42047346;0.16506085;0.10864355;0.25548562;0.25311297;0.20854926;0.27469409;0.12214485;0.16042978;0.32747227;0.17629728;0.3153348;0.047258597;0.21046299;0.33914077;0.19403866;0.16834946;0.28042388;0.29390475;0.24815938;0.17222881;0.40660316;0.29979023;0.39617312;0.25549182;0.066863663;0.23110096;0.18897879;0.13689643;0.43923226;0.11214042;0.20897733;0.38110581;0.24699475;0.3188673;0.13737686;0.18557534;0.33028468;0.31918263;0.33108497;0.13809621;0.33530638;0.348728;0.40923661;0.20940691;0.24593991;0.32901922;0.042868804;0.15960506;0.36749291;0.12622149;0.10120104;0.24810262;0.26060829;0.24977554;0.22652084;0.38662881;0.086404555;0.089782618;0.21022464;0.19347396;0.3703422;0.18804631;0.17430902;0.073357388;0.22240102;0.31358004;0.18193108;0.16926689;0.27816576;0.35391712;0.39291713;0.30182052;0.25984973;0.26722246;0.18604271;0.12107603;0.13997084;0.32266521;0.16636251;0.087538257;0.40623477;0.077979796;0.27780285;0.34453866;0.12610644;0.14925955;0.26419345;0.21433017;0.22781998;0.29750502;0.36206833;0.25527865;0.056646302;0.38333824;0.19252253;0.33702779;0.15884823;0.27368665;0.056486242;0.170343;0.32079297;0.41778997;0.26905382;0.046985116;0.3168548;0.31960866;0.37825432;0.24713436;0.067589447;0.30340654;0.29507521;0.20590882;0.27925858;0.11229997;0.095348701;0.37924489;0.46439776;0.033389121;0.13526268;0.098468259;0.10023911;0.26990685;0.32070103;0.27009645;0.22184816;0.18827578;0.43046343;0.29189396;0.16961902;0.30060801;0.20505871;0.13854979;0.40518019;0.31531435;0.064498276;0.11169009;0.48786956;0.2812767;0.2785382;0.2366899;0.42948708;0.4033159;0.13634326;0.29693645;0.11253709;0.067031167;0.13156581;0.10671283;0.27498311;0.21861532;0.47265992;0.37019405;0.24413209;0.29878563;0.18853511;0.28902873;0.26559114;0.355272;0.36692935;0.25789025;0.095065773;0.24767531;0.27738881;0.22014467;0.14169307;0.096238524;0.26319978;0.22788481;0.22315553;0.25127649;0.085714325;0.045281917;0.12215955;0.13717972;0.27106735;0.19476485;0.34232378;0.28547636;0.288479;0.51079619;0.50833583;0.42992949;0.2918171;0.16647168;0.27702636;0.090680167;0.33862075;0.24906744;0.31635156;0.13074331;0.27065915;0.076211125;0.063642904;0.17287007;0.19616616;0.21329024;0.18198636;0.27520958;0.46400493;0.36506152;0.28358555;0.096546911;0.21791707;0.38837835;0.090581685;0.4816688;0.26832989;0.5003221;0.28375491;0.032300226;0.3099632;0.14824077;0.23499726;0.20662041;0.048824899;0.41872498;0.252296;0.073064268;0.25409961;0.12273312;0.18705353;0.34851152;0.29097009;0.42075035;0.41881758;0.11803262;0.38093531;0.21295199;0.2517038;0.13440394;0.37390357;0.19175929;0.19352239;0.473364;0.14741854;0.057917863;0.13820735;0.10129651;0.18418294;0.11646018;0.10121348;0.31217685;0.26178738;0.21136793;0.35639328;0.1917448;0.54053903;0.34259588;0.16034541;0.30703524;0.25505146;0.074265502;0.15519001;0.14594117;0.38471884;0.21940973;0.32656476;0.14465788;0.11669235;0.3231132;0.2698817;0.36492631;0.043555073;0.21472295;0.066830754;0.31334081;0.40712205;0.13681631;0.10036885;0.096358255;0.10329168;0.41413793;0.068968028;0.3933771;0.2852734;0.060439553;0.1529478;0.13304274;0.3115344;0.3943232;0.17704573;0.32719752;0.26225325;0.49520409;0.092201084;0.16283551;0.44801438;0.17111439;0.16739483;0.44651279;0.23699117;0.36929113;0.06418521;0.44350189;0.056476381;0.34483102;0.072545648;0.15067977;0.40819696;0.0805327;0.21138319;0.25167176;0.070718147;0.24375135;0.29530239;0.26912183;0.086809203;0.24543977;0.19550627;0.26907954;0.3260521;0.28872076;0.045713551;0.52872878;0.18428536;0.35244375;0.076600455;0.18956377;0.22739547;0.14102286;0.29355589;0.19135745;0.29161921;0.17813806;0.31478536;0.44953445;0.43519783;0.53594196;0.12570103;0.23097226;0.081385687;0.19538441;0.50860566;0.19148543;0.13219573;0.17247264;0.24050432;0.47738066;0.23348084;0.11705573;0.354132;0.21969099;0.43035659;0.10198198;0.23278354;0.12677754;0.22568971;0.19930117;0.24265985;0.30843243;0.14657779;0.17126083;0.31289667;0.11511211;0.39423186;0.40004203;0.35202047;0.44867438;0.083996952;0.25460571;0.22823861;0.070570305;0.12990327;0.27787474;0.44324154;0.10168088;0.2788063;0.078519255;0.17294745;0.17434624;0.12378671;0.24166504;0.50764239;0.16328146;0.11819153;0.060685493;0.11808231;0.094457872;0.41755858;0.099184833;0.33155984;0.34940696;0.47273457;0.39985725;0.25317711;0.23241997;0.19499196;0.4517425;0.28764421;0.33572155;0.18905069;0.10036371;0.50034779;0.55273706;0.41644186;0.35904449;0.078951657;0.2513282;0.22387455;0.2331873;0.21009777;0.21456403;0.16195215;0.29887542;0.20883976;0.17214075;0.31781361;0.32092476;0.3107965;0.28131819;0.1389524;0.30927986;0.045795694;0.36271822;0.35450292;0.041901752;0.10125399;0.1996529;0.34821546;0.25032753;0.34695682;0.31640247;0.12335408;0.15076704;0.24936901;0.12827331;0.30005029;0.27177137;0.23502758;0.17978323;0.33731368;0.19003472;0.18023506;0.31292716;0.36632815;0.35284668;0.30348319;0.30190265;0.31478906;0.053692654;0.2960375;0.073091492;0.35193267;0.42013681;0.4925496;0.49787784;0.181355;0.57460028;0.31582755;0.064936005;0.11013893;0.28516975;0.087531298;0.13942432;0.13521829;0.2131362;0.070629522;0.10798602;0.16812591;0.21161599;0.090785012;0.21770306;0.30686116;0.16311949;0.26728845;0.1952346;0.12644041;0.2117103;0.15101267;0.14770967;0.1779854;0.20930989;0.083827324;0.20958695;0.13753766;0.3481431;0.13793421;0.16132353;0.15338582;0.24931301;0.14818414;0.22801819;0.058059163;0.28225073;0.24713072;0.31078485;0.11101336;0.35936871;0.45635355;0.54461342;0.56642431;0.52971351;0.22183749;0.21401025;0.16840816;0.075039849;0.093393058;0.12351171;0.20665438;0.037042607;0.1541352;0.32846648;0.2149962;0.36229154;0.14766465;0.15933363;0.14938727;0.16102503;0.18877643;0.22866766;0.1725031;0.20252034;0.33687329;0.26248017;0.19810537;0.5493933;0.25610942;0.32167697;0.15138543;0.37784305;0.23023072;0.2711761;0.22268751;0.40174294;0.40485245;0.17654443;0.072269492;0.09404882;0.15913214;0.36902866;0.36240408;0.056460153;0.084032327;0.27624452;0.11204102;0.065498255;0.11772051;0.15374741;0.40087199;0.18661307;0.36392841;0.38697824;0.35474858;0.39850768;0.17797799;0.37508956;0.26159519;0.15262298;0.18933344;0.53851515;0.080073096;0.079263434;0.21253721;0.32905874;0.31387812;0.11682408;0.25160864;0.18522687;0.15384476;0.42085609;0.052148271;0.099363327;0.33774269;0.38193062;0.54853779;0.21241927;0.27652705;0.20008348;0.048732881;0.22156368;0.12496993;0.11933079;0.39096218;0.17071432;0.34908816;0.38069519;0.18720041;0.060430653;0.2623378;0.24579018;0.19110714;0.13613114;0.32025144;0.46642447;0.20578639;0.51944315;0.42541292;0.53874135;0.10761354;0.28911981;0.37918976;0.27335781;0.069825567;0.07758911;0.078618899;0.26365033;0.1994528;0.28620872;0.20245889;0.12026051;0.052058853;0.35090894;0.26079223;0.099666081;0.40997365;0.4150956;0.22481912;0.20164621;0.33629844;0.33010265;0.34536543;0.44525072;0.38789091;0.17724004;0.063439548;0.39550728;0.054118507;0.18239006;0.17196359;0.33221883;0.38482207;0.28335458;0.42988363;0.21957654;0.42099836;0.16527547;0.10689284;0.25148746;0.2498914;0.20711671;0.27219254;0.11870387;0.15599684;0.32371706;0.17529167;0.31273964;0.045976616;0.20502181;0.33844987;0.19511247;0.16899218;0.27638876;0.2897172;0.24219766;0.16560426;0.40643841;0.29559088;0.39895752;0.24714744;0.063279547;0.23003893;0.18511234;0.13655353;0.43232635;0.10893098;0.21104419;0.3804597;0.24998134;0.3121565;0.13178392;0.18590161;0.32656193;0.31944317;0.32536945;0.13314347;0.33786663;0.34472126;0.40935883;0.20833158;0.24314803;0.33292797;0.042463165;0.15767084;0.3685509;0.12606716;0.10307097;0.24814683;0.26011401;0.24850453;0.22390661;0.39075017;0.085556291;0.088665016;0.21111076;0.19302042;0.37452579;0.18795373;0.17391112;0.073015705;0.21982841;0.31741059;0.18016921;0.16722696;0.27960896;0.35590252;0.40483171;0.30172965;0.26026997;0.26649907;0.18599936;0.12511364;0.13812421;0.31845698;0.16546518;0.087406948;0.41370291;0.076692075;0.27307206;0.34147671;0.12535314;0.1539378;0.25901923;0.21004006;0.22544549;0.29470506;0.36939546;0.24984431;0.055434167;0.37918773;0.19322845;0.34530339;0.16966957;0.28024548;0.054588433;0.16864613;0.32429269;0.42886814;0.26966408;0.045649465;0.31434697;0.3223294;0.39150548;0.24888498;0.066321217;0.30346769;0.30021864;0.21644931;0.28313166;0.10784636;0.094110198;0.38214836;0.47443143;0.034022808;0.12989299;0.094942436;0.096314535;0.27066001;0.31796169;0.26699877;0.22015078;0.18632512;0.43678966;0.29419351;0.16403726;0.29247832;0.1985563;0.14079468;0.40352157;0.30931875;0.063609518;0.10960169;0.49139175;0.28286052;0.27875617;0.23793933;0.42912471;0.41374028;0.14030962;0.29749328;0.11159398;0.066672444;0.13045305;0.1064197;0.27696472;0.22008219;0.47494298;0.37201741;0.24569018;0.29929999;0.18697298;0.28747231;0.26348227;0.35414901;0.36748457;0.25592574;0.094545297;0.2457359;0.27654737;0.22066469;0.14052132;0.095714711;0.26116848;0.22719027;0.21938539;0.24800648;0.084093213;0.044066601;0.11990912;0.13534214;0.26839668;0.19164716;0.33510947;0.28128907;0.29461706;0.51848143;0.51478797;0.43658435;0.29798406;0.16490924;0.27432057;0.089711465;0.33258379;0.24629405;0.30892602;0.12795196;0.26349896;0.073441088;0.061961487;0.17265023;0.19238763;0.21605358;0.17687291;0.27289909;0.46524552;0.36183649;0.28973433;0.095555358;0.21777131;0.39572474;0.091701224;0.49350581;0.26876047;0.5027715;0.27660286;0.030711859;0.30629286;0.13906717;0.22584571;0.20360722;0.046960242;0.41697922;0.24005385;0.071204968;0.25721115;0.12195989;0.18612452;0.34385759;0.28682628;0.42534184;0.4199115;0.11866578;0.37954375;0.21225256;0.25491378;0.13393633;0.37273473;0.18936011;0.19105467;0.47694468;0.14625275;0.057626858;0.13586771;0.099523887;0.18682213;0.11556409;0.10063694;0.30753392;0.25766712;0.21081671;0.35882971;0.19430918;0.5510639;0.34077671;0.1538986;0.30210114;0.25097919;0.075343572;0.14904447;0.14262915;0.38157976;0.21818081;0.33421347;0.14146619;0.11146107;0.31665316;0.26442313;0.36399263;0.041755002;0.2064351;0.066321082;0.30859938;0.40733156;0.13158058;0.099484086;0.096604265;0.10073643;0.41541657;0.066809215;0.39232725;0.28942633;0.060221989;0.15555704;0.13142018;0.3088102;0.39380136;0.17332813;0.32947531;0.25554645;0.49673727;0.093483731;0.16209273;0.45214421;0.16927636;0.1663781;0.44658729;0.23223026;0.37066641;0.062471427;0.44740149;0.056594606;0.34718725;0.072674207;0.15077117;0.41130689;0.07948561;0.21080957;0.24871904;0.069805391;0.24634247;0.29319885;0.26955128;0.086190432;0.24366327;0.19779059;0.26593104;0.3251079;0.28543401;0.045125272;0.53235698;0.18234035;0.351971;0.075780518;0.1875876;0.21870786;0.13567226;0.28571114;0.18609071;0.29619563;0.17988665;0.31896615;0.4534961;0.43917829;0.55432951;0.12188734;0.22434855;0.080030173;0.19167246;0.51249218;0.18393333;0.12710388;0.16758166;0.23383601;0.47875255;0.22678636;0.11388429;0.34791714;0.21579629;0.43487805;0.099906571;0.23374057;0.1242009;0.22277331;0.19863924;0.23923147;0.31071514;0.14438722;0.16986248;0.31304118;0.11604562;0.39983302;0.40128055;0.35515705;0.45250663;0.082282424;0.25557566;0.22388525;0.069650799;0.12955825;0.27358997;0.44498399;0.099967644;0.27609041;0.078689396;0.16783255;0.17023942;0.12049933;0.2362667;0.51309264;0.15614061;0.11371373;0.058216538;0.11374927;0.095535196;0.41264784;0.099416576;0.32943797;0.34830147;0.48212957;0.3961612;0.25223723;0.23108542;0.19420578;0.46113274;0.28224209;0.33116081;0.18600543;0.099426731;0.50602239;0.56131697;0.41876253;0.35954115;0.079506457;0.25159568;0.22731002;0.23316276;0.20742464;0.21173941;0.15949535;0.30255386;0.20872699;0.16982275;0.31346154;0.31603485;0.31229395;0.27640525;0.13450551;0.30033278;0.044196762;0.36395428;0.34845042;0.040567733;0.097924337;0.19287615;0.34467876;0.24816285;0.34622684;0.31463748;0.12218555;0.1493566;0.24779513;0.12819247;0.29902819;0.26995447;0.23250279;0.17826658;0.33679077;0.18903409;0.17863058;0.31488469;0.36834064;0.35538933;0.30542985;0.30384246;0.31191963;0.053321596;0.29586768;0.072838388;0.34945047;0.43203565;0.50449151;0.50980347;0.18933266;0.58600217;0.31088889;0.063958995;0.10837886;0.28060314;0.085189164;0.13716236;0.13300171;0.2096428;0.069561511;0.10508654;0.16541632;0.20816906;0.089389399;0.21418023;0.2994723;0.16044383;0.26293653;0.19201636;0.12438394;0.20619135;0.14804171;0.14502813;0.17545791;0.20740752;0.083030403;0.20549612;0.13500586;0.34349811;0.13671665;0.15957974;0.15037902;0.24496903;0.14608759;0.22594899;0.057561051;0.27779278;0.24347124;0.30659655;0.11047625;0.35653114;0.46395281;0.55241698;0.57526588;0.53736025;0.22771388;0.20908007;0.16443861;0.073261797;0.093106173;0.1218594;0.20278671;0.036381379;0.1511935;0.32780811;0.2129973;0.35790357;0.14573017;0.15724038;0.15033434;0.16052473;0.18806337;0.2277101;0.17188886;0.20359366;0.33784229;0.26820678;0.20300557;0.55574775;0.26377377;0.32784769;0.15072791;0.37646088;0.22977316;0.27006987;0.22185831;0.40326411;0.40637657;0.17756853;0.072788917;0.094748631;0.15842648;0.3676382;0.3616735;0.056213375;0.083710857;0.27486286;0.11141204;0.065310761;0.11705907;0.15298367;0.40246108;0.18772645;0.36613515;0.38855675;0.35629714;0.39441854;0.18480733;0.37091577;0.25865042;0.150979;0.1851663;0.54836512;0.078223072;0.077479824;0.20788752;0.3252618;0.32309008;0.11539451;0.24854033;0.18300161;0.15198238;0.43089631;0.05157559;0.098190859;0.33373171;0.37494954;0.55858821;0.20780626;0.27089396;0.19585562;0.04717141;0.21991014;0.1247365;0.11671225;0.38763288;0.16336288;0.34329695;0.37586033;0.18111183;0.059484784;0.25404781;0.24371144;0.19032288;0.13301177;0.31729957;0.47242808;0.213805;0.53145194;0.43171912;0.54904306;0.10385913;0.28637034;0.37691933;0.26706588;0.069409586;0.07593745;0.077640541;0.26031458;0.19594574;0.28342578;0.19846237;0.11878405;0.051441796;0.34560454;0.25835541;0.098619148;0.40850922;0.41365543;0.22302358;0.20149143;0.3411721;0.33493358;0.35007855;0.45032173;0.3930465;0.17398091;0.062824272;0.39166227;0.05330158;0.18096748;0.17609558;0.33950675;0.39172012;0.28743386;0.43433806;0.21897528;0.42129862;0.16527301;0.10512792;0.24745345;0.24658848;0.20556296;0.26935703;0.11531538;0.15162486;0.31996334;0.17424867;0.30987918;0.04473792;0.19971281;0.33749881;0.19597389;0.16930006;0.27221316;0.28538403;0.23663375;0.15941598;0.4067032;0.29146424;0.40136719;0.23932461;0.060054697;0.22961229;0.18148439;0.1364288;0.42625353;0.10620376;0.21380049;0.38038161;0.2530981;0.30624077;0.12696786;0.1870324;0.32361653;0.32005078;0.31959906;0.12846038;0.34074259;0.34092066;0.40940666;0.20728856;0.2402885;0.33704373;0.04205602;0.15569076;0.36965784;0.12586039;0.10505331;0.24813962;0.25951472;0.24726756;0.22123191;0.39508259;0.084703721;0.087521367;0.21198979;0.19246116;0.37886429;0.18783501;0.1734084;0.072690524;0.21719229;0.32144529;0.17839333;0.1651378;0.28059196;0.35728189;0.41705024;0.30132705;0.26039946;0.2653791;0.18558721;0.12944342;0.136099;0.31404838;0.1644589;0.087180555;0.42158666;0.075397968;0.26840287;0.33838385;0.12454932;0.15894394;0.25395808;0.20593943;0.22280732;0.29151276;0.37714756;0.24426176;0.054212701;0.37376595;0.19302586;0.35254884;0.1804021;0.2879625;0.052105181;0.1646975;0.32481056;0.4383423;0.26938078;0.044208631;0.31061789;0.32425377;0.40368015;0.25191751;0.064859077;0.3022837;0.30469066;0.22672857;0.28838611;0.10337434;0.09256538;0.38456053;0.48309571;0.035035722;0.12483425;0.091670513;0.092585064;0.27160719;0.31569296;0.26394874;0.21857302;0.18431535;0.443322;0.29674676;0.15845394;0.28437155;0.19194883;0.14301883;0.4018524;0.3034929;0.062785111;0.10753895;0.49520227;0.28468442;0.27892032;0.23923616;0.42854878;0.42433578;0.14435333;0.29796526;0.11061262;0.066315912;0.12934707;0.10622302;0.27940941;0.22192815;0.47779995;0.37434968;0.24765562;0.29977468;0.18538249;0.28595203;0.26143321;0.35332477;0.36794454;0.25387454;0.094026044;0.24380508;0.2759158;0.22112183;0.13930322;0.09519206;0.2591508;0.22668584;0.21573994;0.24458931;0.082577847;0.042910021;0.11784115;0.13338989;0.26522467;0.18846051;0.32772183;0.27706996;0.30233237;0.52762419;0.52309042;0.44506958;0.3057341;0.16298117;0.27110523;0.088572904;0.32600573;0.24318932;0.30253568;0.12552194;0.25740308;0.071045943;0.060609028;0.17267351;0.18898714;0.21894987;0.17243746;0.27090663;0.46711865;0.35948202;0.29633313;0.094809674;0.21816352;0.40388572;0.093118593;0.50607121;0.27039579;0.5062204;0.27013606;0.029296385;0.30318481;0.13104472;0.21755399;0.20075713;0.045241453;0.41539022;0.22897156;0.069468327;0.26075831;0.12133639;0.18548331;0.34045666;0.28301078;0.43171239;0.4222016;0.11984886;0.37929395;0.21235277;0.25861594;0.13353376;0.37183577;0.18769395;0.188723;0.48104909;0.14507216;0.057359237;0.13401593;0.097775683;0.18982919;0.11466902;0.10011159;0.30379614;0.25360981;0.21015169;0.36098212;0.19663131;0.5609802;0.33878443;0.14724396;0.29683742;0.24651825;0.076235577;0.14292142;0.13903101;0.37821347;0.21669845;0.34142405;0.13821478;0.106341;0.31040305;0.25904435;0.36303851;0.040046774;0.19801222;0.065726429;0.30361694;0.40719351;0.12645191;0.098570786;0.096772268;0.098047562;0.4165282;0.064745992;0.3912181;0.29339281;0.059857938;0.15808421;0.12983885;0.30578974;0.39326379;0.1692417;0.33141106;0.24890962;0.49825832;0.09469714;0.16105834;0.45611688;0.16753219;0.16540854;0.44665873;0.22728224;0.37188321;0.060868561;0.45120096;0.05667695;0.34942478;0.072756186;0.15078057;0.41435495;0.07844533;0.21015501;0.24576603;0.068894833;0.2488922;0.29109204;0.26989725;0.085567303;0.24187708;0.20004001;0.26279086;0.32406119;0.28214148;0.044539116;0.53597337;0.18043056;0.35144201;0.074974827;0.18563963;      };
     };
     float_Data @[7] {
      name="epoch_time_tot";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 2.95;2.8900001;2.8099999;2.71;2.5899999;2.5699999;2.4300001;2.3499999;2.3399999;      };
     };
     float_Data @[8] {
      name="epoch_time_usr";
      pin=0;
      is_matrix=0;
      cell_geom{ 1;      };
      ar{ [9] 2.5;2.46;2.3900001;2.3;2.2;2.1900001;2.0699999;1.99;1.98;      };
     };
    };
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
  };
 };
 programs {
  name=;
  el_typ=Program;
  el_def=0;
  step_prog=NULL;
  desc=;
  Program @[0] {
   name="model_and_task_ctrl";
   desc=;
   flags=PF_NONE;
   objs {
    name=;
    el_typ=taNBase;
    el_def=0;
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   functions {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=UserScript;
    el_def=0;
    UserScript @[0] {
     desc="script imported from: ./model_and_task_ctrl.css";
     flags=PEF_NONE;
     user_script=;
    };
   };
  };
  Program_Group @.gp[0] {
   name="LeabraAll_Std";
   el_typ=Program;
   el_def=0;
   step_prog=.projects[0].programs.gp[0][2]$0$;
   desc="The full set of programs for training a standard Leabra network";
   Program @[0] {
    name="LeabraBatch";
    desc="Iterate over training runs";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=.projects[0].networks[0]$1$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[0][0]$2$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[2] {
      name="max_batch";
      var_type=T_Int;
      int_val=10;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      desc="batch counter";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=PEF_NONE;
      network_var=.projects[0].programs.gp[0][0].args[0]$3$;
      local_ctr_var=.projects[0].programs.gp[0][0].vars[0]$4$;
      counter=Network::batch;
     };
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=PEF_NONE;
      network_var=$3$;
      local_ctr_var=$4$;
      counter=Network::batch;
     };
     WhileLoop @[1] {
      desc=;
      flags=PEF_NONE;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=PEF_NONE;
	target=.projects[0].programs.gp[0][1]$5$;
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  name="network";
	  value="network";
	 };
	 ProgArg @[1] {
	  name="input_data";
	  value="input_data";
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=PEF_NONE;
	network_var=$3$;
	local_ctr_var=$4$;
	counter=Network::batch;
       };
      };
      loop_test="batch < max_batch";
     };
    };
   };
   Program @[1] {
    name="LeabraTrain";
    desc="A complete training run of a Leabra network: iterating over epochs until the network has learned the task";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=RndSeed;
     el_def=0;
     RndSeed @[0] {
      name="rnd_seed";
      seed{ 897248114;-1259630319;-1954705695;-2086433643;-1705562578;-246166775;142172280;-1066196830;649876912;-363601797;-1551220787;-201998924;984813377;-1929982005;1866720504;1737535582;-2064818913;-596409631;-537210356;-394821123;-1176302275;-1088439095;390472553;1002483428;-644065336;-93234492;-249392311;1955837623;486322880;268723693;-1316990013;-1148081097;1053267338;-194887551;722894185;-1796145741;-419870710;-744395548;-2126350183;-1623934615;-1975558537;-1109580724;1457379925;952758326;-932820647;-793678521;622734178;-1116891631;992844023;348717466;1162608598;-2078137647;-402129645;-523610230;-892508948;-545793120;1897913877;280270467;-1694155315;294983543;-1251003482;-1650029695;-1335161250;-843867016;1576969605;-260969840;-224140684;1265137246;954732510;2064975050;-1145863940;-1435022393;-1859029257;1513712809;985631399;417291160;-2038587757;-1933156114;888379733;1446724555;-464909414;-1706911051;-1159096460;-1791674743;-147343083;960690226;682596297;1099430942;359127508;311504974;93962501;-1671326033;632618192;-885562045;1179982281;-1505675969;1344906533;-1418551925;1622092278;1701084792;242471559;-1984251903;-1568971862;-1063520265;1591722069;-1959097976;-1601150455;-874166212;-889564662;717605003;-1582378599;-1301052667;1211123575;485189748;-182999148;374766658;1150697026;-738165078;-390496439;960351772;-332421139;71115877;-1747551486;-288197538;2067393244;-402841323;168191432;698976579;-691346957;454158309;419567441;-1655444926;1843518827;-1387150657;-1775972895;1209349907;1737084105;-273997764;2063222132;-629133755;1321145195;-340980602;-64855207;836106865;-384606302;857100345;-616134379;-1192753754;-1534913223;1646103447;-337508797;-104008340;1371554336;1910014402;1731164243;157488784;-1230766726;1651230814;-1801393009;1853249886;-1909629469;-2064890998;-586605120;1029458265;-1567764431;-569878997;-1071722633;1842759325;1870815306;1275367738;-2047480342;699437794;-2078020834;2120915280;1609487567;715455530;-1961002406;-1366381474;1214551640;1682680277;1866914062;-1438763676;1522254727;410589237;1882867230;-2066414372;335577213;-1969515802;-2079897542;1101145964;-914546306;-578950040;-399253994;-1096753521;-660660212;-1198578643;1339175923;-781551297;-1839371394;1105332893;-1928816742;-400816250;1655921312;-452260989;2002840327;447789431;319958765;-658015714;-2019202134;-1586612048;-137582258;706769011;1101838665;827045450;599553857;-2145445088;244597783;1487421271;1630555190;-344172316;-1830139429;-1553867370;-156727033;-755056810;-2131860048;-494346652;1852068823;91308896;725609566;-1111505690;-982815291;1292267944;1836226774;-810066908;-496780978;202956912;603675823;637918661;-10943404;552199869;1297990249;-1519144401;-1727998742;1493519921;-1227758025;-860568373;2118867559;1126222143;-1549971275;-1469719981;-370967157;-1094842937;2081077388;-1045858167;-179155018;-384518151;905350287;-1851803717;571620219;760498291;-480881197;-973785647;838212682;340510526;510321855;-801267485;-852016520;1774211485;39420368;537777206;2107097314;1618664461;210916571;-423959548;631482818;-1040919263;-279241335;-892903760;497369428;1334556795;-290177741;-620998078;1723791759;253979182;2098469877;2033083432;2025527244;-556275368;-1153759308;1554310973;-2109179006;1594713042;-1652347925;-1896234258;1399293819;-1212915145;264979477;2035769098;-26264659;816116738;-1472777223;-1886895409;579752040;1987550252;850378084;-592526232;228677599;-1282752773;-3264037;1636907752;554996081;10747923;1856021975;150743074;1441285143;-284865308;64061770;547700487;2007963302;-518601320;717968026;-1887063740;-1161755710;654757340;624448862;1095845326;1219653475;1112960789;540367258;1430941426;-1573264900;842324047;-1866598839;672477326;-834606497;456739053;2014938441;1820294365;-1127769538;237909957;778195458;-320898672;-493131725;374332760;1492882317;244532839;1469335464;813662131;1904048850;1828753335;1969748325;1462812563;773013089;1263710334;6222118;1806899780;-1306665146;695150693;1034369820;-410885147;-2065109159;-21981403;1688153775;-1834763828;-2034905187;-868895926;-2040902706;760295113;705437415;-801989522;-327259983;340256932;1639347777;676478214;-868392127;-2126595595;1085040460;-101711712;1181203896;-1177629723;1052562025;-385800214;-2127578499;-247860261;-210619237;-1285411717;-1501642238;-1370695642;-901640534;-1139102088;-1435816006;2062624444;733280257;-325264040;815916517;1806401640;106587238;222094010;-1348528385;297616670;-861761020;117428779;2046490308;1520601476;1774880419;2117307057;709856479;658783300;-1019651996;1857641166;-1623434894;-1466106812;1764750271;337867896;1769011978;1878580541;-337505063;55931846;657238908;1968152816;-169076117;-975001150;-619957198;463669432;-1908341507;-643594058;-2026430605;1348524010;-730896925;454931916;416148985;-1578791134;-739712940;-1725329931;204101311;-1062609662;-1691773722;860783264;946450304;1161241387;207536058;3478215;923381087;-305329130;-1353819564;48467194;-497866365;-1191262819;1442954968;-408984143;934531440;1843513070;-1086308879;585900848;-1977125474;-643228730;1005419111;430194483;1169789286;892875109;-1732318651;-897476207;416658129;2090816327;-186559977;-187909452;1699611428;132945605;1386154990;-1021089733;1553010825;1685237703;1771892687;-1665309430;-1471203233;408978895;-1985168698;-1461014828;-475885929;-149644797;184461852;-1631733780;-113049057;1929365839;-1841043271;755994780;1384891379;-572376242;-1822728640;527993133;536302677;-728200547;-1916517795;401821920;777687226;634513383;938837982;-1741204308;-712292839;-888158003;-989731250;1070351745;-997999887;-1220926516;-477621207;-668502217;432615022;341097247;-1817216444;-1580909839;1073812924;-1037427637;-421491456;-2071807233;419582815;835099779;-300811050;1008848942;-622226245;1119083448;2015783992;374250496;417956216;70961961;-1285132279;1021911943;1585993281;1118486430;-946608452;-1704284523;1344252873;908115709;2135579935;636192621;-776174384;533471998;586778067;-154978136;1359740759;1629951629;-1733015859;2121954041;2104107711;-295897115;1345244080;-1738577645;-559564224;1033955967;-1763695458;250221436;-693902564;1091788545;927707887;-712040796;1439001997;1595609215;1364606826;661845780;-755815374;-2034931863;1346096804;-2074100882;-1065691144;654888208;1007146357;778226326;1410374083;1808044267;239070962;-300943249;1387420801;914251343;580430497;1404608152;117575915;1513662704;256310634;-569005681;-1678005121;-1445134348;2053633677;2025466731;-1577911340;-1278866808;-623511374;-1672074119;45321757;1247003680;1061170196;1198754894;-104913407;2054118989;-1781862918;1530368638;-226966082;-707276305;1591871350;331461390;608113940;235882513;-2046843672;-1075932011;-1894925926;1648301914;1170547429;1665497643;-1251944432;-1796010764;-73953480;788544378;1090859788;-1128050928;-145143834;594707390;-728801566;-252193318;1890915838;-834826210;602694736;1275821290;-2078563303;-1397408457;-343458496;1558647263;      };
      mti=156;
     };
     TimeUsed @[1] {name="time_used": start={usr=7898: sys=1407: tot=890105564: }: end={usr=9418: sys=1757: tot=886403602: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[0][3]$6$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=500;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=Network::TrainMode;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[2] {
      name="epoch";
      var_type=T_Int;
      int_val=9;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[3] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[4] {
      name="rnd_seed";
      var_type=T_Object;
      object_type=RndSeed;
      object_val=.projects[0].programs.gp[0][1].objs[0]$7$;
      objs_ptr=1;
      desc=;
     };
     ProgVar @[5] {
      name="time_used";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].programs.gp[0][1].objs[1]$8$;
      objs_ptr=1;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].args[0]$9$;
      method=taBase::CheckConfig;
      args{ false;};
{ bool quiet;      };
     };
     NetCounterInit @[1] {
      desc="initialize epoch counter ";
      flags=PEF_NONE;
      network_var=$9$;
      local_ctr_var=.projects[0].programs.gp[0][1].vars[2]$10$;
      counter=Network::epoch;
     };
     MethodCall @[2] {
      desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].vars[4]$11$;
      method=RndSeed::OldSeed;
      args{ };
{       };
     };
     MethodCall @[3] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$9$;
      method=Network::Init_Weights;
      args{ };
{       };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].vars[5]$12$;
      method=TimeUsed::StartTimer;
      args{ true;};
{ bool reset_used;      };
     };
     NetCounterInit @[1] {
      desc="initialize epoch counter ";
      flags=PEF_NONE;
      network_var=$9$;
      local_ctr_var=$10$;
      counter=Network::epoch;
     };
     UserScript @[2] {
      desc="update network's train mode to be same as ours";
      flags=PEF_NONE;
      user_script="network->train_mode = train_mode;";
     };
     MethodCall @[3] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$9$;
      method=Network::Init_Weights;
      args{ };
{       };
     };
     WhileLoop @[4] {
      desc=;
      flags=PEF_NONE;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=PEF_NONE;
	target=$0$;
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  name="network";
	  value="network";
	 };
	 ProgArg @[1] {
	  name="input_data";
	  value="input_data";
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the epoch counter";
	flags=PEF_NONE;
	network_var=$9$;
	local_ctr_var=$10$;
	counter=Network::epoch;
       };
       IfBreak @[2] {
	desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here too)";
	flags=OFF;
	condition="network->cnt_err <= err_stopcrit";
       };
      };
      loop_test="epoch < max_epoch";
     };
     MethodCall @[5] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$12$;
      method=TimeUsed::EndTimer;
      args{ };
{       };
     };
    };
   };
   Program @[2] {
    name="LeabraEpoch";
    desc="iterates over all of the items in a data table and calls LeabraTrial process on them";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
     TimeUsed @[0] {name="epoch_timer": start={usr=9963: sys=1767: tot=890107989: }: end={usr=9957: sys=1767: tot=890107983: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$6$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial";
      var_type=T_Int;
      int_val=19;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].programs.gp[0][2].objs[0]$13$;
      objs_ptr=1;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter: note also needs to do this in regular running program";
      flags=PEF_NONE;
      network_var=.projects[0].programs.gp[0][2].args[0]$14$;
      local_ctr_var=.projects[0].programs.gp[0][2].vars[0]$15$;
      counter=Network::trial;
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter";
      flags=PEF_NONE;
      network_var=$14$;
      local_ctr_var=$15$;
      counter=Network::trial;
     };
     ProgramCall @[1] {
      desc="initialize the trial monitor data so trial log only has most recent epoch's worth of data (can turn off to keep all data)";
      flags=PEF_NONE;
      target=.projects[0].programs.gp[0][7]$16$;
      call_init=1;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	name="network";
	value="network";
       };
      };
     };
     MethodCall @[2] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][2].vars[1]$17$;
      method=TimeUsed::StartTimer;
      args{ true;};
{ bool reset_used;      };
     };
     BasicDataLoop @[3] {
      desc=;
      flags=PEF_NONE;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       UserScript @[0] {
	desc="set trial to list_idx of data loop -- for dmem code this is the correct trial number";
	flags=PEF_NONE;
	user_script="trial = list_idx; network->trial = list_idx;";
       };
       ProgramCall @[1] {
	desc=;
	flags=PEF_NONE;
	target=.projects[0].programs.gp[0][3]$18$;
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  name="network";
	  value="network";
	 };
	 ProgArg @[1] {
	  name="input_data";
	  value="input_data";
	 };
	};
       };
       IfElse @[2] {
	desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
	flags=PEF_NONE;
	condition="network->Compute_Weights_Test(trial+1)";
	true_code {
	 name=;
	 el_typ=MethodCall;
	 el_def=0;
	 MethodCall @[0] {
	  desc=;
	  flags=PEF_NONE;
	  result_var=NULL;
	  obj=.projects[0].programs.gp[0][3].args[0]$19$;
	  method=Network::Compute_Weights;
	  args{ };
{ 	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	};
       };
      };
      loop_test="This is not used here";
      data_var=.projects[0].programs.gp[0][2].args[1]$20$;
      order=PERMUTED;
      item_idx_list{ 27;12;25;6;9;16;14;33;17;30;32;13;22;23;0;18;11;1;2;24;7;20;31;15;21;29;8;26;28;5;4;19;10;34;3;      };
      dmem_nprocs=1;
      dmem_this_proc=0;
     };
     IfElse @[4] {
      desc="if full batch mode, update only at end of epoch";
      flags=PEF_NONE;
      condition="network->wt_update == Network::BATCH";
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=PEF_NONE;
	result_var=NULL;
	obj=$19$;
	method=Network::Compute_Weights;
	args{ };
{ 	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MethodCall @[5] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$14$;
      method=LeabraNetwork::Compute_EpochStats;
      args{ };
{       };
     };
     MethodCall @[6] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$17$;
      method=TimeUsed::EndTimer;
      args{ };
{       };
     };
     ProgramCall @[7] {
      desc=;
      flags=PEF_NONE;
      target=.projects[0].programs.gp[0][8]$21$;
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	name="network";
	value="network";
       };
      };
     };
    };
   };
   Program @[3] {
    name="LeabraTrial";
    desc="Leabra processing of a single input/toutput event or external information: typically runs a minus and a plus phase, then learns (unless testing)";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$6$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="phase_no";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=PEF_NONE;
      network_var=$19$;
      local_ctr_var=.projects[0].programs.gp[0][3].vars[0]$22$;
      counter=LeabraNetwork::phase_no;
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=PEF_NONE;
      network_var=$19$;
      local_ctr_var=$22$;
      counter=LeabraNetwork::phase_no;
     };
     MethodCall @[1] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$19$;
      method=LeabraNetwork::Trial_Init;
      args{ };
{       };
     };
     WhileLoop @[2] {
      desc=;
      flags=PEF_NONE;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=PEF_NONE;
	target=.projects[0].programs.gp[0][4]$23$;
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  name="network";
	  value="network";
	 };
	 ProgArg @[1] {
	  name="input_data";
	  value="input_data";
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=PEF_NONE;
	network_var=$19$;
	local_ctr_var=$22$;
	counter=LeabraNetwork::phase_no;
       };
       MethodCall @[2] {
	desc=;
	flags=PEF_NONE;
	result_var=NULL;
	obj=$19$;
	method=LeabraNetwork::Trial_UpdatePhase;
	args{ };
{ 	};
       };
      };
      loop_test="phase_no < network->phase_max";
     };
     MethodCall @[3] {
      desc="does Compute_dWt etc";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$19$;
      method=LeabraNetwork::Trial_Final;
      args{ };
{       };
     };
     ProgramCall @[4] {
      desc=;
      flags=PEF_NONE;
      target=$16$;
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	name="network";
	value="network";
       };
      };
     };
     NetUpdateView @[5] {
      desc=;
      flags=PEF_NONE;
      network_var=$19$;
      update_var=.projects[0].programs.gp[0][3].vars[1]$24$;
     };
    };
   };
   Program @[4] {
    name="LeabraSettle";
    desc="iterates over cycles of updating until network has settled into a stable state, or output activations have exceeded a threshold";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$6$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=16;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="min_cycles";
      var_type=T_Int;
      int_val=15;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[2] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=PEF_NONE;
      network_var=.projects[0].programs.gp[0][4].args[0]$25$;
      local_ctr_var=.projects[0].programs.gp[0][4].vars[0]$26$;
      counter=Network::cycle;
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=PEF_NONE;
      network_var=$25$;
      local_ctr_var=$26$;
      counter=Network::cycle;
     };
     MethodCall @[1] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$25$;
      method=Network::Init_InputData;
      args{ };
{       };
     };
     ProgramCall @[2] {
      desc=;
      flags=PEF_NONE;
      target=.projects[0].programs.gp[0][6]$27$;
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	name="network";
	value="network";
       };
       ProgArg @[1] {
	name="input_data";
	value="input_data";
       };
      };
     };
     MethodCall @[3] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$25$;
      method=LeabraNetwork::Settle_Init;
      args{ };
{       };
     };
     UserScript @[4] {
      desc="get min cycles";
      flags=PEF_NONE;
      user_script="if(network->phase_no <= 1) min_cycles = network->min_cycles;
else min_cycles = network->min_cycles_phase2;

";
     };
     WhileLoop @[5] {
      desc=;
      flags=PEF_NONE;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=PEF_NONE;
	target=.projects[0].programs.gp[0][5]$28$;
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  name="network";
	  value="network";
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=PEF_NONE;
	network_var=$25$;
	local_ctr_var=$26$;
	counter=Network::cycle;
       };
       IfContinue @[2] {
	desc="avoid subsequent stopping criteria";
	flags=PEF_NONE;
	condition="cycle < min_cycles";
       };
       IfBreak @[3] {
	desc=;
	flags=PEF_NONE;
	condition="(network->maxda < network->maxda_stopcrit) ||
 (network->trg_max_act > network->trg_max_act_stopcrit)";
       };
      };
      loop_test="cycle < network->cycle_max";
     };
     MethodCall @[6] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$25$;
      method=LeabraNetwork::Settle_Final;
      args{ };
{       };
     };
     IfElse @[7] {
      desc="only run sse in minus phase";
      flags=PEF_NONE;
      condition="network->phase == LeabraNetwork::MINUS_PHASE";
      true_code {
       name=;
       el_typ=MethodCall;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=PEF_NONE;
	result_var=NULL;
	obj=$25$;
	method=LeabraNetwork::Compute_TrialStats;
	args{ };
{ 	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     IfElse @[8] {
      desc="this stat must be called in plus phase when reward information is avail";
      flags=PEF_NONE;
      condition="network->phase_no == 1";
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=PEF_NONE;
	result_var=NULL;
	obj=$25$;
	method=LeabraNetwork::Compute_ExtRew;
	args{ };
{ 	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     NetUpdateView @[9] {
      desc=;
      flags=PEF_NONE;
      network_var=$25$;
      update_var=.projects[0].programs.gp[0][4].vars[2]$29$;
     };
    };
   };
   Program @[5] {
    name="LeabraCycle";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][5].args[0]$30$;
      method=LeabraNetwork::Cycle_Run;
      args{ };
{       };
     };
     NetUpdateView @[1] {
      desc=;
      flags=PEF_NONE;
      network_var=$30$;
      update_var=.projects[0].programs.gp[0][5].vars[0]$31$;
     };
    };
   };
   Program @[6] {
    name="ApplyInputs";
    desc="apply the current input data to the network as external input and target values";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$6$;
      network=$1$;
      layer_data {
       name=;
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	chan_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ ;;;;;;;;;;;;;;;;;;;;;;;;;	};
       };
       LayerWriterEl @[1] {
	chan_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=TARG;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ V0;V1;V2;V3;V4;H0;H1;H2;H3;H4;	};
       };
       LayerWriterEl @[2] {
	chan_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=NO_EXTERNAL;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
      };
     };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$6$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="LayerWriter_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.projects[0].programs.gp[0][6].objs[0]$32$;
      objs_ptr=1;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][6].vars[0]$33$;
      method=LayerWriter::SetDataNetwork;
      args{ input_data;network;};
{ DataBlock* db;Network* net;      };
     };
     MethodCall @[1] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$33$;
      method=taList_impl::CheckConfig;
      args{ false;};
{ bool quiet;      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="apply inputs to the network!";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$33$;
      method=LayerWriter::ApplyInputData;
      args{ };
{       };
     };
    };
   };
   Program @[7] {
    name="LeabraTrialMonitor";
    desc="monitor trial-level data from the network";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="phase_no";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="phase_no";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="cycle";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="minus_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=.projects[0].data.gp[1][0]$34$;
      rmv_orphan_cols=1;
     };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$34$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][7].objs[0]$35$;
      objs_ptr=1;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[1]$36$;
      method=NetMonitor::SetDataNetwork;
      args{ trial_mon_data;network;};
{ DataTable* dt;Network* net;      };
     };
     MethodCall @[1] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$36$;
      method=taBase::CheckConfig;
      args{ false;};
{ bool quiet;      };
     };
     MethodCall @[2] {
      desc="Initialize monitoring data (get rid of any existing)";
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[0]$37$;
      method=DataTable::ResetData;
      args{ };
{       };
     };
     MethodCall @[3] {
      desc="update the monitor items and data schema";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$36$;
      method=NetMonitor::UpdateMonitors;
      args{ false;};
{ bool reset_first;      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$37$;
      method=DataTable::AddBlankRow;
      args{ };
{       };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$36$;
      method=NetMonitor::GetMonVals;
      args{ };
{       };
     };
     MethodCall @[2] {
      desc="update after writing new data to monitor data table";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$37$;
      method=DataBlock::WriteClose;
      args{ };
{       };
     };
     MethodCall @[3] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].args[0]$38$;
      method=Network::DMem_ShareTrialData;
      args{ trial_mon_data;1;};
{ DataTable* dt;int n_rows;      };
     };
    };
   };
   Program @[8] {
    name="LeabraEpochMonitor";
    desc="monitor epoch-level data from the network";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="Hidden_Fm_Input_r_wt";
	computed=0;
	object_type=LeabraPrjn;
	object=.projects[0].networks[0].layers[1].projections[0]$39$;
	variable="r.wt";
	var_label="r_wt";
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=.projects[0].data.gp[1][1]$40$;
      rmv_orphan_cols=1;
     };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$40$;
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][8].objs[0]$41$;
      objs_ptr=1;
      desc=;
     };
     ProgVar @[2] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$13$;
      objs_ptr=0;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[1]$42$;
      method=NetMonitor::SetDataNetwork;
      args{ epoch_mon_data;network;};
{ DataTable* dt;Network* net;      };
     };
     MethodCall @[1] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$42$;
      method=taBase::CheckConfig;
      args{ false;};
{ bool quiet;      };
     };
     MethodCall @[2] {
      desc="update the monitor items and data schema";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$42$;
      method=NetMonitor::UpdateMonitors;
      args{ true;};
{ bool reset_first;      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=PEF_NONE;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[0]$43$;
      method=DataTable::AddBlankRow;
      args{ };
{       };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$42$;
      method=NetMonitor::GetMonVals;
      args{ };
{       };
     };
     UserScript @[2] {
      desc="set the timing information from the epoch timer";
      flags=PEF_NONE;
      user_script="epoch_mon_data.SetDataByName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\");
epoch_mon_data.SetDataByName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\");

";
     };
     MethodCall @[3] {
      desc="update after writing new data to monitor data table";
      flags=PEF_NONE;
      result_var=NULL;
      obj=$43$;
      method=DataBlock::WriteClose;
      args{ };
{       };
     };
    };
   };
   Program @[9] {
    name="SaveWeights";
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    flags=PF_NONE;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="fname";
      var_type=T_String;
      string_val="/Users/oreilly/pdp4.0/trunk/test/leabra_ra.03_0036.wts.gz";
      objs_ptr=0;
      desc=;
     };
     ProgVar @[1] {
      name="epoch_str";
      var_type=T_String;
      string_val="0036";
      objs_ptr=0;
      desc="string rep of epoch with leading zeros";
     };
     ProgVar @[2] {
      name="batch_str";
      var_type=T_String;
      string_val="03";
      objs_ptr=0;
      desc="string rep of batch with leading zeros";
     };
     ProgVar @[3] {
      name="tag";
      var_type=T_String;
      string_val=".03_0036";
      objs_ptr=0;
      desc="batch + epoch";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MiscCall @[0] {
      desc=;
      flags=PEF_NONE;
      result_var=.projects[0].programs.gp[0][9].vars[2]$44$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      args{ network->batch;2;};
{ int num;int len;      };
     };
     MiscCall @[1] {
      desc=;
      flags=PEF_NONE;
      result_var=.projects[0].programs.gp[0][9].vars[1]$45$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      args{ network->epoch;4;};
{ int num;int len;      };
     };
     AssignExpr @[2] {
      desc=;
      flags=PEF_NONE;
      result_var=.projects[0].programs.gp[0][9].vars[3]$46$;
      expr="\".\" + batch_str + \"_\" + epoch_str";
     };
     MethodCall @[3] {
      desc=;
      flags=PEF_NONE;
      result_var=.projects[0].programs.gp[0][9].vars[0]$47$;
      obj=.projects[0].programs.gp[0][9].args[0]$48$;
      method=taBase::GetFileNameFmProject;
      args{ ".wts.gz";tag;false;};
{ const taString& ext;const taString& tag;bool dmem_proc_no;      };
     };
     MethodCall @[4] {
      desc=;
      flags=PEF_NONE;
      result_var=NULL;
      obj=$48$;
      method=Network::SaveWeights;
      args{ fname;Network::NET_FMT;};
{ const taString& fname;Network::WtSaveFormat fmt;      };
     };
    };
   };
  };
 };
 viewers {
  name=;
  el_typ=TopLevelViewer;
  el_def=0;
  MainWindowViewer @[0] {
   m_data=.projects[0]$49$;
   name="DefaultProjectBrowser";
   display_toggle=1;
   visible=1;
   m_is_root=0;
   m_is_proj_viewer=1;
   toolbars {
    name=;
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     m_data=NULL;
     name="Application";
     display_toggle=1;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name=;
    el_typ=FrameViewer;
    el_def=0;
    tabBrowseViewer @[0] {
     m_data=NULL;
     name="Tree";
     display_toggle=1;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$49$;
    };
    PanelViewer @[1] {
     m_data=NULL;
     name="Panels";
     display_toggle=1;
     visible=1;
    };
    T3DataViewer @[2] {
     m_data=NULL;
     name="DefaultViewer";
     display_toggle=1;
     visible=1;
     frames {
      name=;
      el_typ=T3DataViewFrame;
      el_def=0;
      T3DataViewFrame @[0] {
       m_data=NULL;
       name="DefaultFrame";
       display_toggle=1;
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 NetView @[0] {
	  m_data=$1$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=T3DataView;
	   el_def=0;
	   LayerView @[0] {
	    m_data=.projects[0].networks[0].layers[0]$50$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.1666667: z=0: }: };
	   };
	   LayerView @[1] {
	    m_data=.projects[0].networks[0].layers[1]$51$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.5: z=0: }: };
	   };
	   LayerView @[2] {
	    m_data=.projects[0].networks[0].layers[2]$52$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.8333333: z=0: }: };
	   };
	   PrjnView @[3] {
	    m_data=$39$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.5: y=0.1666667: z=-1: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[4] {
	    m_data=.projects[0].networks[0].layers[1].projections[1]$53$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.5: y=0.8333333: z=-0.4: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[5] {
	    m_data=.projects[0].networks[0].layers[2].projections[0]$54$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.5: y=0.5: z=-1: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	  };
	  scale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs[0]$55$;
	   auto_scale=0;
	  };
	  scale_ranges {
	   name=;
	   el_typ=ScaleRange;
	   el_def=0;
	   ScaleRange @[0] {
	    name="act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[1] {
	    name="r.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	  };
	  display=1;
	  ordered_uvg_list{ 0;	  };
	  unit_disp_mode=UDM_BLOCK;
	  unit_text_disp=UTD_NONE;
	  max_size {x=5: y=5: z=3: };
	  font_sizes {
	   net_name=0.05;
	   net_vals=0.05;
	   layer=0.04;
	   layer_vals=0.03;
	   prjn=0.01;
	   unit=0.02;
	  };
	  view_params {
	   xy_square=0;
	   unit_spacing=0.05;
	   prjn_width=0.001;
	   prjn_trans=0.5;
	   lay_trans=0.5;
	   unit_trans=0.6;
	  };
	  network_pos {x=0: y=0: z=0: };
	  network_scale {x=1: y=1: z=1: };
	  network_orient {x=0: y=0: z=1: rot=0: };
	 };
	 GridTableView @[1] {
	  GridTableViewSpec @.view_spec {
	   m_data=$40$;
	   name="EpochOutputData";
	   display_name=;
	   visible=1;
	   font {fontName="Lucida Grande": attribs=0: pointSize=8: stretch=100: };
	   col_specs {
	    name=;
	    el_typ=GridColViewSpec;
	    el_def=0;
	    GridColViewSpec @[0] {
	     m_data=.projects[0].data.gp[1][1].data[0]$56$;
	     name="batch";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[1] {
	     m_data=.projects[0].data.gp[1][1].data[1]$57$;
	     name="epoch";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[2] {
	     m_data=.projects[0].data.gp[1][1].data[2]$58$;
	     name="avg_sse";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[3] {
	     m_data=.projects[0].data.gp[1][1].data[3]$59$;
	     name="cnt_err";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[4] {
	     m_data=.projects[0].data.gp[1][1].data[4]$60$;
	     name="avg_ext_rew";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=11;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[5] {
	     m_data=.projects[0].data.gp[1][1].data[5]$61$;
	     name="avg_cycles";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=10;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[6] {
	     m_data=.projects[0].data.gp[1][1].data[6]$62$;
	     name="Hidden_Fm_Input_r_wt";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=20;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[7] {
	     m_data=.projects[0].data.gp[1][1].data[7]$63$;
	     name="epoch_time_tot";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=14;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[8] {
	     m_data=.projects[0].data.gp[1][1].data[8]$64$;
	     name="epoch_time_usr";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=14;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	   };
	   grid_margin=0.1;
	   grid_line_size=0.05;
	   row_num_width=4;
	   mat_size_range {min=4: max=16: };
	   mat_val_text=0;
	   mat_block_spc=0.1;
	   mat_block_height=0.2;
	   mat_trans=0.6;
	  };
FloatTransform @*(.m_transform) {scale={x=1.523685: y=1.523684: z=1.523685: }: rotate={x=-0.9999824: y=0.005366601: z=-0.0025933: rot=0.9002994: }: translate={x=1.348228: y=0.5256445: z=-1.588981: }: };
	  children {
	   name=;
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=3;
	  view_range {min=6: max=8: };
	  display_on=1;
	  table_pos {x=1.348228: y=0.5256445: z=-1.588981: };
	  table_scale {x=1.523685: y=1.523684: z=1.523685: };
	  table_orient {x=-0.9999824: y=0.005366601: z=-0.0025933: rot=0.9002994: };
	  col_n=5;
	  col_range {min=5: max=8: };
	  grid_on=1;
	  header_on=1;
	  row_num_on=1;
	  auto_scale=0;
	  scale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$55$;
	   auto_scale=1;
	  };
	  scale_range {min=-1: max=1: };
	  view_spec {
	   m_data=$40$;
	   name="EpochOutputData";
	   display_name=;
	   visible=1;
	   font {fontName="Lucida Grande": attribs=0: pointSize=8: stretch=100: };
	   col_specs {
	    name=;
	    el_typ=GridColViewSpec;
	    el_def=0;
	    GridColViewSpec @[0] {
	     m_data=$56$;
	     name="batch";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[1] {
	     m_data=$57$;
	     name="epoch";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[2] {
	     m_data=$58$;
	     name="avg_sse";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[3] {
	     m_data=$59$;
	     name="cnt_err";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=8;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[4] {
	     m_data=$60$;
	     name="avg_ext_rew";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=11;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[5] {
	     m_data=$61$;
	     name="avg_cycles";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=10;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[6] {
	     m_data=$62$;
	     name="Hidden_Fm_Input_r_wt";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=20;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[7] {
	     m_data=$63$;
	     name="epoch_time_tot";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=14;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	    GridColViewSpec @[8] {
	     m_data=$64$;
	     name="epoch_time_usr";
	     display_name=;
	     visible=1;
	     sticky=0;
	     text_width=14;
	     scale_on=1;
	     mat_layout=BOT_ZERO;
	     mat_image=0;
	     mat_odd_vert=1;
	    };
	   };
	   grid_margin=0.1;
	   grid_line_size=0.05;
	   row_num_width=4;
	   mat_size_range {min=4: max=16: };
	   mat_val_text=0;
	   mat_block_spc=0.1;
	   mat_block_height=0.2;
	   mat_trans=0.6;
	  };
	 };
	};
       };
       camera_pos {x=0.8699474: y=2.019697: z=1.828092: };
       camera_orient {x=-0.9992971: y=-0.03695715: z=-0.006218588: rot=0.6638767: };
       camera_focdist=2.957551;
      };
     };
    };
   };
   docks {
    name=;
    el_typ=DockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     m_data=NULL;
     name="Tools";
     display_toggle=1;
     visible=1;
     dock_flags=6;
     dock_area=1;
    };
   };
  };
 };
 use_sim_log=0;
 networks {
  name=;
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   name="LeabraNetwork_0";
   desc=;
   specs {
    name=;
    el_typ=LeabraUnitSpec;
    el_def=0;
    LeabraUnitSpec @[0] {
     name="UnitSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs[4]$65$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=0: i_thr=STD: };
     spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
     depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
     opt_thresh {send=0.1: delta=0.005: learn=0: updt_wts=1: phase_dif=0: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=1: range=1: scale=1: };
     v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
     dt {vm=0.2: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
     g_bar {e=1: l=0.1: i=1: h=0.1: a=0.5: };
     e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
     hyst {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=1: };
     acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=1: };
     act_reg {on=0: min=0.001: max=0.35: wt_dt=0.2: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     noise_type=NO_NOISE;
     noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
     noise_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=1;
      cur_val=0;
     };
    };
    LeabraConSpec @[1] {
     name="ConSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraConSpec;
      el_def=0;
     };
     rnd {type=UNIFORM: mean=0.25: var=0.2: par=1: };
     wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
     inhib=0;
     wt_scale {abs=1: rel=1: };
     wt_sig {gain=6: off=1.25: };
     lrate=0.01;
     cur_lrate=0.01;
     lrs_value=EPOCH;
     lrate_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=0;
      cur_val=1;
     };
     lmix {hebb=0.05: err=0.95: err_sb=1: };
     savg_cor {cor=0.5: thresh=0.01: norm_con_n=0: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.05;
     };
    };
    LeabraLayerSpec @[2] {
     name="InputLayer";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraLayerSpec;
      el_def=0;
      LeabraLayerSpec @[0] {
       name="HiddenLayer";
       desc=;
       unique{ kwta;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       kwta {k_from=USE_K: k=6: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       inhib_group=ENTIRE_LAYER;
       compute_i=KWTA_AVG_INHIB;
       i_kwta_pt=0.6;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
       net_rescale {on=0: max_net=0.8: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
      LeabraLayerSpec @[1] {
       name="OneUnitActive";
       desc=;
       unique{ kwta;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       kwta {k_from=USE_K: k=1: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       inhib_group=ENTIRE_LAYER;
       compute_i=KWTA_AVG_INHIB;
       i_kwta_pt=0.6;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
       net_rescale {on=0: max_net=0.8: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
      LeabraLayerSpec @[2] {
       name="OutputLayer";
       desc=;
       unique{ kwta;compute_i;i_kwta_pt;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       kwta {k_from=USE_K: k=2: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       inhib_group=ENTIRE_LAYER;
       compute_i=KWTA_INHIB;
       i_kwta_pt=0.25;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
       net_rescale {on=0: max_net=0.8: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
     };
     kwta {k_from=USE_PAT_K: k=5: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_PCT: k=12: pct=0.23: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     inhib_group=ENTIRE_LAYER;
     compute_i=KWTA_AVG_INHIB;
     i_kwta_pt=0.6;
     gp_i_pt=0.2;
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: d_gain=0: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
     net_rescale {on=0: max_net=0.8: net_extra=0.2: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.05;
     };
    };
    FullPrjnSpec @[3] {
     name="FullPrjnSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
    };
    LeabraBiasSpec @[4] {
     name="LeabraBiasSpec_0";
     desc=;
     unique{ rnd;wt_limits;wt_scale;     };
     children {
      name=;
      el_typ=LeabraBiasSpec;
      el_def=0;
     };
     rnd {type=UNIFORM: mean=0: var=0: par=1: };
     wt_limits {type=NONE: min=-1: max=5: sym=0: };
     inhib=0;
     wt_scale {abs=1: rel=1: };
     wt_sig {gain=6: off=1.25: };
     lrate=0.01;
     cur_lrate=0.01;
     lrs_value=EPOCH;
     lrate_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=0;
      cur_val=1;
     };
     lmix {hebb=0.01: err=0.99: err_sb=1: };
     savg_cor {cor=1: thresh=0.01: norm_con_n=0: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.05;
     };
     dwt_thresh=0.1;
    };
   };
   layers {
    name=;
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    LeabraLayer @[0] {
     name="Input";
     layer_type=INPUT;
     pos {x=0: y=0: z=0: };
     un_geom {x=5: y=5: n_not_xy=0: n=25: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=5: y=5: n_not_xy=0: n=25: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[0];
     };
     units {
      name=;
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      LeabraUnit @[0] {
       name=;
       spec {type=LeabraUnitSpec: spec=.projects[0].networks[0].specs[0]$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs[1]$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=0: y=0: z=0: };
       idx=0;
       act_avg=0.2948605;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[1] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=1: y=0: z=0: };
       idx=1;
       act_avg=0.337326;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[2] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=2: y=0: z=0: };
       idx=2;
       act_avg=0.3670349;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[3] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=3: y=0: z=0: };
       idx=3;
       act_avg=0.3381328;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[4] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=4: y=0: z=0: };
       idx=4;
       act_avg=0.3664322;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[5] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=0: y=1: z=0: };
       idx=5;
       act_avg=0.2768888;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[6] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=1: y=1: z=0: };
       idx=6;
       act_avg=0.3350227;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[7] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=2: y=1: z=0: };
       idx=7;
       act_avg=0.3448482;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[8] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=3: y=1: z=0: };
       idx=8;
       act_avg=0.3197579;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[9] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=4: y=1: z=0: };
       idx=9;
       act_avg=0.3197881;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[10] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=0: y=2: z=0: };
       idx=10;
       act_avg=0.3090821;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[11] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=1: y=2: z=0: };
       idx=11;
       act_avg=0.3421731;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[12] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=2: y=2: z=0: };
       idx=12;
       act_avg=0.3804913;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[13] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=3: y=2: z=0: };
       idx=13;
       act_avg=0.3710528;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[14] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=4: y=2: z=0: };
       idx=14;
       act_avg=0.3518913;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[15] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=0: y=3: z=0: };
       idx=15;
       act_avg=0.2915065;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[16] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=1: y=3: z=0: };
       idx=16;
       act_avg=0.3099646;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[17] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=2: y=3: z=0: };
       idx=17;
       act_avg=0.3399153;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[18] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=3: y=3: z=0: };
       idx=18;
       act_avg=0.3145718;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[19] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=4: y=3: z=0: };
       idx=19;
       act_avg=0.3198266;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[20] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=0: y=4: z=0: };
       idx=20;
       act_avg=0.2719924;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[21] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=1: y=4: z=0: };
       idx=21;
       act_avg=0.3100362;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[22] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=2: y=4: z=0: };
       idx=22;
       act_avg=0.3443074;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[23] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=0;
       act=0;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=3: y=4: z=0: };
       idx=23;
       act_avg=0.2945614;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[24] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=EXT;
       targ=0;
       ext=1;
       act=0.95;
       net=0;
       recv {
	name=;
	el_typ=RecvCons;
	el_def=0;
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0; };
       };
       n_recv_cons=0;
       pos {x=4: y=4: z=0: };
       idx=24;
       act_avg=0.2952616;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
     };
     unit_spec {type=LeabraUnitSpec: spec=$66$: };
     lesion=0;
     ext_flag=EXT;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0.342: max=0.95: max_i=4: };
     acts_p {avg=0.342: max=0.95: max_i=0: };
     acts_m {avg=0.342: max=0.95: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=9: pct=0.36: pct_c=0.64: adth_k=5: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0.6: gp_g_i=0: g_i_orig=0.6: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.2: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[2]$68$: };
     stm_gain=0.5;
     hard_clamped=1;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[1] {
     name="Hidden";
     layer_type=HIDDEN;
     pos {x=0: y=0: z=1: };
     un_geom {x=5: y=5: n_not_xy=0: n=25: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=5: y=5: n_not_xy=0: n=25: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$50$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs[3]$69$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$67$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Output";
       from_type=CUSTOM;
       from=$52$;
       spec {type=FullPrjnSpec: spec=$69$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$67$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[0];
     };
     units {
      name=;
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      LeabraUnit @[0] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0.9293761;
       net=0.3005619;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2120796; 0.1313443; 0.2824548; 0.1820996; 0.3005458; 0.1795679; 0.3179573; 0.4548881; 0.4405863; 0.5644919; 0.1203959; 0.2215119; 0.08092307; 0.1910964; 0.5197759; 0.1782207; 0.1230341; 0.1656722; 0.2289437; 0.4833465; 0.2220856; 0.1114439; 0.3468789; 0.2133023; 0.4395361; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.08575594; 0.2148854; 0.2132247; 0.2434196; 0.5669828; 0.1897066; 0.5209839; 0.09591877; 0.06124577; 0.134008; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.02729224; };
       };
       n_recv_cons=35;
       pos {x=0: y=0: z=0: };
       idx=0;
       act_avg=0.3073378;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[1] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=5.547693e-16;
       net=0.164092;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.09823292; 0.2337262; 0.1221366; 0.2206762; 0.1970066; 0.2366822; 0.3119119; 0.1427903; 0.1691283; 0.3119546; 0.1175032; 0.4043831; 0.4038871; 0.3595954; 0.4551058; 0.08090012; 0.2555234; 0.2203866; 0.06900546; 0.1285006; 0.2703738; 0.445634; 0.09871332; 0.2744576; 0.07842252; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.09541278; 0.3438605; 0.05776814; 0.2748786; 0.2387345; 0.0498067; 0.1918775; 0.3638124; 0.07539167; 0.1975036; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.001943173; };
       };
       n_recv_cons=35;
       pos {x=1: y=0: z=0: };
       idx=1;
       act_avg=0.1268442;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[2] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0.9482286;
       net=0.3396568;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1639902; 0.1663459; 0.1188204; 0.2330103; 0.5174769; 0.1518296; 0.1105417; 0.05718672; 0.1116586; 0.09689657; 0.4134161; 0.1002803; 0.3326976; 0.3517462; 0.4922242; 0.3890079; 0.2470286; 0.2280943; 0.1917751; 0.4661011; 0.2788833; 0.3272719; 0.1853419; 0.09929293; 0.5106602; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1104146; 0.153888; 0.0975819; 0.2024069; 0.4477623; 0.2486119; 0.05528249; 0.3720445; 0.363973; 0.2659028; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.01874864; };
       };
       n_recv_cons=35;
       pos {x=2: y=0: z=0: };
       idx=2;
       act_avg=0.3114152;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[3] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=7.464873e-14;
       net=0.1646038;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.5655812; 0.4224199; 0.3612466; 0.0800954; 0.252545; 0.2285291; 0.2314878; 0.2046251; 0.2088515; 0.1568135; 0.306073; 0.208937; 0.1689464; 0.3117113; 0.3136025; 0.3135578; 0.2744023; 0.1326076; 0.2964244; 0.0434308; 0.365218; 0.3460365; 0.04001572; 0.09654155; 0.1896673; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.4831648; 0.1960319; 0.06542829; 0.1737888; 0.2146556; 0.389265; 0.3105169; 0.2185997; 0.05398796; 0.1246173; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.03329362; };
       };
       n_recv_cons=35;
       pos {x=3: y=0: z=0: };
       idx=3;
       act_avg=0.2042685;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[4] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0.02234213;
       net=0.2272685;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.343215; 0.2470032; 0.3477165; 0.3132579; 0.1215647; 0.1489598; 0.247153; 0.1290107; 0.2982761; 0.2692597; 0.2313965; 0.1773845; 0.3382605; 0.1881065; 0.1777467; 0.3157183; 0.3692105; 0.3568909; 0.306255; 0.3046658; 0.3105488; 0.05304851; 0.2972649; 0.07246403; 0.3479751; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1341376; 0.1577795; 0.2420907; 0.1958304; 0.0658591; 0.05068426; 0.3184421; 0.05487435; 0.3956318; 0.1606451; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.0321016; };
       };
       n_recv_cons=35;
       pos {x=4: y=0: z=0: };
       idx=4;
       act_avg=0.08812822;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[5] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=5.608206e-11;
       net=0.1882449;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.4381485; 0.5105997; 0.5159004; 0.1935004; 0.5918062; 0.3085211; 0.06275487; 0.1075354; 0.2784151; 0.08358347; 0.1374957; 0.1318909; 0.2099253; 0.06983457; 0.1042242; 0.1641079; 0.2044744; 0.08870938; 0.2124725; 0.2945632; 0.1591764; 0.2584747; 0.1904723; 0.1234098; 0.2025268; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1948667; 0.1831161; 0.1807466; 0.2243741; 0.1020491; 0.6351625; 0.2165056; 0.1660078; 0.3186286; 0.1757772; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.007770019; };
       };
       n_recv_cons=35;
       pos {x=0: y=1: z=0: };
       idx=5;
       act_avg=0.2034065;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[6] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0;
       net=0.1616967;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1465624; 0.143577; 0.174157; 0.2054887; 0.08306259; 0.203517; 0.1336499; 0.3412553; 0.1353962; 0.1595336; 0.1503971; 0.2448789; 0.1464804; 0.2259642; 0.05826719; 0.2757739; 0.2416523; 0.3045206; 0.1096434; 0.3567737; 0.4664665; 0.5548402; 0.5783719; 0.5399232; 0.2296764; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1138216; 0.2058529; 0.2908272; 0.2126139; 0.06735433; 0.2237031; 0.2162453; 0.2065229; 0.2542273; 0.5159428; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.01745316; };
       };
       n_recv_cons=35;
       pos {x=1: y=1: z=0: };
       idx=6;
       act_avg=0.1739957;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[7] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=7.657184e-06;
       net=0.2162443;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2068908; 0.1626638; 0.07244618; 0.09207982; 0.1219066; 0.2006532; 0.03598204; 0.1495495; 0.3247502; 0.2129388; 0.3585821; 0.1462652; 0.1577962; 0.1508906; 0.162848; 0.186824; 0.2262355; 0.1707511; 0.2022751; 0.3387156; 0.270413; 0.2048946; 0.5581897; 0.2659787; 0.330278; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.04616119; 0.1809993; 0.07033849; 0.3402918; 0.1824889; 0.04076267; 0.2168294; 0.3393419; 0.36493; 0.5584766; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.001014308; };
       };
       n_recv_cons=35;
       pos {x=2: y=1: z=0: };
       idx=7;
       act_avg=0.1674969;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[8] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0;
       net=0.1451145;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1505724; 0.3761421; 0.2301543; 0.2698157; 0.2217234; 0.4037456; 0.4068573; 0.1778976; 0.07295743; 0.09499902; 0.1584163; 0.3675808; 0.3623916; 0.05621863; 0.08375357; 0.2746059; 0.111295; 0.06546387; 0.1169376; 0.1528892; 0.4025031; 0.1877811; 0.3669586; 0.3886006; 0.3563498; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.07868756; 0.1658272; 0.2761357; 0.1526869; 0.1846559; 0.1080771; 0.3272183; 0.1713079; 0.12796; 0.3255888; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.002659895; };
       };
       n_recv_cons=35;
       pos {x=3: y=1: z=0: };
       idx=8;
       act_avg=0.05356385;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[9] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0;
       net=0.151163;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.3929614; 0.1877959; 0.3667084; 0.2575873; 0.1488972; 0.1844744; 0.5527242; 0.07711921; 0.07722383; 0.2051257; 0.3267903; 0.3271947; 0.115061; 0.2498723; 0.1823998; 0.151434; 0.4353469; 0.05085087; 0.09784228; 0.3297817; 0.3735493; 0.5629179; 0.2050463; 0.2697813; 0.1932325; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1981949; 0.6040062; 0.1224649; 0.1802754; 0.1208078; 0.1875734; 0.1788424; 0.1612523; 0.144291; 0.2437581; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.02102706; };
       };
       n_recv_cons=35;
       pos {x=4: y=1: z=0: };
       idx=9;
       act_avg=0.1839164;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[10] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0.9303667;
       net=0.319233;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.04657515; 0.2172532; 0.1257363; 0.1153075; 0.3860956; 0.1611094; 0.3392426; 0.3775076; 0.1787581; 0.05921896; 0.252896; 0.242606; 0.1933587; 0.1325354; 0.3181118; 0.4737371; 0.2149675; 0.5358114; 0.4332579; 0.5528232; 0.1023939; 0.2827995; 0.3785678; 0.2638291; 0.06909306; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.0415903; 0.2990222; 0.3731349; 0.1397533; 0.2380481; 0.1813706; 0.09986853; 0.1055394; 0.5328821; 0.09411772; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.00433749; };
       };
       n_recv_cons=35;
       pos {x=0: y=2: z=0: };
       idx=10;
       act_avg=0.2324725;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[11] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0.7317894;
       net=0.2628168;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.075256; 0.07694396; 0.2601468; 0.1942779; 0.2812553; 0.1967757; 0.1177282; 0.05148783; 0.3430414; 0.2563334; 0.09880976; 0.4086275; 0.4162216; 0.2232435; 0.201713; 0.3435283; 0.3372755; 0.3524556; 0.4528196; 0.3955871; 0.172478; 0.06226104; 0.3913123; 0.0528249; 0.1794633; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1757026; 0.1892559; 0.1791999; 0.1226042; 0.1511159; 0.06395146; 0.04695207; 0.3217613; 0.4119135; 0.1566313; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.00686198; };
       };
       n_recv_cons=35;
       pos {x=1: y=2: z=0: };
       idx=11;
       act_avg=0.118226;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[12] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=6.503098e-18;
       net=0.1482882;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1783639; 0.3424601; 0.3940394; 0.2890276; 0.4360713; 0.2199003; 0.419287; 0.1652791; 0.1040175; 0.2450575; 0.2473578; 0.2042465; 0.2692229; 0.1139912; 0.1499208; 0.3207718; 0.1731226; 0.3096854; 0.04422443; 0.1975373; 0.3383067; 0.1947153; 0.1693016; 0.2694033; 0.2824914; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.2527828; 0.3346081; 0.3076143; 0.1230738; 0.04263373; 0.3647591; 0.2530192; 0.04888774; 0.131057; 0.3415296; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.03737977; };
       };
       n_recv_cons=35;
       pos {x=2: y=2: z=0: };
       idx=12;
       act_avg=0.1719779;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[13] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0.8120738;
       net=0.2731292;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2328879; 0.1555086; 0.4083221; 0.2894257; 0.4055515; 0.2340965; 0.05804386; 0.2307157; 0.1797084; 0.137458; 0.4208663; 0.1036197; 0.2167053; 0.3790738; 0.2546689; 0.3006379; 0.1231323; 0.1875206; 0.3211608; 0.3227498; 0.3152052; 0.1252852; 0.3439613; 0.3397836; 0.4106615; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.2671794; 0.08845301; 0.3927074; 0.2967539; 0.4439407; 0.200312; 0.1007636; 0.2755913; 0.2076339; 0.2280709; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.04184678; };
       };
       n_recv_cons=35;
       pos {x=3: y=2: z=0: };
       idx=13;
       act_avg=0.3504609;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[14] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=1.464697e-12;
       net=0.1890869;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2061654; 0.2373669; 0.3413647; 0.04165141; 0.1536809; 0.370645; 0.1255446; 0.1070875; 0.2480312; 0.2587333; 0.2459386; 0.2185009; 0.3996248; 0.08385494; 0.0863619; 0.2127586; 0.1918083; 0.3833565; 0.1877238; 0.1728285; 0.07233309; 0.2145025; 0.3256852; 0.1766227; 0.1630169; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.2649512; 0.1021372; 0.3939803; 0.2500723; 0.09413318; 0.0536652; 0.3651654; 0.05725431; 0.3732201; 0.1323749; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.03817891; };
       };
       n_recv_cons=35;
       pos {x=4: y=2: z=0: };
       idx=14;
       act_avg=0.09570412;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[15] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=2.76729e-13;
       net=0.1682946;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2816129; 0.3555376; 0.4255506; 0.3010645; 0.2602121; 0.2658595; 0.1830657; 0.1328634; 0.134969; 0.3111435; 0.1636596; 0.08525051; 0.4277564; 0.07415054; 0.263921; 0.3375085; 0.1223319; 0.1628905; 0.2507403; 0.2031558; 0.221612; 0.28565; 0.3832175; 0.2402756; 0.05329116; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.3060041; 0.3321347; 0.5048868; 0.2565149; 0.2292546; 0.2651539; 0.1725109; 0.1260806; 0.06713336; 0.07399637; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.02970689; };
       };
       n_recv_cons=35;
       pos {x=0: y=3: z=0: };
       idx=15;
       act_avg=0.2105152;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[16] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=5.461572e-16;
       net=0.1602938;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.3709057; 0.1923829; 0.3563583; 0.1835412; 0.2878338; 0.05071724; 0.1608658; 0.3257965; 0.4392801; 0.2644604; 0.04301456; 0.3039573; 0.3252681; 0.4048272; 0.2472989; 0.06378885; 0.2982368; 0.3057268; 0.2301905; 0.2855866; 0.1004929; 0.09038302; 0.3853636; 0.4839567; 0.0344848; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1973898; 0.3697012; 0.4973916; 0.5003865; 0.07879581; 0.256164; 0.04760179; 0.1496666; 0.1797355; 0.05122059; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.02120355; };
       };
       n_recv_cons=35;
       pos {x=1: y=3: z=0: };
       idx=16;
       act_avg=0.2472505;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[17] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0.2177225;
       net=0.2434169;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1229857; 0.0907574; 0.09131544; 0.2713727; 0.3192266; 0.2619385; 0.2177808; 0.183035; 0.4458545; 0.2995577; 0.156634; 0.2823094; 0.1898985; 0.1441898; 0.4065371; 0.2984398; 0.0618904; 0.1055865; 0.4943017; 0.2871529; 0.2780095; 0.2394489; 0.4272411; 0.4283145; 0.1469724; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.06630947; 0.1481123; 0.1149771; 0.4435407; 0.2887842; 0.06638318; 0.3776927; 0.1589683; 0.2552751; 0.3970744; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.006010397; };
       };
       n_recv_cons=35;
       pos {x=2: y=3: z=0: };
       idx=17;
       act_avg=0.2376499;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[18] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=6.604703e-06;
       net=0.2010374;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.297155; 0.1101264; 0.06627209; 0.1287824; 0.1065015; 0.2806912; 0.2227798; 0.4792643; 0.3754021; 0.2485593; 0.2990059; 0.1846334; 0.285662; 0.2604362; 0.3538676; 0.3670079; 0.2528581; 0.09394889; 0.2428204; 0.2763822; 0.2204884; 0.1386985; 0.09511265; 0.2581178; 0.2271177; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.3075007; 0.07773412; 0.2675557; 0.1213818; 0.21901; 0.1088157; 0.3283408; 0.1019998; 0.1855357; 0.1444994; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.008914674; };
       };
       n_recv_cons=35;
       pos {x=3: y=3: z=0: };
       idx=18;
       act_avg=0.06918655;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[19] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=4.852467e-18;
       net=0.163488;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2121179; 0.2428479; 0.08116905; 0.0422112; 0.1170256; 0.131323; 0.2637336; 0.1855668; 0.3231094; 0.2753529; 0.3087077; 0.5344883; 0.5299746; 0.4520956; 0.3121412; 0.160474; 0.2695969; 0.08722619; 0.32143; 0.2417143; 0.2966945; 0.1242039; 0.2522472; 0.06954559; 0.06001084; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.1418041; 0.3024334; 0.1126906; 0.0941488; 0.05523197; 0.107346; 0.2144746; 0.5435632; 0.2720969; 0.04720106; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.006086455; };
       };
       n_recv_cons=35;
       pos {x=4: y=3: z=0: };
       idx=19;
       act_avg=0.1805076;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[20] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=4.889859e-17;
       net=0.1509654;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.170954; 0.1868444; 0.2208976; 0.1694044; 0.271567; 0.4645222; 0.3549452; 0.2978929; 0.09316936; 0.217403; 0.409151; 0.09392443; 0.5177184; 0.2714372; 0.5101432; 0.2637565; 0.02838433; 0.3017194; 0.1257097; 0.2136688; 0.1966899; 0.04398056; 0.4143329; 0.2209426; 0.06873263; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.343258; 0.1617661; 0.4306189; 0.1242882; 0.1695067; 0.2747867; 0.3929291; 0.5330049; 0.02915694; 0.2052108; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.03479864; };
       };
       n_recv_cons=35;
       pos {x=0: y=4: z=0: };
       idx=20;
       act_avg=0.4045573;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[21] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=8.722716e-17;
       net=0.1671018;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2630153; 0.1217205; 0.186443; 0.3384773; 0.2812847; 0.4358955; 0.4232436; 0.1203335; 0.3777832; 0.2114375; 0.2611392; 0.1336516; 0.3724928; 0.1861373; 0.1871549; 0.483679; 0.1450073; 0.0575862; 0.1327088; 0.09680838; 0.1917127; 0.1146438; 0.1004195; 0.3011943; 0.2513274; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.4174773; 0.2835253; 0.2536645; 0.1606485; 0.07724551; 0.0666853; 0.344121; 0.1648095; 0.2618189; 0.1488182; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.02372419; };
       };
       n_recv_cons=35;
       pos {x=1: y=4: z=0: };
       idx=21;
       act_avg=0.09745491;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[22] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0;
       net=0.1529374;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2091292; 0.3629879; 0.1972701; 0.5631583; 0.3368551; 0.143069; 0.2931636; 0.244176; 0.07650729; 0.1390362; 0.1390988; 0.3800912; 0.2204166; 0.3484609; 0.1384581; 0.1030604; 0.3060202; 0.2560732; 0.3617286; 0.03888634; 0.1929562; 0.06520298; 0.3013316; 0.4070035; 0.123304; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.08590315; 0.2335047; 0.2448289; 0.3873533; 0.05238284; 0.4771615; 0.2767574; 0.4122506; 0.2296872; 0.3111441; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.02733102; };
       };
       n_recv_cons=35;
       pos {x=2: y=4: z=0: };
       idx=22;
       act_avg=0.3911839;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[23] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=4.151964e-16;
       net=0.1702758;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.09852997; 0.09787225; 0.09734177; 0.4167726; 0.06400057; 0.390569; 0.2955996; 0.05943605; 0.1584419; 0.1283447; 0.3056437; 0.395675; 0.1682241; 0.3320804; 0.246557; 0.4974352; 0.09576731; 0.1598674; 0.4563091; 0.1656402; 0.1652294; 0.4490995; 0.2256418; 0.3721727; 0.06016094; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.3974003; 0.3913954; 0.2089573; 0.4365907; 0.04379937; 0.06703203; 0.2871464; 0.1274115; 0.3110262; 0.05150836; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.01395594; };
       };
       n_recv_cons=35;
       pos {x=3: y=4: z=0: };
       idx=23;
       act_avg=0.1633453;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[24] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=NO_EXTERNAL;
       targ=0;
       ext=0;
       act=0;
       net=0.1360122;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$39$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.4541221; 0.05683073; 0.3522118; 0.07293714; 0.151023; 0.4171752; 0.07772938; 0.2102938; 0.243735; 0.06827094; 0.251191; 0.2887666; 0.2700032; 0.08479316; 0.2398725; 0.2020493; 0.2606326; 0.3241294; 0.2798853; 0.04413939; 0.5387673; 0.1788504; 0.3514872; 0.0742963; 0.1840332; };
	};
	LeabraRecvCons @[1] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 send_idx=0;
	};
	{ con_alloc = 10;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; };
	 wt = {0.3849705; 0.07251067; 0.2453235; 0.1811483; 0.1348813; 0.3096138; 0.07254703; 0.1700072; 0.06726678; 0.2601204; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 recv_idx=0;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.01746524; };
       };
       n_recv_cons=35;
       pos {x=4: y=4: z=0: };
       idx=24;
       act_avg=0.09790197;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
     };
     unit_spec {type=LeabraUnitSpec: spec=$66$: };
     lesion=0;
     ext_flag=NO_EXTERNAL;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     netin {avg=0.1986009: max=0.3396568: max_i=2: };
     i_thrs {avg=1.388512: max=2.443409: max_i=2: };
     acts {avg=0.1836765: max=0.9482286: max_i=2: };
     acts_p {avg=0.219395: max=0.9519527: max_i=3: };
     acts_m {avg=0.2195744: max=0.9512554: max_i=3: };
     phase_dif_ratio=1.000818;
     kwta {k=6: pct=0.24: pct_c=0.76: adth_k=3: k_ithr=2.070994: k1_ithr=1.172991: ithr_r=0.5684721: ithr_diff=0.4336098: tie_brk=0: };
     i_val {kwta=1.711793: g_i=1.711793: gp_g_i=0: g_i_orig=1.711793: };
     un_g_i {avg=1.711792: max=1.711793: max_i=0: };
     adapt_i {avg_avg=0.2067071: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[2].children[0]$70$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[2] {
     name="Output";
     layer_type=TARGET;
     pos {x=0: y=0: z=2: };
     un_geom {x=5: y=2: n_not_xy=0: n=10: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=5: y=2: n_not_xy=0: n=10: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$51$;
       spec {type=FullPrjnSpec: spec=$69$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$67$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[1];
     };
     units {
      name=;
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=2: n_not_xy=0: n=10: };
      units_lesioned=0;
      LeabraUnit @[0] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=0;
       net=0.1163837;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1184672; 0.09141893; 0.1594531; 0.5190629; 0.1210928; 0.2179012; 0.1220779; 0.04884638; 0.06521051; 0.2135213; 0.05013879; 0.166675; 0.2682956; 0.3851264; 0.2397874; 0.3406399; 0.2318847; 0.08107603; 0.2663495; 0.1471855; 0.5006187; 0.3783036; 0.1484084; 0.4022237; 0.3542334; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.04972541; };
       };
       n_recv_cons=25;
       pos {x=0: y=0: z=0: };
       idx=0;
       act_avg=0.1453739;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[1] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=2.313963e-11;
       net=0.1577921;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2683049; 0.3053685; 0.2010591; 0.2036335; 0.1309736; 0.1892318; 0.2023405; 0.1759215; 0.1267763; 0.5923266; 0.3215825; 0.1648586; 0.3295971; 0.1293376; 0.08412059; 0.3446921; 0.3923554; 0.1653591; 0.06056552; 0.2892449; 0.2495525; 0.2344627; 0.3415158; 0.3687912; 0.06069021; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.01968176; };
       };
       n_recv_cons=25;
       pos {x=1: y=0: z=0: };
       idx=1;
       act_avg=0.1834179;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[2] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=4.937033e-07;
       net=0.1887946;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.249951; 0.04795395; 0.1222092; 0.06516015; 0.1912481; 0.1767881; 0.2706515; 0.06446419; 0.2036604; 0.1152768; 0.3799894; 0.1472754; 0.2882753; 0.4771422; 0.3190518; 0.4949978; 0.4989728; 0.1215124; 0.2016726; 0.1018836; 0.5453798; 0.1980599; 0.3379527; 0.1865837; 0.1964947; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.0219261; };
       };
       n_recv_cons=25;
       pos {x=2: y=0: z=0: };
       idx=2;
       act_avg=0.2176893;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[3] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=4.293229e-12;
       net=0.1734112;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2957398; 0.2428535; 0.2577126; 0.181259; 0.1621214; 0.2305585; 0.2071039; 0.3280582; 0.1159972; 0.1784956; 0.1524126; 0.1058877; 0.1220944; 0.3857476; 0.20796; 0.2667874; 0.5206505; 0.4687504; 0.09423673; 0.08967815; 0.1937395; 0.13025; 0.513496; 0.4116322; 0.1517898; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.007496699; };
       };
       n_recv_cons=25;
       pos {x=3: y=0: z=0: };
       idx=3;
       act_avg=0.1880556;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[4] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=1;
       ext=0;
       act=0.949643;
       net=0.3010411;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.6284111; 0.2086486; 0.5236034; 0.22357; 0.05396493; 0.1054097; 0.0654374; 0.1746745; 0.1402422; 0.1190397; 0.2548665; 0.1297227; 0.04206381; 0.5483482; 0.07676464; 0.2382589; 0.08492432; 0.3090665; 0.1710599; 0.05223792; 0.2538316; 0.06207044; 0.0831932; 0.04085818; 0.1120415; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.03980557; };
       };
       n_recv_cons=25;
       pos {x=4: y=0: z=0: };
       idx=4;
       act_avg=0.1930067;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[5] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=0;
       net=0.1471114;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.2277912; 0.04176744; 0.3024338; 0.3821646; 0.04002099; 0.6195427; 0.2099597; 0.03774682; 0.07834097; 0.1779374; 0.1896099; 0.0529452; 0.3425525; 0.2632092; 0.04217576; 0.2639099; 0.2628266; 0.07099929; 0.08084881; 0.09775902; 0.3792192; 0.05159724; 0.5942088; 0.06013588; 0.2526993; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.02377674; };
       };
       n_recv_cons=25;
       pos {x=0: y=1: z=0: };
       idx=5;
       act_avg=0.2063248;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[6] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=6.563027e-16;
       net=0.1503296;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.588021; 0.1690415; 0.07380484; 0.3214397; 0.2693799; 0.2237653; 0.2119047; 0.209782; 0.2570959; 0.1788245; 0.1105096; 0.04082191; 0.2495517; 0.1456603; 0.3097609; 0.1821345; 0.05199421; 0.405199; 0.2630767; 0.2047845; 0.5265343; 0.287687; 0.3975195; 0.2709697; 0.06072349; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.05209931; };
       };
       n_recv_cons=25;
       pos {x=1: y=1: z=0: };
       idx=6;
       act_avg=0.1845042;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[7] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=1.252247e-08;
       net=0.1767163;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1143276; 0.3083578; 0.4299673; 0.215395; 0.04292843; 0.1626036; 0.1916969; 0.3127295; 0.1238106; 0.1516195; 0.1094522; 0.2695468; 0.04600639; 0.3493642; 0.0445503; 0.1265354; 0.154053; 0.1668771; 0.07503072; 0.5020286; 0.6462217; 0.1268232; 0.5280365; 0.1131586; 0.1348097; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.05502949; };
       };
       n_recv_cons=25;
       pos {x=2: y=1: z=0: };
       idx=7;
       act_avg=0.2158964;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[8] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=1;
       ext=0;
       act=0.8899462;
       net=0.245734;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.07846916; 0.06656824; 0.444599; 0.0572649; 0.3381916; 0.3293157; 0.2492721; 0.353745; 0.09790994; 0.1443234; 0.5549656; 0.365218; 0.1310989; 0.2886728; 0.3182251; 0.07174727; 0.1952093; 0.2803406; 0.1463877; 0.2608484; 0.04682656; 0.2171015; 0.3396565; 0.2939538; 0.05658248; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {-0.0071724; };
       };
       n_recv_cons=25;
       pos {x=3: y=1: z=0: };
       idx=8;
       act_avg=0.1790319;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
      LeabraUnit @[9] {
       name=;
       spec {type=LeabraUnitSpec: spec=$66$: };
       ext_flag=TARG;
       targ=0;
       ext=0;
       act=8.592056e-17;
       net=0.15845;
       recv {
	name=;
	el_typ=LeabraRecvCons;
	el_def=0;
	LeabraRecvCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$54$;
	 send_idx=0;
	};
	{ con_alloc = 25;
	 units = {0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; };
	 wt = {0.1746901; 0.1822437; 0.3431122; 0.137451; 0.1397621; 0.1902318; 0.5166965; 0.5555695; 0.26694; 0.2538932; 0.1085448; 0.1428656; 0.351162; 0.3201404; 0.1145297; 0.08257303; 0.05882196; 0.4377123; 0.1184566; 0.0472992; 0.3216324; 0.1270239; 0.4524076; 0.05085523; 0.230818; };
	};
       };
       send {
	name=;
	el_typ=LeabraSendCons;
	el_def=0;
	LeabraSendCons @[0] {
	 con_type=LeabraCon;
	 spec {type=LeabraConSpec: spec=$67$: };
	 prjn=$53$;
	 recv_idx=1;
	};
       };
       bias {
	con_type=LeabraCon;
	spec {type=NULL: spec=NULL: };
	prjn=NULL;
	send_idx=-1;
       };
       { con_alloc = 1;
	units = {-1; };
	wt = {0.02448117; };
       };
       n_recv_cons=25;
       pos {x=4: y=1: z=0: };
       idx=9;
       act_avg=0.1595176;
       act_m=0;
       act_p=0;
       act_dif=0;
       vcb {hyst=0: acc=0: hyst_on=0: acc_on=0: g_h=0: g_a=0: };
       spk_amp=0;
       misc_1=0;
      };
     };
     unit_spec {type=LeabraUnitSpec: spec=$66$: };
     lesion=0;
     ext_flag=TARG;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     netin {avg=0.1815764: max=0.3010411: max_i=4: };
     i_thrs {avg=1.255825: max=2.145866: max_i=4: };
     acts {avg=0.183959: max=0.949643: max_i=4: };
     acts_p {avg=0.19: max=0.95: max_i=0: };
     acts_m {avg=0.1864499: max=0.9341142: max_i=5: };
     phase_dif_ratio=0.9813154;
     kwta {k=2: pct=0.2: pct_c=0.8: adth_k=1: k_ithr=1.745157: k1_ithr=1.309382: ithr_r=0.2872891: ithr_diff=0.2497052: tie_brk=0: };
     i_val {kwta=1.418326: g_i=1.418326: gp_g_i=0: g_i_orig=1.418326: };
     un_g_i {avg=1.418326: max=1.418326: max_i=0: };
     adapt_i {avg_avg=0.1871838: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[2].children[2]$71$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
   };
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   batch=0;
   epoch=9;
   trial=19;
   cycle=16;
   time=0;
   group_name=;
   trial_name="V4_H3";
   output_name=;
   sse=0;
   sum_sse=0;
   avg_sse=0;
   cnt_err_tol=0;
   cnt_err=0;
   cur_sum_sse=0;
   avg_sse_n=19;
   cur_cnt_err=0;
   wt_sync_time {name="wt_sync_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   dmem_sync_level=DMEM_SYNC_NETWORK;
   dmem_nprocs=1;
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   lay_layout=THREE_D;
   n_units=60;
   n_cons=1125;
   max_size {x=5: y=5: z=3: };
   font_sizes {
    net_name=0.05;
    net_vals=0.05;
    layer=0.04;
    layer_vals=0.03;
    prjn=0.01;
    unit=0.02;
   };
   view_params {
    xy_square=0;
    unit_spacing=0.05;
    prjn_width=0.001;
    prjn_trans=0.5;
    lay_trans=0.5;
    unit_trans=0.6;
   };
   phase_order=MINUS_PLUS;
   no_plus_test=1;
   trial_init=INIT_STATE;
   sequence_init=DO_NOTHING;
   first_plus_dwt=ALL_DWT;
   phase=MINUS_PHASE;
   phase_no=0;
   phase_max=2;
   cycle_max=60;
   min_cycles=15;
   min_cycles_phase2=35;
   minus_cycles=26;
   avg_cycles=28.97143;
   avg_cycles_sum=555;
   avg_cycles_n=19;
   netin_mod=1;
   send_delta=0;
   maxda_stopcrit=0.005;
   maxda=0.05958678;
   trg_max_act_stopcrit=1;
   trg_max_act=0.949643;
   ext_rew=0;
   avg_ext_rew=0;
   avg_ext_rew_sum=0;
   avg_ext_rew_n=0;
  };
 };
 no_save_units=0;
 build_nets=AUTO_BUILD;
 view_colors {
  name=;
  el_typ=RGBA;
  el_def=0;
  RGBA @[0] {name="black": r=0: g=0: b=0: a=1: desc="Text": };
  RGBA @[1] {name="": r=0.752941: g=0.768627: b=0.827451: a=1: desc="Background": };
  RGBA @[2] {name="VioletRed1": r=1: g=0.2431373: b=0.5882353: a=1: desc="Network": };
  RGBA @[3] {name="DarkOliveGreen3": r=0.6352941: g=0.8039216: b=0.3529412: a=1: desc="Env": };
  RGBA @[4] {name="yellow": r=1: g=1: b=0: a=1: desc="SchedProc": };
  RGBA @[5] {name="LightSteelBlue2": r=0.7372549: g=0.8235294: b=0.9333333: a=1: desc="StatGroup": };
  RGBA @[6] {name="wheat": r=0.9607843: g=0.8705882: b=0.7019608: a=1: desc="SubProcGroup": };
  RGBA @[7] {name="SlateBlue1": r=0.5137255: g=0.4352941: b=1: a=1: desc="Stat": };
  RGBA @[8] {name="gold": r=1: g=0.8431373: b=0: a=1: desc="Process": };
  RGBA @[9] {name="burlywood2": r=0.9333333: g=0.772549: b=0.5686275: a=1: desc="Log": };
  RGBA @[10] {name="aquamarine": r=0.4980392: g=1: b=0.8313726: a=1: desc="Agg Highlite": };
  RGBA @[11] {name="grey64": r=0.6392157: g=0.6392157: b=0.6392157: a=1: desc="Group": };
  RGBA @[12] {name="grey75": r=0.7490196: g=0.7490196: b=0.7490196: a=1: desc="Inactive": };
  RGBA @[13] {name="red": r=1: g=0: b=0: a=1: desc="Stopping Stat": };
  RGBA @[14] {name="SlateBlue3": r=0.4117647: g=0.3490196: b=0.8039216: a=1: desc="Agging Stat": };
  RGBA @[15] {name="SpringGreen": r=0: g=1: b=0.4980392: a=1: desc="ConSpec": };
  RGBA @[16] {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="UnitSpec": };
  RGBA @[17] {name="orange": r=1: g=0.6470588: b=0: a=1: desc="PrjnSpec": };
  RGBA @[18] {name="MediumPurple1": r=0.6705883: g=0.509804: b=1: a=1: desc="LayerSpec": };
  RGBA @[19] {name="azure": r=0.9411765: g=1: b=1: a=1: desc="Wizard": };
 };
};
