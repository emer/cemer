// ta_Dump File v3.0 -- code v7.8.4.0 rev8689
LeabraProject .projects["DebugUpdatePointersBug2398"] { 
 Doc_Group @.docs = [0] {
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @["LeabraWizard_0"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["NO_CLIP"] { };
    UserDataItem @["user_pinned"] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @["ControlPanel"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["user_pinned"] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };
  };
  ClusterRun @["ClusterRun"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["user_pinned"] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };

   DataTableCols @.jobs_running.data = [31] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["notes"] { };
    String_Data @["label"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
   };

   DataOpList @.jobs_running.last_sort_spec.ops = [0] {
   };

   DataTableCols @.jobs_done.data = [31] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["notes"] { };
    String_Data @["label"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
   };

   DataOpList @.jobs_done.last_sort_spec.ops = [0] {
   };

   DataTableCols @.jobs_archive.data = [31] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["notes"] { };
    String_Data @["label"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
   };

   DataOpList @.jobs_archive.last_sort_spec.ops = [0] {
   };

   DataTableCols @.file_list.data = [11] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["file_name"] { };
    String_Data @["tag"] { };
    String_Data @["size"] { };
    String_Data @["kind"] { };
    String_Data @["date_modified"] { };
    String_Data @["date_created"] { };
    String_Data @["svn_file_path"] { };
    String_Data @["proj_file_path"] { };
    String_Data @["file_path"] { };
   };

   DataOpList @.file_list.last_sort_spec.ops = [0] {
   };

   DataTableCols @.cluster_info.data = [6] {
    String_Data @["queue"] { };
    String_Data @["job_no"] { };
    String_Data @["user"] { };
    String_Data @["state"] { };
    String_Data @["procs"] { };
    String_Data @["start_time"] { };
   };

   DataOpList @.cluster_info.last_sort_spec.ops = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.param_sets = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp["InputData"] { 
  };
  DataTable_Group @.gp["OutputData"] { 
  };
  DataTable_Group @.gp["AnalysisData"] { 
  };
 };

 Program_TopGroup @.programs = [0] {
  Program_Group @.gp["Program_Group_30"] = [2] { 
   Program @["ObjSceneEnv"] { 
    UserDataItem_List @*(.user_data_) {
     UserDataItem @["user_pinned"] { };
    };

    ProgObjList @.objs = [12] {
     DataTable @["ObjectsAll"] { 
      DataTableCols @.data = [14] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["freq"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["n_coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["ObjectsCur"] { 
      DataTableCols @.data = [14] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["freq"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["n_coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["ValueNames"] { 
      DataTableCols @.data = [2] {
       String_Data @["value"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       String_Data @["desc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["Scene"] { 
      DataTableCols @.data = [4] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["ctr_x"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["ctr_y"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["size"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["FoveatedValues"] { 
      DataTableCols @.data = [3] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["obj_files"] { 
      DataTableCols @.data = [2] {
       String_Data @["FileName"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       String_Data @["FilePath"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["GridPos"] { 
      DataTableCols @.data = [4] {
       int_Data @["x_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["y_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["x_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["y_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["GridPermuted"] { 
      DataTableCols @.data = [4] {
       int_Data @["x_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["y_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["x_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["y_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     taCanvas @["FullViewCanvas"] { };
     taCanvas @["FoveaCanvas"] { };
     taCanvas @["SceneCanvas"] { };
     DataTable @["CanvasViews"] { 
      DataTableCols @.data = [3] {
       float_Data @["Scene"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["IMAGE"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["FullView"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["IMAGE"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["Fovea"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["IMAGE"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
    };

    ProgType_List @.types = [3] {
     DynEnumType @["Actions"] { 
      DynEnumItem_List @.enums = [4] {
       DynEnumItem @["LOAD_OBJS"] { };
       DynEnumItem @["COMPOSE_SCENE"] { };
       DynEnumItem @["RENDER_SCENE"] { };
       DynEnumItem @["FOVEATE"] { };
      };
     };
     DynEnumType @["XY"] { 
      DynEnumItem_List @.enums = [2] {
       DynEnumItem @["X"] { };
       DynEnumItem @["Y"] { };
      };
     };
     DynEnumType @["PositionType"] { 
      DynEnumItem_List @.enums = [2] {
       DynEnumItem @["RANDOM_POS_NOVLP"] { };
       DynEnumItem @["GRID_PERMUTED"] { };
      };
     };
    };

    ProgVar_List @.args = [3] {
     ProgVar @["action"] { };
     ProgVar @["x_arg"] { };
     ProgVar @["y_arg"] { };
    };

    ProgVar_List @.vars = [42] {
     ProgVar @["ObjectsAll"] { };
     ProgVar @["Scene"] { };
     ProgVar @["obj_files"] { };
     ProgVar @["FullViewCanvas"] { };
     ProgVar @["FoveaCanvas"] { };
     ProgVar @["SceneCanvas"] { };
     ProgVar @["fix_x"] { };
     ProgVar @["fix_y"] { };
     ProgVar @["obj_dir"] { };
     ProgVar @["full_view_pixels"] { };
     ProgVar @["fovea_pixels"] { };
     ProgVar @["fovea_scale"] { };
     ProgVar @["bg_color"] { };
     ProgVar @["line_color"] { };
     ProgVar @["line_width"] { };
     ProgVar @["min_n_objs"] { };
     ProgVar @["max_n_objs"] { };
     ProgVar @["min_size"] { };
     ProgVar @["max_size"] { };
     ProgVar @["pos_type"] { };
     ProgVar @["grid_x"] { };
     ProgVar @["grid_y"] { };
     ProgVar @["grid_jitter"] { };
     ProgVar @["grid_margin"] { };
     ProgVar @["min_spc"] { };
     ProgVar @["redo_limit"] { };
     ProgVar @["CanvasViews"] { };
     ProgVar @["GridPos"] { };
     ProgVar @["GridPermuted"] { };
     ProgVar @["ObjectsCur"] { };
     ProgVar @["ValueNames"] { };
     ProgVar @["n_values"] { };
     ProgVar @["closest_obj_scene_idx"] { };
     ProgVar @["closest_obj_obj_idx"] { };
     ProgVar @["closest_obj_dist"] { };
     ProgVar @["closest_obj_nm"] { };
     ProgVar @["foveate_thr_dist"] { };
     ProgVar @["foveate_obj_scene_idx"] { };
     ProgVar @["foveate_obj_obj_idx"] { };
     ProgVar @["foveate_obj_dist"] { };
     ProgVar @["foveate_obj_nm"] { };
     ProgVar @["FoveatedValues"] { };
    };

    Function_List @.functions = [14] {
     Function @["LoadObjs"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [3] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [26] {
	 ProgVar @["i"] { };
	 ProgVar @["fnm"] { };
	 ProgVar @["fpth"] { };
	 ProgVar @["fc"] { };
	 ProgVar @["lines"] { };
	 ProgVar @["points"] { };
	 ProgVar @["li"] { };
	 ProgVar @["j"] { };
	 ProgVar @["ln"] { };
	 ProgVar @["width"] { };
	 ProgVar @["height"] { };
	 ProgVar @["obj_row"] { };
	 ProgVar @["obj_nm"] { };
	 ProgVar @["n_coords"] { };
	 ProgVar @["rel"] { };
	 ProgVar @["pp"] { };
	 ProgVar @["pstr"] { };
	 ProgVar @["xc"] { };
	 ProgVar @["yc"] { };
	 ProgVar @["xt"] { };
	 ProgVar @["yt"] { };
	 ProgVar @["start_con"] { };
	 ProgVar @["st_coord"] { };
	 ProgVar @["xoff"] { };
	 ProgVar @["yoff"] { };
	 ProgVar @["start"] { };
	};
       };
       DataGenCall @[1] { 
	ProgArg_List @.meth_args = [7] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	 ProgArg @[3] { };
	 ProgArg @[4] { };
	 ProgArg @[5] { };
	 ProgArg @[6] { };
	};
       };
       ForLoop @[2] { 
	ProgEl_List @.loop_code = [12] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 MethodCall @[2] { 
	  ProgArg_List @.meth_args = [2] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	  };
	 };
	 MethodCall @[3] { 
	  ProgArg_List @.meth_args = [1] {
	   ProgArg @[0] { };
	  };
	 };
	 MethodCall @[4] { 
	  ProgArg_List @.meth_args = [4] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	  };
	 };
	 If @[5] { 
	  ProgEl_List @.true_code = [3] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	   AssignExpr @[1] { };
	   CssExpr @[2] { };
	  };
	 };
	 MethodCall @[6] { 
	  ProgArg_List @.meth_args = [2] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	  };
	 };
	 AssignExpr @[7] { };
	 AssignExpr @[8] { };
	 AssignExpr @[9] { };
	 ForLoop @[10] { 
	  ProgEl_List @.loop_code = [5] {
	   AssignExpr @[0] { };
	   MethodCall @[1] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	   If @[2] { 
	    ProgEl_List @.true_code = [5] {
	     AssignExpr @[0] { };
	     AssignExpr @[1] { };
	     AssignExpr @[2] { };
	     PrintVar @[3] { };
	     IfContinue @[4] { };
	    };
	   };
	   If @[3] { 
	    ProgEl_List @.true_code = [3] {
	     MethodCall @[0] { 
	      ProgArg_List @.meth_args = [2] {
	       ProgArg @[0] { };
	       ProgArg @[1] { };
	      };
	     };
	     If @[1] { 
	      ProgEl_List @.true_code = [5] {
	       AssignExpr @[0] { };
	       MethodCall @[1] { 
		ProgArg_List @.meth_args = [2] {
		 ProgArg @[0] { };
		 ProgArg @[1] { };
		};
	       };
	       MethodCall @[2] { 
		ProgArg_List @.meth_args = [2] {
		 ProgArg @[0] { };
		 ProgArg @[1] { };
		};
	       };
	       AssignExpr @[3] { };
	       AssignExpr @[4] { };
	      };
	     };
	     IfContinue @[2] { };
	    };
	   };
	   If @[4] { 
	    ProgEl_List @.true_code = [10] {
	     If @[0] { 
	      ProgEl_List @.true_code = [3] {
	       CssExpr @[0] { };
	       CssExpr @[1] { };
	       AssignExpr @[2] { };
	      };
	     };
	     AssignExpr @[1] { };
	     If @[2] { 
	      ProgEl_List @.true_code = [2] {
	       AssignExpr @[0] { };
	       MethodCall @[1] { 
		ProgArg_List @.meth_args = [2] {
		 ProgArg @[0] { };
		 ProgArg @[1] { };
		};
	       };
	      };
	     };
	     If @[3] { 
	      ProgEl_List @.true_code = [2] {
	       AssignExpr @[0] { };
	       MethodCall @[1] { 
		ProgArg_List @.meth_args = [2] {
		 ProgArg @[0] { };
		 ProgArg @[1] { };
		};
	       };
	      };
	     };
	     AssignExpr @[4] { };
	     If @[5] { 
	      ProgEl_List @.true_code = [2] {
	       AssignExpr @[0] { };
	       AssignExpr @[1] { };
	      };
	     };
	     MethodCall @[6] { 
	      ProgArg_List @.meth_args = [2] {
	       ProgArg @[0] { };
	       ProgArg @[1] { };
	      };
	     };
	     AssignExpr @[7] { };
	     ForLoop @[8] { 
	      ProgEl_List @.loop_code = [13] {
	       AssignExpr @[0] { };
	       If @[1] { 
		ProgEl_List @.true_code = [2] {
		 AssignExpr @[0] { };
		 IfContinue @[1] { };
		};
	       };
	       If @[2] { 
		ProgEl_List @.true_code = [2] {
		 AssignExpr @[0] { };
		 IfContinue @[1] { };
		};
	       };
	       If @[3] { 
		ProgEl_List @.true_code = [2] {
		 AssignExpr @[0] { };
		 IfContinue @[1] { };
		};
	       };
	       MethodCall @[4] { 
		ProgArg_List @.meth_args = [2] {
		 ProgArg @[0] { };
		 ProgArg @[1] { };
		};
	       };
	       MethodCall @[5] { 
		ProgArg_List @.meth_args = [2] {
		 ProgArg @[0] { };
		 ProgArg @[1] { };
		};
	       };
	       AssignExpr @[6] { };
	       AssignExpr @[7] { };
	       If @[8] { 
		ProgEl_List @.true_code = [3] {
		 AssignExpr @[0] { };
		 AssignExpr @[1] { };
		 AssignExpr @[2] { };
		};
	       };
	       Else @[9] { 
		ProgEl_List @.else_code = [2] {
		 If @[0] { 
		  ProgEl_List @.true_code = [2] {
		   AssignExpr @[0] { };
		   AssignExpr @[1] { };
		  };
		 };
		 Else @[1] { 
		  ProgEl_List @.else_code = [2] {
		   AssignExpr @[0] { };
		   AssignExpr @[1] { };
		  };
		 };
		};
	       };
	       CssExpr @[10] { };
	       CssExpr @[11] { };
	       VarIncr @[12] { };
	      };
	     };
	     If @[9] { 
	      ProgEl_List @.true_code = [3] {
	       CssExpr @[0] { };
	       CssExpr @[1] { };
	       VarIncr @[2] { };
	      };
	     };
	    };
	   };
	  };
	 };
	 CssExpr @[11] { };
	};
       };
      };
     };
     Function @["UpdateCurFmAll"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [2] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [3] {
	 ProgVar @["ci"] { };
	 ProgVar @["oai"] { };
	 ProgVar @["nm"] { };
	};
       };
       ForLoop @[1] { 
	ProgEl_List @.loop_code = [4] {
	 AssignExpr @[0] { };
	 MethodCall @[1] { 
	  ProgArg_List @.meth_args = [4] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	  };
	 };
	 CssExpr @[2] { };
	 MethodCall @[3] { 
	  ProgArg_List @.meth_args = [5] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	   ProgArg @[4] { };
	  };
	 };
	};
       };
      };
     };
     Function @["ComposeScene_RndPos"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [7] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [17] {
	 ProgVar @["n_objs"] { };
	 ProgVar @["i"] { };
	 ProgVar @["objid"] { };
	 ProgVar @["ctr_x"] { };
	 ProgVar @["ctr_y"] { };
	 ProgVar @["size"] { };
	 ProgVar @["redo"] { };
	 ProgVar @["j"] { };
	 ProgVar @["oth_x"] { };
	 ProgVar @["oth_y"] { };
	 ProgVar @["oth_sz"] { };
	 ProgVar @["dist"] { };
	 ProgVar @["nm"] { };
	 ProgVar @["min_dist"] { };
	 ProgVar @["redos"] { };
	 ProgVar @["half_size"] { };
	 ProgVar @["rmargin"] { };
	};
       };
       RandomCall @[1] { 
	ProgArg_List @.meth_args = [3] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	};
       };
       AssignExpr @[2] { };
       AssignExpr @[3] { };
       AssignExpr @[4] { };
       MethodCall @[5] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       ForLoop @[6] { 
	ProgEl_List @.loop_code = [12] {
	 RandomCall @[0] { 
	  ProgArg_List @.meth_args = [2] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	  };
	 };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 RandomCall @[4] { 
	  ProgArg_List @.meth_args = [3] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	  };
	 };
	 DoLoop @[5] { 
	  ProgEl_List @.loop_code = [3] {
	   RandomCall @[0] { 
	    ProgArg_List @.meth_args = [3] {
	     ProgArg @[0] { };
	     ProgArg @[1] { };
	     ProgArg @[2] { };
	    };
	   };
	   RandomCall @[1] { 
	    ProgArg_List @.meth_args = [3] {
	     ProgArg @[0] { };
	     ProgArg @[1] { };
	     ProgArg @[2] { };
	    };
	   };
	   ForLoop @[2] { 
	    ProgEl_List @.loop_code = [4] {
	     AssignExpr @[0] { };
	     AssignExpr @[1] { };
	     MathCall @[2] { 
	      ProgArg_List @.meth_args = [4] {
	       ProgArg @[0] { };
	       ProgArg @[1] { };
	       ProgArg @[2] { };
	       ProgArg @[3] { };
	      };
	     };
	     If @[3] { 
	      ProgEl_List @.true_code = [3] {
	       AssignExpr @[0] { };
	       VarIncr @[1] { };
	       IfBreak @[2] { };
	      };
	     };
	    };
	   };
	  };
	 };
	 If @[6] { 
	  ProgEl_List @.true_code = [1] {
	   PrintVar @[0] { };
	  };
	 };
	 MethodCall @[7] { 
	  ProgArg_List @.meth_args = [0] {
	  };
	 };
	 CssExpr @[8] { };
	 CssExpr @[9] { };
	 CssExpr @[10] { };
	 CssExpr @[11] { };
	};
       };
      };
     };
     Function @["ComposeScene_Grid"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [5] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [7] {
	 ProgVar @["i"] { };
	 ProgVar @["nm"] { };
	 ProgVar @["objid"] { };
	 ProgVar @["ctr_x"] { };
	 ProgVar @["ctr_y"] { };
	 ProgVar @["size"] { };
	 ProgVar @["n_objs"] { };
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       RandomCall @[2] { 
	ProgArg_List @.meth_args = [3] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	};
       };
       MethodCall @[3] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       ForLoop @[4] { 
	ProgEl_List @.loop_code = [12] {
	 RandomCall @[0] { 
	  ProgArg_List @.meth_args = [2] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	  };
	 };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 VarIncr @[4] { };
	 VarIncr @[5] { };
	 RandomCall @[6] { 
	  ProgArg_List @.meth_args = [3] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	  };
	 };
	 MethodCall @[7] { 
	  ProgArg_List @.meth_args = [0] {
	  };
	 };
	 CssExpr @[8] { };
	 CssExpr @[9] { };
	 CssExpr @[10] { };
	 CssExpr @[11] { };
	};
       };
      };
     };
     Function @["ComposeScene"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [2] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       Switch @[1] { 
	ProgEl_List @.cases = [2] {
	 CaseBlock @[0] { 
	  ProgEl_List @.prog_code = [1] {
	   FunctionCall @[0] { 
	    ProgArg_List @.fun_args = [0] {
	    };
	   };
	  };
	 };
	 CaseBlock @[1] { 
	  ProgEl_List @.prog_code = [1] {
	   FunctionCall @[0] { 
	    ProgArg_List @.fun_args = [0] {
	    };
	   };
	  };
	 };
	};
       };
      };
     };
     Function @["InitGridPos"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [6] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [6] {
	 ProgVar @["yi"] { };
	 ProgVar @["xi"] { };
	 ProgVar @["xpos"] { };
	 ProgVar @["ypos"] { };
	 ProgVar @["half_size"] { };
	 ProgVar @["width"] { };
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       AssignExpr @[2] { };
       AssignExpr @[3] { };
       ForLoop @[4] { 
	ProgEl_List @.loop_code = [1] {
	 ForLoop @[0] { 
	  ProgEl_List @.loop_code = [7] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	   AssignExpr @[1] { };
	   AssignExpr @[2] { };
	   CssExpr @[3] { };
	   CssExpr @[4] { };
	   CssExpr @[5] { };
	   CssExpr @[6] { };
	  };
	 };
	};
       };
       MethodCall @[5] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     Function @["InitCanvas"] { 
      ProgVar_List @.args = [1] {
       ProgVar @["canv"] { };
      };

      ProgEl_List @.fun_code = [5] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       MethodCall @[2] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       MethodCall @[3] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       MethodCall @[4] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     Function @["ViewCanvas"] { 
      ProgVar_List @.args = [2] {
       ProgVar @["canv"] { };
       ProgVar @["col_nm"] { };
      };

      ProgEl_List @.fun_code = [5] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [4] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	 ProgArg @[3] { };
	};
       };
       MethodCall @[2] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       MethodCall @[3] { 
	ProgArg_List @.meth_args = [3] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	};
       };
       MethodCall @[4] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     Function @["DrawObj"] { 
      ProgVar_List @.args = [5] {
       ProgVar @["canv"] { };
       ProgVar @["objnm"] { };
       ProgVar @["ctr_x"] { };
       ProgVar @["ctr_y"] { };
       ProgVar @["size"] { };
      };

      ProgEl_List @.fun_code = [7] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [9] {
	 ProgVar @["objid"] { };
	 ProgVar @["n_coords"] { };
	 ProgVar @["ci"] { };
	 ProgVar @["j"] { };
	 ProgVar @["xc"] { };
	 ProgVar @["yc"] { };
	 ProgVar @["start"] { };
	 ProgVar @["xd"] { };
	 ProgVar @["yd"] { };
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [4] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	 ProgArg @[3] { };
	};
       };
       AssignExpr @[2] { };
       MethodCall @[3] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       AssignExpr @[4] { };
       ForLoop @[5] { 
	ProgEl_List @.loop_code = [6] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 If @[4] { 
	  ProgEl_List @.true_code = [3] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	   MethodCall @[1] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	   AssignExpr @[2] { };
	  };
	 };
	 Else @[5] { 
	  ProgEl_List @.else_code = [2] {
	   If @[0] { 
	    ProgEl_List @.true_code = [2] {
	     MethodCall @[0] { 
	      ProgArg_List @.meth_args = [2] {
	       ProgArg @[0] { };
	       ProgArg @[1] { };
	      };
	     };
	     AssignExpr @[1] { };
	    };
	   };
	   Else @[1] { 
	    ProgEl_List @.else_code = [1] {
	     MethodCall @[0] { 
	      ProgArg_List @.meth_args = [2] {
	       ProgArg @[0] { };
	       ProgArg @[1] { };
	      };
	     };
	    };
	   };
	  };
	 };
	};
       };
       MethodCall @[6] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     Function @["RenderScene"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [4] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [5] {
	 ProgVar @["i"] { };
	 ProgVar @["nm"] { };
	 ProgVar @["ctr_x"] { };
	 ProgVar @["ctr_y"] { };
	 ProgVar @["size"] { };
	};
       };
       FunctionCall @[1] { 
	ProgArg_List @.fun_args = [1] {
	 ProgArg @[0] { };
	};
       };
       ForLoop @[2] { 
	ProgEl_List @.loop_code = [5] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 FunctionCall @[4] { 
	  ProgArg_List @.fun_args = [5] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	   ProgArg @[4] { };
	  };
	 };
	};
       };
       FunctionCall @[3] { 
	ProgArg_List @.fun_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
      };
     };
     Function @["RenderFullView"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [4] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [5] {
	 ProgVar @["i"] { };
	 ProgVar @["nm"] { };
	 ProgVar @["ctr_x"] { };
	 ProgVar @["ctr_y"] { };
	 ProgVar @["size"] { };
	};
       };
       FunctionCall @[1] { 
	ProgArg_List @.fun_args = [1] {
	 ProgArg @[0] { };
	};
       };
       ForLoop @[2] { 
	ProgEl_List @.loop_code = [9] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 AssignExpr @[4] { };
	 AssignExpr @[5] { };
	 IfContinue @[6] { };
	 IfContinue @[7] { };
	 FunctionCall @[8] { 
	  ProgArg_List @.fun_args = [5] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	   ProgArg @[4] { };
	  };
	 };
	};
       };
       FunctionCall @[3] { 
	ProgArg_List @.fun_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
      };
     };
     Function @["RenderFovea"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [4] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [5] {
	 ProgVar @["i"] { };
	 ProgVar @["nm"] { };
	 ProgVar @["ctr_x"] { };
	 ProgVar @["ctr_y"] { };
	 ProgVar @["size"] { };
	};
       };
       FunctionCall @[1] { 
	ProgArg_List @.fun_args = [1] {
	 ProgArg @[0] { };
	};
       };
       ForLoop @[2] { 
	ProgEl_List @.loop_code = [10] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 AssignExpr @[4] { };
	 AssignExpr @[5] { };
	 AssignExpr @[6] { };
	 IfContinue @[7] { };
	 IfContinue @[8] { };
	 FunctionCall @[9] { 
	  ProgArg_List @.fun_args = [5] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	   ProgArg @[4] { };
	  };
	 };
	};
       };
       FunctionCall @[3] { 
	ProgArg_List @.fun_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
      };
     };
     Function @["FindFoveatedObj"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [10] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [7] {
	 ProgVar @["i"] { };
	 ProgVar @["nm"] { };
	 ProgVar @["ctr_x"] { };
	 ProgVar @["ctr_y"] { };
	 ProgVar @["dist"] { };
	 ProgVar @["min_dist"] { };
	 ProgVar @["min_i"] { };
	};
       };
       AssignExpr @[1] { };
       AssignExpr @[2] { };
       ForLoop @[3] { 
	ProgEl_List @.loop_code = [4] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 MathCall @[2] { 
	  ProgArg_List @.meth_args = [4] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	  };
	 };
	 If @[3] { 
	  ProgEl_List @.true_code = [2] {
	   AssignExpr @[0] { };
	   AssignExpr @[1] { };
	  };
	 };
	};
       };
       AssignExpr @[4] { };
       AssignExpr @[5] { };
       AssignExpr @[6] { };
       MethodCall @[7] { 
	ProgArg_List @.meth_args = [4] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	 ProgArg @[3] { };
	};
       };
       If @[8] { 
	ProgEl_List @.true_code = [5] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 PrintVar @[4] { };
	};
       };
       Else @[9] { 
	ProgEl_List @.else_code = [5] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 PrintVar @[4] { };
	};
       };
      };
     };
     Function @["GenFoveatedValues"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [5] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [4] {
	 ProgVar @["vi"] { };
	 ProgVar @["vmin"] { };
	 ProgVar @["vmax"] { };
	 ProgVar @["val"] { };
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [1] {
	 ProgArg @[0] { };
	};
       };
       If @[2] { 
	ProgEl_List @.true_code = [3] {
	 CssExpr @[0] { };
	 ForLoop @[1] { 
	  ProgEl_List @.loop_code = [2] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [4] {
	     ProgArg @[0] { };
	     ProgArg @[1] { };
	     ProgArg @[2] { };
	     ProgArg @[3] { };
	    };
	   };
	   MethodCall @[1] { 
	    ProgArg_List @.meth_args = [4] {
	     ProgArg @[0] { };
	     ProgArg @[1] { };
	     ProgArg @[2] { };
	     ProgArg @[3] { };
	    };
	   };
	  };
	 };
	 ReturnExpr @[2] { };
	};
       };
       CssExpr @[3] { };
       ForLoop @[4] { 
	ProgEl_List @.loop_code = [10] {
	 Comment @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 RandomCall @[3] { 
	  ProgArg_List @.meth_args = [3] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	  };
	 };
	 MethodCall @[4] { 
	  ProgArg_List @.meth_args = [4] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	  };
	 };
	 Comment @[5] { };
	 AssignExpr @[6] { };
	 AssignExpr @[7] { };
	 RandomCall @[8] { 
	  ProgArg_List @.meth_args = [3] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	  };
	 };
	 MethodCall @[9] { 
	  ProgArg_List @.meth_args = [4] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	   ProgArg @[3] { };
	  };
	 };
	};
       };
      };
     };
    };

    ProgEl_List @.init_code = [4] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     FunctionCall @[3] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
    };

    ProgEl_List @.prog_code = [2] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
     Switch @[1] { 
      ProgEl_List @.cases = [4] {
       CaseBlock @[0] { 
	ProgEl_List @.prog_code = [2] {
	 FunctionCall @[0] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	 FunctionCall @[1] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	};
       };
       CaseBlock @[1] { 
	ProgEl_List @.prog_code = [4] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 FunctionCall @[2] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	 FunctionCall @[3] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	};
       };
       CaseBlock @[2] { 
	ProgEl_List @.prog_code = [1] {
	 FunctionCall @[0] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	};
       };
       CaseBlock @[3] { 
	ProgEl_List @.prog_code = [10] {
	 AssignExpr @[0] { };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 AssignExpr @[4] { };
	 AssignExpr @[5] { };
	 FunctionCall @[6] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	 FunctionCall @[7] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	 FunctionCall @[8] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	 FunctionCall @[9] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	 };
	};
       };
      };
     };
    };
   };
   Program @["ObjSceneEnv_reduced"] { 
    UserDataItem_List @*(.user_data_) {
     UserDataItem @["user_pinned"] { };
    };

    ProgObjList @.objs = [12] {
     DataTable @["ObjectsAll"] { 
      DataTableCols @.data = [14] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["freq"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["n_coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["ObjectsCur"] { 
      DataTableCols @.data = [14] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv0"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv1"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv2"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv3"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv4"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["freq"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["n_coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["coords"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["ValueNames"] { 
      DataTableCols @.data = [2] {
       String_Data @["value"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       String_Data @["desc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["Scene"] { 
      DataTableCols @.data = [4] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["ctr_x"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["ctr_y"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["size"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["FoveatedValues"] { 
      DataTableCols @.data = [3] {
       String_Data @["name"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["pv"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["nv"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["obj_files"] { 
      DataTableCols @.data = [2] {
       String_Data @["FileName"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       String_Data @["FilePath"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["GridPos"] { 
      DataTableCols @.data = [4] {
       int_Data @["x_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["y_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["x_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["y_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     DataTable @["GridPermuted"] { 
      DataTableCols @.data = [4] {
       int_Data @["x_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       int_Data @["y_idx"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["x_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["y_pos"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
     taCanvas @["FullViewCanvas"] { };
     taCanvas @["FoveaCanvas"] { };
     taCanvas @["SceneCanvas"] { };
     DataTable @["CanvasViews"] { 
      DataTableCols @.data = [3] {
       float_Data @["Scene"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["IMAGE"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["FullView"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["IMAGE"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
       float_Data @["Fovea"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["IMAGE"] { };
	 UserDataItem @["view_panel_wd"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };
     };
    };

    ProgType_List @.types = [3] {
     DynEnumType @["Actions"] { 
      DynEnumItem_List @.enums = [4] {
       DynEnumItem @["LOAD_OBJS"] { };
       DynEnumItem @["COMPOSE_SCENE"] { };
       DynEnumItem @["RENDER_SCENE"] { };
       DynEnumItem @["FOVEATE"] { };
      };
     };
     DynEnumType @["XY"] { 
      DynEnumItem_List @.enums = [2] {
       DynEnumItem @["X"] { };
       DynEnumItem @["Y"] { };
      };
     };
     DynEnumType @["PositionType"] { 
      DynEnumItem_List @.enums = [2] {
       DynEnumItem @["RANDOM_POS_NOVLP"] { };
       DynEnumItem @["GRID_PERMUTED"] { };
      };
     };
    };

    ProgVar_List @.args = [3] {
     ProgVar @["action"] { };
     ProgVar @["x_arg"] { };
     ProgVar @["y_arg"] { };
    };

    ProgVar_List @.vars = [42] {
     ProgVar @["ObjectsAll"] { };
     ProgVar @["Scene"] { };
     ProgVar @["obj_files"] { };
     ProgVar @["FullViewCanvas"] { };
     ProgVar @["FoveaCanvas"] { };
     ProgVar @["SceneCanvas"] { };
     ProgVar @["fix_x"] { };
     ProgVar @["fix_y"] { };
     ProgVar @["obj_dir"] { };
     ProgVar @["full_view_pixels"] { };
     ProgVar @["fovea_pixels"] { };
     ProgVar @["fovea_scale"] { };
     ProgVar @["bg_color"] { };
     ProgVar @["line_color"] { };
     ProgVar @["line_width"] { };
     ProgVar @["min_n_objs"] { };
     ProgVar @["max_n_objs"] { };
     ProgVar @["min_size"] { };
     ProgVar @["max_size"] { };
     ProgVar @["pos_type"] { };
     ProgVar @["grid_x"] { };
     ProgVar @["grid_y"] { };
     ProgVar @["grid_jitter"] { };
     ProgVar @["grid_margin"] { };
     ProgVar @["min_spc"] { };
     ProgVar @["redo_limit"] { };
     ProgVar @["CanvasViews"] { };
     ProgVar @["GridPos"] { };
     ProgVar @["GridPermuted"] { };
     ProgVar @["ObjectsCur"] { };
     ProgVar @["ValueNames"] { };
     ProgVar @["n_values"] { };
     ProgVar @["closest_obj_scene_idx"] { };
     ProgVar @["closest_obj_obj_idx"] { };
     ProgVar @["closest_obj_dist"] { };
     ProgVar @["closest_obj_nm"] { };
     ProgVar @["foveate_thr_dist"] { };
     ProgVar @["foveate_obj_scene_idx"] { };
     ProgVar @["foveate_obj_obj_idx"] { };
     ProgVar @["foveate_obj_dist"] { };
     ProgVar @["foveate_obj_nm"] { };
     ProgVar @["FoveatedValues"] { };
    };

    Function_List @.functions = [1] {
     Function @["ComposeScene_RndPos"] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [7] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [17] {
	 ProgVar @["n_objs"] { };
	 ProgVar @["i"] { };
	 ProgVar @["objid"] { };
	 ProgVar @["ctr_x"] { };
	 ProgVar @["ctr_y"] { };
	 ProgVar @["size"] { };
	 ProgVar @["redo"] { };
	 ProgVar @["j"] { };
	 ProgVar @["oth_x"] { };
	 ProgVar @["oth_y"] { };
	 ProgVar @["oth_sz"] { };
	 ProgVar @["dist"] { };
	 ProgVar @["nm"] { };
	 ProgVar @["min_dist"] { };
	 ProgVar @["redos"] { };
	 ProgVar @["half_size"] { };
	 ProgVar @["rmargin"] { };
	};
       };
       RandomCall @[1] { 
	ProgArg_List @.meth_args = [3] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	};
       };
       AssignExpr @[2] { };
       AssignExpr @[3] { };
       AssignExpr @[4] { };
       MethodCall @[5] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       ForLoop @[6] { 
	ProgEl_List @.loop_code = [12] {
	 RandomCall @[0] { 
	  ProgArg_List @.meth_args = [2] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	  };
	 };
	 AssignExpr @[1] { };
	 AssignExpr @[2] { };
	 AssignExpr @[3] { };
	 RandomCall @[4] { 
	  ProgArg_List @.meth_args = [3] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	  };
	 };
	 DoLoop @[5] { 
	  ProgEl_List @.loop_code = [3] {
	   RandomCall @[0] { 
	    ProgArg_List @.meth_args = [3] {
	     ProgArg @[0] { };
	     ProgArg @[1] { };
	     ProgArg @[2] { };
	    };
	   };
	   RandomCall @[1] { 
	    ProgArg_List @.meth_args = [3] {
	     ProgArg @[0] { };
	     ProgArg @[1] { };
	     ProgArg @[2] { };
	    };
	   };
	   ForLoop @[2] { 
	    ProgEl_List @.loop_code = [4] {
	     AssignExpr @[0] { };
	     AssignExpr @[1] { };
	     MathCall @[2] { 
	      ProgArg_List @.meth_args = [4] {
	       ProgArg @[0] { };
	       ProgArg @[1] { };
	       ProgArg @[2] { };
	       ProgArg @[3] { };
	      };
	     };
	     If @[3] { 
	      ProgEl_List @.true_code = [3] {
	       AssignExpr @[0] { };
	       VarIncr @[1] { };
	       IfBreak @[2] { };
	      };
	     };
	    };
	   };
	  };
	 };
	 If @[6] { 
	  ProgEl_List @.true_code = [1] {
	   PrintVar @[0] { };
	  };
	 };
	 MethodCall @[7] { 
	  ProgArg_List @.meth_args = [0] {
	  };
	 };
	 CssExpr @[8] { };
	 CssExpr @[9] { };
	 CssExpr @[10] { };
	 CssExpr @[11] { };
	};
       };
      };
     };
    };

    ProgEl_List @.init_code = [4] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     FunctionCall @[3] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
    };

    ProgEl_List @.prog_code = [1] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [0] {
      };
     };
    };
   };
  };
  Program_Group @.gp["Program_Group_31"] { 
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @["Browser2"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["view_win_lft"] { };
    UserDataItem @["view_win_top"] { };
    UserDataItem @["view_win_wd"] { };
    UserDataItem @["view_win_ht"] { };
    UserDataItem @["view_win_iconified"] { };
    UserDataItem @["view_splitter_state"] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @["Application"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_win_visible"] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @["Navigator"] { };
    PanelViewer @["Editor"] { };
    T3PanelViewer @["T3Frames"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_panel_selected"] { };
     };

     T3Panel_List @.panels = [1] {
      T3Panel @["Frame1"] { 
       T3DataView_List @.root_view.children = [0] {
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @["Tools"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_win_lft"] { };
      UserDataItem @["view_win_top"] { };
      UserDataItem @["view_win_wd"] { };
      UserDataItem @["view_win_ht"] { };
      UserDataItem @["view_win_iconified"] { };
      UserDataItem @["view_visible"] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [0] {
 };
};
LeabraProject .projects["DebugUpdatePointersBug2398"] {
 name="DebugUpdatePointersBug2398";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=0;
 };
 author="rohrlich";
 email="john.rohrlich@colorado.edu";
 license {
  owner="Regents of the University of Colorado";
  license=NO_LIC;
  org="CCNLab at the University of Colorado Boulder";
  year="2011";
  custom=;
 };
 wiki_url {
  sync=0;
  wiki=;
  url=;
 };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @["LeabraWizard_0"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_6";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["NO_CLIP"] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  ControlPanel @["ControlPanel"] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="ControlPanel";
   running_updt=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
  ClusterRun @["ClusterRun"] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="ClusterRun";
   running_updt=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   jobs_running {
    name="jobs_running";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="if doing parallel batch mode, and cluster has by_node policy, then this is the number of nodes to allocate to the overall job";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
   };
   jobs_done {
    name="jobs_done";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="if doing parallel batch mode, and cluster has by_node policy, then this is the number of nodes to allocate to the overall job";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
   };
   jobs_archive {
    name="jobs_archive";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="if doing parallel batch mode, and cluster has by_node policy, then this is the number of nodes to allocate to the overall job";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
   };
   file_list {
    name="file_list";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="cluster where this job was submitted / run";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_ROWS|SAVE_DATA|READ_ONLY;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["file_name"] {
      name="file_name";
      desc="name of file -- does not include any path information";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["tag"] {
      name="tag";
      desc="job tag associated with this file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["size"] {
      name="size";
      desc="size of file -- with typical suffixes (K = kilobytes, M = megabytes, G = gigabytes)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["kind"] {
      name="kind";
      desc="type of file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["date_modified"] {
      name="date_modified";
      desc="timestamp for when the file was last modified";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["date_created"] {
      name="date_created";
      desc="timestamp for when the file was first created";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["svn_file_path"] {
      name="svn_file_path";
      desc="path to file in SVN repository, relative to root of svn_repo repository";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["proj_file_path"] {
      name="proj_file_path";
      desc="path to file relative to the parent project directory -- e.g., results/filename.dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["file_path"] {
      name="file_path";
      desc="full path to file on local file system, including all parent directories and name of file -- takes you directly to the file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
   };
   cluster_info {
    name="cluster_info";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["queue"] {
      name="queue";
      desc="queue that this info relates to";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number or total number of actve jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["user"] {
      name="user";
      desc="user name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["state"] {
      name="state";
      desc="current scheduler state -- or description of global state info";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["procs"] {
      name="procs";
      desc="number of processors for this job or for global state info";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="timestamp for when the job was submitted or started running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   cluster=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
 };
 param_sets {
  name="param_sets";
  el_typ=ParamSet;
  el_def=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp["InputData"] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["OutputData"] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["AnalysisData"] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program_Group @.gp["Program_Group_30"] {
   name="Program_Group_30";
   el_typ=Program;
   el_def=0;
   tags=;
   desc=;
   debug_mode=0;
   Program @["ObjSceneEnv"] {
    UserDataItem_List @*(.user_data_) {
     name="UserDataItem_List_2925";
     el_typ=UserDataItem;
     el_def=0;
     UserDataItem @["user_pinned"] {
      name="user_pinned";
      value 1 0=1;
      val_type_fixed=0;
     };
    };
    name="ObjSceneEnv";
    short_nm="bScnnv";
    tags=;
    desc=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=DataTable;
     el_def=0;
     DataTable @["ObjectsAll"] {
      name="ObjectsAll";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="name";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[19] "cross";"face";"star";"asterisk";"emerald";"face_square";"fish";"kite";"mountain";"mountain_snow";
"pyramid";"star_of_david";"bottle";"food_jar";"mother_face";"rattle";"teddy_bear";"mother";"woman";	};
       };
       float_Data @["pv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2456140369176865;
	  val_type_fixed=0;
	 };
	};
	name="nv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=126;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["freq"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="freq";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;	};
       };
       int_Data @["n_coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="n_coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[19] 13;34;11;25;14;43;19;35;8;17;
24;9;27;23;162;29;142;137;162;	};
       };
       float_Data @["coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;256;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
	ar {
	 name="ar";
	[2 256 19] 0.43736094;0.97266495;0.59408194;0.9744873;0.59408194;0.61913151;0.94579303;0.61913151;0.94579303;0.49885726;
0.59772664;0.50432426;0.60137129;0.045095261;0.43189394;0.043272909;0.44100562;0.50067961;0.061959468;0.50250196;
0.06013713;0.63188791;0.43918329;0.62824321;0.43736094;0.97266495;0.43736094;0.97266495;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.08382751;0.95444161;0.92574739;0.95626396;0.84738684;0.47881156;0.5066098;0.072430402;
0.18587841;0.47334456;0.08382751;0.95444161;-1;-1;0.31161967;0.74122816;0.41913757;0.74122816;
0.41731524;0.63553262;0.31161967;0.63917726;0.31161967;0.74122816;-1;-1;0.62141705;0.74122816;
0.74351364;0.73758346;0.73986894;0.63188791;0.62141705;0.63735491;0.62141705;0.74122816;-1;-1;
0.2879293;0.78131956;0.43189394;0.82505566;0.40638122;0.83963436;0.2879293;0.78131956;-1;-1;
0.74533594;0.78131956;0.61594999;0.82687801;0.64875209;0.83963436;0.74533594;0.78131956;-1;-1;
0.34259942;0.41138509;0.42460459;0.31480122;0.57403624;0.31297889;0.66697544;0.40409574;0.34259942;0.41138509;
0.34259942;0.41138509;0.082005173;0.72833508;0.14943166;0.82309663;0.092939198;0.91603583;0;0.82491893;
0.34259942;0.41138509;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.50843209;0.9307512;0.62141705;0.62459856;0.97859514;0.62642092;
0.68884349;0.39862874;0.82187414;0.059673991;0.51754379;0.27653214;0.19681244;0.061496362;0.33895475;0.40045106;
0.038269084;0.62642092;0.38633549;0.62459856;0.50843209;0.9307512;0.50843209;0.9307512;0.50843209;0.9307512;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.43918329;0.96719795;0.56674689;0.9653756;
0.56856924;0.66468996;0.77813804;0.92346185;0.89658993;0.84145671;0.66515309;0.57175076;0.93850368;0.57539546;
0.93850368;0.45876586;0.64875209;0.45147651;0.9202804;0.14714618;0.83645278;0.063318618;0.56310225;0.37493834;
0.57221389;0.054206997;0.44282797;0.054206934;0.44282797;0.37311599;0.20045711;0.072430305;0.10569556;0.15443553;
0.36811215;0.45147651;0.065604143;0.45694351;0.065604143;0.57175076;0.36264512;0.57357311;0.12574127;0.85421306;
0.21503581;0.9362182;0.43918329;0.67015696;0.43918329;0.96719795;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.53576714;0.04145059;
0.07471583;0.59908581;0.27517292;0.8578577;0.73440194;0.85421306;0.95126009;0.59908581;0.53576714;0.04145059;
-1;-1;0.072893485;0.59544116;0.29521865;0.51161361;0.67426479;0.51343596;0.95308238;0.59544116;
0.73440194;0.85603541;0.27517292;0.85968006;0.072893485;0.59544116;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.30352283;0.65011126;0.3709493;0.65011126;0.40557373;0.69020265;0.3709493;0.72847176;0.3017005;0.72847176;
0.26707608;0.6938473;0.30352283;0.65011126;-1;-1;0.33789352;0.65193355;0.35611689;0.6883803;
0.33607119;0.7266494;0.31420314;0.69020265;0.33789352;0.65193355;-1;-1;0.11298492;0.92710656;
0.86014324;0.92528421;0.86014313;0.25830874;0.68702114;0.1927046;0.49567574;0.15261321;0.29521865;0.18541525;
0.11116258;0.25284174;0.11298492;0.92710656;-1;-1;0.22982185;0.41978201;0.35191843;0.30315241;
0.49406075;0.25030464;0.63073605;0.29950774;0.7564773;0.41978201;0.22982185;0.41978201;-1;-1;
0.58907598;0.72563457;0.64739078;0.72563457;0.68383753;0.68736553;0.66014713;0.64545172;0.58543134;0.64545172;
0.55627394;0.68918782;0.58907598;0.72563457;-1;-1;0.61823338;0.72563457;0.64010143;0.68736553;
0.61641103;0.64545172;0.59636533;0.68736553;0.61823338;0.72563457;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.036446746;0.56263906;0.20410179;0.7703855;0.73075724;0.76856321;0.96401638;0.32573524;
0.96583873;0.71389306;0.72529024;0.26742044;0.21139114;0.27106512;0.036446746;0.56263906;-1;-1;
0.12027427;0.42231911;0.29886332;0.35124797;0.29704097;0.42414144;0.12027427;0.42231911;-1;-1;
0.20045711;0.68291336;0.30797499;0.68291336;0.30979735;0.58997411;0.19863477;0.58997411;0.20045711;0.68291336;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.45193964;0.96719795;0.71617854;0.68291336;0.55034584;0.29840016;
0.24054852;0.68109101;0.45193964;0.96719795;-1;-1;0.54305649;0.21092796;0.599549;0.21092796;
0.59772664;0.1471462;0.5412342;0.14532386;0.54305649;0.21092796;-1;-1;0.67062014;0.14350146;
0.73257959;0.14167918;0.73257959;0.074252672;0.66879779;0.072430372;0.67062014;0.14350146;-1;-1;
0.86743253;0.12163346;0.93668133;0.12163346;0.93668139;0.04873997;0.86561018;0.050562322;0.86743253;0.12163346;
-1;-1;0.55034584;0.30022252;0.56856924;0.21092798;0.55034584;0.30022252;-1;-1;
0.56856924;0.14714618;0.66879779;0.11069944;0.56856924;0.14714618;-1;-1;0.73257959;0.10523244;
0.86378795;0.087009005;0.73257959;0.10523244;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.047380768;0.074252672;0.91663569;0.074252672;
0.77449334;0.57904011;0.65604144;0.30204484;0.48474172;0.9562639;0.29886332;0.30386719;0.16218802;0.57721776;
0.047380768;0.074252672;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.047380768;0.074252672;
0.91663569;0.074252672;0.77449334;0.57904011;0.65604144;0.30204484;0.48474172;0.9562639;0.29886332;0.30386719;
0.16218802;0.57721776;0.047380768;0.074252672;-1;-1;0.37722382;0.58815181;0.43736094;0.52437001;
0.50478745;0.59361881;0.55399054;0.50614661;0.58861494;0.55170506;0.59043729;0.54988271;0.48656407;0.95444161;
0.37722382;0.58815181;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.063781805;0.096120708;0.92574739;0.09794303;0.65421909;0.66833466;0.34442174;0.67380166;0.063781805;0.096120708;
-1;-1;0.35900044;0.69931436;0.64692974;0.69749206;0.49932042;0.96902031;0.35900044;0.69931436;
-1;-1;0.46571085;0.82323331;0.53313732;0.82323331;0.57869577;0.78314191;0.53313732;0.74487281;
0.46388853;0.74487281;0.4292641;0.77949721;0.46571085;0.82323331;-1;-1;0.50008154;0.82141095;
0.52377194;0.7849642;0.49825922;0.74669516;0.47456884;0.7849642;0.50008154;0.82141095;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.51754379;0.9599086;0.91116863;0.18541525;0.11662959;0.18723759;0.51754379;0.9599086;
-1;-1;0.11298492;0.85239071;0.91299099;0.85603541;0.54487884;0.054206934;0.11298492;0.85239071;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.056492455;0.27653211;0.54305649;0.8578577;0.87107724;0.60637516;
0.38269082;0.021404902;0.056492455;0.27653211;-1;-1;0.58132559;0.83052266;0.65239674;0.91070551;
0.90387928;0.71207076;0.83280814;0.63553256;0.58132559;0.83052266;-1;-1;0.67426479;0.89430445;
0.71435624;0.90888315;0.74715829;0.89794916;0.79271668;0.8724364;0.79271668;0.89794916;0.80365074;0.91252786;
0.83827513;0.91252786;0.88565594;0.87425876;0.88565594;0.848746;0.87289953;0.83416736;0.84738684;0.83052266;
0.87472188;0.80318761;0.88747829;0.76674086;0.87472188;0.73576111;0.67426479;0.89430445;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.06560415;0.059673946;0.90205693;0.05967401;
0.93121433;0.08336436;0.95126009;0.1198111;0.95854944;0.73576111;0.83645278;0.73576111;0.85467625;0.74669516;
0.90752399;0.74851745;0.90752399;0.86514705;0.091116861;0.86514705;0.091116861;0.76127386;0.14214231;0.75945151;
0.16218802;0.74487281;0.027335059;0.74487281;0.023690384;0.12163341;0.040091421;0.083364375;0.06560415;0.059673946;
-1;-1;0.025512723;0.50614661;0.95672715;0.50432426;0.95126009;0.33120224;0.023690386;0.33120224;
0.025512723;0.50614661;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.11662959;0.19088228;
0.12938595;0.22915137;0.087472185;0.20546094;0.072893493;0.11798879;0.089294523;0.07607498;0.089294523;0.07607498;
0.089294523;0.07607498;0.13120829;0.052384619;0.18041138;0.021404926;0.18770075;0.014115561;0.2387262;0.0013591372;
0.28975165;-0.011397286;0.51572144;0.10887703;0.51936615;0.1526131;0.53941184;0.15079075;0.53758949;0.20363857;
0.44465032;0.34578088;0.41184825;0.4296084;0.39362487;0.42231905;0.36811215;0.41685203;0.34259942;0.43689775;
0.3316654;0.46969983;0.34442177;0.5025019;0.37722385;0.52619225;0.39362487;0.51708061;0.40638122;0.5043242;
0.40820357;0.48610085;0.47198537;0.5954411;0.50843209;0.6938473;0.50296509;0.73393875;0.5211885;0.69566965;
0.55945754;0.66286761;0.6432851;0.62277615;0.61595005;0.6792686;0.68155414;0.6100198;0.79818374;0.56081671;
0.84374219;0.5334816;0.88747829;0.4788115;0.90934628;0.53530395;0.91116863;0.60455281;0.89841235;0.70113665;
0.89841235;0.70113665;0.89841235;0.70113665;0.83463049;0.81412154;0.76720399;0.93621814;0.76355928;0.94532984;
0.70524454;1.0145787;0.63235104;1.0892946;0.61777234;1.0947615;0.51754379;1.1384976;0.41731524;1.1822337;
0.32437602;1.1767666;0.28428459;1.1694773;0.23690383;1.1749444;0.18405606;1.178589;0.12574126;1.1384976;
0.12574126;1.1384976;0.12574126;1.1384976;0.080182828;1.1002285;0.029157389;1.0510254;0.023690376;1.0400914;
-0.029157404;0.9471522;-0.082005188;0.854213;-0.082005188;0.854213;-0.10569558;0.75033975;-0.1312083;0.6355325;
-0.13303064;0.6245985;-0.12209661;0.27470973;-0.11116258;-0.075179033;-0.10569557;-0.18816391;-0.10569557;-0.22461073;
-0.12391895;-0.2391894;0.11662959;0.19088228;-1;-1;0.16036569;0.010470863;0.17129971;0.023227256;
0.41549289;0.15261315;0.41731524;0.19634931;0.43918329;0.19634931;0.57768095;0.18905988;0.57585859;0.14896852;
0.80182838;0.015937842;0.16036569;0.010470863;-1;-1;0.54305649;0.19088228;0.54487884;0.23279603;
0.47380769;0.26742044;0.41549289;0.31844586;0.34077707;0.39862871;0.43918329;0.24373005;0.43918329;0.19634931;
0.54305649;0.19088228;-1;-1;0.54305649;0.23461837;0.57221389;0.22003967;0.65968609;0.26559809;
0.72346789;0.31480119;0.77084869;0.38405001;0.79453903;0.45329884;0.77996033;0.50614661;0.78542739;0.52437001;
-1;-1;0.46287367;0.40591806;0.69795519;0.37858301;0.65786374;0.32391289;0.61959469;0.30022252;
0.58861494;0.28746614;0.55216819;0.29293317;0.46287367;0.40591806;-1;-1;0.5211885;0.50979131;
0.49203107;0.54259336;0.49203107;0.54259336;0.49203107;0.54259336;0.45376199;0.56081676;0.40638122;0.58086246;
0.39726952;0.58268476;0.35900044;0.58268476;0.32073137;0.58268476;0.33166537;0.55717206;0.34988874;0.53348166;
0.38269082;0.51525831;0.41549289;0.51343596;0.5211885;0.50979131;-1;-1;0.6287064;0.49339026;
0.61777234;0.47152221;0.63052869;0.44783184;0.64510739;0.43325314;0.64510739;0.41867444;0.61594999;0.42231911;
0.58314794;0.43507546;-1;-1;0.67244244;0.46605521;0.69977754;0.46058819;0.69977754;0.46058819;
0.69977754;0.46058819;0.71617854;0.46423286;0.73986894;0.46787754;0.74715829;0.46787754;0.77996033;0.47698921;
0.81276244;0.48610091;0.82369643;0.50432426;0.81640708;0.52254766;0.80911773;0.52983701;0.80911773;0.52983701;
0.80911773;0.52983701;0.79453903;0.52983701;0.76902634;0.52983701;0.75809228;0.52983701;0.71617854;0.52254766;
0.67426479;0.51525831;0.65421909;0.49339026;0.65057439;0.47881156;0.67244244;0.46605521;-1;-1;
0.51389915;0.55352741;0.44282797;0.60090816;0.40091419;0.60090816;-1;-1;0.66697544;0.54077101;
0.74533594;0.56263906;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.81094009;0.11798874;0.89294523;0.1908823;0.96219414;0.1908823;0.96219403;0.10523243;0.88930064;0.039628275;
0.81276244;0.041450571;0.81094009;0.11798874;-1;-1;0.81094009;0.11981107;0.32073137;0.60273051;
0.41367057;0.68109101;0.891123;0.18905988;0.81094009;0.11981107;-1;-1;0.32437605;0.60455281;
0.15307634;0.62642086;0.061959468;0.71936011;0.096583873;0.87972575;0.17676672;0.94350755;0.3462441;0.95808625;
0.43736094;0.87608111;0.41184822;0.68109101;0.32437605;0.60455281;-1;-1;0.061959468;0.71753776;
0.3462441;0.95808625;0.43736094;0.87608111;0.15307634;0.62642086;0.061959468;0.71753776;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.24054852;0.24008535;0.32984304;0.2419077;0.3754015;0.1908823;0.3754015;0.11981107;
0.33531007;0.081542045;0.23690385;0.085186675;0.19134541;0.12892276;0.19316775;0.19817163;0.24054852;0.24008535;
-1;-1;0.63781804;0.23567952;0.73804665;0.23567952;0.77813804;0.19558816;0.77996039;0.11358298;
0.75262535;0.077136226;0.6432851;0.075313874;0.59590429;0.10993827;0.59408194;0.18829882;0.63781804;0.23567952;
-1;-1;0.19499008;0.30022252;0.38086849;0.29840016;0.43736094;0.22003967;0.43918329;0.10887705;
0.37175682;0.03598357;0.20227943;0.039628275;0.1366753;0.10887705;0.13849764;0.21821733;0.19499008;0.30022252;
-1;-1;0.5849703;0.29657784;0.7927168;0.29475549;0.86378795;0.20363861;0.8656103;0.077897362;
0.80000609;0.025049608;0.56674689;0.03598357;0.50296509;0.10523243;0.49932042;0.22550668;0.5849703;0.29657784;
-1;-1;0.12027426;0.8141216;0.17312205;0.8141216;0.21868047;0.7703855;0.22414748;0.69931436;
0.18952309;0.66286761;0.11298491;0.66468996;0.071071155;0.70842606;0.069248818;0.77403021;0.12027426;0.8141216;
-1;-1;0.80000603;0.80683225;0.87836659;0.80683225;0.92392504;0.75216216;0.93121433;0.69202501;
0.89112288;0.65375596;0.80182838;0.65557826;0.75991464;0.70113671;0.75809228;0.76309615;0.80000603;0.80683225;
-1;-1;0.31526434;0.88883746;0.27517292;0.93804055;0.34259942;0.9854213;0.38998017;0.93804055;
0.45193964;0.95444161;0.54852355;0.94897461;0.61594999;0.9216395;0.67790949;0.96173096;0.72893494;0.91799486;
0.67973179;0.87608111;0.70342219;0.78860891;0.70524454;0.69384736;0.66333079;0.61730921;0.59225965;0.58086246;
0.41367057;0.57357311;0.33713239;0.61184216;0.27699527;0.67926866;0.2587719;0.77403021;0.31526434;0.88883746;
-1;-1;0.42460459;0.843279;0.45922899;0.84510136;0.46105134;0.81047696;0.42278224;0.80865461;
0.42460459;0.843279;-1;-1;0.53212249;0.84145671;0.56310225;0.84145671;0.56674689;0.80683225;
0.53212249;0.80683225;0.53212249;0.84145671;-1;-1;0.33713239;0.61184216;0.38815784;0.69749206;
0.46105134;0.72300476;0.54305649;0.72300476;0.62506169;0.69020271;0.66150844;0.61548686;0.59772664;0.58086246;
0.41367057;0.57539546;0.33713239;0.61184216;-1;-1;0.42278224;0.68109101;0.46287367;0.70478141;
0.5357672;0.70660371;0.57768095;0.68109101;0.53394485;0.66104531;0.46287367;0.66468996;0.42278224;0.68109101;
-1;-1;0.33713239;0.61184216;0.2733506;0.63188791;0.24054852;0.79043126;0.18405607;0.85421306;
0.10022855;0.85239071;0.032802071;0.78860891;0.034624409;0.70842606;0.091116861;0.63188791;0.15672101;0.55534971;
0.21139114;0.50979131;0.19134542;0.29840016;0.38086849;0.30022252;0.43918329;0.21639499;0.43553862;0.11069942;
0.40273654;0.07243032;0.53941184;0.068785697;0.50114274;0.10341009;0.50114274;0.22550668;0.5849703;0.29840016;
0.79089433;0.29475549;0.78178269;0.49885726;0.85649854;0.54988271;0.97495043;0.68109101;0.96583873;0.77220786;
0.90570164;0.84692371;0.78542739;0.84510136;0.72529024;0.7849642;0.70888919;0.63371021;0.65968609;0.61548686;
0.59408194;0.58268476;0.41002589;0.57357311;0.33713239;0.61184216;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.37062126;0.08094503;0.42417926;0.076660335;0.48416421;0.07023336;
0.61484569;0.074518062;0.69411153;0.098083556;0.76266575;0.16021077;0.80551207;0.23519202;0.83978915;0.34873492;
0.84407383;0.51369351;0.83978915;0.65080196;0.80979669;0.6765098;0.76695037;0.68722141;0.74338484;0.73006779;
0.73267323;0.77505648;0.70053846;0.79433733;0.670546;0.82861447;0.65554976;0.85860693;0.61056107;0.86503392;
0.58056855;0.87574548;0.53772217;0.87788785;0.51415664;0.89288408;0.49916044;0.88003016;0.46702564;0.87360317;
0.4177523;0.86931854;0.36633661;0.86717623;0.32134792;0.84789532;0.28921312;0.80933362;0.2527937;0.79005271;
0.24422441;0.75577563;0.22922818;0.70221764;0.20352034;0.68507904;0.17781252;0.68293673;0.17138556;0.64223266;
0.16924325;0.52654743;0.16710092;0.39800826;0.19280875;0.27589604;0.22494355;0.17734939;0.2527937;0.14092991;
0.28921312;0.11522213;0.31920561;0.093798921;0.37062126;0.08094503;-1;-1;0.27207455;0.12593372;
0.28064385;0.080944985;0.26778993;0.07237573;0.2099473;0.076660357;0.10283133;0.085229613;0.068554223;0.11307981;
0.040704068;0.20305723;0.044988707;0.39800826;0.049273346;0.59938627;0.083550453;0.7879104;0.13496612;0.86074924;
0.25493601;0.952869;0.33634415;0.97643453;0.42203692;0.98286146;0.46916795;0.98500377;0.49059114;0.98071915;
0.50130272;0.96786523;0.51415664;0.97857684;0.53772217;0.98500377;0.59128016;0.98071915;0.70910776;0.97000754;
0.78837359;0.94001508;0.86978173;0.85646462;0.91262805;0.78362578;0.92119735;0.65937126;0.91905504;0.39372364;
0.91905504;0.18591863;0.91905504;0.11950672;0.91905504;0.087371968;0.86978173;0.078802638;0.77980429;0.085229613;
0.72196162;0.08308734;0.69839615;0.087371968;0.70910776;0.11522209;-1;-1;0.41346765;0.59081703;
0.40918303;0.55653989;0.36847895;0.53511673;0.31706327;0.54368597;0.29564008;0.56939381;0.29349777;0.5758208;
0.31706327;0.60152858;0.3641943;0.60367095;0.41346765;0.59081703;-1;-1;0.56985694;0.58010542;
0.58913785;0.55225527;0.61270338;0.53511673;0.65769207;0.54154366;0.68554223;0.56082451;0.70053846;0.59081703;
0.670546;0.59724396;0.62555724;0.60152858;0.58913785;0.59510165;0.56985694;0.58010542;-1;-1;
0.34919807;0.53940135;0.32991719;0.55439758;0.32991719;0.58224773;0.34491342;0.59724396;0.36633661;0.59724396;
0.38347518;0.58439004;0.37919053;0.56082451;0.37062126;0.54368597;0.34919807;0.53940135;-1;-1;
0.63198423;0.54154366;0.65554976;0.56082451;0.65554976;0.58439004;0.64055353;0.59724396;0.6255573;0.59510165;
0.6084187;0.59081703;0.59984946;0.5758208;0.60627639;0.56082451;0.61484569;0.54582828;0.63198423;0.54154366;
-1;-1;0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;
0.60627639;0.20734182;0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;
0.26136297;0.61866719;0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;
0.59128016;0.6679405;0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.63198423;0.54154366;
-1;-1;0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;
0.60627639;0.20734182;0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;
0.26136297;0.61866719;0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;
0.59128016;0.6679405;0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;-1;-1;
0.26136297;0.61866719;0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;
0.59128016;0.6679405;0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.11662959;0.19088228;0.12938595;0.22915137;
0.087472185;0.20546094;0.072893493;0.11798879;0.089294523;0.07607498;0.089294523;0.07607498;0.089294523;0.07607498;
0.13120829;0.052384619;0.18041138;0.021404926;0.18770075;0.014115561;0.2387262;0.0013591372;0.28975165;-0.011397286;
0.51572144;0.10887703;0.51936615;0.1526131;0.53941184;0.15079075;0.53758949;0.20363857;0.44465032;0.34578088;
0.41184825;0.4296084;0.39362487;0.42231905;0.36811215;0.41685203;0.34259942;0.43689775;0.3316654;0.46969983;
0.34442177;0.5025019;0.37722385;0.52619225;0.39362487;0.51708061;0.40638122;0.5043242;0.40820357;0.48610085;
0.47198537;0.5954411;0.50843209;0.6938473;0.50296509;0.73393875;0.5211885;0.69566965;0.55945754;0.66286761;
0.6432851;0.62277615;0.61595005;0.6792686;0.68155414;0.6100198;0.79818374;0.56081671;0.84374219;0.5334816;
0.88747829;0.4788115;0.90934628;0.53530395;0.91116863;0.60455281;0.89841235;0.70113665;0.89841235;0.70113665;
0.89841235;0.70113665;0.83463049;0.81412154;0.76720399;0.93621814;0.76355928;0.94532984;0.70524454;1.0145787;
0.63235104;1.0892946;0.61777234;1.0947615;0.51754379;1.1384976;0.41731524;1.1822337;0.32437602;1.1767666;
0.28428459;1.1694773;0.23690383;1.1749444;0.18405606;1.178589;0.12574126;1.1384976;0.12574126;1.1384976;
0.12574126;1.1384976;0.080182828;1.1002285;0.029157389;1.0510254;0.023690376;1.0400914;-0.029157404;0.9471522;
-0.082005188;0.854213;-0.082005188;0.854213;-0.10569558;0.75033975;-0.1312083;0.6355325;-0.13303064;0.6245985;
-0.12209661;0.27470973;-0.11116258;-0.075179033;-0.10569557;-0.18816391;-0.10569557;-0.22461073;-0.12391895;-0.2391894;
0.11662959;0.19088228;-1;-1;0.16036569;0.010470863;0.17129971;0.023227256;0.41549289;0.15261315;
0.41731524;0.19634931;0.43918329;0.19634931;0.57768095;0.18905988;0.57585859;0.14896852;0.80182838;0.015937842;
0.16036569;0.010470863;-1;-1;0.54305649;0.19088228;0.54487884;0.23279603;0.47380769;0.26742044;
0.41549289;0.31844586;0.34077707;0.39862871;0.43918329;0.24373005;0.43918329;0.19634931;0.54305649;0.19088228;
-1;-1;0.54305649;0.23461837;0.57221389;0.22003967;0.65968609;0.26559809;0.72346789;0.31480119;
0.77084869;0.38405001;0.79453903;0.45329884;0.77996033;0.50614661;0.78542739;0.52437001;-1;-1;
0.46287367;0.40591806;0.69795519;0.37858301;0.65786374;0.32391289;0.61959469;0.30022252;0.58861494;0.28746614;
0.55216819;0.29293317;0.46287367;0.40591806;-1;-1;0.5211885;0.50979131;0.49203107;0.54259336;
0.49203107;0.54259336;0.49203107;0.54259336;0.45376199;0.56081676;0.40638122;0.58086246;0.39726952;0.58268476;
0.35900044;0.58268476;0.32073137;0.58268476;0.33166537;0.55717206;0.34988874;0.53348166;0.38269082;0.51525831;
0.41549289;0.51343596;0.5211885;0.50979131;-1;-1;0.6287064;0.49339026;0.61777234;0.47152221;
0.63052869;0.44783184;0.64510739;0.43325314;0.64510739;0.41867444;0.61594999;0.42231911;0.58314794;0.43507546;
-1;-1;0.67244244;0.46605521;0.69977754;0.46058819;0.69977754;0.46058819;0.69977754;0.46058819;
0.71617854;0.46423286;0.73986894;0.46787754;0.74715829;0.46787754;0.77996033;0.47698921;0.81276244;0.48610091;
0.82369643;0.50432426;0.81640708;0.52254766;0.80911773;0.52983701;0.80911773;0.52983701;0.80911773;0.52983701;
0.79453903;0.52983701;0.76902634;0.52983701;0.75809228;0.52983701;0.71617854;0.52254766;0.67426479;0.51525831;
0.65421909;0.49339026;0.65057439;0.47881156;0.67244244;0.46605521;-1;-1;0.51389915;0.55352741;
0.44282797;0.60090816;0.40091419;0.60090816;-1;-1;0.66697544;0.54077101;0.74533594;0.56263906;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [19] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["ObjectsCur"] {
      name="ObjectsCur";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="name";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[9] "face";"face_square";"fish";"kite";"bottle";"food_jar";"mother";"rattle";"teddy_bear";	};
       };
       float_Data @["pv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0.2;0.2;0;0;0;0;
1;1;0.5;0.5;0;0;0;0;	};
       };
       float_Data @["pv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;0;0;1;1;
0;0;0.5;0.5;0;0;0;0;	};
       };
       float_Data @["pv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0.80000001;0.80000001;0.5;0.5;0;0;0;0;0;0;
0;0;1;1;0;0;0.2;0.2;	};
       };
       float_Data @["pv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0.2;0.2;0.5;0.5;0;0;
0;0;0;0;1;1;0.80000001;0.80000001;	};
       };
       float_Data @["pv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0.2;0.2;0.5;0.5;0;0;
0;0;0;0;0.2;0.2;0;0;	};
       };
       float_Data @["nv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0.5;0.5;1;1;0.2;0.2;0.5;0.5;0;0;
0;0;0;0;0.2;0.2;0;0;	};
       };
       float_Data @["nv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0.5;0.5;1;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;1;1;0.2;0.2;
0.2;0.2;0.5;0.5;0;0;0.2;0.2;	};
       };
       float_Data @["nv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="nv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=67;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["freq"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="freq";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[9] 0;0;0;0;0;0;0;0;0;	};
       };
       int_Data @["n_coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="n_coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[9] 34;43;19;35;27;23;137;29;142;	};
       };
       float_Data @["coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;256;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
	ar {
	 name="ar";
	[2 256 9] 0.08382751;0.95444161;0.92574739;0.95626396;0.84738684;0.47881156;0.5066098;0.072430402;0.18587841;0.47334456;
0.08382751;0.95444161;-1;-1;0.31161967;0.74122816;0.41913757;0.74122816;0.41731524;0.63553262;
0.31161967;0.63917726;0.31161967;0.74122816;-1;-1;0.62141705;0.74122816;0.74351364;0.73758346;
0.73986894;0.63188791;0.62141705;0.63735491;0.62141705;0.74122816;-1;-1;0.2879293;0.78131956;
0.43189394;0.82505566;0.40638122;0.83963436;0.2879293;0.78131956;-1;-1;0.74533594;0.78131956;
0.61594999;0.82687801;0.64875209;0.83963436;0.74533594;0.78131956;-1;-1;0.34259942;0.41138509;
0.42460459;0.31480122;0.57403624;0.31297889;0.66697544;0.40409574;0.34259942;0.41138509;0.34259942;0.41138509;
0.082005173;0.72833508;0.14943166;0.82309663;0.092939198;0.91603583;0;0.82491893;0.34259942;0.41138509;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.30352283;0.65011126;0.3709493;0.65011126;0.40557373;0.69020265;0.3709493;0.72847176;
0.3017005;0.72847176;0.26707608;0.6938473;0.30352283;0.65011126;-1;-1;0.33789352;0.65193355;
0.35611689;0.6883803;0.33607119;0.7266494;0.31420314;0.69020265;0.33789352;0.65193355;-1;-1;
0.11298492;0.92710656;0.86014324;0.92528421;0.86014313;0.25830874;0.68702114;0.1927046;0.49567574;0.15261321;
0.29521865;0.18541525;0.11116258;0.25284174;0.11298492;0.92710656;-1;-1;0.22982185;0.41978201;
0.35191843;0.30315241;0.49406075;0.25030464;0.63073605;0.29950774;0.7564773;0.41978201;0.22982185;0.41978201;
-1;-1;0.58907598;0.72563457;0.64739078;0.72563457;0.68383753;0.68736553;0.66014713;0.64545172;
0.58543134;0.64545172;0.55627394;0.68918782;0.58907598;0.72563457;-1;-1;0.61823338;0.72563457;
0.64010143;0.68736553;0.61641103;0.64545172;0.59636533;0.68736553;0.61823338;0.72563457;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.036446746;0.56263906;0.20410179;0.7703855;0.73075724;0.76856321;
0.96401638;0.32573524;0.96583873;0.71389306;0.72529024;0.26742044;0.21139114;0.27106512;0.036446746;0.56263906;
-1;-1;0.12027427;0.42231911;0.29886332;0.35124797;0.29704097;0.42414144;0.12027427;0.42231911;
-1;-1;0.20045711;0.68291336;0.30797499;0.68291336;0.30979735;0.58997411;0.19863477;0.58997411;
0.20045711;0.68291336;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.45193964;0.96719795;0.71617854;0.68291336;
0.55034584;0.29840016;0.24054852;0.68109101;0.45193964;0.96719795;-1;-1;0.54305649;0.21092796;
0.599549;0.21092796;0.59772664;0.1471462;0.5412342;0.14532386;0.54305649;0.21092796;-1;-1;
0.67062014;0.14350146;0.73257959;0.14167918;0.73257959;0.074252672;0.66879779;0.072430372;0.67062014;0.14350146;
-1;-1;0.86743253;0.12163346;0.93668133;0.12163346;0.93668139;0.04873997;0.86561018;0.050562322;
0.86743253;0.12163346;-1;-1;0.55034584;0.30022252;0.56856924;0.21092798;0.55034584;0.30022252;
-1;-1;0.56856924;0.14714618;0.66879779;0.11069944;0.56856924;0.14714618;-1;-1;
0.73257959;0.10523244;0.86378795;0.087009005;0.73257959;0.10523244;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.056492455;0.27653211;
0.54305649;0.8578577;0.87107724;0.60637516;0.38269082;0.021404902;0.056492455;0.27653211;-1;-1;
0.58132559;0.83052266;0.65239674;0.91070551;0.90387928;0.71207076;0.83280814;0.63553256;0.58132559;0.83052266;
-1;-1;0.67426479;0.89430445;0.71435624;0.90888315;0.74715829;0.89794916;0.79271668;0.8724364;
0.79271668;0.89794916;0.80365074;0.91252786;0.83827513;0.91252786;0.88565594;0.87425876;0.88565594;0.848746;
0.87289953;0.83416736;0.84738684;0.83052266;0.87472188;0.80318761;0.88747829;0.76674086;0.87472188;0.73576111;
0.67426479;0.89430445;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.06560415;0.059673946;0.90205693;0.05967401;0.93121433;0.08336436;0.95126009;0.1198111;0.95854944;0.73576111;
0.83645278;0.73576111;0.85467625;0.74669516;0.90752399;0.74851745;0.90752399;0.86514705;0.091116861;0.86514705;
0.091116861;0.76127386;0.14214231;0.75945151;0.16218802;0.74487281;0.027335059;0.74487281;0.023690384;0.12163341;
0.040091421;0.083364375;0.06560415;0.059673946;-1;-1;0.025512723;0.50614661;0.95672715;0.50432426;
0.95126009;0.33120224;0.023690386;0.33120224;0.025512723;0.50614661;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.37062126;0.08094503;0.42417926;0.076660335;0.48416421;0.07023336;0.61484569;0.074518062;
0.69411153;0.098083556;0.76266575;0.16021077;0.80551207;0.23519202;0.83978915;0.34873492;0.84407383;0.51369351;
0.83978915;0.65080196;0.80979669;0.6765098;0.76695037;0.68722141;0.74338484;0.73006779;0.73267323;0.77505648;
0.70053846;0.79433733;0.670546;0.82861447;0.65554976;0.85860693;0.61056107;0.86503392;0.58056855;0.87574548;
0.53772217;0.87788785;0.51415664;0.89288408;0.49916044;0.88003016;0.46702564;0.87360317;0.4177523;0.86931854;
0.36633661;0.86717623;0.32134792;0.84789532;0.28921312;0.80933362;0.2527937;0.79005271;0.24422441;0.75577563;
0.22922818;0.70221764;0.20352034;0.68507904;0.17781252;0.68293673;0.17138556;0.64223266;0.16924325;0.52654743;
0.16710092;0.39800826;0.19280875;0.27589604;0.22494355;0.17734939;0.2527937;0.14092991;0.28921312;0.11522213;
0.31920561;0.093798921;0.37062126;0.08094503;-1;-1;0.27207455;0.12593372;0.28064385;0.080944985;
0.26778993;0.07237573;0.2099473;0.076660357;0.10283133;0.085229613;0.068554223;0.11307981;0.040704068;0.20305723;
0.044988707;0.39800826;0.049273346;0.59938627;0.083550453;0.7879104;0.13496612;0.86074924;0.25493601;0.952869;
0.33634415;0.97643453;0.42203692;0.98286146;0.46916795;0.98500377;0.49059114;0.98071915;0.50130272;0.96786523;
0.51415664;0.97857684;0.53772217;0.98500377;0.59128016;0.98071915;0.70910776;0.97000754;0.78837359;0.94001508;
0.86978173;0.85646462;0.91262805;0.78362578;0.92119735;0.65937126;0.91905504;0.39372364;0.91905504;0.18591863;
0.91905504;0.11950672;0.91905504;0.087371968;0.86978173;0.078802638;0.77980429;0.085229613;0.72196162;0.08308734;
0.69839615;0.087371968;0.70910776;0.11522209;-1;-1;0.41346765;0.59081703;0.40918303;0.55653989;
0.36847895;0.53511673;0.31706327;0.54368597;0.29564008;0.56939381;0.29349777;0.5758208;0.31706327;0.60152858;
0.3641943;0.60367095;0.41346765;0.59081703;-1;-1;0.56985694;0.58010542;0.58913785;0.55225527;
0.61270338;0.53511673;0.65769207;0.54154366;0.68554223;0.56082451;0.70053846;0.59081703;0.670546;0.59724396;
0.62555724;0.60152858;0.58913785;0.59510165;0.56985694;0.58010542;-1;-1;0.34919807;0.53940135;
0.32991719;0.55439758;0.32991719;0.58224773;0.34491342;0.59724396;0.36633661;0.59724396;0.38347518;0.58439004;
0.37919053;0.56082451;0.37062126;0.54368597;0.34919807;0.53940135;-1;-1;0.63198423;0.54154366;
0.65554976;0.56082451;0.65554976;0.58439004;0.64055353;0.59724396;0.6255573;0.59510165;0.6084187;0.59081703;
0.59984946;0.5758208;0.60627639;0.56082451;0.61484569;0.54582828;0.63198423;0.54154366;-1;-1;
0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;0.60627639;0.20734182;
0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.63198423;0.54154366;-1;-1;
0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;0.60627639;0.20734182;
0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;-1;-1;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.26136297;0.61866719;0.37919053;0.67222518;
0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;0.71981931;0.6208095;
0.60627639;0.6850791;0.59128016;0.6679405;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.81094009;0.11798874;0.89294523;0.1908823;0.96219414;0.1908823;
0.96219403;0.10523243;0.88930064;0.039628275;0.81276244;0.041450571;0.81094009;0.11798874;-1;-1;
0.81094009;0.11981107;0.32073137;0.60273051;0.41367057;0.68109101;0.891123;0.18905988;0.81094009;0.11981107;
-1;-1;0.32437605;0.60455281;0.15307634;0.62642086;0.061959468;0.71936011;0.096583873;0.87972575;
0.17676672;0.94350755;0.3462441;0.95808625;0.43736094;0.87608111;0.41184822;0.68109101;0.32437605;0.60455281;
-1;-1;0.061959468;0.71753776;0.3462441;0.95808625;0.43736094;0.87608111;0.15307634;0.62642086;
0.061959468;0.71753776;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.24054852;0.24008535;0.32984304;0.2419077;
0.3754015;0.1908823;0.3754015;0.11981107;0.33531007;0.081542045;0.23690385;0.085186675;0.19134541;0.12892276;
0.19316775;0.19817163;0.24054852;0.24008535;-1;-1;0.63781804;0.23567952;0.73804665;0.23567952;
0.77813804;0.19558816;0.77996039;0.11358298;0.75262535;0.077136226;0.6432851;0.075313874;0.59590429;0.10993827;
0.59408194;0.18829882;0.63781804;0.23567952;-1;-1;0.19499008;0.30022252;0.38086849;0.29840016;
0.43736094;0.22003967;0.43918329;0.10887705;0.37175682;0.03598357;0.20227943;0.039628275;0.1366753;0.10887705;
0.13849764;0.21821733;0.19499008;0.30022252;-1;-1;0.5849703;0.29657784;0.7927168;0.29475549;
0.86378795;0.20363861;0.8656103;0.077897362;0.80000609;0.025049608;0.56674689;0.03598357;0.50296509;0.10523243;
0.49932042;0.22550668;0.5849703;0.29657784;-1;-1;0.12027426;0.8141216;0.17312205;0.8141216;
0.21868047;0.7703855;0.22414748;0.69931436;0.18952309;0.66286761;0.11298491;0.66468996;0.071071155;0.70842606;
0.069248818;0.77403021;0.12027426;0.8141216;-1;-1;0.80000603;0.80683225;0.87836659;0.80683225;
0.92392504;0.75216216;0.93121433;0.69202501;0.89112288;0.65375596;0.80182838;0.65557826;0.75991464;0.70113671;
0.75809228;0.76309615;0.80000603;0.80683225;-1;-1;0.31526434;0.88883746;0.27517292;0.93804055;
0.34259942;0.9854213;0.38998017;0.93804055;0.45193964;0.95444161;0.54852355;0.94897461;0.61594999;0.9216395;
0.67790949;0.96173096;0.72893494;0.91799486;0.67973179;0.87608111;0.70342219;0.78860891;0.70524454;0.69384736;
0.66333079;0.61730921;0.59225965;0.58086246;0.41367057;0.57357311;0.33713239;0.61184216;0.27699527;0.67926866;
0.2587719;0.77403021;0.31526434;0.88883746;-1;-1;0.42460459;0.843279;0.45922899;0.84510136;
0.46105134;0.81047696;0.42278224;0.80865461;0.42460459;0.843279;-1;-1;0.53212249;0.84145671;
0.56310225;0.84145671;0.56674689;0.80683225;0.53212249;0.80683225;0.53212249;0.84145671;-1;-1;
0.33713239;0.61184216;0.38815784;0.69749206;0.46105134;0.72300476;0.54305649;0.72300476;0.62506169;0.69020271;
0.66150844;0.61548686;0.59772664;0.58086246;0.41367057;0.57539546;0.33713239;0.61184216;-1;-1;
0.42278224;0.68109101;0.46287367;0.70478141;0.5357672;0.70660371;0.57768095;0.68109101;0.53394485;0.66104531;
0.46287367;0.66468996;0.42278224;0.68109101;-1;-1;0.33713239;0.61184216;0.2733506;0.63188791;
0.24054852;0.79043126;0.18405607;0.85421306;0.10022855;0.85239071;0.032802071;0.78860891;0.034624409;0.70842606;
0.091116861;0.63188791;0.15672101;0.55534971;0.21139114;0.50979131;0.19134542;0.29840016;0.38086849;0.30022252;
0.43918329;0.21639499;0.43553862;0.11069942;0.40273654;0.07243032;0.53941184;0.068785697;0.50114274;0.10341009;
0.50114274;0.22550668;0.5849703;0.29840016;0.79089433;0.29475549;0.78178269;0.49885726;0.85649854;0.54988271;
0.97495043;0.68109101;0.96583873;0.77220786;0.90570164;0.84692371;0.78542739;0.84510136;0.72529024;0.7849642;
0.70888919;0.63371021;0.65968609;0.61548686;0.59408194;0.58268476;0.41002589;0.57357311;0.33713239;0.61184216;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [9] 0;1;2;3;4;5;6;7;8;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["ValueNames"] {
      name="ValueNames";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["value"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1910331398248672;
	  val_type_fixed=0;
	 };
	};
	name="value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=98;
	ar {
	 name="ar";
	[10] "pv0";"pv1";"pv2";"pv3";"pv4";"nv0";"nv1";"nv2";"nv3";"nv4";
	};
       };
       String_Data @["desc"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.8187134265899658;
	  val_type_fixed=0;
	 };
	};
	name="desc";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=420;
	ar {
	 name="ar";
	[10] "positive food value";"positive liquid value";"positive social value";"positive fun value";;"negative pain value";"negative fear value";"negative social value";"negative frustration value";;
	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [10] 0;1;2;3;4;5;6;7;8;9;
      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["Scene"] {
      name="Scene";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 8 0=0.1306991;
	  val_type_fixed=0;
	 };
	};
	name="name";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] "face_square";"mother";"fish";	};
       };
       float_Data @["ctr_x"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 8 0=0.1306991;
	  val_type_fixed=0;
	 };
	};
	name="ctr_x";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] 0.23461437;0.77146691;0.76181173;	};
       };
       float_Data @["ctr_y"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 8 0=0.1306991;
	  val_type_fixed=0;
	 };
	};
	name="ctr_y";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] 0.75619251;0.23104611;0.49403551;	};
       };
       float_Data @["size"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 8 0=0.1306991;
	  val_type_fixed=0;
	 };
	};
	name="size";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] 0.11361846;0.14119354;0.12815231;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [3] 0;1;2;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["FoveatedValues"] {
      name="FoveatedValues";
      desc=;
      data {
       name="data";
       el_typ=float_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="name";
	desc="name of foveated object";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=67;
	ar {
	 name="ar";
	[1] "mother";	};
       };
       float_Data @["pv"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="pv";
	desc="positive values, in form ready to apply to network";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1;1;1;5;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[4] ;;;;	};
	width=67;
	ar {
	 name="ar";
	[1 1 1 5 1] 0.5;0.5;1;0;0;	};
       };
       float_Data @["nv"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="nv";
	desc="negative values, in form ready to apply to network";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1;1;1;5;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[4] ;;;;	};
	width=67;
	ar {
	 name="ar";
	[1 1 1 5 1] 0;0;0;0.5;0;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [1] 0;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["obj_files"] {
      name="obj_files";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["FileName"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1315789520740509;
	  val_type_fixed=0;
	 };
	};
	name="FileName";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	ar {
	 name="ar";
	[18] "asterisk.svg";"bottle.svg";"cross.svg";"emerald.svg";"face.svg";"face_square.svg";"fish.svg";"food_jar.svg";"kite.svg";"mother.svg";
"mountain.svg";"mountain_snow.svg";"pyramid.svg";"rattle.svg";"star.svg";"star_of_david.svg";"teddy_bear.svg";"woman.svg";	};
       };
       String_Data @["FilePath"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.3460526168346405;
	  val_type_fixed=0;
	 };
	};
	name="FilePath";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=263;
	ar {
	 name="ar";
	[18] "twod_objs_svg/asterisk.svg";"twod_objs_svg/bottle.svg";"twod_objs_svg/cross.svg";"twod_objs_svg/emerald.svg";"twod_objs_svg/face.svg";"twod_objs_svg/face_square.svg";"twod_objs_svg/fish.svg";"twod_objs_svg/food_jar.svg";"twod_objs_svg/kite.svg";"twod_objs_svg/mother.svg";
"twod_objs_svg/mountain.svg";"twod_objs_svg/mountain_snow.svg";"twod_objs_svg/pyramid.svg";"twod_objs_svg/rattle.svg";"twod_objs_svg/star.svg";"twod_objs_svg/star_of_david.svg";"twod_objs_svg/teddy_bear.svg";"twod_objs_svg/woman.svg";	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [18] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["GridPos"] {
      name="GridPos";
      desc=;
      data {
       name="data";
       el_typ=int_Data;
       el_def=0;
       int_Data @["x_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;1;2;0;1;2;0;1;2;	};
       };
       int_Data @["y_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;0;0;1;1;1;2;2;2;	};
       };
       float_Data @["x_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.5;0.76499999;0.235;0.5;0.76499999;0.235;0.5;0.76499999;	};
       };
       float_Data @["y_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.235;0.235;0.5;0.5;0.5;0.76499999;0.76499999;0.76499999;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [9] 0;1;2;3;4;5;6;7;8;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["GridPermuted"] {
      name="GridPermuted";
      desc=;
      data {
       name="data";
       el_typ=int_Data;
       el_def=0;
       int_Data @["x_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;1;2;0;1;2;0;1;2;	};
       };
       int_Data @["y_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;0;0;1;1;1;2;2;2;	};
       };
       float_Data @["x_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.5;0.76499999;0.235;0.5;0.76499999;0.235;0.5;0.76499999;	};
       };
       float_Data @["y_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.235;0.235;0.5;0.5;0.5;0.76499999;0.76499999;0.76499999;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [9] 0;1;2;3;4;5;6;7;8;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     taCanvas @["FullViewCanvas"] {
      name="FullViewCanvas";
      coord_type=NORMALIZED;
     };
     taCanvas @["FoveaCanvas"] {
      name="FoveaCanvas";
      coord_type=NORMALIZED;
     };
     taCanvas @["SceneCanvas"] {
      name="SceneCanvas";
      coord_type=NORMALIZED;
     };
     DataTable @["CanvasViews"] {
      name="CanvasViews";
      desc=;
      data {
       name="data";
       el_typ=float_Data;
       el_def=0;
       float_Data @["Scene"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["IMAGE"] {
	  name="IMAGE";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1327433586120605;
	  val_type_fixed=0;
	 };
	};
	name="Scene";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1024;1024;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
       };
       float_Data @["FullView"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["IMAGE"] {
	  name="IMAGE";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1327433586120605;
	  val_type_fixed=0;
	 };
	};
	name="FullView";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1024;1024;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
       };
       float_Data @["Fovea"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["IMAGE"] {
	  name="IMAGE";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1327433586120605;
	  val_type_fixed=0;
	 };
	};
	name="Fovea";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 192;192;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [0]       };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @["Actions"] {
      name="Actions";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @["LOAD_OBJS"] {
	name="LOAD_OBJS";
	value=0;
	desc="load objects from svg files";
       };
       DynEnumItem @["COMPOSE_SCENE"] {
	name="COMPOSE_SCENE";
	value=1;
	desc="make a new scene in Scene data table";
       };
       DynEnumItem @["RENDER_SCENE"] {
	name="RENDER_SCENE";
	value=2;
	desc="render a new scene";
       };
       DynEnumItem @["FOVEATE"] {
	name="FOVEATE";
	value=3;
	desc="foveate on given coords in full scene, render views";
       };
      };
      bits=0;
     };
     DynEnumType @["XY"] {
      name="XY";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @["X"] {
	name="X";
	value=0;
	desc=;
       };
       DynEnumItem @["Y"] {
	name="Y";
	value=1;
	desc=;
       };
      };
      bits=0;
     };
     DynEnumType @["PositionType"] {
      name="PositionType";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @["RANDOM_POS_NOVLP"] {
	name="RANDOM_POS_NOVLP";
	value=0;
	desc="position randomly, and try to exclude overlap";
       };
       DynEnumItem @["GRID_PERMUTED"] {
	name="GRID_PERMUTED";
	value=1;
	desc="use an underlying grid with permuted positions";
       };
      };
      bits=0;
     };
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @["action"] {
      name="action";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].types["Actions"]$$;
       value=3;
      };
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["x_arg"] {
      name="x_arg";
      var_type=T_Real;
      real_val=0.8462892174720764;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["y_arg"] {
      name="y_arg";
      var_type=T_Real;
      real_val=0.210335373878479;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @["ObjectsAll"] {
      name="ObjectsAll";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["ObjectsAll"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["Scene"] {
      name="Scene";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["Scene"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["obj_files"] {
      name="obj_files";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["obj_files"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["FullViewCanvas"] {
      name="FullViewCanvas";
      var_type=T_Object;
      object_type=taCanvas;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["FullViewCanvas"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["FoveaCanvas"] {
      name="FoveaCanvas";
      var_type=T_Object;
      object_type=taCanvas;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["FoveaCanvas"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["SceneCanvas"] {
      name="SceneCanvas";
      var_type=T_Object;
      object_type=taCanvas;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["SceneCanvas"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["fix_x"] {
      name="fix_x";
      var_type=T_Real;
      real_val=0.8199490308761597;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="horizontal fixation location within Scene";
      init_from=NULL;
     };
     ProgVar @["fix_y"] {
      name="fix_y";
      var_type=T_Real;
      real_val=0.2564889192581177;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="vertical fixation location within Scene";
      init_from=NULL;
     };
     ProgVar @["obj_dir"] {
      name="obj_dir";
      var_type=T_String;
      string_val="twod_objs_svg";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["full_view_pixels"] {
      name="full_view_pixels";
      var_type=T_Int;
      int_val=1024;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["fovea_pixels"] {
      name="fovea_pixels";
      var_type=T_Int;
      int_val=192;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["fovea_scale"] {
      name="fovea_scale";
      var_type=T_Real;
      real_val=4;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["bg_color"] {
      name="bg_color";
      var_type=T_String;
      string_val="white";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["line_color"] {
      name="line_color";
      var_type=T_String;
      string_val="black";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["line_width"] {
      name="line_width";
      var_type=T_Real;
      real_val=0.005;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["min_n_objs"] {
      name="min_n_objs";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="minimum number of objects per scene";
      init_from=NULL;
     };
     ProgVar @["max_n_objs"] {
      name="max_n_objs";
      var_type=T_Int;
      int_val=4;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="maximum number of objects per scene";
      init_from=NULL;
     };
     ProgVar @["min_size"] {
      name="min_size";
      var_type=T_Real;
      real_val=0.1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="obj size in full scene 0-1 normalized scale";
      init_from=NULL;
     };
     ProgVar @["max_size"] {
      name="max_size";
      var_type=T_Real;
      real_val=0.15;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="in full scene 0-1 normalized scale";
      init_from=NULL;
     };
     ProgVar @["pos_type"] {
      name="pos_type";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].types["PositionType"]$$;
       value=1;
      };
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["grid_x"] {
      name="grid_x";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["grid_y"] {
      name="grid_y";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["grid_jitter"] {
      name="grid_jitter";
      var_type=T_Real;
      real_val=0.01;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="how much to jitter positions on the grid";
      init_from=NULL;
     };
     ProgVar @["grid_margin"] {
      name="grid_margin";
      var_type=T_Real;
      real_val=0.15;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="extra margin around edges for grid";
      init_from=NULL;
     };
     ProgVar @["min_spc"] {
      name="min_spc";
      var_type=T_Real;
      real_val=0.5;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="miniumum extra space between objs";
      init_from=NULL;
     };
     ProgVar @["redo_limit"] {
      name="redo_limit";
      var_type=T_Int;
      int_val=100;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="how many times to redo rnd location generation";
      init_from=NULL;
     };
     ProgVar @["CanvasViews"] {
      name="CanvasViews";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["CanvasViews"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["GridPos"] {
      name="GridPos";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["GridPos"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["GridPermuted"] {
      name="GridPermuted";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["GridPermuted"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["ObjectsCur"] {
      name="ObjectsCur";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["ObjectsCur"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["ValueNames"] {
      name="ValueNames";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["ValueNames"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["n_values"] {
      name="n_values";
      var_type=T_Int;
      int_val=5;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="number of affective values per obj -- pv0..n-1, nv0..n-1";
      init_from=NULL;
     };
     ProgVar @["closest_obj_scene_idx"] {
      name="closest_obj_scene_idx";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index in Scene table";
      init_from=NULL;
     };
     ProgVar @["closest_obj_obj_idx"] {
      name="closest_obj_obj_idx";
      var_type=T_Int;
      int_val=6;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index in ObjectsCur table";
      init_from=NULL;
     };
     ProgVar @["closest_obj_dist"] {
      name="closest_obj_dist";
      var_type=T_Real;
      real_val=0.0547526478767395;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["closest_obj_nm"] {
      name="closest_obj_nm";
      var_type=T_String;
      string_val="mother";
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["foveate_thr_dist"] {
      name="foveate_thr_dist";
      var_type=T_Real;
      real_val=0.12;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="max distance to foveated object";
      init_from=NULL;
     };
     ProgVar @["foveate_obj_scene_idx"] {
      name="foveate_obj_scene_idx";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index in Scene table";
      init_from=NULL;
     };
     ProgVar @["foveate_obj_obj_idx"] {
      name="foveate_obj_obj_idx";
      var_type=T_Int;
      int_val=6;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index in ObjectsCur table";
      init_from=NULL;
     };
     ProgVar @["foveate_obj_dist"] {
      name="foveate_obj_dist";
      var_type=T_Real;
      real_val=0.0547526478767395;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["foveate_obj_nm"] {
      name="foveate_obj_nm";
      var_type=T_String;
      string_val="mother";
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["FoveatedValues"] {
      name="FoveatedValues";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].objs["FoveatedValues"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @["LoadObjs"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="LoadObjs";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["fnm"] {
	  name="fnm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["fpth"] {
	  name="fpth";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["fc"] {
	  name="fc";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["lines"] {
	  name="lines";
	  var_type=T_Object;
	  object_type=String_Array;
	  object_val=NULL;
	  objs_ptr=0;
	  flags=SAVE_VAL|NEW_OBJ|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["points"] {
	  name="points";
	  var_type=T_Object;
	  object_type=String_Array;
	  object_val=NULL;
	  objs_ptr=0;
	  flags=SAVE_VAL|NEW_OBJ|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["li"] {
	  name="li";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["j"] {
	  name="j";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ln"] {
	  name="ln";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["width"] {
	  name="width";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["height"] {
	  name="height";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["obj_row"] {
	  name="obj_row";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["obj_nm"] {
	  name="obj_nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["n_coords"] {
	  name="n_coords";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["rel"] {
	  name="rel";
	  var_type=T_Bool;
	  bool_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["pp"] {
	  name="pp";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["pstr"] {
	  name="pstr";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["xc"] {
	  name="xc";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["yc"] {
	  name="yc";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["xt"] {
	  name="xt";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["yt"] {
	  name="yt";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["start_con"] {
	  name="start_con";
	  var_type=T_Bool;
	  bool_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["st_coord"] {
	  name="st_coord";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["xoff"] {
	  name="xoff";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["yoff"] {
	  name="yoff";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["start"] {
	  name="start";
	  var_type=T_Bool;
	  bool_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       DataGenCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="taDataGen::GetDirFiles()";
	result_var=NULL;
	object_type=taDataGen;
	method=taDataGen::GetDirFiles;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=DataTable_ptr;
	  type="DataTable*";
	  name="dest";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="obj_files";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="dir_path";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="obj_dir";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="filter";
	  required=0;
	  def_val="\"\"";
	  prev_expr=;
	  expr {
	   expr="\".svg\"";
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="recursive";
	  required=0;
	  def_val="false";
	  prev_expr=;
	  expr {
	   expr="false";
	  };
	 };
	 ProgArg @[4] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="fname_col_nm";
	  required=0;
	  def_val="FileName";
	  prev_expr=;
	  expr {
	   expr=;
	  };
	 };
	 ProgArg @[5] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="path_col_nm";
	  required=0;
	  def_val="FilePath";
	  prev_expr=;
	  expr {
	   expr=;
	  };
	 };
	 ProgArg @[6] {
	  arg_type=bool;
	  type="bool";
	  name="reset_first";
	  required=0;
	  def_val="true";
	  prev_expr=;
	  expr {
	   expr=;
	  };
	 };
	};
       };
       ForLoop @[2] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<obj_files.rows;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fnm = obj_files[\"FileName\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["fnm"]$$;
	  expr {
	   expr="obj_files[\"FileName\"][i]";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fnm = obj_files[\"FileName\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["fpth"]$$;
	  expr {
	   expr="obj_files[\"FilePath\"][i]";
	  };
	 };
	 MethodCall @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="obj_nm = fnm.before(\".svg\")";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["obj_nm"]$$;
	  obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["fnm"]$;
	  method=taString::before;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_taString_ref;
	    type="taString&";
	    name="x";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\".svg\"";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="startpos";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr=;
	    };
	   };
	  };
	  meth_sig="taString before(taString& x, int startpos = 0)";
	  meth_desc=" get substring before (not including) target string. startpos = starting position (- = search from end forward)";
	 };
	 MethodCall @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fc.LoadFromFile(fpth)";
	  result_var=NULL;
	  obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["fc"]$$;
	  method=taString::LoadFromFile;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_taString_ref;
	    type="taString&";
	    name="fname";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="fpth";
	    };
	   };
	  };
	  meth_sig="bool LoadFromFile(taString& fname)";
	  meth_desc=" load contents of given file into string";
	 };
	 MethodCall @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="obj_row = Objects.FindVal(\"name\")";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["obj_row"]$$;
	  obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["ObjectsAll"]$$;
	  method=DataTable::FindVal;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="val";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="obj_nm";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="col";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\"name\"";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="st_row";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=bool;
	    type="bool";
	    name="not_found_err";
	    required=0;
	    def_val="false";
	    prev_expr=;
	    expr {
	     expr="false";
	    };
	   };
	  };
	  meth_sig="int FindVal(Variant& val, Variant& col, int st_row = 0, bool not_found_err = false)";
	  meth_desc=" find row number for given value within column col of scalar type (use for Programs), starting at given starting row number. if st_row < 0 then the search proceeds backwards from that many rows from end (-1 = end) -- column can be specified as either integer index or a string that is then used to find the given column name. returns -1 if not found, and issues error if not_found_err is true";
	 };
	 If @[5] {
	  desc=;
	  flags=0;
	  orig_prog_code="if(obj_row < 0)";
	  cond {
	   expr="obj_row < 0";
	  };
	  true_code {
	   name="true_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="Objects->AddBlankRow()";
	    result_var=NULL;
	    obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["ObjectsAll"]$;
	    method=DataTable::AddBlankRow;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="int AddBlankRow()";
	    meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	   };
	   AssignExpr @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="obj_row = Objects.rows-1";
	    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["obj_row"]$;
	    expr {
	     expr="ObjectsAll.rows-1";
	    };
	   };
	   CssExpr @[2] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="Objects[\"name\"][obj_row] = obj_nm";
	    expr {
	     expr="ObjectsAll[\"name\"][obj_row] = obj_nm;";
	    };
	   };
	  };
	 };
	 MethodCall @[6] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="lines.Split(fc)";
	  result_var=NULL;
	  obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["lines"]$$;
	  method=String_Array::Split;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_taString_ref;
	    type="taString&";
	    name="str";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="fc";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=const_taString_ref;
	    type="taString&";
	    name="delim";
	    required=0;
	    def_val="\"\"";
	    prev_expr=;
	    expr {
	     expr="\"\\n\"";
	    };
	   };
	  };
	  meth_sig="void Split(taString& str, taString& delim)";
	  meth_desc=" Convenience method that calls FmDelimString for splitting a string into an array. Splits on every character by default.";
	 };
	 AssignExpr @[7] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="n_coords = 0";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["n_coords"]$$;
	  expr {
	   expr="0";
	  };
	 };
	 AssignExpr @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="xoff = 0";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xoff"]$$;
	  expr {
	   expr="0";
	  };
	 };
	 AssignExpr @[9] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="xoff = 0";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yoff"]$$;
	  expr {
	   expr="0";
	  };
	 };
	 ForLoop @[10] {
	  desc=;
	  flags=0;
	  orig_prog_code="for(li=0;li<lines.size;li++)";
	  loop_code {
	   name="loop_code";
	   el_typ=ProgCode;
	   el_def=0;
	   AssignExpr @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ln = lines[li]";
	    result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$$;
	    expr {
	     expr="lines[li]";
	    };
	   };
	   MethodCall @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ln.trim()";
	    result_var=NULL;
	    obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
	    method=taString::trim;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="taString_ref trim()";
	    meth_desc=" trims leading and trailing spaces (NOTE: modifies this string, and also returns the resulting string value)";
	   };
	   If @[2] {
	    desc=;
	    flags=0;
	    orig_prog_code="if(ln.";
	    cond {
	     expr="ln.startsWith(\"viewBox=\\\"\")";
	    };
	    true_code {
	     name="true_code";
	     el_typ=ProgCode;
	     el_def=0;
	     AssignExpr @[0] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="width = ln.after(\"width=\\\"\").before(\"\\\"\")";
	      result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
	      expr {
	       expr="ln.after(\"viewBox=\\\"\").before(\"\\\"\").after(\"0 0 \")";
	      };
	     };
	     AssignExpr @[1] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="width = ln.after(\"width=\\\"\").before(\"\\\"\")";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["width"]$$;
	      expr {
	       expr="ln.before(\" \")";
	      };
	     };
	     AssignExpr @[2] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="width = ln.after(\"width=\\\"\").before(\"\\\"\")";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["height"]$$;
	      expr {
	       expr="ln.after(\" \")";
	      };
	     };
	     PrintVar @[3] {
	      desc=;
	      flags=OFF|CAN_REVERT_TO_CODE;
	      orig_prog_code="print width height";
	      message=;
	      print_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["width"]$;
	      print_var2=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["height"]$;
	      print_var3=NULL;
	      print_var4=NULL;
	      print_var5=NULL;
	      print_var6=NULL;
	      debug=1;
	     };
	     IfContinue @[4] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="continue";
	      cond {
	       expr=;
	      };
	     };
	    };
	   };
	   If @[3] {
	    desc=;
	    flags=0;
	    orig_prog_code="if(ln.startsWith(\"transform=\\\"\"))";
	    cond {
	     expr="ln.startsWith(\"transform=\\\"\")";
	    };
	    true_code {
	     name="true_code";
	     el_typ=ProgCode;
	     el_def=0;
	     MethodCall @[0] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="ln = ln.after(\"transform=\"\\\"\")";
	      result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
	      obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
	      method=taString::after;
	      meth_args {
	       name="meth_args";
	       el_typ=ProgArg;
	       el_def=0;
	       ProgArg @[0] {
		arg_type=const_taString_ref;
		type="taString&";
		name="x";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="\"transform=\\\"\"";
		};
	       };
	       ProgArg @[1] {
		arg_type=int;
		type="int";
		name="startpos";
		required=0;
		def_val="0";
		prev_expr=;
		expr {
		 expr=;
		};
	       };
	      };
	      meth_sig="taString after(taString& x, int startpos = 0)";
	      meth_desc=" get substring after (not including) target string. startpos = starting position (- = search from end forward)";
	     };
	     If @[1] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(ln.startsWith(\"translate(\"))";
	      cond {
	       expr="ln.startsWith(\"translate(\")";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       AssignExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="ln = ln.after(\"translate(\").before(\")\")";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
		expr {
		 expr="ln.after(\"translate(\").before(\")\")";
		};
	       };
	       MethodCall @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="xoff = ln.before(\",\")";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xoff"]$;
		obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
		method=taString::before;
		meth_args {
		 name="meth_args";
		 el_typ=ProgArg;
		 el_def=0;
		 ProgArg @[0] {
		  arg_type=const_taString_ref;
		  type="taString&";
		  name="x";
		  required=1;
		  def_val=;
		  prev_expr=;
		  expr {
		   expr="\",\"";
		  };
		 };
		 ProgArg @[1] {
		  arg_type=int;
		  type="int";
		  name="startpos";
		  required=0;
		  def_val="0";
		  prev_expr=;
		  expr {
		   expr=;
		  };
		 };
		};
		meth_sig="taString before(taString& x, int startpos = 0)";
		meth_desc=" get substring before (not including) target string. startpos = starting position (- = search from end forward)";
	       };
	       MethodCall @[2] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="xoff = ln.before(\",\")";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yoff"]$;
		obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
		method=taString::after;
		meth_args {
		 name="meth_args";
		 el_typ=ProgArg;
		 el_def=0;
		 ProgArg @[0] {
		  arg_type=const_taString_ref;
		  type="taString&";
		  name="x";
		  required=1;
		  def_val=;
		  prev_expr=;
		  expr {
		   expr="\",\"";
		  };
		 };
		 ProgArg @[1] {
		  arg_type=int;
		  type="int";
		  name="startpos";
		  required=0;
		  def_val="0";
		  prev_expr=;
		  expr {
		   expr=;
		  };
		 };
		};
		meth_sig="taString after(taString& x, int startpos = 0)";
		meth_desc=" get substring after (not including) target string. startpos = starting position (- = search from end forward)";
	       };
	       AssignExpr @[3] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="xoff = xoff / width";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xoff"]$;
		expr {
		 expr="xoff / width";
		};
	       };
	       AssignExpr @[4] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="xoff = xoff / width";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yoff"]$;
		expr {
		 expr="yoff / width";
		};
	       };
	      };
	     };
	     IfContinue @[2] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="continue";
	      cond {
	       expr=;
	      };
	     };
	    };
	   };
	   If @[4] {
	    desc=;
	    flags=0;
	    orig_prog_code="if(ln.";
	    cond {
	     expr="ln.startsWith(\"d=\\\"\")";
	    };
	    true_code {
	     name="true_code";
	     el_typ=ProgCode;
	     el_def=0;
	     If @[0] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(n_coords > 0)";
	      cond {
	       expr="n_coords > 0";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       CssExpr @[0] {
		desc="mark the end of previous line";
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="Objects[\"coords\"][0, n_coords, obj_row] = xc;";
		expr {
		 expr="ObjectsAll[\"coords\"][X, n_coords, obj_row] = -1;";
		};
	       };
	       CssExpr @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="Objects[\"coords\"][0, n_coords, obj_row] = xc;";
		expr {
		 expr="ObjectsAll[\"coords\"][Y, n_coords, obj_row] = -1;";
		};
	       };
	       AssignExpr @[2] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="n_coords = n_coords+1";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["n_coords"]$;
		expr {
		 expr="n_coords+1";
		};
	       };
	      };
	     };
	     AssignExpr @[1] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="width = ln.after(\"width=\\\"\").before(\"\\\"\")";
	      result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
	      expr {
	       expr="ln.after(\"d=\\\"\").before(\"\\\"\",-1)";
	      };
	     };
	     If @[2] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(ln.startsWith(\"m\"))";
	      cond {
	       expr="ln.startsWith(\"m \")";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       AssignExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="rel = true";
		result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["rel"]$$;
		expr {
		 expr="true";
		};
	       };
	       MethodCall @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="ln = ln.after(\"m \")";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
		obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
		method=taString::after;
		meth_args {
		 name="meth_args";
		 el_typ=ProgArg;
		 el_def=0;
		 ProgArg @[0] {
		  arg_type=const_taString_ref;
		  type="taString&";
		  name="x";
		  required=1;
		  def_val=;
		  prev_expr=;
		  expr {
		   expr="\"m \"";
		  };
		 };
		 ProgArg @[1] {
		  arg_type=int;
		  type="int";
		  name="startpos";
		  required=0;
		  def_val="0";
		  prev_expr=;
		  expr {
		   expr=;
		  };
		 };
		};
		meth_sig="taString after(taString& x, int startpos = 0)";
		meth_desc=" get substring after (not including) target string. startpos = starting position (- = search from end forward)";
	       };
	      };
	     };
	     If @[3] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(ln.startsWith(\"m\"))";
	      cond {
	       expr="ln.startsWith(\"M \")";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       AssignExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="rel = true";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["rel"]$;
		expr {
		 expr="false";
		};
	       };
	       MethodCall @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="ln = ln.after(\"m \")";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
		obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["ln"]$;
		method=taString::after;
		meth_args {
		 name="meth_args";
		 el_typ=ProgArg;
		 el_def=0;
		 ProgArg @[0] {
		  arg_type=const_taString_ref;
		  type="taString&";
		  name="x";
		  required=1;
		  def_val=;
		  prev_expr=;
		  expr {
		   expr="\"M \"";
		  };
		 };
		 ProgArg @[1] {
		  arg_type=int;
		  type="int";
		  name="startpos";
		  required=0;
		  def_val="0";
		  prev_expr=;
		  expr {
		   expr=;
		  };
		 };
		};
		meth_sig="taString after(taString& x, int startpos = 0)";
		meth_desc=" get substring after (not including) target string. startpos = starting position (- = search from end forward)";
	       };
	      };
	     };
	     AssignExpr @[4] {
	      desc="connect back to start";
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="start_con = false";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["start_con"]$$;
	      expr {
	       expr="false";
	      };
	     };
	     If @[5] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(ln.endsWith(\"z\") || ln.endsWith(\"Z\"))";
	      cond {
	       expr="ln.endsWith(\"z\") || ln.endsWith(\"Z\")";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       AssignExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="start_con = true";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["start_con"]$;
		expr {
		 expr="true";
		};
	       };
	       AssignExpr @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="st_coord = n_coords";
		result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["st_coord"]$$;
		expr {
		 expr="n_coords";
		};
	       };
	      };
	     };
	     MethodCall @[6] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="points.Split(ln, \",\")";
	      result_var=NULL;
	      obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["points"]$$;
	      method=String_Array::Split;
	      meth_args {
	       name="meth_args";
	       el_typ=ProgArg;
	       el_def=0;
	       ProgArg @[0] {
		arg_type=const_taString_ref;
		type="taString&";
		name="str";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="ln";
		};
	       };
	       ProgArg @[1] {
		arg_type=const_taString_ref;
		type="taString&";
		name="delim";
		required=0;
		def_val="\"\"";
		prev_expr=;
		expr {
		 expr="\" \"";
		};
	       };
	      };
	      meth_sig="void Split(taString& str, taString& delim)";
	      meth_desc=" Convenience method that calls FmDelimString for splitting a string into an array. Splits on every character by default.";
	     };
	     AssignExpr @[7] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="start = true";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["start"]$$;
	      expr {
	       expr="true";
	      };
	     };
	     ForLoop @[8] {
	      desc=;
	      flags=0;
	      orig_prog_code="for(pp=0; pp<points.size; pp++)";
	      loop_code {
	       name="loop_code";
	       el_typ=ProgCode;
	       el_def=0;
	       AssignExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="pstr = points[pp]";
		result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["pstr"]$$;
		expr {
		 expr="points[pp]";
		};
	       };
	       If @[1] {
		desc=;
		flags=0;
		orig_prog_code="if(pstr == \"L\")";
		cond {
		 expr="pstr == \"L\"";
		};
		true_code {
		 name="true_code";
		 el_typ=ProgCode;
		 el_def=0;
		 AssignExpr @[0] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="rel = false";
		  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["rel"]$;
		  expr {
		   expr="false";
		  };
		 };
		 IfContinue @[1] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="continue";
		  cond {
		   expr=;
		  };
		 };
		};
	       };
	       If @[2] {
		desc=;
		flags=0;
		orig_prog_code="if(pstr == \"L\")";
		cond {
		 expr="pstr == \"l\"";
		};
		true_code {
		 name="true_code";
		 el_typ=ProgCode;
		 el_def=0;
		 AssignExpr @[0] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="rel = false";
		  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["rel"]$;
		  expr {
		   expr="true";
		  };
		 };
		 IfContinue @[1] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="continue";
		  cond {
		   expr=;
		  };
		 };
		};
	       };
	       If @[3] {
		desc=;
		flags=0;
		orig_prog_code="if(pstr == \"L\")";
		cond {
		 expr="pstr == \"z\" || pstr == \"Z\"";
		};
		true_code {
		 name="true_code";
		 el_typ=ProgCode;
		 el_def=0;
		 AssignExpr @[0] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="rel = false";
		  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["start_con"]$;
		  expr {
		   expr="true";
		  };
		 };
		 IfContinue @[1] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="continue";
		  cond {
		   expr=;
		  };
		 };
		};
	       };
	       MethodCall @[4] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="xc = pstr.before(\",\")";
		result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xt"]$$;
		obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["pstr"]$;
		method=taString::before;
		meth_args {
		 name="meth_args";
		 el_typ=ProgArg;
		 el_def=0;
		 ProgArg @[0] {
		  arg_type=const_taString_ref;
		  type="taString&";
		  name="x";
		  required=1;
		  def_val=;
		  prev_expr=;
		  expr {
		   expr="\",\"";
		  };
		 };
		 ProgArg @[1] {
		  arg_type=int;
		  type="int";
		  name="startpos";
		  required=0;
		  def_val="0";
		  prev_expr=;
		  expr {
		   expr=;
		  };
		 };
		};
		meth_sig="taString before(taString& x, int startpos = 0)";
		meth_desc=" get substring before (not including) target string. startpos = starting position (- = search from end forward)";
	       };
	       MethodCall @[5] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="yc = pstr.after(\",\")";
		result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yt"]$$;
		obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["pstr"]$;
		method=taString::after;
		meth_args {
		 name="meth_args";
		 el_typ=ProgArg;
		 el_def=0;
		 ProgArg @[0] {
		  arg_type=const_taString_ref;
		  type="taString&";
		  name="x";
		  required=1;
		  def_val=;
		  prev_expr=;
		  expr {
		   expr="\",\"";
		  };
		 };
		 ProgArg @[1] {
		  arg_type=int;
		  type="int";
		  name="startpos";
		  required=0;
		  def_val="0";
		  prev_expr=;
		  expr {
		   expr=;
		  };
		 };
		};
		meth_sig="taString after(taString& x, int startpos = 0)";
		meth_desc=" get substring after (not including) target string. startpos = starting position (- = search from end forward)";
	       };
	       AssignExpr @[6] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="xt = xt / width";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xt"]$;
		expr {
		 expr="xt / width";
		};
	       };
	       AssignExpr @[7] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="xt = xt / width";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yt"]$;
		expr {
		 expr="yt / height";
		};
	       };
	       If @[8] {
		desc=;
		flags=0;
		orig_prog_code="if(pp == 0)";
		cond {
		 expr="start";
		};
		true_code {
		 name="true_code";
		 el_typ=ProgCode;
		 el_def=0;
		 AssignExpr @[0] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="xc = xt";
		  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xc"]$$;
		  expr {
		   expr="xt + xoff";
		  };
		 };
		 AssignExpr @[1] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="yc = yt / height";
		  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yc"]$$;
		  expr {
		   expr="1.0 - (yt + yoff)";
		  };
		 };
		 AssignExpr @[2] {
		  desc=;
		  flags=CAN_REVERT_TO_CODE;
		  orig_prog_code="start = false";
		  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["start"]$;
		  expr {
		   expr="false";
		  };
		 };
		};
	       };
	       Else @[9] {
		desc=;
		flags=0;
		orig_prog_code="else";
		else_code {
		 name="else_code";
		 el_typ=ProgCode;
		 el_def=0;
		 If @[0] {
		  desc=;
		  flags=0;
		  orig_prog_code="if(rel)";
		  cond {
		   expr="rel";
		  };
		  true_code {
		   name="true_code";
		   el_typ=ProgCode;
		   el_def=0;
		   AssignExpr @[0] {
		    desc=;
		    flags=CAN_REVERT_TO_CODE;
		    orig_prog_code="xc = xc + xt / width";
		    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xc"]$;
		    expr {
		     expr="xc + xt";
		    };
		   };
		   AssignExpr @[1] {
		    desc=;
		    flags=CAN_REVERT_TO_CODE;
		    orig_prog_code="xc = xc + xt / width";
		    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yc"]$;
		    expr {
		     expr="yc - yt";
		    };
		   };
		  };
		 };
		 Else @[1] {
		  desc=;
		  flags=0;
		  orig_prog_code="else";
		  else_code {
		   name="else_code";
		   el_typ=ProgCode;
		   el_def=0;
		   AssignExpr @[0] {
		    desc=;
		    flags=CAN_REVERT_TO_CODE;
		    orig_prog_code="xc = xt / width";
		    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["xc"]$;
		    expr {
		     expr="xt + xoff";
		    };
		   };
		   AssignExpr @[1] {
		    desc=;
		    flags=CAN_REVERT_TO_CODE;
		    orig_prog_code="yc = yt / height";
		    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["yc"]$;
		    expr {
		     expr="1.0 - (yt + yoff)";
		    };
		   };
		  };
		 };
		};
	       };
	       CssExpr @[10] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="Objects[\"coords\"][0, n_coords, obj_row] = xc;";
		expr {
		 expr="ObjectsAll[\"coords\"][X, n_coords, obj_row] = xc;";
		};
	       };
	       CssExpr @[11] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="Objects[\"coords\"][0, n_coords, obj_row] = xc;";
		expr {
		 expr="ObjectsAll[\"coords\"][Y, n_coords, obj_row] =yc;";
		};
	       };
	       VarIncr @[12] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="n_coords += 1";
		var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["n_coords"]$;
		expr {
		 expr="1";
		};
	       };
	      };
	      init {
	       expr="pp=0";
	      };
	      test {
	       expr="pp<points.size";
	      };
	      iter {
	       expr="pp++";
	      };
	     };
	     If @[9] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(start_con)";
	      cond {
	       expr="start_con";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       CssExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="Objects[\"coords\"][0, n_coords, obj_row] = xc;";
		expr {
		 expr="ObjectsAll[\"coords\"][X, n_coords, obj_row] = ObjectsAll[\"coords\"][X, st_coord, obj_row];";
		};
	       };
	       CssExpr @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="Objects[\"coords\"][0, n_coords, obj_row] = xc;";
		expr {
		 expr="ObjectsAll[\"coords\"][Y, n_coords, obj_row] = ObjectsAll[\"coords\"][Y, st_coord, obj_row];";
		};
	       };
	       VarIncr @[2] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="n_coords += 1";
		var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"].fun_code[0].local_vars["n_coords"]$;
		expr {
		 expr="1";
		};
	       };
	      };
	     };
	    };
	   };
	  };
	  init {
	   expr="li=0";
	  };
	  test {
	   expr="li<lines.size";
	  };
	  iter {
	   expr="li++";
	  };
	 };
	 CssExpr @[11] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Objects[\"n_coords\"][obj_row] = n_coords;";
	  expr {
	   expr="ObjectsAll[\"n_coords\"][obj_row] = n_coords;";
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<obj_files.rows";
	};
	iter {
	 expr="i++";
	};
       };
      };
     };
     Function @["UpdateCurFmAll"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="UpdateCurFmAll";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["ci"] {
	  name="ci";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["oai"] {
	  name="oai";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       ForLoop @[1] {
	desc=;
	flags=0;
	orig_prog_code="for(ci=0; ci< ObjectsCur.rows; ci++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="nm = ObjectsCur[\"name\"][ci]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["UpdateCurFmAll"].fun_code[0].local_vars["nm"]$$;
	  expr {
	   expr="ObjectsCur[\"name\"][ci]";
	  };
	 };
	 MethodCall @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="oai = ObjectsAll.FindName()";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["UpdateCurFmAll"].fun_code[0].local_vars["oai"]$$;
	  obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["ObjectsAll"]$;
	  method=DataTable::FindVal;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="val";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="nm";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="col";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\"name\"";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="st_row";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=bool;
	    type="bool";
	    name="not_found_err";
	    required=0;
	    def_val="false";
	    prev_expr=;
	    expr {
	     expr="true";
	    };
	   };
	  };
	  meth_sig="int FindVal(Variant& val, Variant& col, int st_row = 0, bool not_found_err = false)";
	  meth_desc=" find row number for given value within column col of scalar type (use for Programs), starting at given starting row number. if st_row < 0 then the search proceeds backwards from that many rows from end (-1 = end) -- column can be specified as either integer index or a string that is then used to find the given column name. returns -1 if not found, and issues error if not_found_err is true";
	 };
	 CssExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ObjectsCur[\"n_coords\"][ci] = ObjectsAll[\"n_coords\"][oai'";
	  expr {
	   expr="ObjectsCur[\"n_coords\"][ci] = ObjectsAll[\"n_coords\"][oai];";
	  };
	 };
	 MethodCall @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ObjectsCur.CopyCell()";
	  result_var=NULL;
	  obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["ObjectsCur"]$$;
	  method=DataTable::CopyCell;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="dest_col";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\"coords\"";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="dest_row";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ci";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=const_DataTable_ref;
	    type="DataTable&";
	    name="src";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ObjectsAll";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="src_col";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\"coords\"";
	    };
	   };
	   ProgArg @[4] {
	    arg_type=int;
	    type="int";
	    name="src_row";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="oai";
	    };
	   };
	  };
	  meth_sig="bool CopyCell(Variant& dest_col, int dest_row, DataTable& src, Variant& src_col, int src_row)";
	  meth_desc=" copy one cell (indexed by column, row) from source to this data table in given col,row cell -- is robust to differences in type and matrix sizing (returns false if not successful) -- column can be specified as either integer index or a string that is then used to find the given column name";
	 };
	};
	init {
	 expr="ci=0";
	};
	test {
	 expr="ci< ObjectsCur.rows";
	};
	iter {
	 expr="ci++";
	};
       };
      };
     };
     Function @["ComposeScene_RndPos"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="ComposeScene_RndPos";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["n_objs"] {
	  name="n_objs";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["objid"] {
	  name="objid";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_x"] {
	  name="ctr_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_y"] {
	  name="ctr_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["size"] {
	  name="size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["redo"] {
	  name="redo";
	  var_type=T_Bool;
	  bool_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["j"] {
	  name="j";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["oth_x"] {
	  name="oth_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["oth_y"] {
	  name="oth_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["oth_sz"] {
	  name="oth_sz";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["dist"] {
	  name="dist";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["min_dist"] {
	  name="min_dist";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["redos"] {
	  name="redos";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["half_size"] {
	  name="half_size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["rmargin"] {
	  name="rmargin";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       RandomCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="n_objs = Random::IntMinMax()";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["n_objs"]$$;
	object_type=Random;
	method=Random::IntMinMax;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=int;
	  type="int";
	  name="min";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="min_n_objs";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=int;
	  type="int";
	  name="max";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="max_n_objs";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="thr_no";
	  required=0;
	  def_val="0";
	  prev_expr=;
	  expr {
	   expr="0";
	  };
	 };
	};
       };
       AssignExpr @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="min_dist = min_spc * max_size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["min_dist"]$$;
	expr {
	 expr="min_spc * max_size";
	};
       };
       AssignExpr @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="half_size = 0.5 * max_size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["half_size"]$$;
	expr {
	 expr="0.5 * max_size";
	};
       };
       AssignExpr @[4] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="rmargin = 1.0 - half-size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["rmargin"]$$;
	expr {
	 expr="1.0 - half_size";
	};
       };
       MethodCall @[5] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="Scene.ResetData()";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["Scene"]$$;
	method=DataTable::ResetData;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void ResetData()";
	meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
       };
       ForLoop @[6] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<n_objs;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 RandomCall @[0] {
	  desc="todo: make this frequency-based!";
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="objid = Random::IntZeroN(Objects.rows)";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["objid"]$$;
	  object_type=Random;
	  method=Random::IntZeroN;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="n";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ObjectsAll.rows";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="nm = Objects[\"name\"][objid]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["nm"]$$;
	  expr {
	   expr="ObjectsAll[\"name\"][objid]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="redo = false";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redo"]$$;
	  expr {
	   expr="false";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="redo_limit = 100";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redos"]$$;
	  expr {
	   expr="0";
	  };
	 };
	 RandomCall @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="size = Random::UniformMinMax()";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["size"]$$;
	  object_type=Random;
	  method=Random::UniformMinMax;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=double;
	    type="double";
	    name="min";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="min_size";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=double;
	    type="double";
	    name="max";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="max_size";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 DoLoop @[5] {
	  desc=;
	  flags=0;
	  orig_prog_code="do ... while (redo && redos < redo_limit)";
	  loop_code {
	   name="loop_code";
	   el_typ=ProgCode;
	   el_def=0;
	   RandomCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ctr_x = Random::Uniform()";
	    result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["ctr_x"]$$;
	    object_type=Random;
	    method=Random::UniformMinMax;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=double;
	      type="double";
	      name="min";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="half_size";
	      };
	     };
	     ProgArg @[1] {
	      arg_type=double;
	      type="double";
	      name="max";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="rmargin";
	      };
	     };
	     ProgArg @[2] {
	      arg_type=int;
	      type="int";
	      name="thr_no";
	      required=0;
	      def_val="0";
	      prev_expr=;
	      expr {
	       expr="0";
	      };
	     };
	    };
	   };
	   RandomCall @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ctr_x = Random::Uniform()";
	    result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["ctr_y"]$$;
	    object_type=Random;
	    method=Random::UniformMinMax;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=double;
	      type="double";
	      name="min";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="half_size";
	      };
	     };
	     ProgArg @[1] {
	      arg_type=double;
	      type="double";
	      name="max";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="rmargin";
	      };
	     };
	     ProgArg @[2] {
	      arg_type=int;
	      type="int";
	      name="thr_no";
	      required=0;
	      def_val="0";
	      prev_expr=;
	      expr {
	       expr="0";
	      };
	     };
	    };
	   };
	   ForLoop @[2] {
	    desc=;
	    flags=0;
	    orig_prog_code="for(j = 0; j<Scene.rows; j++)";
	    loop_code {
	     name="loop_code";
	     el_typ=ProgCode;
	     el_def=0;
	     AssignExpr @[0] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="oth_x = Scene[\"ctr_x\"][j]";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["oth_x"]$$;
	      expr {
	       expr="Scene[\"ctr_x\"][j]";
	      };
	     };
	     AssignExpr @[1] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="oth_x = Scene[\"ctr_x\"][j]";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["oth_y"]$$;
	      expr {
	       expr="Scene[\"ctr_y\"][j]";
	      };
	     };
	     MathCall @[2] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="dist = taMath_float::euc_dist()";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["dist"]$$;
	      object_type=taMath_float;
	      method=taMath_float::euc_dist;
	      meth_args {
	       name="meth_args";
	       el_typ=ProgArg;
	       el_def=0;
	       ProgArg @[0] {
		arg_type=float;
		type="float";
		name="x1";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="ctr_x";
		};
	       };
	       ProgArg @[1] {
		arg_type=float;
		type="float";
		name="y1";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="ctr_y";
		};
	       };
	       ProgArg @[2] {
		arg_type=float;
		type="float";
		name="x2";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="oth_x";
		};
	       };
	       ProgArg @[3] {
		arg_type=float;
		type="float";
		name="y2";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="oth_y";
		};
	       };
	      };
	     };
	     If @[3] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(dist < (.5 + min_spc) * (size + oth_sz))";
	      cond {
	       expr="dist < min_dist";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       AssignExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="redo = true";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redo"]$;
		expr {
		 expr="true";
		};
	       };
	       VarIncr @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="redos+= 1";
		var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redos"]$;
		expr {
		 expr="1";
		};
	       };
	       IfBreak @[2] {
		desc="break out of for";
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="break";
		cond {
		 expr=;
		};
	       };
	      };
	     };
	    };
	    init {
	     expr="j = 0";
	    };
	    test {
	     expr="j<Scene.rows";
	    };
	    iter {
	     expr="j++";
	    };
	   };
	  };
	  test {
	   expr="redo && redos < redo_limit";
	  };
	 };
	 If @[6] {
	  desc=;
	  flags=0;
	  orig_prog_code="if(redos >= redo_limit)";
	  cond {
	   expr="redos >= redo_limit";
	  };
	  true_code {
	   name="true_code";
	   el_typ=ProgCode;
	   el_def=0;
	   PrintVar @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="print \"Warning: could not fit with min spacing limits:\", min_dist";
	    message="Warning: could not fit with min spacing limits:";
	    print_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["min_dist"]$;
	    print_var2=NULL;
	    print_var3=NULL;
	    print_var4=NULL;
	    print_var5=NULL;
	    print_var6=NULL;
	    debug=0;
	   };
	  };
	 };
	 MethodCall @[7] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene.AddBlankRow()";
	  result_var=NULL;
	  obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["Scene"]$;
	  method=DataTable::AddBlankRow;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	  meth_sig="int AddBlankRow()";
	  meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	 };
	 CssExpr @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"name\"] = Objects[\"name\"][objid];";
	  expr {
	   expr="Scene[\"name\"][-1] = nm;";
	  };
	 };
	 CssExpr @[9] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"ctr_x\"][-1] = ctr_x;";
	  };
	 };
	 CssExpr @[10] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"ctr_y\"][-1] = ctr_y;";
	  };
	 };
	 CssExpr @[11] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"size\"][-1] = size;";
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<n_objs";
	};
	iter {
	 expr="i++";
	};
       };
      };
     };
     Function @["ComposeScene_Grid"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="ComposeScene_Grid";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["objid"] {
	  name="objid";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_x"] {
	  name="ctr_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_y"] {
	  name="ctr_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["size"] {
	  name="size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["n_objs"] {
	  name="n_objs";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       MethodCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="GridPermuted.PermuteRows()";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["GridPermuted"]$$;
	method=DataTable::PermuteRows;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=int;
	  type="int";
	  name="thr_no";
	  required=0;
	  def_val="0";
	  prev_expr=;
	  expr {
	   expr=;
	  };
	 };
	};
	meth_sig="void PermuteRows(int thr_no = 0)";
	meth_desc=" permute the order of rows in the data table -- randomly shuffles the rows -- this is very efficiently implemented by shuffling the row_indexes lookup table, not the actual rows in memory. Note: you can instantly recover the original full set of rows, unsorted and unfiltered, by using ShowAllRows on the DataTable -- see that function for more details -- to be be able to undo just this Permute you would need to run Flatten first -- specify thread number if calling from thread for thread-safe operation (1 <= thr_no < 100)";
       };
       RandomCall @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="n_objs = Random::IntMinMax()";
	result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["n_objs"]$;
	object_type=Random;
	method=Random::IntMinMax;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=int;
	  type="int";
	  name="min";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="min_n_objs";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=int;
	  type="int";
	  name="max";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="max_n_objs";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="thr_no";
	  required=0;
	  def_val="0";
	  prev_expr=;
	  expr {
	   expr="0";
	  };
	 };
	};
       };
       MethodCall @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="Scene.ResetData()";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["Scene"]$;
	method=DataTable::ResetData;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void ResetData()";
	meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
       };
       ForLoop @[4] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<n_objs;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 RandomCall @[0] {
	  desc="todo: make this frequency-based!";
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="objid = Random::IntZeroN(Objects.rows)";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"].fun_code[0].local_vars["objid"]$$;
	  object_type=Random;
	  method=Random::IntZeroN;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="n";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ObjectsCur.rows";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="nm = Objects[\"name\"][objid]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"].fun_code[0].local_vars["nm"]$$;
	  expr {
	   expr="ObjectsCur[\"name\"][objid]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = GridPermuted[\"x_pos\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"].fun_code[0].local_vars["ctr_x"]$$;
	  expr {
	   expr="GridPermuted[\"x_pos\"][i]";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = GridPermuted[\"x_pos\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"].fun_code[0].local_vars["ctr_y"]$$;
	  expr {
	   expr="GridPermuted[\"y_pos\"][i]";
	  };
	 };
	 VarIncr @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x += Random::UniformMinMax(-grid_jitter, grid_jitter)";
	  var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"].fun_code[0].local_vars["ctr_x"]$;
	  expr {
	   expr="Random::UniformMinMax(-grid_jitter, grid_jitter)";
	  };
	 };
	 VarIncr @[5] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x += Random::UniformMinMax(-grid_jitter, grid_jitter)";
	  var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"].fun_code[0].local_vars["ctr_y"]$;
	  expr {
	   expr="Random::UniformMinMax(-grid_jitter, grid_jitter)";
	  };
	 };
	 RandomCall @[6] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="size = Random::UniformMinMax()";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"].fun_code[0].local_vars["size"]$$;
	  object_type=Random;
	  method=Random::UniformMinMax;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=double;
	    type="double";
	    name="min";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="min_size";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=double;
	    type="double";
	    name="max";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="max_size";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 MethodCall @[7] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene.AddBlankRow()";
	  result_var=NULL;
	  obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["Scene"]$;
	  method=DataTable::AddBlankRow;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	  meth_sig="int AddBlankRow()";
	  meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	 };
	 CssExpr @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"name\"] = Objects[\"name\"][objid];";
	  expr {
	   expr="Scene[\"name\"][-1] = nm;";
	  };
	 };
	 CssExpr @[9] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"ctr_x\"][-1] = ctr_x;";
	  };
	 };
	 CssExpr @[10] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"ctr_y\"][-1] = ctr_y;";
	  };
	 };
	 CssExpr @[11] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"size\"][-1] = size;";
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<n_objs";
	};
	iter {
	 expr="i++";
	};
       };
      };
     };
     Function @["ComposeScene"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="ComposeScene";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       Switch @[1] {
	desc=;
	flags=0;
	orig_prog_code="switch(pos_type)";
	switch_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["pos_type"]$$;
	cases {
	 name="cases";
	 el_typ=CaseBlock;
	 el_def=0;
	 CaseBlock @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   FunctionCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ComposeScene_RndPos()";
	    result_var=NULL;
	    fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_RndPos"]$$;
	    fun_args {
	     name="fun_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	   };
	  };
	  case_val {
	   expr="RANDOM_POS_NOVLP";
	  };
	  is_default=0;
	 };
	 CaseBlock @[1] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   FunctionCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ComposeScene_Grid()";
	    result_var=NULL;
	    fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene_Grid"]$$;
	    fun_args {
	     name="fun_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	   };
	  };
	  case_val {
	   expr="GRID_PERMUTED";
	  };
	  is_default=0;
	 };
	};
       };
      };
     };
     Function @["InitGridPos"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="InitGridPos";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["yi"] {
	  name="yi";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["xi"] {
	  name="xi";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["xpos"] {
	  name="xpos";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ypos"] {
	  name="ypos";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["half_size"] {
	  name="half_size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["width"] {
	  name="width";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       MethodCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="GridPos.ResetData()";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["GridPos"]$$;
	method=DataTable::ResetData;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void ResetData()";
	meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
       };
       AssignExpr @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="half_size = 0.5 * max_size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitGridPos"].fun_code[0].local_vars["half_size"]$$;
	expr {
	 expr="0.5 * max_size + grid_jitter + grid_margin";
	};
       };
       AssignExpr @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="width = 1.0 - max_size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitGridPos"].fun_code[0].local_vars["width"]$$;
	expr {
	 expr="1.0 - 2.0 * half_size";
	};
       };
       ForLoop @[4] {
	desc=;
	flags=0;
	orig_prog_code="for(yi=0; yi<grid_y; yi++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 ForLoop @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code="for(xi=0; xi<grid_x; xi++)";
	  loop_code {
	   name="loop_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="GridPos.AddBlankRow()";
	    result_var=NULL;
	    obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["GridPos"]$;
	    method=DataTable::AddBlankRow;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="int AddBlankRow()";
	    meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	   };
	   AssignExpr @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="xpos = ((xi+1.0) / (grid_x+2.0))";
	    result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitGridPos"].fun_code[0].local_vars["xpos"]$$;
	    expr {
	     expr="half_size + (xi / (grid_x-1.0)) * width";
	    };
	   };
	   AssignExpr @[2] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="xpos = ((xi+1.0) / (grid_x+2.0))";
	    result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitGridPos"].fun_code[0].local_vars["ypos"]$$;
	    expr {
	     expr="half_size + (yi / (grid_y-1.0)) * width";
	    };
	   };
	   CssExpr @[3] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="GridPos[\"x_idx\"][-1] = xi;";
	    expr {
	     expr="GridPos[\"x_idx\"][-1] = xi;";
	    };
	   };
	   CssExpr @[4] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="GridPos[\"x_idx\"][-1] = xi;";
	    expr {
	     expr="GridPos[\"y_idx\"][-1] = yi;";
	    };
	   };
	   CssExpr @[5] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="GridPos[\"x_idx\"][-1] = xi;";
	    expr {
	     expr="GridPos[\"x_pos\"][-1] = xpos;";
	    };
	   };
	   CssExpr @[6] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="GridPos[\"x_idx\"][-1] = xi;";
	    expr {
	     expr="GridPos[\"y_pos\"][-1] = ypos;";
	    };
	   };
	  };
	  init {
	   expr="xi=0";
	  };
	  test {
	   expr="xi<grid_x";
	  };
	  iter {
	   expr="xi++";
	  };
	 };
	};
	init {
	 expr="yi=0";
	};
	test {
	 expr="yi<grid_y";
	};
	iter {
	 expr="yi++";
	};
       };
       MethodCall @[5] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="GridPermuted.CopyFrom(GridPos)";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["GridPermuted"]$;
	method=taBase::CopyFrom;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taBase_ptr;
	  type="taBase*";
	  name="cpy_from";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="GridPos";
	  };
	 };
	};
	meth_sig="bool CopyFrom(taBase* cpy_from)";
	meth_desc=" Copy from given object into this object (this is a safe interface to UnSafeCopy)";
       };
      };
     };
     Function @["InitCanvas"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="InitCanvas";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @["canv"] {
	name="canv";
	var_type=T_Object;
	object_type=taCanvas;
	object_val=NULL;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=1;
	desc=;
	init_from=NULL;
       };
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       MethodCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="canv.InitCanvas()";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitCanvas"].args["canv"]$$;
	method=taCanvas::InitCanvas;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void InitCanvas()";
	meth_desc=" initialize the canvas -- MUST be called prior to drawing!";
       };
       MethodCall @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="canv.InitCanvas()";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitCanvas"].args["canv"]$;
	method=taCanvas::EraseName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="name";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="bg_color";
	  };
	 };
	};
	meth_sig="void EraseName(taString& name)";
	meth_desc=" erase image to given color name";
       };
       MethodCall @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="canv.PenWidth(line_width)";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitCanvas"].args["canv"]$;
	method=taCanvas::PenWidth;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=float;
	  type="float";
	  name="width";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="line_width";
	  };
	 };
	};
	meth_sig="void PenWidth(float width)";
	meth_desc=" ";
       };
       MethodCall @[4] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="canv.InitCanvas()";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitCanvas"].args["canv"]$;
	method=taCanvas::PenColorName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="name";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="line_color";
	  };
	 };
	};
	meth_sig="void PenColorName(taString& name)";
	meth_desc=" ";
       };
      };
     };
     Function @["ViewCanvas"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="ViewCanvas";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @["canv"] {
	name="canv";
	var_type=T_Object;
	object_type=taCanvas;
	object_val=NULL;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=1;
	desc=;
	init_from=NULL;
       };
       ProgVar @["col_nm"] {
	name="col_nm";
	var_type=T_String;
	string_val=;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       MethodCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="SceneCanvas.ImageToDataCellname()";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ViewCanvas"].args["canv"]$$;
	method=taImage::ConfigDataColName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=DataTable_ptr;
	  type="DataTable*";
	  name="dt";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="CanvasViews";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="col_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="col_nm";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=taBase::ValType;
	  type="taBase::ValType";
	  name="val_type";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="taBase::VT_FLOAT";
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="rgb";
	  required=0;
	  def_val="true";
	  prev_expr=;
	  expr {
	   expr="false";
	  };
	 };
	};
	meth_sig="bool ConfigDataColName(DataTable* dt, taString& col_nm, taBase::ValType val_type, bool rgb = true)";
	meth_desc=" configure data column with given name (if it doesn't exist, it is created) to represent current image -- if rgb is false, then a greyscale image is configured (2d)";
       };
       MethodCall @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="CanvasViews.EnforceRows(1)";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["CanvasViews"]$$;
	method=DataTable::EnforceRows;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=int;
	  type="int";
	  name="n_rows";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="1";
	  };
	 };
	};
	meth_sig="void EnforceRows(int n_rows)";
	meth_desc=" ensure that there are exactly n_rows in the table, removing or adding as needed";
       };
       MethodCall @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="SceneCanvas.ImageToDataCellname()";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ViewCanvas"].args["canv"]$;
	method=taImage::ImageToDataCellName;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=DataTable_ptr;
	  type="DataTable*";
	  name="dt";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="CanvasViews";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="taString&";
	  name="col_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="col_nm";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="row";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="0";
	  };
	 };
	};
	meth_sig="bool ImageToDataCellName(DataTable* dt, taString& col_nm, int row)";
	meth_desc=" set image to datatable cell indexed by col name and row number -- uses cell dimensionality and type -- only amount that fits in cell is copied. row = -1 = last row";
       };
       MethodCall @[4] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="CanvasViews.UpdateAllViews()";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["CanvasViews"]$;
	method=taBase::UpdateAllViews;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void UpdateAllViews()";
	meth_desc=" called after data changes, to update views";
       };
      };
     };
     Function @["DrawObj"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="DrawObj";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @["canv"] {
	name="canv";
	var_type=T_Object;
	object_type=taCanvas;
	object_val=NULL;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=1;
	desc=;
	init_from=NULL;
       };
       ProgVar @["objnm"] {
	name="objnm";
	var_type=T_String;
	string_val=;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @["ctr_x"] {
	name="ctr_x";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @["ctr_y"] {
	name="ctr_y";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @["size"] {
	name="size";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=SAVE_VAL|LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["objid"] {
	  name="objid";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["n_coords"] {
	  name="n_coords";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ci"] {
	  name="ci";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["j"] {
	  name="j";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["xc"] {
	  name="xc";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["yc"] {
	  name="yc";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["start"] {
	  name="start";
	  var_type=T_Bool;
	  bool_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["xd"] {
	  name="xd";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["yd"] {
	  name="yd";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       MethodCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="objid = Objects.FindVal()";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["objid"]$$;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["ObjectsAll"]$;
	method=DataTable::FindVal;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="Variant&";
	  name="val";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="objnm";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_Variant_ref;
	  type="Variant&";
	  name="col";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\"name\"";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="st_row";
	  required=0;
	  def_val="0";
	  prev_expr=;
	  expr {
	   expr="0";
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="not_found_err";
	  required=0;
	  def_val="false";
	  prev_expr=;
	  expr {
	   expr="true";
	  };
	 };
	};
	meth_sig="int FindVal(Variant& val, Variant& col, int st_row = 0, bool not_found_err = false)";
	meth_desc=" find row number for given value within column col of scalar type (use for Programs), starting at given starting row number. if st_row < 0 then the search proceeds backwards from that many rows from end (-1 = end) -- column can be specified as either integer index or a string that is then used to find the given column name. returns -1 if not found, and issues error if not_found_err is true";
       };
       AssignExpr @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="n_coords = Objects[\"n_coords\"][objid]";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["n_coords"]$$;
	expr {
	 expr="ObjectsAll[\"n_coords\"][objid]";
	};
       };
       MethodCall @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="SceneCanvas.NewPath()";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].args["canv"]$$;
	method=taCanvas::NewPath;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void NewPath()";
	meth_desc=" start a new path (must have done DrawPath or FillPath on any prior paths first!)";
       };
       AssignExpr @[4] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="start = true";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["start"]$$;
	expr {
	 expr="true";
	};
       };
       ForLoop @[5] {
	desc=;
	flags=0;
	orig_prog_code="for(ci=0; ci<n_coords; ci++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="xc = Objects[\"coords\"][0, ci, objid]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["xc"]$$;
	  expr {
	   expr="ObjectsAll[\"coords\"][X, ci, objid]";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="xc = Objects[\"coords\"][0, ci, objid]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["yc"]$$;
	  expr {
	   expr="ObjectsAll[\"coords\"][Y, ci, objid]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="xd = size * (xc - 0.5) + ctr_x";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["xd"]$$;
	  expr {
	   expr="size * (xc - 0.5) + ctr_x";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="xd = size * (xc - 0.5) + ctr_x";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["yd"]$$;
	  expr {
	   expr="size * (yc - 0.5) + ctr_y";
	  };
	 };
	 If @[4] {
	  desc="line stop";
	  flags=0;
	  orig_prog_code="if(xc == -1 && yc == -1)";
	  cond {
	   expr="xc == -1 && yc == -1";
	  };
	  true_code {
	   name="true_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="SceneCanvas.DrawPath()";
	    result_var=NULL;
	    obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].args["canv"]$;
	    method=taCanvas::DrawPath;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="void DrawPath()";
	    meth_desc=" draw the current path using current pen brush and close it -- a NewPath or MoveTo is required to start a new path";
	   };
	   MethodCall @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="SceneCanvas.NewPath()";
	    result_var=NULL;
	    obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].args["canv"]$;
	    method=taCanvas::NewPath;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="void NewPath()";
	    meth_desc=" start a new path (must have done DrawPath or FillPath on any prior paths first!)";
	   };
	   AssignExpr @[2] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="start = true";
	    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["start"]$;
	    expr {
	     expr="true";
	    };
	   };
	  };
	 };
	 Else @[5] {
	  desc=;
	  flags=0;
	  orig_prog_code="else";
	  else_code {
	   name="else_code";
	   el_typ=ProgCode;
	   el_def=0;
	   If @[0] {
	    desc=;
	    flags=0;
	    orig_prog_code="if(start)";
	    cond {
	     expr="start";
	    };
	    true_code {
	     name="true_code";
	     el_typ=ProgCode;
	     el_def=0;
	     MethodCall @[0] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="SceneCanvas.MoveTo()";
	      result_var=NULL;
	      obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].args["canv"]$;
	      method=taCanvas::MoveTo;
	      meth_args {
	       name="meth_args";
	       el_typ=ProgArg;
	       el_def=0;
	       ProgArg @[0] {
		arg_type=float;
		type="float";
		name="x";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="xd";
		};
	       };
	       ProgArg @[1] {
		arg_type=float;
		type="float";
		name="y";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="yd";
		};
	       };
	      };
	      meth_sig="void MoveTo(float x, float y)";
	      meth_desc=" move current path position to given coordinate without drawing -- will create a new path if not yet initialized";
	     };
	     AssignExpr @[1] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="start = false";
	      result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].fun_code[0].local_vars["start"]$;
	      expr {
	       expr="false";
	      };
	     };
	    };
	   };
	   Else @[1] {
	    desc=;
	    flags=0;
	    orig_prog_code="else";
	    else_code {
	     name="else_code";
	     el_typ=ProgCode;
	     el_def=0;
	     MethodCall @[0] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="SceneCanvas.MoveTo()";
	      result_var=NULL;
	      obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].args["canv"]$;
	      method=taCanvas::LineTo;
	      meth_args {
	       name="meth_args";
	       el_typ=ProgArg;
	       el_def=0;
	       ProgArg @[0] {
		arg_type=float;
		type="float";
		name="x";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="xd";
		};
	       };
	       ProgArg @[1] {
		arg_type=float;
		type="float";
		name="y";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="yd";
		};
	       };
	      };
	      meth_sig="void LineTo(float x, float y)";
	      meth_desc=" ";
	     };
	    };
	   };
	  };
	 };
	};
	init {
	 expr="ci=0";
	};
	test {
	 expr="ci<n_coords";
	};
	iter {
	 expr="ci++";
	};
       };
       MethodCall @[6] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="SceneCanvas.DrawPath()";
	result_var=NULL;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"].args["canv"]$;
	method=taCanvas::DrawPath;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void DrawPath()";
	meth_desc=" draw the current path using current pen brush and close it -- a NewPath or MoveTo is required to start a new path";
       };
      };
     };
     Function @["RenderScene"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="RenderScene";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_x"] {
	  name="ctr_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_y"] {
	  name="ctr_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["size"] {
	  name="size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       FunctionCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="InitCanvas(SceneCanvas)";
	result_var=NULL;
	fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitCanvas"]$$;
	fun_args {
	 name="fun_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taCanvas;
	  type="taCanvas*";
	  name="canv";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="SceneCanvas";
	  };
	 };
	};
       };
       ForLoop @[2] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<Scene.rows;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="nm = Scene[\"name\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderScene"].fun_code[0].local_vars["nm"]$$;
	  expr {
	   expr="Scene[\"name\"][i]";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderScene"].fun_code[0].local_vars["ctr_x"]$$;
	  expr {
	   expr="Scene[\"ctr_x\"][i]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderScene"].fun_code[0].local_vars["ctr_y"]$$;
	  expr {
	   expr="Scene[\"ctr_y\"][i]";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderScene"].fun_code[0].local_vars["size"]$$;
	  expr {
	   expr="Scene[\"size\"][i]";
	  };
	 };
	 FunctionCall @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="DrawObj()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=taCanvas;
	    type="taCanvas*";
	    name="canv";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="SceneCanvas";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=taString;
	    type="String";
	    name="objnm";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="nm";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=double;
	    type="double";
	    name="ctr_x";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_x";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=double;
	    type="double";
	    name="ctr_y";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_y";
	    };
	   };
	   ProgArg @[4] {
	    arg_type=double;
	    type="double";
	    name="size";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="size";
	    };
	   };
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<Scene.rows";
	};
	iter {
	 expr="i++";
	};
       };
       FunctionCall @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="ViewCanvas(SceneCanvas, \"Scene\")";
	result_var=NULL;
	fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ViewCanvas"]$$;
	fun_args {
	 name="fun_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taCanvas;
	  type="taCanvas*";
	  name="canv";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="SceneCanvas";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=taString;
	  type="String";
	  name="col_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\"Scene\"";
	  };
	 };
	};
       };
      };
     };
     Function @["RenderFullView"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="RenderFullView";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_x"] {
	  name="ctr_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_y"] {
	  name="ctr_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["size"] {
	  name="size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       FunctionCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="InitCanvas(SceneCanvas)";
	result_var=NULL;
	fun=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitCanvas"]$;
	fun_args {
	 name="fun_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taCanvas;
	  type="taCanvas*";
	  name="canv";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="FullViewCanvas";
	  };
	 };
	};
       };
       ForLoop @[2] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<Scene.rows;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="nm = Scene[\"name\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFullView"].fun_code[0].local_vars["nm"]$$;
	  expr {
	   expr="Scene[\"name\"][i]";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFullView"].fun_code[0].local_vars["ctr_x"]$$;
	  expr {
	   expr="Scene[\"ctr_x\"][i]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFullView"].fun_code[0].local_vars["ctr_y"]$$;
	  expr {
	   expr="Scene[\"ctr_y\"][i]";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFullView"].fun_code[0].local_vars["size"]$$;
	  expr {
	   expr="Scene[\"size\"][i]";
	  };
	 };
	 AssignExpr @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = (ctr_x - fix_x) + 0.5";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFullView"].fun_code[0].local_vars["ctr_x"]$;
	  expr {
	   expr="(ctr_x - fix_x) + 0.5";
	  };
	 };
	 AssignExpr @[5] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = (ctr_x - fix_x) + 0.5";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFullView"].fun_code[0].local_vars["ctr_y"]$;
	  expr {
	   expr="(ctr_y - fix_y) + 0.5";
	  };
	 };
	 IfContinue @[6] {
	  desc="skip offscene";
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="if(ctr_x < 0 || ctr_y > 1.0) continue";
	  cond {
	   expr="ctr_x < 0.0 || ctr_x > 1.0";
	  };
	 };
	 IfContinue @[7] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="if(ctr_x < 0 || ctr_y > 1.0) continue";
	  cond {
	   expr="ctr_y < 0.0 || ctr_y > 1.0";
	  };
	 };
	 FunctionCall @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="DrawObj()";
	  result_var=NULL;
	  fun=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"]$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=taCanvas;
	    type="taCanvas*";
	    name="canv";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="FullViewCanvas";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=taString;
	    type="String";
	    name="objnm";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="nm";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=double;
	    type="double";
	    name="ctr_x";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_x";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=double;
	    type="double";
	    name="ctr_y";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_y";
	    };
	   };
	   ProgArg @[4] {
	    arg_type=double;
	    type="double";
	    name="size";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="size";
	    };
	   };
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<Scene.rows";
	};
	iter {
	 expr="i++";
	};
       };
       FunctionCall @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="ViewCanvas(SceneCanvas, \"Scene\")";
	result_var=NULL;
	fun=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ViewCanvas"]$;
	fun_args {
	 name="fun_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taCanvas;
	  type="taCanvas*";
	  name="canv";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="FullViewCanvas";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=taString;
	  type="String";
	  name="col_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\"FullView\"";
	  };
	 };
	};
       };
      };
     };
     Function @["RenderFovea"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="RenderFovea";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_x"] {
	  name="ctr_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_y"] {
	  name="ctr_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["size"] {
	  name="size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       FunctionCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="InitCanvas(SceneCanvas)";
	result_var=NULL;
	fun=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitCanvas"]$;
	fun_args {
	 name="fun_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taCanvas;
	  type="taCanvas*";
	  name="canv";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="FoveaCanvas";
	  };
	 };
	};
       };
       ForLoop @[2] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<Scene.rows;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="nm = Scene[\"name\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"].fun_code[0].local_vars["nm"]$$;
	  expr {
	   expr="Scene[\"name\"][i]";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"].fun_code[0].local_vars["ctr_x"]$$;
	  expr {
	   expr="Scene[\"ctr_x\"][i]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"].fun_code[0].local_vars["ctr_y"]$$;
	  expr {
	   expr="Scene[\"ctr_y\"][i]";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"].fun_code[0].local_vars["size"]$$;
	  expr {
	   expr="Scene[\"size\"][i]";
	  };
	 };
	 AssignExpr @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = scale * (ctr_x - fix_x) + 0.5";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"].fun_code[0].local_vars["ctr_x"]$;
	  expr {
	   expr="fovea_scale * (ctr_x - fix_x) + 0.5";
	  };
	 };
	 AssignExpr @[5] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = scale * (ctr_x - fix_x) + 0.5";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"].fun_code[0].local_vars["ctr_y"]$;
	  expr {
	   expr="fovea_scale * (ctr_y - fix_y) + 0.5";
	  };
	 };
	 AssignExpr @[6] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="size = fovea_scale * size";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"].fun_code[0].local_vars["size"]$;
	  expr {
	   expr="fovea_scale * size";
	  };
	 };
	 IfContinue @[7] {
	  desc="skip offscene";
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="if(ctr_x < 0 || ctr_y > 1.0) continue";
	  cond {
	   expr="ctr_x < 0.0 || ctr_x > 1.0";
	  };
	 };
	 IfContinue @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="if(ctr_x < 0 || ctr_y > 1.0) continue";
	  cond {
	   expr="ctr_y < 0.0 || ctr_y > 1.0";
	  };
	 };
	 FunctionCall @[9] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="DrawObj()";
	  result_var=NULL;
	  fun=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["DrawObj"]$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=taCanvas;
	    type="taCanvas*";
	    name="canv";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="FoveaCanvas";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=taString;
	    type="String";
	    name="objnm";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="nm";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=double;
	    type="double";
	    name="ctr_x";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_x";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=double;
	    type="double";
	    name="ctr_y";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_y";
	    };
	   };
	   ProgArg @[4] {
	    arg_type=double;
	    type="double";
	    name="size";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="size";
	    };
	   };
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<Scene.rows";
	};
	iter {
	 expr="i++";
	};
       };
       FunctionCall @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="ViewCanvas(SceneCanvas, \"Scene\")";
	result_var=NULL;
	fun=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ViewCanvas"]$;
	fun_args {
	 name="fun_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taCanvas;
	  type="taCanvas*";
	  name="canv";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="FoveaCanvas";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=taString;
	  type="String";
	  name="col_nm";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\"Fovea\"";
	  };
	 };
	};
       };
      };
     };
     Function @["FindFoveatedObj"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="FindFoveatedObj";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_x"] {
	  name="ctr_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_y"] {
	  name="ctr_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["dist"] {
	  name="dist";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["min_dist"] {
	  name="min_dist";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["min_i"] {
	  name="min_i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       AssignExpr @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="min_dist = 1000.0";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"].fun_code[0].local_vars["min_dist"]$$;
	expr {
	 expr="1000.0";
	};
       };
       AssignExpr @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="min_i = -1";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"].fun_code[0].local_vars["min_i"]$$;
	expr {
	 expr="-1";
	};
       };
       ForLoop @[3] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<Scene.rows;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"].fun_code[0].local_vars["ctr_x"]$$;
	  expr {
	   expr="Scene[\"ctr_x\"][i]";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ctr_x = Scene[\"ctr_x\"][i]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"].fun_code[0].local_vars["ctr_y"]$$;
	  expr {
	   expr="Scene[\"ctr_y\"][i]";
	  };
	 };
	 MathCall @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="dist = taMath_float::euc_dist()";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"].fun_code[0].local_vars["dist"]$$;
	  object_type=taMath_float;
	  method=taMath_float::euc_dist;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=float;
	    type="float";
	    name="x1";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_x";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=float;
	    type="float";
	    name="y1";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ctr_y";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=float;
	    type="float";
	    name="x2";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="fix_x";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=float;
	    type="float";
	    name="y2";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="fix_y";
	    };
	   };
	  };
	 };
	 If @[3] {
	  desc=;
	  flags=0;
	  orig_prog_code="if(dist < min_dist)";
	  cond {
	   expr="dist < min_dist";
	  };
	  true_code {
	   name="true_code";
	   el_typ=ProgCode;
	   el_def=0;
	   AssignExpr @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="min_i = i";
	    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"].fun_code[0].local_vars["min_i"]$;
	    expr {
	     expr="i";
	    };
	   };
	   AssignExpr @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="min_dist = dist";
	    result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"].fun_code[0].local_vars["min_dist"]$;
	    expr {
	     expr="dist";
	    };
	   };
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<Scene.rows";
	};
	iter {
	 expr="i++";
	};
       };
       AssignExpr @[4] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="closest_obj_idx = min_i";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["closest_obj_scene_idx"]$$;
	expr {
	 expr="min_i";
	};
       };
       AssignExpr @[5] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="closest_obj_dist = min_dist";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["closest_obj_dist"]$$;
	expr {
	 expr="min_dist";
	};
       };
       AssignExpr @[6] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="closets_obj_nm = Scene[\"name\"][min_i]";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["closest_obj_nm"]$$;
	expr {
	 expr="Scene[\"name\"][min_i]";
	};
       };
       MethodCall @[7] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="foveate_obj_obj_idx = ObjectsCur.FindVal()";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["closest_obj_obj_idx"]$$;
	obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["ObjectsCur"]$;
	method=DataTable::FindVal;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="Variant&";
	  name="val";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="closest_obj_nm";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_Variant_ref;
	  type="Variant&";
	  name="col";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="\"name\"";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="st_row";
	  required=0;
	  def_val="0";
	  prev_expr=;
	  expr {
	   expr="0";
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="not_found_err";
	  required=0;
	  def_val="false";
	  prev_expr=;
	  expr {
	   expr="true";
	  };
	 };
	};
	meth_sig="int FindVal(Variant& val, Variant& col, int st_row = 0, bool not_found_err = false)";
	meth_desc=" find row number for given value within column col of scalar type (use for Programs), starting at given starting row number. if st_row < 0 then the search proceeds backwards from that many rows from end (-1 = end) -- column can be specified as either integer index or a string that is then used to find the given column name. returns -1 if not found, and issues error if not_found_err is true";
       };
       If @[8] {
	desc=;
	flags=0;
	orig_prog_code="if(min_dist < foveate_thr_dist)";
	cond {
	 expr="min_dist < foveate_thr_dist";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_idx = closest_obj_idx";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_scene_idx"]$$;
	  expr {
	   expr="closest_obj_scene_idx";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_idx = closest_obj_idx";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_obj_idx"]$$;
	  expr {
	   expr="closest_obj_obj_idx";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_dist = closest_obj_dist";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_dist"]$$;
	  expr {
	   expr="closest_obj_dist";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_nm = closest_obj_nm";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_nm"]$$;
	  expr {
	   expr="closest_obj_nm";
	  };
	 };
	 PrintVar @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="print foveate_obj_nm";
	  message=;
	  print_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_nm"]$;
	  print_var2=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_dist"]$;
	  print_var3=NULL;
	  print_var4=NULL;
	  print_var5=NULL;
	  print_var6=NULL;
	  debug=1;
	 };
	};
       };
       Else @[9] {
	desc=;
	flags=0;
	orig_prog_code="else";
	else_code {
	 name="else_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_idx = -1";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_scene_idx"]$;
	  expr {
	   expr="-1";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_idx = -1";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_obj_idx"]$;
	  expr {
	   expr="-1";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_nm = \"\"";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_nm"]$;
	  expr {
	   expr="\"\"";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="foveate_obj_dist = -1";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["foveate_obj_dist"]$;
	  expr {
	   expr="-1";
	  };
	 };
	 PrintVar @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="print foveate_obj_nm";
	  message="Nothing foveated, closest";
	  print_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["closest_obj_nm"]$;
	  print_var2=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["closest_obj_dist"]$;
	  print_var3=NULL;
	  print_var4=NULL;
	  print_var5=NULL;
	  print_var6=NULL;
	  debug=1;
	 };
	};
       };
      };
     };
     Function @["GenFoveatedValues"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="GenFoveatedValues";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["vi"] {
	  name="vi";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["vmin"] {
	  name="vmin";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["vmax"] {
	  name="vmax";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["val"] {
	  name="val";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       MethodCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="FoveatedValues.ReadItem(0)";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["FoveatedValues"]$$;
	method=DataTable::ReadItem;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=int;
	  type="int";
	  name="idx";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="0";
	  };
	 };
	};
	meth_sig="bool ReadItem(int idx)";
	meth_desc=" goes directly (random access) to row idx (- = count back from last row available, otherwise must be in range 0 <= idx < rows) so that it is now available for GetData routines (which use read_idx for their row number), returns true if row exists and was read";
       };
       If @[2] {
	desc=;
	flags=0;
	orig_prog_code="if(foveate_obj_idx < 0)";
	cond {
	 expr="foveate_obj_obj_idx < 0";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 CssExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="FoveatedValues[\"name\"][0] = \"\"";
	  expr {
	   expr="FoveatedValues[\"name\"][0] = \"\";";
	  };
	 };
	 ForLoop @[1] {
	  desc=;
	  flags=0;
	  orig_prog_code="for(vi=0; vi <n_values; vi++)";
	  loop_code {
	   name="loop_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="FoveatedValues.SetMatrixFlatVal()";
	    result_var=NULL;
	    obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["FoveatedValues"]$;
	    method=DataTable::SetMatrixFlatVal;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=const_Variant_ref;
	      type="Variant&";
	      name="val";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="0.0";
	      };
	     };
	     ProgArg @[1] {
	      arg_type=const_Variant_ref;
	      type="Variant&";
	      name="col";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="\"pv\"";
	      };
	     };
	     ProgArg @[2] {
	      arg_type=int;
	      type="int";
	      name="row";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="0";
	      };
	     };
	     ProgArg @[3] {
	      arg_type=int;
	      type="int";
	      name="cell";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="vi";
	      };
	     };
	    };
	    meth_sig="bool SetMatrixFlatVal(Variant& val, Variant& col, int row, int cell)";
	    meth_desc=" set data of matrix type, in Variant form (any data type, use for Programs), for given column, row, and matrix flat cell index (regardless of dimensions) -- column can be specified as either integer index or a string that is then used to find the given column name; returns 'true' if valid access and set is successful";
	   };
	   MethodCall @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="FoveatedValues.SetMatrixFlatVal()";
	    result_var=NULL;
	    obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["FoveatedValues"]$;
	    method=DataTable::SetMatrixFlatVal;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=const_Variant_ref;
	      type="Variant&";
	      name="val";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="0.0";
	      };
	     };
	     ProgArg @[1] {
	      arg_type=const_Variant_ref;
	      type="Variant&";
	      name="col";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="\"nv\"";
	      };
	     };
	     ProgArg @[2] {
	      arg_type=int;
	      type="int";
	      name="row";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="0";
	      };
	     };
	     ProgArg @[3] {
	      arg_type=int;
	      type="int";
	      name="cell";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="vi";
	      };
	     };
	    };
	    meth_sig="bool SetMatrixFlatVal(Variant& val, Variant& col, int row, int cell)";
	    meth_desc=" set data of matrix type, in Variant form (any data type, use for Programs), for given column, row, and matrix flat cell index (regardless of dimensions) -- column can be specified as either integer index or a string that is then used to find the given column name; returns 'true' if valid access and set is successful";
	   };
	  };
	  init {
	   expr="vi=0";
	  };
	  test {
	   expr="vi <n_values";
	  };
	  iter {
	   expr="vi++";
	  };
	 };
	 ReturnExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="return";
	  expr {
	   expr=;
	  };
	 };
	};
       };
       CssExpr @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="FoveatedValues[\"name\"][0] =foveate_obj_nm";
	expr {
	 expr="FoveatedValues[\"name\"][0] =foveate_obj_nm;";
	};
       };
       ForLoop @[4] {
	desc=;
	flags=0;
	orig_prog_code="for(vi=0; vi <n_values; vi++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 Comment @[0] {
	  desc="pv";
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="// pv";
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="vmin = ObjectsCur[\"pv\"+vi][0,foveate_obj_idx]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["GenFoveatedValues"].fun_code[0].local_vars["vmin"]$$;
	  expr {
	   expr="ObjectsCur[\"pv\"+vi][0,foveate_obj_obj_idx]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="vmin = ObjectsCur[\"pv\"+vi][0,foveate_obj_idx]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["GenFoveatedValues"].fun_code[0].local_vars["vmax"]$$;
	  expr {
	   expr="ObjectsCur[\"pv\"+vi][1,foveate_obj_obj_idx]";
	  };
	 };
	 RandomCall @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="val = Random::UniformMinMax()";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["GenFoveatedValues"].fun_code[0].local_vars["val"]$$;
	  object_type=Random;
	  method=Random::UniformMinMax;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=double;
	    type="double";
	    name="min";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="vmin";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=double;
	    type="double";
	    name="max";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="vmax";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 MethodCall @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="FoveatedValues.SetMatrixFlatVal()";
	  result_var=NULL;
	  obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["FoveatedValues"]$;
	  method=DataTable::SetMatrixFlatVal;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="val";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="val";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="col";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\"pv\"";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="row";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=int;
	    type="int";
	    name="cell";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="vi";
	    };
	   };
	  };
	  meth_sig="bool SetMatrixFlatVal(Variant& val, Variant& col, int row, int cell)";
	  meth_desc=" set data of matrix type, in Variant form (any data type, use for Programs), for given column, row, and matrix flat cell index (regardless of dimensions) -- column can be specified as either integer index or a string that is then used to find the given column name; returns 'true' if valid access and set is successful";
	 };
	 Comment @[5] {
	  desc="nv";
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="// pv";
	 };
	 AssignExpr @[6] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="vmin = ObjectsCur[\"pv\"+vi][0,foveate_obj_idx]";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["GenFoveatedValues"].fun_code[0].local_vars["vmin"]$;
	  expr {
	   expr="ObjectsCur[\"nv\"+vi][0,foveate_obj_obj_idx]";
	  };
	 };
	 AssignExpr @[7] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="vmin = ObjectsCur[\"pv\"+vi][0,foveate_obj_idx]";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["GenFoveatedValues"].fun_code[0].local_vars["vmax"]$;
	  expr {
	   expr="ObjectsCur[\"nv\"+vi][1,foveate_obj_obj_idx]";
	  };
	 };
	 RandomCall @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="val = Random::UniformMinMax()";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["GenFoveatedValues"].fun_code[0].local_vars["val"]$;
	  object_type=Random;
	  method=Random::UniformMinMax;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=double;
	    type="double";
	    name="min";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="vmin";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=double;
	    type="double";
	    name="max";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="vmax";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 MethodCall @[9] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="FoveatedValues.SetMatrixFlatVal()";
	  result_var=NULL;
	  obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["FoveatedValues"]$;
	  method=DataTable::SetMatrixFlatVal;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="val";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="val";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="col";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\"nv\"";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="row";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	   ProgArg @[3] {
	    arg_type=int;
	    type="int";
	    name="cell";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="vi";
	    };
	   };
	  };
	  meth_sig="bool SetMatrixFlatVal(Variant& val, Variant& col, int row, int cell)";
	  meth_desc=" set data of matrix type, in Variant form (any data type, use for Programs), for given column, row, and matrix flat cell index (regardless of dimensions) -- column can be specified as either integer index or a string that is then used to find the given column name; returns 'true' if valid access and set is successful";
	 };
	};
	init {
	 expr="vi=0";
	};
	test {
	 expr="vi <n_values";
	};
	iter {
	 expr="vi++";
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="FullViewCanvas.SetImageSize()";
      result_var=NULL;
      obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["SceneCanvas"]$$;
      method=taImage::SetImageSize;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="width";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="height";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
      };
      meth_sig="bool SetImageSize(int width, int height)";
      meth_desc=" set size of current image -- if currently same size, then returns false and nothing happens; otherwise, a new image data structure of given size is created, using ARGB32 format";
     };
     MethodCall @[1] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="FullViewCanvas.SetImageSize()";
      result_var=NULL;
      obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["FullViewCanvas"]$$;
      method=taImage::SetImageSize;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="width";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="height";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
      };
      meth_sig="bool SetImageSize(int width, int height)";
      meth_desc=" set size of current image -- if currently same size, then returns false and nothing happens; otherwise, a new image data structure of given size is created, using ARGB32 format";
     };
     MethodCall @[2] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="FullViewCanvas.SetImageSize()";
      result_var=NULL;
      obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["FoveaCanvas"]$$;
      method=taImage::SetImageSize;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="width";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="fovea_pixels";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="height";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="fovea_pixels";
	};
       };
      };
      meth_sig="bool SetImageSize(int width, int height)";
      meth_desc=" set size of current image -- if currently same size, then returns false and nothing happens; otherwise, a new image data structure of given size is created, using ARGB32 format";
     };
     FunctionCall @[3] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="InitGridPos()";
      result_var=NULL;
      fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["InitGridPos"]$$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      desc=;
      flags=0;
      orig_prog_code=;
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
     Switch @[1] {
      desc=;
      flags=0;
      orig_prog_code="switch(action)";
      switch_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].args["action"]$$;
      cases {
       name="cases";
       el_typ=CaseBlock;
       el_def=0;
       CaseBlock @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	prog_code {
	 name="prog_code";
	 el_typ=ProgCode;
	 el_def=0;
	 FunctionCall @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="LoadObjs()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["LoadObjs"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	 FunctionCall @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fun UpdateCurFmAll()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["UpdateCurFmAll"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	case_val {
	 expr="LOAD_OBJS";
	};
	is_default=0;
       };
       CaseBlock @[1] {
	desc=;
	flags=0;
	orig_prog_code=;
	prog_code {
	 name="prog_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_x = 0.5";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_x"]$$;
	  expr {
	   expr="0.5";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_y = 0.5";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_y"]$$;
	  expr {
	   expr="0.5";
	  };
	 };
	 FunctionCall @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="ComposeScene()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["ComposeScene"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	 FunctionCall @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="RenderScene()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderScene"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	case_val {
	 expr="COMPOSE_SCENE";
	};
	is_default=0;
       };
       CaseBlock @[2] {
	desc=;
	flags=0;
	orig_prog_code=;
	prog_code {
	 name="prog_code";
	 el_typ=ProgCode;
	 el_def=0;
	 FunctionCall @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="RenderScene()";
	  result_var=NULL;
	  fun=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderScene"]$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	case_val {
	 expr="RENDER_SCENE";
	};
	is_default=0;
       };
       CaseBlock @[3] {
	desc=;
	flags=0;
	orig_prog_code=;
	prog_code {
	 name="prog_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_x = x_arg";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_x"]$;
	  expr {
	   expr="fix_x + (x_arg - 0.5)";
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_x = x_arg";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_y"]$;
	  expr {
	   expr="fix_y + (y_arg - 0.5)";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_x = MAX(0.0, fix_x)";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_x"]$;
	  expr {
	   expr="MAX(0.0, fix_x)";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_x = MAX(0.0, fix_x)";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_x"]$;
	  expr {
	   expr="MIN(1.0, fix_x)";
	  };
	 };
	 AssignExpr @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_x = MAX(0.0, fix_x)";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_y"]$;
	  expr {
	   expr="MAX(0.0, fix_y)";
	  };
	 };
	 AssignExpr @[5] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="fix_x = MAX(0.0, fix_x)";
	  result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].vars["fix_y"]$;
	  expr {
	   expr="MIN(1.0, fix_y)";
	  };
	 };
	 FunctionCall @[6] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="RenderFullView()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFullView"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	 FunctionCall @[7] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="RenderFovea()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["RenderFovea"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	 FunctionCall @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="FindFoveatedObj()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["FindFoveatedObj"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	 FunctionCall @[9] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="GenFoveatedValues()";
	  result_var=NULL;
	  fun=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv"].functions["GenFoveatedValues"]$$;
	  fun_args {
	   name="fun_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	case_val {
	 expr="FOVEATE";
	};
	is_default=0;
       };
      };
     };
    };
    step_prog=NULL;
    step_n=1;
   };
   Program @["ObjSceneEnv_reduced"] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserDataItem;
     el_def=0;
     UserDataItem @["user_pinned"] {
      name="user_pinned";
      value 1 0=1;
      val_type_fixed=0;
     };
    };
    name="ObjSceneEnv_reduced";
    short_nm="bScnrd";
    tags=;
    desc=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=DataTable;
     el_def=0;
     DataTable @["ObjectsAll"] {
      name="ObjectsAll";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="name";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[19] "cross";"face";"star";"asterisk";"emerald";"face_square";"fish";"kite";"mountain";"mountain_snow";
"pyramid";"star_of_david";"bottle";"food_jar";"mother_face";"rattle";"teddy_bear";"mother";"woman";	};
       };
       float_Data @["pv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["pv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="pv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2222222238779068;
	  val_type_fixed=0;
	 };
	};
	name="nv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=114;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.2456140369176865;
	  val_type_fixed=0;
	 };
	};
	name="nv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=126;
	ar {
	 name="ar";
	[2 19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["freq"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="freq";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[19] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;	};
       };
       int_Data @["n_coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="n_coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[19] 13;34;11;25;14;43;19;35;8;17;
24;9;27;23;162;29;142;137;162;	};
       };
       float_Data @["coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;256;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
	ar {
	 name="ar";
	[2 256 19] 0.43736094;0.97266495;0.59408194;0.9744873;0.59408194;0.61913151;0.94579303;0.61913151;0.94579303;0.49885726;
0.59772664;0.50432426;0.60137129;0.045095261;0.43189394;0.043272909;0.44100562;0.50067961;0.061959468;0.50250196;
0.06013713;0.63188791;0.43918329;0.62824321;0.43736094;0.97266495;0.43736094;0.97266495;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.08382751;0.95444161;0.92574739;0.95626396;0.84738684;0.47881156;0.5066098;0.072430402;
0.18587841;0.47334456;0.08382751;0.95444161;-1;-1;0.31161967;0.74122816;0.41913757;0.74122816;
0.41731524;0.63553262;0.31161967;0.63917726;0.31161967;0.74122816;-1;-1;0.62141705;0.74122816;
0.74351364;0.73758346;0.73986894;0.63188791;0.62141705;0.63735491;0.62141705;0.74122816;-1;-1;
0.2879293;0.78131956;0.43189394;0.82505566;0.40638122;0.83963436;0.2879293;0.78131956;-1;-1;
0.74533594;0.78131956;0.61594999;0.82687801;0.64875209;0.83963436;0.74533594;0.78131956;-1;-1;
0.34259942;0.41138509;0.42460459;0.31480122;0.57403624;0.31297889;0.66697544;0.40409574;0.34259942;0.41138509;
0.34259942;0.41138509;0.082005173;0.72833508;0.14943166;0.82309663;0.092939198;0.91603583;0;0.82491893;
0.34259942;0.41138509;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.50843209;0.9307512;0.62141705;0.62459856;0.97859514;0.62642092;
0.68884349;0.39862874;0.82187414;0.059673991;0.51754379;0.27653214;0.19681244;0.061496362;0.33895475;0.40045106;
0.038269084;0.62642092;0.38633549;0.62459856;0.50843209;0.9307512;0.50843209;0.9307512;0.50843209;0.9307512;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.43918329;0.96719795;0.56674689;0.9653756;
0.56856924;0.66468996;0.77813804;0.92346185;0.89658993;0.84145671;0.66515309;0.57175076;0.93850368;0.57539546;
0.93850368;0.45876586;0.64875209;0.45147651;0.9202804;0.14714618;0.83645278;0.063318618;0.56310225;0.37493834;
0.57221389;0.054206997;0.44282797;0.054206934;0.44282797;0.37311599;0.20045711;0.072430305;0.10569556;0.15443553;
0.36811215;0.45147651;0.065604143;0.45694351;0.065604143;0.57175076;0.36264512;0.57357311;0.12574127;0.85421306;
0.21503581;0.9362182;0.43918329;0.67015696;0.43918329;0.96719795;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.53576714;0.04145059;
0.07471583;0.59908581;0.27517292;0.8578577;0.73440194;0.85421306;0.95126009;0.59908581;0.53576714;0.04145059;
-1;-1;0.072893485;0.59544116;0.29521865;0.51161361;0.67426479;0.51343596;0.95308238;0.59544116;
0.73440194;0.85603541;0.27517292;0.85968006;0.072893485;0.59544116;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.30352283;0.65011126;0.3709493;0.65011126;0.40557373;0.69020265;0.3709493;0.72847176;0.3017005;0.72847176;
0.26707608;0.6938473;0.30352283;0.65011126;-1;-1;0.33789352;0.65193355;0.35611689;0.6883803;
0.33607119;0.7266494;0.31420314;0.69020265;0.33789352;0.65193355;-1;-1;0.11298492;0.92710656;
0.86014324;0.92528421;0.86014313;0.25830874;0.68702114;0.1927046;0.49567574;0.15261321;0.29521865;0.18541525;
0.11116258;0.25284174;0.11298492;0.92710656;-1;-1;0.22982185;0.41978201;0.35191843;0.30315241;
0.49406075;0.25030464;0.63073605;0.29950774;0.7564773;0.41978201;0.22982185;0.41978201;-1;-1;
0.58907598;0.72563457;0.64739078;0.72563457;0.68383753;0.68736553;0.66014713;0.64545172;0.58543134;0.64545172;
0.55627394;0.68918782;0.58907598;0.72563457;-1;-1;0.61823338;0.72563457;0.64010143;0.68736553;
0.61641103;0.64545172;0.59636533;0.68736553;0.61823338;0.72563457;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.036446746;0.56263906;0.20410179;0.7703855;0.73075724;0.76856321;0.96401638;0.32573524;
0.96583873;0.71389306;0.72529024;0.26742044;0.21139114;0.27106512;0.036446746;0.56263906;-1;-1;
0.12027427;0.42231911;0.29886332;0.35124797;0.29704097;0.42414144;0.12027427;0.42231911;-1;-1;
0.20045711;0.68291336;0.30797499;0.68291336;0.30979735;0.58997411;0.19863477;0.58997411;0.20045711;0.68291336;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.45193964;0.96719795;0.71617854;0.68291336;0.55034584;0.29840016;
0.24054852;0.68109101;0.45193964;0.96719795;-1;-1;0.54305649;0.21092796;0.599549;0.21092796;
0.59772664;0.1471462;0.5412342;0.14532386;0.54305649;0.21092796;-1;-1;0.67062014;0.14350146;
0.73257959;0.14167918;0.73257959;0.074252672;0.66879779;0.072430372;0.67062014;0.14350146;-1;-1;
0.86743253;0.12163346;0.93668133;0.12163346;0.93668139;0.04873997;0.86561018;0.050562322;0.86743253;0.12163346;
-1;-1;0.55034584;0.30022252;0.56856924;0.21092798;0.55034584;0.30022252;-1;-1;
0.56856924;0.14714618;0.66879779;0.11069944;0.56856924;0.14714618;-1;-1;0.73257959;0.10523244;
0.86378795;0.087009005;0.73257959;0.10523244;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.047380768;0.074252672;0.91663569;0.074252672;
0.77449334;0.57904011;0.65604144;0.30204484;0.48474172;0.9562639;0.29886332;0.30386719;0.16218802;0.57721776;
0.047380768;0.074252672;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.047380768;0.074252672;
0.91663569;0.074252672;0.77449334;0.57904011;0.65604144;0.30204484;0.48474172;0.9562639;0.29886332;0.30386719;
0.16218802;0.57721776;0.047380768;0.074252672;-1;-1;0.37722382;0.58815181;0.43736094;0.52437001;
0.50478745;0.59361881;0.55399054;0.50614661;0.58861494;0.55170506;0.59043729;0.54988271;0.48656407;0.95444161;
0.37722382;0.58815181;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.063781805;0.096120708;0.92574739;0.09794303;0.65421909;0.66833466;0.34442174;0.67380166;0.063781805;0.096120708;
-1;-1;0.35900044;0.69931436;0.64692974;0.69749206;0.49932042;0.96902031;0.35900044;0.69931436;
-1;-1;0.46571085;0.82323331;0.53313732;0.82323331;0.57869577;0.78314191;0.53313732;0.74487281;
0.46388853;0.74487281;0.4292641;0.77949721;0.46571085;0.82323331;-1;-1;0.50008154;0.82141095;
0.52377194;0.7849642;0.49825922;0.74669516;0.47456884;0.7849642;0.50008154;0.82141095;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.51754379;0.9599086;0.91116863;0.18541525;0.11662959;0.18723759;0.51754379;0.9599086;
-1;-1;0.11298492;0.85239071;0.91299099;0.85603541;0.54487884;0.054206934;0.11298492;0.85239071;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.056492455;0.27653211;0.54305649;0.8578577;0.87107724;0.60637516;
0.38269082;0.021404902;0.056492455;0.27653211;-1;-1;0.58132559;0.83052266;0.65239674;0.91070551;
0.90387928;0.71207076;0.83280814;0.63553256;0.58132559;0.83052266;-1;-1;0.67426479;0.89430445;
0.71435624;0.90888315;0.74715829;0.89794916;0.79271668;0.8724364;0.79271668;0.89794916;0.80365074;0.91252786;
0.83827513;0.91252786;0.88565594;0.87425876;0.88565594;0.848746;0.87289953;0.83416736;0.84738684;0.83052266;
0.87472188;0.80318761;0.88747829;0.76674086;0.87472188;0.73576111;0.67426479;0.89430445;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.06560415;0.059673946;0.90205693;0.05967401;
0.93121433;0.08336436;0.95126009;0.1198111;0.95854944;0.73576111;0.83645278;0.73576111;0.85467625;0.74669516;
0.90752399;0.74851745;0.90752399;0.86514705;0.091116861;0.86514705;0.091116861;0.76127386;0.14214231;0.75945151;
0.16218802;0.74487281;0.027335059;0.74487281;0.023690384;0.12163341;0.040091421;0.083364375;0.06560415;0.059673946;
-1;-1;0.025512723;0.50614661;0.95672715;0.50432426;0.95126009;0.33120224;0.023690386;0.33120224;
0.025512723;0.50614661;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.11662959;0.19088228;
0.12938595;0.22915137;0.087472185;0.20546094;0.072893493;0.11798879;0.089294523;0.07607498;0.089294523;0.07607498;
0.089294523;0.07607498;0.13120829;0.052384619;0.18041138;0.021404926;0.18770075;0.014115561;0.2387262;0.0013591372;
0.28975165;-0.011397286;0.51572144;0.10887703;0.51936615;0.1526131;0.53941184;0.15079075;0.53758949;0.20363857;
0.44465032;0.34578088;0.41184825;0.4296084;0.39362487;0.42231905;0.36811215;0.41685203;0.34259942;0.43689775;
0.3316654;0.46969983;0.34442177;0.5025019;0.37722385;0.52619225;0.39362487;0.51708061;0.40638122;0.5043242;
0.40820357;0.48610085;0.47198537;0.5954411;0.50843209;0.6938473;0.50296509;0.73393875;0.5211885;0.69566965;
0.55945754;0.66286761;0.6432851;0.62277615;0.61595005;0.6792686;0.68155414;0.6100198;0.79818374;0.56081671;
0.84374219;0.5334816;0.88747829;0.4788115;0.90934628;0.53530395;0.91116863;0.60455281;0.89841235;0.70113665;
0.89841235;0.70113665;0.89841235;0.70113665;0.83463049;0.81412154;0.76720399;0.93621814;0.76355928;0.94532984;
0.70524454;1.0145787;0.63235104;1.0892946;0.61777234;1.0947615;0.51754379;1.1384976;0.41731524;1.1822337;
0.32437602;1.1767666;0.28428459;1.1694773;0.23690383;1.1749444;0.18405606;1.178589;0.12574126;1.1384976;
0.12574126;1.1384976;0.12574126;1.1384976;0.080182828;1.1002285;0.029157389;1.0510254;0.023690376;1.0400914;
-0.029157404;0.9471522;-0.082005188;0.854213;-0.082005188;0.854213;-0.10569558;0.75033975;-0.1312083;0.6355325;
-0.13303064;0.6245985;-0.12209661;0.27470973;-0.11116258;-0.075179033;-0.10569557;-0.18816391;-0.10569557;-0.22461073;
-0.12391895;-0.2391894;0.11662959;0.19088228;-1;-1;0.16036569;0.010470863;0.17129971;0.023227256;
0.41549289;0.15261315;0.41731524;0.19634931;0.43918329;0.19634931;0.57768095;0.18905988;0.57585859;0.14896852;
0.80182838;0.015937842;0.16036569;0.010470863;-1;-1;0.54305649;0.19088228;0.54487884;0.23279603;
0.47380769;0.26742044;0.41549289;0.31844586;0.34077707;0.39862871;0.43918329;0.24373005;0.43918329;0.19634931;
0.54305649;0.19088228;-1;-1;0.54305649;0.23461837;0.57221389;0.22003967;0.65968609;0.26559809;
0.72346789;0.31480119;0.77084869;0.38405001;0.79453903;0.45329884;0.77996033;0.50614661;0.78542739;0.52437001;
-1;-1;0.46287367;0.40591806;0.69795519;0.37858301;0.65786374;0.32391289;0.61959469;0.30022252;
0.58861494;0.28746614;0.55216819;0.29293317;0.46287367;0.40591806;-1;-1;0.5211885;0.50979131;
0.49203107;0.54259336;0.49203107;0.54259336;0.49203107;0.54259336;0.45376199;0.56081676;0.40638122;0.58086246;
0.39726952;0.58268476;0.35900044;0.58268476;0.32073137;0.58268476;0.33166537;0.55717206;0.34988874;0.53348166;
0.38269082;0.51525831;0.41549289;0.51343596;0.5211885;0.50979131;-1;-1;0.6287064;0.49339026;
0.61777234;0.47152221;0.63052869;0.44783184;0.64510739;0.43325314;0.64510739;0.41867444;0.61594999;0.42231911;
0.58314794;0.43507546;-1;-1;0.67244244;0.46605521;0.69977754;0.46058819;0.69977754;0.46058819;
0.69977754;0.46058819;0.71617854;0.46423286;0.73986894;0.46787754;0.74715829;0.46787754;0.77996033;0.47698921;
0.81276244;0.48610091;0.82369643;0.50432426;0.81640708;0.52254766;0.80911773;0.52983701;0.80911773;0.52983701;
0.80911773;0.52983701;0.79453903;0.52983701;0.76902634;0.52983701;0.75809228;0.52983701;0.71617854;0.52254766;
0.67426479;0.51525831;0.65421909;0.49339026;0.65057439;0.47881156;0.67244244;0.46605521;-1;-1;
0.51389915;0.55352741;0.44282797;0.60090816;0.40091419;0.60090816;-1;-1;0.66697544;0.54077101;
0.74533594;0.56263906;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.81094009;0.11798874;0.89294523;0.1908823;0.96219414;0.1908823;0.96219403;0.10523243;0.88930064;0.039628275;
0.81276244;0.041450571;0.81094009;0.11798874;-1;-1;0.81094009;0.11981107;0.32073137;0.60273051;
0.41367057;0.68109101;0.891123;0.18905988;0.81094009;0.11981107;-1;-1;0.32437605;0.60455281;
0.15307634;0.62642086;0.061959468;0.71936011;0.096583873;0.87972575;0.17676672;0.94350755;0.3462441;0.95808625;
0.43736094;0.87608111;0.41184822;0.68109101;0.32437605;0.60455281;-1;-1;0.061959468;0.71753776;
0.3462441;0.95808625;0.43736094;0.87608111;0.15307634;0.62642086;0.061959468;0.71753776;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.24054852;0.24008535;0.32984304;0.2419077;0.3754015;0.1908823;0.3754015;0.11981107;
0.33531007;0.081542045;0.23690385;0.085186675;0.19134541;0.12892276;0.19316775;0.19817163;0.24054852;0.24008535;
-1;-1;0.63781804;0.23567952;0.73804665;0.23567952;0.77813804;0.19558816;0.77996039;0.11358298;
0.75262535;0.077136226;0.6432851;0.075313874;0.59590429;0.10993827;0.59408194;0.18829882;0.63781804;0.23567952;
-1;-1;0.19499008;0.30022252;0.38086849;0.29840016;0.43736094;0.22003967;0.43918329;0.10887705;
0.37175682;0.03598357;0.20227943;0.039628275;0.1366753;0.10887705;0.13849764;0.21821733;0.19499008;0.30022252;
-1;-1;0.5849703;0.29657784;0.7927168;0.29475549;0.86378795;0.20363861;0.8656103;0.077897362;
0.80000609;0.025049608;0.56674689;0.03598357;0.50296509;0.10523243;0.49932042;0.22550668;0.5849703;0.29657784;
-1;-1;0.12027426;0.8141216;0.17312205;0.8141216;0.21868047;0.7703855;0.22414748;0.69931436;
0.18952309;0.66286761;0.11298491;0.66468996;0.071071155;0.70842606;0.069248818;0.77403021;0.12027426;0.8141216;
-1;-1;0.80000603;0.80683225;0.87836659;0.80683225;0.92392504;0.75216216;0.93121433;0.69202501;
0.89112288;0.65375596;0.80182838;0.65557826;0.75991464;0.70113671;0.75809228;0.76309615;0.80000603;0.80683225;
-1;-1;0.31526434;0.88883746;0.27517292;0.93804055;0.34259942;0.9854213;0.38998017;0.93804055;
0.45193964;0.95444161;0.54852355;0.94897461;0.61594999;0.9216395;0.67790949;0.96173096;0.72893494;0.91799486;
0.67973179;0.87608111;0.70342219;0.78860891;0.70524454;0.69384736;0.66333079;0.61730921;0.59225965;0.58086246;
0.41367057;0.57357311;0.33713239;0.61184216;0.27699527;0.67926866;0.2587719;0.77403021;0.31526434;0.88883746;
-1;-1;0.42460459;0.843279;0.45922899;0.84510136;0.46105134;0.81047696;0.42278224;0.80865461;
0.42460459;0.843279;-1;-1;0.53212249;0.84145671;0.56310225;0.84145671;0.56674689;0.80683225;
0.53212249;0.80683225;0.53212249;0.84145671;-1;-1;0.33713239;0.61184216;0.38815784;0.69749206;
0.46105134;0.72300476;0.54305649;0.72300476;0.62506169;0.69020271;0.66150844;0.61548686;0.59772664;0.58086246;
0.41367057;0.57539546;0.33713239;0.61184216;-1;-1;0.42278224;0.68109101;0.46287367;0.70478141;
0.5357672;0.70660371;0.57768095;0.68109101;0.53394485;0.66104531;0.46287367;0.66468996;0.42278224;0.68109101;
-1;-1;0.33713239;0.61184216;0.2733506;0.63188791;0.24054852;0.79043126;0.18405607;0.85421306;
0.10022855;0.85239071;0.032802071;0.78860891;0.034624409;0.70842606;0.091116861;0.63188791;0.15672101;0.55534971;
0.21139114;0.50979131;0.19134542;0.29840016;0.38086849;0.30022252;0.43918329;0.21639499;0.43553862;0.11069942;
0.40273654;0.07243032;0.53941184;0.068785697;0.50114274;0.10341009;0.50114274;0.22550668;0.5849703;0.29840016;
0.79089433;0.29475549;0.78178269;0.49885726;0.85649854;0.54988271;0.97495043;0.68109101;0.96583873;0.77220786;
0.90570164;0.84692371;0.78542739;0.84510136;0.72529024;0.7849642;0.70888919;0.63371021;0.65968609;0.61548686;
0.59408194;0.58268476;0.41002589;0.57357311;0.33713239;0.61184216;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.37062126;0.08094503;0.42417926;0.076660335;0.48416421;0.07023336;
0.61484569;0.074518062;0.69411153;0.098083556;0.76266575;0.16021077;0.80551207;0.23519202;0.83978915;0.34873492;
0.84407383;0.51369351;0.83978915;0.65080196;0.80979669;0.6765098;0.76695037;0.68722141;0.74338484;0.73006779;
0.73267323;0.77505648;0.70053846;0.79433733;0.670546;0.82861447;0.65554976;0.85860693;0.61056107;0.86503392;
0.58056855;0.87574548;0.53772217;0.87788785;0.51415664;0.89288408;0.49916044;0.88003016;0.46702564;0.87360317;
0.4177523;0.86931854;0.36633661;0.86717623;0.32134792;0.84789532;0.28921312;0.80933362;0.2527937;0.79005271;
0.24422441;0.75577563;0.22922818;0.70221764;0.20352034;0.68507904;0.17781252;0.68293673;0.17138556;0.64223266;
0.16924325;0.52654743;0.16710092;0.39800826;0.19280875;0.27589604;0.22494355;0.17734939;0.2527937;0.14092991;
0.28921312;0.11522213;0.31920561;0.093798921;0.37062126;0.08094503;-1;-1;0.27207455;0.12593372;
0.28064385;0.080944985;0.26778993;0.07237573;0.2099473;0.076660357;0.10283133;0.085229613;0.068554223;0.11307981;
0.040704068;0.20305723;0.044988707;0.39800826;0.049273346;0.59938627;0.083550453;0.7879104;0.13496612;0.86074924;
0.25493601;0.952869;0.33634415;0.97643453;0.42203692;0.98286146;0.46916795;0.98500377;0.49059114;0.98071915;
0.50130272;0.96786523;0.51415664;0.97857684;0.53772217;0.98500377;0.59128016;0.98071915;0.70910776;0.97000754;
0.78837359;0.94001508;0.86978173;0.85646462;0.91262805;0.78362578;0.92119735;0.65937126;0.91905504;0.39372364;
0.91905504;0.18591863;0.91905504;0.11950672;0.91905504;0.087371968;0.86978173;0.078802638;0.77980429;0.085229613;
0.72196162;0.08308734;0.69839615;0.087371968;0.70910776;0.11522209;-1;-1;0.41346765;0.59081703;
0.40918303;0.55653989;0.36847895;0.53511673;0.31706327;0.54368597;0.29564008;0.56939381;0.29349777;0.5758208;
0.31706327;0.60152858;0.3641943;0.60367095;0.41346765;0.59081703;-1;-1;0.56985694;0.58010542;
0.58913785;0.55225527;0.61270338;0.53511673;0.65769207;0.54154366;0.68554223;0.56082451;0.70053846;0.59081703;
0.670546;0.59724396;0.62555724;0.60152858;0.58913785;0.59510165;0.56985694;0.58010542;-1;-1;
0.34919807;0.53940135;0.32991719;0.55439758;0.32991719;0.58224773;0.34491342;0.59724396;0.36633661;0.59724396;
0.38347518;0.58439004;0.37919053;0.56082451;0.37062126;0.54368597;0.34919807;0.53940135;-1;-1;
0.63198423;0.54154366;0.65554976;0.56082451;0.65554976;0.58439004;0.64055353;0.59724396;0.6255573;0.59510165;
0.6084187;0.59081703;0.59984946;0.5758208;0.60627639;0.56082451;0.61484569;0.54582828;0.63198423;0.54154366;
-1;-1;0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;
0.60627639;0.20734182;0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;
0.26136297;0.61866719;0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;
0.59128016;0.6679405;0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.63198423;0.54154366;
-1;-1;0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;
0.60627639;0.20734182;0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;
0.26136297;0.61866719;0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;
0.59128016;0.6679405;0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;-1;-1;
0.26136297;0.61866719;0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;
0.59128016;0.6679405;0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.11662959;0.19088228;0.12938595;0.22915137;
0.087472185;0.20546094;0.072893493;0.11798879;0.089294523;0.07607498;0.089294523;0.07607498;0.089294523;0.07607498;
0.13120829;0.052384619;0.18041138;0.021404926;0.18770075;0.014115561;0.2387262;0.0013591372;0.28975165;-0.011397286;
0.51572144;0.10887703;0.51936615;0.1526131;0.53941184;0.15079075;0.53758949;0.20363857;0.44465032;0.34578088;
0.41184825;0.4296084;0.39362487;0.42231905;0.36811215;0.41685203;0.34259942;0.43689775;0.3316654;0.46969983;
0.34442177;0.5025019;0.37722385;0.52619225;0.39362487;0.51708061;0.40638122;0.5043242;0.40820357;0.48610085;
0.47198537;0.5954411;0.50843209;0.6938473;0.50296509;0.73393875;0.5211885;0.69566965;0.55945754;0.66286761;
0.6432851;0.62277615;0.61595005;0.6792686;0.68155414;0.6100198;0.79818374;0.56081671;0.84374219;0.5334816;
0.88747829;0.4788115;0.90934628;0.53530395;0.91116863;0.60455281;0.89841235;0.70113665;0.89841235;0.70113665;
0.89841235;0.70113665;0.83463049;0.81412154;0.76720399;0.93621814;0.76355928;0.94532984;0.70524454;1.0145787;
0.63235104;1.0892946;0.61777234;1.0947615;0.51754379;1.1384976;0.41731524;1.1822337;0.32437602;1.1767666;
0.28428459;1.1694773;0.23690383;1.1749444;0.18405606;1.178589;0.12574126;1.1384976;0.12574126;1.1384976;
0.12574126;1.1384976;0.080182828;1.1002285;0.029157389;1.0510254;0.023690376;1.0400914;-0.029157404;0.9471522;
-0.082005188;0.854213;-0.082005188;0.854213;-0.10569558;0.75033975;-0.1312083;0.6355325;-0.13303064;0.6245985;
-0.12209661;0.27470973;-0.11116258;-0.075179033;-0.10569557;-0.18816391;-0.10569557;-0.22461073;-0.12391895;-0.2391894;
0.11662959;0.19088228;-1;-1;0.16036569;0.010470863;0.17129971;0.023227256;0.41549289;0.15261315;
0.41731524;0.19634931;0.43918329;0.19634931;0.57768095;0.18905988;0.57585859;0.14896852;0.80182838;0.015937842;
0.16036569;0.010470863;-1;-1;0.54305649;0.19088228;0.54487884;0.23279603;0.47380769;0.26742044;
0.41549289;0.31844586;0.34077707;0.39862871;0.43918329;0.24373005;0.43918329;0.19634931;0.54305649;0.19088228;
-1;-1;0.54305649;0.23461837;0.57221389;0.22003967;0.65968609;0.26559809;0.72346789;0.31480119;
0.77084869;0.38405001;0.79453903;0.45329884;0.77996033;0.50614661;0.78542739;0.52437001;-1;-1;
0.46287367;0.40591806;0.69795519;0.37858301;0.65786374;0.32391289;0.61959469;0.30022252;0.58861494;0.28746614;
0.55216819;0.29293317;0.46287367;0.40591806;-1;-1;0.5211885;0.50979131;0.49203107;0.54259336;
0.49203107;0.54259336;0.49203107;0.54259336;0.45376199;0.56081676;0.40638122;0.58086246;0.39726952;0.58268476;
0.35900044;0.58268476;0.32073137;0.58268476;0.33166537;0.55717206;0.34988874;0.53348166;0.38269082;0.51525831;
0.41549289;0.51343596;0.5211885;0.50979131;-1;-1;0.6287064;0.49339026;0.61777234;0.47152221;
0.63052869;0.44783184;0.64510739;0.43325314;0.64510739;0.41867444;0.61594999;0.42231911;0.58314794;0.43507546;
-1;-1;0.67244244;0.46605521;0.69977754;0.46058819;0.69977754;0.46058819;0.69977754;0.46058819;
0.71617854;0.46423286;0.73986894;0.46787754;0.74715829;0.46787754;0.77996033;0.47698921;0.81276244;0.48610091;
0.82369643;0.50432426;0.81640708;0.52254766;0.80911773;0.52983701;0.80911773;0.52983701;0.80911773;0.52983701;
0.79453903;0.52983701;0.76902634;0.52983701;0.75809228;0.52983701;0.71617854;0.52254766;0.67426479;0.51525831;
0.65421909;0.49339026;0.65057439;0.47881156;0.67244244;0.46605521;-1;-1;0.51389915;0.55352741;
0.44282797;0.60090816;0.40091419;0.60090816;-1;-1;0.66697544;0.54077101;0.74533594;0.56263906;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [19] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["ObjectsCur"] {
      name="ObjectsCur";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="name";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[9] "face";"face_square";"fish";"kite";"bottle";"food_jar";"mother";"rattle";"teddy_bear";	};
       };
       float_Data @["pv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0.2;0.2;0;0;0;0;
1;1;0.5;0.5;0;0;0;0;	};
       };
       float_Data @["pv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;0;0;1;1;
0;0;0.5;0.5;0;0;0;0;	};
       };
       float_Data @["pv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0.80000001;0.80000001;0.5;0.5;0;0;0;0;0;0;
0;0;1;1;0;0;0.2;0.2;	};
       };
       float_Data @["pv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0.2;0.2;0.5;0.5;0;0;
0;0;0;0;1;1;0.80000001;0.80000001;	};
       };
       float_Data @["pv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="pv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv0"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv0";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0.2;0.2;0.5;0.5;0;0;
0;0;0;0;0.2;0.2;0;0;	};
       };
       float_Data @["nv1"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv1";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0.5;0.5;1;1;0.2;0.2;0.5;0.5;0;0;
0;0;0;0;0.2;0.2;0;0;	};
       };
       float_Data @["nv2"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv2";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0.5;0.5;1;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["nv3"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="nv3";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=90;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;1;1;0.2;0.2;
0.2;0.2;0.5;0.5;0;0;0.2;0.2;	};
       };
       float_Data @["nv4"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="nv4";
	desc="min/max range of outcomes for this value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[1] ;	};
	width=67;
	ar {
	 name="ar";
	[2 9] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
       float_Data @["freq"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="freq";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[9] 0;0;0;0;0;0;0;0;0;	};
       };
       int_Data @["n_coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="n_coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=90;
	ar {
	 name="ar";
	[9] 34;43;19;35;27;23;137;29;142;	};
       };
       float_Data @["coords"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1754385977983475;
	  val_type_fixed=0;
	 };
	};
	name="coords";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 2;256;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
	ar {
	 name="ar";
	[2 256 9] 0.08382751;0.95444161;0.92574739;0.95626396;0.84738684;0.47881156;0.5066098;0.072430402;0.18587841;0.47334456;
0.08382751;0.95444161;-1;-1;0.31161967;0.74122816;0.41913757;0.74122816;0.41731524;0.63553262;
0.31161967;0.63917726;0.31161967;0.74122816;-1;-1;0.62141705;0.74122816;0.74351364;0.73758346;
0.73986894;0.63188791;0.62141705;0.63735491;0.62141705;0.74122816;-1;-1;0.2879293;0.78131956;
0.43189394;0.82505566;0.40638122;0.83963436;0.2879293;0.78131956;-1;-1;0.74533594;0.78131956;
0.61594999;0.82687801;0.64875209;0.83963436;0.74533594;0.78131956;-1;-1;0.34259942;0.41138509;
0.42460459;0.31480122;0.57403624;0.31297889;0.66697544;0.40409574;0.34259942;0.41138509;0.34259942;0.41138509;
0.082005173;0.72833508;0.14943166;0.82309663;0.092939198;0.91603583;0;0.82491893;0.34259942;0.41138509;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.30352283;0.65011126;0.3709493;0.65011126;0.40557373;0.69020265;0.3709493;0.72847176;
0.3017005;0.72847176;0.26707608;0.6938473;0.30352283;0.65011126;-1;-1;0.33789352;0.65193355;
0.35611689;0.6883803;0.33607119;0.7266494;0.31420314;0.69020265;0.33789352;0.65193355;-1;-1;
0.11298492;0.92710656;0.86014324;0.92528421;0.86014313;0.25830874;0.68702114;0.1927046;0.49567574;0.15261321;
0.29521865;0.18541525;0.11116258;0.25284174;0.11298492;0.92710656;-1;-1;0.22982185;0.41978201;
0.35191843;0.30315241;0.49406075;0.25030464;0.63073605;0.29950774;0.7564773;0.41978201;0.22982185;0.41978201;
-1;-1;0.58907598;0.72563457;0.64739078;0.72563457;0.68383753;0.68736553;0.66014713;0.64545172;
0.58543134;0.64545172;0.55627394;0.68918782;0.58907598;0.72563457;-1;-1;0.61823338;0.72563457;
0.64010143;0.68736553;0.61641103;0.64545172;0.59636533;0.68736553;0.61823338;0.72563457;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.036446746;0.56263906;0.20410179;0.7703855;0.73075724;0.76856321;
0.96401638;0.32573524;0.96583873;0.71389306;0.72529024;0.26742044;0.21139114;0.27106512;0.036446746;0.56263906;
-1;-1;0.12027427;0.42231911;0.29886332;0.35124797;0.29704097;0.42414144;0.12027427;0.42231911;
-1;-1;0.20045711;0.68291336;0.30797499;0.68291336;0.30979735;0.58997411;0.19863477;0.58997411;
0.20045711;0.68291336;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.45193964;0.96719795;0.71617854;0.68291336;
0.55034584;0.29840016;0.24054852;0.68109101;0.45193964;0.96719795;-1;-1;0.54305649;0.21092796;
0.599549;0.21092796;0.59772664;0.1471462;0.5412342;0.14532386;0.54305649;0.21092796;-1;-1;
0.67062014;0.14350146;0.73257959;0.14167918;0.73257959;0.074252672;0.66879779;0.072430372;0.67062014;0.14350146;
-1;-1;0.86743253;0.12163346;0.93668133;0.12163346;0.93668139;0.04873997;0.86561018;0.050562322;
0.86743253;0.12163346;-1;-1;0.55034584;0.30022252;0.56856924;0.21092798;0.55034584;0.30022252;
-1;-1;0.56856924;0.14714618;0.66879779;0.11069944;0.56856924;0.14714618;-1;-1;
0.73257959;0.10523244;0.86378795;0.087009005;0.73257959;0.10523244;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.056492455;0.27653211;
0.54305649;0.8578577;0.87107724;0.60637516;0.38269082;0.021404902;0.056492455;0.27653211;-1;-1;
0.58132559;0.83052266;0.65239674;0.91070551;0.90387928;0.71207076;0.83280814;0.63553256;0.58132559;0.83052266;
-1;-1;0.67426479;0.89430445;0.71435624;0.90888315;0.74715829;0.89794916;0.79271668;0.8724364;
0.79271668;0.89794916;0.80365074;0.91252786;0.83827513;0.91252786;0.88565594;0.87425876;0.88565594;0.848746;
0.87289953;0.83416736;0.84738684;0.83052266;0.87472188;0.80318761;0.88747829;0.76674086;0.87472188;0.73576111;
0.67426479;0.89430445;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.06560415;0.059673946;0.90205693;0.05967401;0.93121433;0.08336436;0.95126009;0.1198111;0.95854944;0.73576111;
0.83645278;0.73576111;0.85467625;0.74669516;0.90752399;0.74851745;0.90752399;0.86514705;0.091116861;0.86514705;
0.091116861;0.76127386;0.14214231;0.75945151;0.16218802;0.74487281;0.027335059;0.74487281;0.023690384;0.12163341;
0.040091421;0.083364375;0.06560415;0.059673946;-1;-1;0.025512723;0.50614661;0.95672715;0.50432426;
0.95126009;0.33120224;0.023690386;0.33120224;0.025512723;0.50614661;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.37062126;0.08094503;0.42417926;0.076660335;0.48416421;0.07023336;0.61484569;0.074518062;
0.69411153;0.098083556;0.76266575;0.16021077;0.80551207;0.23519202;0.83978915;0.34873492;0.84407383;0.51369351;
0.83978915;0.65080196;0.80979669;0.6765098;0.76695037;0.68722141;0.74338484;0.73006779;0.73267323;0.77505648;
0.70053846;0.79433733;0.670546;0.82861447;0.65554976;0.85860693;0.61056107;0.86503392;0.58056855;0.87574548;
0.53772217;0.87788785;0.51415664;0.89288408;0.49916044;0.88003016;0.46702564;0.87360317;0.4177523;0.86931854;
0.36633661;0.86717623;0.32134792;0.84789532;0.28921312;0.80933362;0.2527937;0.79005271;0.24422441;0.75577563;
0.22922818;0.70221764;0.20352034;0.68507904;0.17781252;0.68293673;0.17138556;0.64223266;0.16924325;0.52654743;
0.16710092;0.39800826;0.19280875;0.27589604;0.22494355;0.17734939;0.2527937;0.14092991;0.28921312;0.11522213;
0.31920561;0.093798921;0.37062126;0.08094503;-1;-1;0.27207455;0.12593372;0.28064385;0.080944985;
0.26778993;0.07237573;0.2099473;0.076660357;0.10283133;0.085229613;0.068554223;0.11307981;0.040704068;0.20305723;
0.044988707;0.39800826;0.049273346;0.59938627;0.083550453;0.7879104;0.13496612;0.86074924;0.25493601;0.952869;
0.33634415;0.97643453;0.42203692;0.98286146;0.46916795;0.98500377;0.49059114;0.98071915;0.50130272;0.96786523;
0.51415664;0.97857684;0.53772217;0.98500377;0.59128016;0.98071915;0.70910776;0.97000754;0.78837359;0.94001508;
0.86978173;0.85646462;0.91262805;0.78362578;0.92119735;0.65937126;0.91905504;0.39372364;0.91905504;0.18591863;
0.91905504;0.11950672;0.91905504;0.087371968;0.86978173;0.078802638;0.77980429;0.085229613;0.72196162;0.08308734;
0.69839615;0.087371968;0.70910776;0.11522209;-1;-1;0.41346765;0.59081703;0.40918303;0.55653989;
0.36847895;0.53511673;0.31706327;0.54368597;0.29564008;0.56939381;0.29349777;0.5758208;0.31706327;0.60152858;
0.3641943;0.60367095;0.41346765;0.59081703;-1;-1;0.56985694;0.58010542;0.58913785;0.55225527;
0.61270338;0.53511673;0.65769207;0.54154366;0.68554223;0.56082451;0.70053846;0.59081703;0.670546;0.59724396;
0.62555724;0.60152858;0.58913785;0.59510165;0.56985694;0.58010542;-1;-1;0.34919807;0.53940135;
0.32991719;0.55439758;0.32991719;0.58224773;0.34491342;0.59724396;0.36633661;0.59724396;0.38347518;0.58439004;
0.37919053;0.56082451;0.37062126;0.54368597;0.34919807;0.53940135;-1;-1;0.63198423;0.54154366;
0.65554976;0.56082451;0.65554976;0.58439004;0.64055353;0.59724396;0.6255573;0.59510165;0.6084187;0.59081703;
0.59984946;0.5758208;0.60627639;0.56082451;0.61484569;0.54582828;0.63198423;0.54154366;-1;-1;
0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;0.60627639;0.20734182;
0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.63198423;0.54154366;-1;-1;
0.29778239;0.29946157;0.3406288;0.24161895;0.38561749;0.21376881;0.49059114;0.19877258;0.60627639;0.20734182;
0.67483062;0.23947662;0.71339238;0.31017315;0.29778239;0.29946157;-1;-1;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;-1;-1;0.26136297;0.61866719;
0.37919053;0.67222518;0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;
0.71981931;0.6208095;0.60627639;0.6850791;0.59128016;0.6679405;0.26136297;0.61866719;0.37919053;0.67222518;
0.3641943;0.69364834;0.26136297;0.61866719;-1;-1;0.59128016;0.6679405;0.71981931;0.6208095;
0.60627639;0.6850791;0.59128016;0.6679405;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0.81094009;0.11798874;0.89294523;0.1908823;0.96219414;0.1908823;
0.96219403;0.10523243;0.88930064;0.039628275;0.81276244;0.041450571;0.81094009;0.11798874;-1;-1;
0.81094009;0.11981107;0.32073137;0.60273051;0.41367057;0.68109101;0.891123;0.18905988;0.81094009;0.11981107;
-1;-1;0.32437605;0.60455281;0.15307634;0.62642086;0.061959468;0.71936011;0.096583873;0.87972575;
0.17676672;0.94350755;0.3462441;0.95808625;0.43736094;0.87608111;0.41184822;0.68109101;0.32437605;0.60455281;
-1;-1;0.061959468;0.71753776;0.3462441;0.95808625;0.43736094;0.87608111;0.15307634;0.62642086;
0.061959468;0.71753776;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.24054852;0.24008535;0.32984304;0.2419077;
0.3754015;0.1908823;0.3754015;0.11981107;0.33531007;0.081542045;0.23690385;0.085186675;0.19134541;0.12892276;
0.19316775;0.19817163;0.24054852;0.24008535;-1;-1;0.63781804;0.23567952;0.73804665;0.23567952;
0.77813804;0.19558816;0.77996039;0.11358298;0.75262535;0.077136226;0.6432851;0.075313874;0.59590429;0.10993827;
0.59408194;0.18829882;0.63781804;0.23567952;-1;-1;0.19499008;0.30022252;0.38086849;0.29840016;
0.43736094;0.22003967;0.43918329;0.10887705;0.37175682;0.03598357;0.20227943;0.039628275;0.1366753;0.10887705;
0.13849764;0.21821733;0.19499008;0.30022252;-1;-1;0.5849703;0.29657784;0.7927168;0.29475549;
0.86378795;0.20363861;0.8656103;0.077897362;0.80000609;0.025049608;0.56674689;0.03598357;0.50296509;0.10523243;
0.49932042;0.22550668;0.5849703;0.29657784;-1;-1;0.12027426;0.8141216;0.17312205;0.8141216;
0.21868047;0.7703855;0.22414748;0.69931436;0.18952309;0.66286761;0.11298491;0.66468996;0.071071155;0.70842606;
0.069248818;0.77403021;0.12027426;0.8141216;-1;-1;0.80000603;0.80683225;0.87836659;0.80683225;
0.92392504;0.75216216;0.93121433;0.69202501;0.89112288;0.65375596;0.80182838;0.65557826;0.75991464;0.70113671;
0.75809228;0.76309615;0.80000603;0.80683225;-1;-1;0.31526434;0.88883746;0.27517292;0.93804055;
0.34259942;0.9854213;0.38998017;0.93804055;0.45193964;0.95444161;0.54852355;0.94897461;0.61594999;0.9216395;
0.67790949;0.96173096;0.72893494;0.91799486;0.67973179;0.87608111;0.70342219;0.78860891;0.70524454;0.69384736;
0.66333079;0.61730921;0.59225965;0.58086246;0.41367057;0.57357311;0.33713239;0.61184216;0.27699527;0.67926866;
0.2587719;0.77403021;0.31526434;0.88883746;-1;-1;0.42460459;0.843279;0.45922899;0.84510136;
0.46105134;0.81047696;0.42278224;0.80865461;0.42460459;0.843279;-1;-1;0.53212249;0.84145671;
0.56310225;0.84145671;0.56674689;0.80683225;0.53212249;0.80683225;0.53212249;0.84145671;-1;-1;
0.33713239;0.61184216;0.38815784;0.69749206;0.46105134;0.72300476;0.54305649;0.72300476;0.62506169;0.69020271;
0.66150844;0.61548686;0.59772664;0.58086246;0.41367057;0.57539546;0.33713239;0.61184216;-1;-1;
0.42278224;0.68109101;0.46287367;0.70478141;0.5357672;0.70660371;0.57768095;0.68109101;0.53394485;0.66104531;
0.46287367;0.66468996;0.42278224;0.68109101;-1;-1;0.33713239;0.61184216;0.2733506;0.63188791;
0.24054852;0.79043126;0.18405607;0.85421306;0.10022855;0.85239071;0.032802071;0.78860891;0.034624409;0.70842606;
0.091116861;0.63188791;0.15672101;0.55534971;0.21139114;0.50979131;0.19134542;0.29840016;0.38086849;0.30022252;
0.43918329;0.21639499;0.43553862;0.11069942;0.40273654;0.07243032;0.53941184;0.068785697;0.50114274;0.10341009;
0.50114274;0.22550668;0.5849703;0.29840016;0.79089433;0.29475549;0.78178269;0.49885726;0.85649854;0.54988271;
0.97495043;0.68109101;0.96583873;0.77220786;0.90570164;0.84692371;0.78542739;0.84510136;0.72529024;0.7849642;
0.70888919;0.63371021;0.65968609;0.61548686;0.59408194;0.58268476;0.41002589;0.57357311;0.33713239;0.61184216;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [9] 0;1;2;3;4;5;6;7;8;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["ValueNames"] {
      name="ValueNames";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["value"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1910331398248672;
	  val_type_fixed=0;
	 };
	};
	name="value";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=98;
	ar {
	 name="ar";
	[10] "pv0";"pv1";"pv2";"pv3";"pv4";"nv0";"nv1";"nv2";"nv3";"nv4";
	};
       };
       String_Data @["desc"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.8187134265899658;
	  val_type_fixed=0;
	 };
	};
	name="desc";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=420;
	ar {
	 name="ar";
	[10] "positive food value";"positive liquid value";"positive social value";"positive fun value";;"negative pain value";"negative fear value";"negative social value";"negative frustration value";;
	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [10] 0;1;2;3;4;5;6;7;8;9;
      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["Scene"] {
      name="Scene";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1315789520740509;
	  val_type_fixed=0;
	 };
	};
	name="name";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] "face_square";"mother";"fish";	};
       };
       float_Data @["ctr_x"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1315789520740509;
	  val_type_fixed=0;
	 };
	};
	name="ctr_x";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] 0.23461437;0.77146691;0.76181173;	};
       };
       float_Data @["ctr_y"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1315789520740509;
	  val_type_fixed=0;
	 };
	};
	name="ctr_y";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] 0.75619251;0.23104611;0.49403551;	};
       };
       float_Data @["size"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1315789520740509;
	  val_type_fixed=0;
	 };
	};
	name="size";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=43;
	ar {
	 name="ar";
	[3] 0.11361846;0.14119354;0.12815231;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [3] 0;1;2;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["FoveatedValues"] {
      name="FoveatedValues";
      desc=;
      data {
       name="data";
       el_typ=float_Data;
       el_def=0;
       String_Data @["name"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="name";
	desc="name of foveated object";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=67;
	ar {
	 name="ar";
	[1] "mother";	};
       };
       float_Data @["pv"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="pv";
	desc="positive values, in form ready to apply to network";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1;1;1;5;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[4] ;;;;	};
	width=67;
	ar {
	 name="ar";
	[1 1 1 5 1] 0.5;0.5;1;0;0;	};
       };
       float_Data @["nv"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1306042820215225;
	  val_type_fixed=0;
	 };
	};
	name="nv";
	desc="negative values, in form ready to apply to network";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1;1;1;5;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[4] ;;;;	};
	width=67;
	ar {
	 name="ar";
	[1 1 1 5 1] 0;0;0;0.5;0;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [1] 0;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["obj_files"] {
      name="obj_files";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       String_Data @["FileName"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1315789520740509;
	  val_type_fixed=0;
	 };
	};
	name="FileName";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	ar {
	 name="ar";
	[18] "asterisk.svg";"bottle.svg";"cross.svg";"emerald.svg";"face.svg";"face_square.svg";"fish.svg";"food_jar.svg";"kite.svg";"mother.svg";
"mountain.svg";"mountain_snow.svg";"pyramid.svg";"rattle.svg";"star.svg";"star_of_david.svg";"teddy_bear.svg";"woman.svg";	};
       };
       String_Data @["FilePath"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.3460526168346405;
	  val_type_fixed=0;
	 };
	};
	name="FilePath";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=263;
	ar {
	 name="ar";
	[18] "twod_objs_svg/asterisk.svg";"twod_objs_svg/bottle.svg";"twod_objs_svg/cross.svg";"twod_objs_svg/emerald.svg";"twod_objs_svg/face.svg";"twod_objs_svg/face_square.svg";"twod_objs_svg/fish.svg";"twod_objs_svg/food_jar.svg";"twod_objs_svg/kite.svg";"twod_objs_svg/mother.svg";
"twod_objs_svg/mountain.svg";"twod_objs_svg/mountain_snow.svg";"twod_objs_svg/pyramid.svg";"twod_objs_svg/rattle.svg";"twod_objs_svg/star.svg";"twod_objs_svg/star_of_david.svg";"twod_objs_svg/teddy_bear.svg";"twod_objs_svg/woman.svg";	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [18] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["GridPos"] {
      name="GridPos";
      desc=;
      data {
       name="data";
       el_typ=int_Data;
       el_def=0;
       int_Data @["x_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;1;2;0;1;2;0;1;2;	};
       };
       int_Data @["y_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;0;0;1;1;1;2;2;2;	};
       };
       float_Data @["x_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.5;0.76499999;0.235;0.5;0.76499999;0.235;0.5;0.76499999;	};
       };
       float_Data @["y_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.235;0.235;0.5;0.5;0.5;0.76499999;0.76499999;0.76499999;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [9] 0;1;2;3;4;5;6;7;8;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     DataTable @["GridPermuted"] {
      name="GridPermuted";
      desc=;
      data {
       name="data";
       el_typ=int_Data;
       el_def=0;
       int_Data @["x_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;1;2;0;1;2;0;1;2;	};
       };
       int_Data @["y_idx"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_idx";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0;0;0;1;1;1;2;2;2;	};
       };
       float_Data @["x_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="x_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.5;0.76499999;0.235;0.5;0.76499999;0.235;0.5;0.76499999;	};
       };
       float_Data @["y_pos"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1473684161901474;
	  val_type_fixed=0;
	 };
	};
	name="y_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=112;
	ar {
	 name="ar";
	[9] 0.235;0.235;0.235;0.5;0.5;0.5;0.76499999;0.76499999;0.76499999;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [9] 0;1;2;3;4;5;6;7;8;      };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
     taCanvas @["FullViewCanvas"] {
      name="FullViewCanvas";
      coord_type=NORMALIZED;
     };
     taCanvas @["FoveaCanvas"] {
      name="FoveaCanvas";
      coord_type=NORMALIZED;
     };
     taCanvas @["SceneCanvas"] {
      name="SceneCanvas";
      coord_type=NORMALIZED;
     };
     DataTable @["CanvasViews"] {
      name="CanvasViews";
      desc=;
      data {
       name="data";
       el_typ=float_Data;
       el_def=0;
       float_Data @["Scene"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["IMAGE"] {
	  name="IMAGE";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1327433586120605;
	  val_type_fixed=0;
	 };
	};
	name="Scene";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1024;1024;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
       };
       float_Data @["FullView"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["IMAGE"] {
	  name="IMAGE";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1327433586120605;
	  val_type_fixed=0;
	 };
	};
	name="FullView";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 1024;1024;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
       };
       float_Data @["Fovea"] {
	UserDataItem_List @*(.user_data_) {
	 name=;
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["IMAGE"] {
	  name="IMAGE";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	 UserDataItem @["view_panel_wd"] {
	  name="view_panel_wd";
	  value 6 0=0.1327433586120605;
	  val_type_fixed=0;
	 };
	};
	name="Fovea";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=1;
	cell_geom{ 192;192;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[2] ;;	};
	width=90;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
      row_indexes {
       name="row_indexes";
      [0]       };
      last_sort_spec {
       name="last_sort_spec";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @["Actions"] {
      name="Actions";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @["LOAD_OBJS"] {
	name="LOAD_OBJS";
	value=0;
	desc="load objects from svg files";
       };
       DynEnumItem @["COMPOSE_SCENE"] {
	name="COMPOSE_SCENE";
	value=1;
	desc="make a new scene in Scene data table";
       };
       DynEnumItem @["RENDER_SCENE"] {
	name="RENDER_SCENE";
	value=2;
	desc="render a new scene";
       };
       DynEnumItem @["FOVEATE"] {
	name="FOVEATE";
	value=3;
	desc="foveate on given coords in full scene, render views";
       };
      };
      bits=0;
     };
     DynEnumType @["XY"] {
      name="XY";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @["X"] {
	name="X";
	value=0;
	desc=;
       };
       DynEnumItem @["Y"] {
	name="Y";
	value=1;
	desc=;
       };
      };
      bits=0;
     };
     DynEnumType @["PositionType"] {
      name="PositionType";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @["RANDOM_POS_NOVLP"] {
	name="RANDOM_POS_NOVLP";
	value=0;
	desc="position randomly, and try to exclude overlap";
       };
       DynEnumItem @["GRID_PERMUTED"] {
	name="GRID_PERMUTED";
	value=1;
	desc="use an underlying grid with permuted positions";
       };
      };
      bits=0;
     };
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @["action"] {
      name="action";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].types["Actions"]$$;
       value=3;
      };
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["x_arg"] {
      name="x_arg";
      var_type=T_Real;
      real_val=0.8462892174720764;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["y_arg"] {
      name="y_arg";
      var_type=T_Real;
      real_val=0.210335373878479;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @["ObjectsAll"] {
      name="ObjectsAll";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["ObjectsAll"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["Scene"] {
      name="Scene";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["Scene"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["obj_files"] {
      name="obj_files";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["obj_files"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["FullViewCanvas"] {
      name="FullViewCanvas";
      var_type=T_Object;
      object_type=taCanvas;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["FullViewCanvas"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["FoveaCanvas"] {
      name="FoveaCanvas";
      var_type=T_Object;
      object_type=taCanvas;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["FoveaCanvas"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["SceneCanvas"] {
      name="SceneCanvas";
      var_type=T_Object;
      object_type=taCanvas;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["SceneCanvas"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["fix_x"] {
      name="fix_x";
      var_type=T_Real;
      real_val=0.8199490308761597;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="horizontal fixation location within Scene";
      init_from=NULL;
     };
     ProgVar @["fix_y"] {
      name="fix_y";
      var_type=T_Real;
      real_val=0.2564889192581177;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="vertical fixation location within Scene";
      init_from=NULL;
     };
     ProgVar @["obj_dir"] {
      name="obj_dir";
      var_type=T_String;
      string_val="twod_objs_svg";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["full_view_pixels"] {
      name="full_view_pixels";
      var_type=T_Int;
      int_val=1024;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["fovea_pixels"] {
      name="fovea_pixels";
      var_type=T_Int;
      int_val=192;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["fovea_scale"] {
      name="fovea_scale";
      var_type=T_Real;
      real_val=4;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["bg_color"] {
      name="bg_color";
      var_type=T_String;
      string_val="white";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["line_color"] {
      name="line_color";
      var_type=T_String;
      string_val="black";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["line_width"] {
      name="line_width";
      var_type=T_Real;
      real_val=0.005;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["min_n_objs"] {
      name="min_n_objs";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="minimum number of objects per scene";
      init_from=NULL;
     };
     ProgVar @["max_n_objs"] {
      name="max_n_objs";
      var_type=T_Int;
      int_val=4;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="maximum number of objects per scene";
      init_from=NULL;
     };
     ProgVar @["min_size"] {
      name="min_size";
      var_type=T_Real;
      real_val=0.1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="obj size in full scene 0-1 normalized scale";
      init_from=NULL;
     };
     ProgVar @["max_size"] {
      name="max_size";
      var_type=T_Real;
      real_val=0.15;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="in full scene 0-1 normalized scale";
      init_from=NULL;
     };
     ProgVar @["pos_type"] {
      name="pos_type";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].types["PositionType"]$$;
       value=1;
      };
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["grid_x"] {
      name="grid_x";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["grid_y"] {
      name="grid_y";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["grid_jitter"] {
      name="grid_jitter";
      var_type=T_Real;
      real_val=0.01;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="how much to jitter positions on the grid";
      init_from=NULL;
     };
     ProgVar @["grid_margin"] {
      name="grid_margin";
      var_type=T_Real;
      real_val=0.15;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="extra margin around edges for grid";
      init_from=NULL;
     };
     ProgVar @["min_spc"] {
      name="min_spc";
      var_type=T_Real;
      real_val=0.5;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="miniumum extra space between objs";
      init_from=NULL;
     };
     ProgVar @["redo_limit"] {
      name="redo_limit";
      var_type=T_Int;
      int_val=100;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="how many times to redo rnd location generation";
      init_from=NULL;
     };
     ProgVar @["CanvasViews"] {
      name="CanvasViews";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["CanvasViews"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["GridPos"] {
      name="GridPos";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["GridPos"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["GridPermuted"] {
      name="GridPermuted";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["GridPermuted"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["ObjectsCur"] {
      name="ObjectsCur";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["ObjectsCur"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["ValueNames"] {
      name="ValueNames";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["ValueNames"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["n_values"] {
      name="n_values";
      var_type=T_Int;
      int_val=5;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="number of affective values per obj -- pv0..n-1, nv0..n-1";
      init_from=NULL;
     };
     ProgVar @["closest_obj_scene_idx"] {
      name="closest_obj_scene_idx";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="index in Scene table";
      init_from=NULL;
     };
     ProgVar @["closest_obj_obj_idx"] {
      name="closest_obj_obj_idx";
      var_type=T_Int;
      int_val=6;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="index in ObjectsCur table";
      init_from=NULL;
     };
     ProgVar @["closest_obj_dist"] {
      name="closest_obj_dist";
      var_type=T_Real;
      real_val=0.0547526478767395;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["closest_obj_nm"] {
      name="closest_obj_nm";
      var_type=T_String;
      string_val="mother";
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["foveate_thr_dist"] {
      name="foveate_thr_dist";
      var_type=T_Real;
      real_val=0.12;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="max distance to foveated object";
      init_from=NULL;
     };
     ProgVar @["foveate_obj_scene_idx"] {
      name="foveate_obj_scene_idx";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="index in Scene table";
      init_from=NULL;
     };
     ProgVar @["foveate_obj_obj_idx"] {
      name="foveate_obj_obj_idx";
      var_type=T_Int;
      int_val=6;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="index in ObjectsCur table";
      init_from=NULL;
     };
     ProgVar @["foveate_obj_dist"] {
      name="foveate_obj_dist";
      var_type=T_Real;
      real_val=0.0547526478767395;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["foveate_obj_nm"] {
      name="foveate_obj_nm";
      var_type=T_String;
      string_val="mother";
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @["FoveatedValues"] {
      name="FoveatedValues";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].objs["FoveatedValues"]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @["ComposeScene_RndPos"] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="ComposeScene_RndPos";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @["n_objs"] {
	  name="n_objs";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["i"] {
	  name="i";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["objid"] {
	  name="objid";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_x"] {
	  name="ctr_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["ctr_y"] {
	  name="ctr_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["size"] {
	  name="size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["redo"] {
	  name="redo";
	  var_type=T_Bool;
	  bool_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["j"] {
	  name="j";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["oth_x"] {
	  name="oth_x";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["oth_y"] {
	  name="oth_y";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["oth_sz"] {
	  name="oth_sz";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["dist"] {
	  name="dist";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["nm"] {
	  name="nm";
	  var_type=T_String;
	  string_val=;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["min_dist"] {
	  name="min_dist";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["redos"] {
	  name="redos";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["half_size"] {
	  name="half_size";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	 ProgVar @["rmargin"] {
	  name="rmargin";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
	  reference=0;
	  desc=;
	  init_from=NULL;
	 };
	};
       };
       RandomCall @[1] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="n_objs = Random::IntMinMax()";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["n_objs"]$$;
	object_type=Random;
	method=Random::IntMinMax;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=int;
	  type="int";
	  name="min";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="min_n_objs";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=int;
	  type="int";
	  name="max";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="max_n_objs";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="thr_no";
	  required=0;
	  def_val="0";
	  prev_expr=;
	  expr {
	   expr="0";
	  };
	 };
	};
       };
       AssignExpr @[2] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="min_dist = min_spc * max_size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["min_dist"]$$;
	expr {
	 expr="min_spc * max_size";
	};
       };
       AssignExpr @[3] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="half_size = 0.5 * max_size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["half_size"]$$;
	expr {
	 expr="0.5 * max_size";
	};
       };
       AssignExpr @[4] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="rmargin = 1.0 - half-size";
	result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["rmargin"]$$;
	expr {
	 expr="1.0 - half_size";
	};
       };
       MethodCall @[5] {
	desc=;
	flags=CAN_REVERT_TO_CODE;
	orig_prog_code="Scene.ResetData()";
	result_var=NULL;
	obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].vars["Scene"]$$;
	method=DataTable::ResetData;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void ResetData()";
	meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
       };
       ForLoop @[6] {
	desc=;
	flags=0;
	orig_prog_code="for(i=0;i<n_objs;i++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 RandomCall @[0] {
	  desc="todo: make this frequency-based!";
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="objid = Random::IntZeroN(Objects.rows)";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["objid"]$$;
	  object_type=Random;
	  method=Random::IntZeroN;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="n";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="ObjectsAll.rows";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="nm = Objects[\"name\"][objid]";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["nm"]$$;
	  expr {
	   expr="ObjectsAll[\"name\"][objid]";
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="redo = false";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redo"]$$;
	  expr {
	   expr="false";
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="redo_limit = 100";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redos"]$$;
	  expr {
	   expr="0";
	  };
	 };
	 RandomCall @[4] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="size = Random::UniformMinMax()";
	  result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["size"]$$;
	  object_type=Random;
	  method=Random::UniformMinMax;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=double;
	    type="double";
	    name="min";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="min_size";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=double;
	    type="double";
	    name="max";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="max_size";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=int;
	    type="int";
	    name="thr_no";
	    required=0;
	    def_val="0";
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	  };
	 };
	 DoLoop @[5] {
	  desc=;
	  flags=0;
	  orig_prog_code="do ... while (redo && redos < redo_limit)";
	  loop_code {
	   name="loop_code";
	   el_typ=ProgCode;
	   el_def=0;
	   RandomCall @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ctr_x = Random::Uniform()";
	    result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["ctr_x"]$$;
	    object_type=Random;
	    method=Random::UniformMinMax;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=double;
	      type="double";
	      name="min";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="half_size";
	      };
	     };
	     ProgArg @[1] {
	      arg_type=double;
	      type="double";
	      name="max";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="rmargin";
	      };
	     };
	     ProgArg @[2] {
	      arg_type=int;
	      type="int";
	      name="thr_no";
	      required=0;
	      def_val="0";
	      prev_expr=;
	      expr {
	       expr="0";
	      };
	     };
	    };
	   };
	   RandomCall @[1] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="ctr_x = Random::Uniform()";
	    result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["ctr_y"]$$;
	    object_type=Random;
	    method=Random::UniformMinMax;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=double;
	      type="double";
	      name="min";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="half_size";
	      };
	     };
	     ProgArg @[1] {
	      arg_type=double;
	      type="double";
	      name="max";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="rmargin";
	      };
	     };
	     ProgArg @[2] {
	      arg_type=int;
	      type="int";
	      name="thr_no";
	      required=0;
	      def_val="0";
	      prev_expr=;
	      expr {
	       expr="0";
	      };
	     };
	    };
	   };
	   ForLoop @[2] {
	    desc=;
	    flags=0;
	    orig_prog_code="for(j = 0; j<Scene.rows; j++)";
	    loop_code {
	     name="loop_code";
	     el_typ=ProgCode;
	     el_def=0;
	     AssignExpr @[0] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="oth_x = Scene[\"ctr_x\"][j]";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["oth_x"]$$;
	      expr {
	       expr="Scene[\"ctr_x\"][j]";
	      };
	     };
	     AssignExpr @[1] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="oth_x = Scene[\"ctr_x\"][j]";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["oth_y"]$$;
	      expr {
	       expr="Scene[\"ctr_y\"][j]";
	      };
	     };
	     MathCall @[2] {
	      desc=;
	      flags=CAN_REVERT_TO_CODE;
	      orig_prog_code="dist = taMath_float::euc_dist()";
	      result_var=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["dist"]$$;
	      object_type=taMath_float;
	      method=taMath_float::euc_dist;
	      meth_args {
	       name="meth_args";
	       el_typ=ProgArg;
	       el_def=0;
	       ProgArg @[0] {
		arg_type=float;
		type="float";
		name="x1";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="ctr_x";
		};
	       };
	       ProgArg @[1] {
		arg_type=float;
		type="float";
		name="y1";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="ctr_y";
		};
	       };
	       ProgArg @[2] {
		arg_type=float;
		type="float";
		name="x2";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="oth_x";
		};
	       };
	       ProgArg @[3] {
		arg_type=float;
		type="float";
		name="y2";
		required=1;
		def_val=;
		prev_expr=;
		expr {
		 expr="oth_y";
		};
	       };
	      };
	     };
	     If @[3] {
	      desc=;
	      flags=0;
	      orig_prog_code="if(dist < (.5 + min_spc) * (size + oth_sz))";
	      cond {
	       expr="dist < min_dist";
	      };
	      true_code {
	       name="true_code";
	       el_typ=ProgCode;
	       el_def=0;
	       AssignExpr @[0] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="redo = true";
		result_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redo"]$;
		expr {
		 expr="true";
		};
	       };
	       VarIncr @[1] {
		desc=;
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="redos+= 1";
		var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["redos"]$;
		expr {
		 expr="1";
		};
	       };
	       IfBreak @[2] {
		desc="break out of for";
		flags=CAN_REVERT_TO_CODE;
		orig_prog_code="break";
		cond {
		 expr=;
		};
	       };
	      };
	     };
	    };
	    init {
	     expr="j = 0";
	    };
	    test {
	     expr="j<Scene.rows";
	    };
	    iter {
	     expr="j++";
	    };
	   };
	  };
	  test {
	   expr="redo && redos < redo_limit";
	  };
	 };
	 If @[6] {
	  desc=;
	  flags=0;
	  orig_prog_code="if(redos >= redo_limit)";
	  cond {
	   expr="redos >= redo_limit";
	  };
	  true_code {
	   name="true_code";
	   el_typ=ProgCode;
	   el_def=0;
	   PrintVar @[0] {
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    orig_prog_code="print \"Warning: could not fit with min spacing limits:\", min_dist";
	    message="Warning: could not fit with min spacing limits:";
	    print_var=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].functions["ComposeScene_RndPos"].fun_code[0].local_vars["min_dist"]$;
	    print_var2=NULL;
	    print_var3=NULL;
	    print_var4=NULL;
	    print_var5=NULL;
	    print_var6=NULL;
	    debug=0;
	   };
	  };
	 };
	 MethodCall @[7] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene.AddBlankRow()";
	  result_var=NULL;
	  obj=$.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].vars["Scene"]$;
	  method=DataTable::AddBlankRow;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	  meth_sig="int AddBlankRow()";
	  meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	 };
	 CssExpr @[8] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"name\"] = Objects[\"name\"][objid];";
	  expr {
	   expr="Scene[\"name\"][-1] = nm;";
	  };
	 };
	 CssExpr @[9] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"ctr_x\"][-1] = ctr_x;";
	  };
	 };
	 CssExpr @[10] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"ctr_y\"][-1] = ctr_y;";
	  };
	 };
	 CssExpr @[11] {
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  orig_prog_code="Scene[\"ctr_x\"] = ctr_x;";
	  expr {
	   expr="Scene[\"size\"][-1] = size;";
	  };
	 };
	};
	init {
	 expr="i=0";
	};
	test {
	 expr="i<n_objs";
	};
	iter {
	 expr="i++";
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="FullViewCanvas.SetImageSize()";
      result_var=NULL;
      obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].vars["SceneCanvas"]$$;
      method=taImage::SetImageSize;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="width";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="height";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
      };
      meth_sig="bool SetImageSize(int width, int height)";
      meth_desc=" set size of current image -- if currently same size, then returns false and nothing happens; otherwise, a new image data structure of given size is created, using ARGB32 format";
     };
     MethodCall @[1] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="FullViewCanvas.SetImageSize()";
      result_var=NULL;
      obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].vars["FullViewCanvas"]$$;
      method=taImage::SetImageSize;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="width";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="height";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="full_view_pixels";
	};
       };
      };
      meth_sig="bool SetImageSize(int width, int height)";
      meth_desc=" set size of current image -- if currently same size, then returns false and nothing happens; otherwise, a new image data structure of given size is created, using ARGB32 format";
     };
     MethodCall @[2] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="FullViewCanvas.SetImageSize()";
      result_var=NULL;
      obj=.projects["DebugUpdatePointersBug2398"].programs.gp["Program_Group_30"]["ObjSceneEnv_reduced"].vars["FoveaCanvas"]$$;
      method=taImage::SetImageSize;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="width";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="fovea_pixels";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="height";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="fovea_pixels";
	};
       };
      };
      meth_sig="bool SetImageSize(int width, int height)";
      meth_desc=" set size of current image -- if currently same size, then returns false and nothing happens; otherwise, a new image data structure of given size is created, using ARGB32 format";
     };
     FunctionCall @[3] {
      desc=;
      flags=CAN_REVERT_TO_CODE;
      orig_prog_code="InitGridPos()";
      result_var=NULL;
      fun=NULL;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      desc=;
      flags=0;
      orig_prog_code=;
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
      };
     };
    };
    step_prog=NULL;
    step_n=1;
   };
  };
  Program_Group @.gp["Program_Group_31"] {
   name="Program_Group_31";
   el_typ=Program;
   el_def=0;
   tags=;
   desc=;
   debug_mode=0;
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @["Browser2"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_46";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["view_win_lft"] {
     name="view_win_lft";
     value 8 0=0;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_top"] {
     name="view_win_top";
     value 8 0=0;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_wd"] {
     name="view_win_wd";
     value 8 0=0.9986072;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_ht"] {
     name="view_win_ht";
     value 8 0=0.7993159;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_iconified"] {
     name="view_win_iconified";
     value 1 0=0;
     val_type_fixed=0;
    };
    UserDataItem @["view_splitter_state"] {
     name="view_splitter_state";
     value 9 0="AAAA/wAAAAEAAAADAAABsgAAApQAAAFGAQAAAAcBAAAAAQE=";
     val_type_fixed=0;
    };
   };
   name="Browser2";
   m_data=.projects["DebugUpdatePointersBug2398"]$$;
   visible=1;
   win_name=".projects[\"DebugUpdatePointersBug2398\"] - DebugUpdatePointersBug2398.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @["Application"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_47";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_win_visible"] {
       name="view_win_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Application";
     m_data=NULL;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @["Navigator"] {
     name="Navigator";
     m_data=NULL;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.projects["DebugUpdatePointersBug2398"]$;
    };
    PanelViewer @["Editor"] {
     name="Editor";
     m_data=NULL;
     visible=1;
    };
    T3PanelViewer @["T3Frames"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_48";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_panel_selected"] {
       name="view_panel_selected";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="T3Frames";
     m_data=NULL;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @["Frame1"] {
       name="Frame1";
       m_data=NULL;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       camera_params {
	field_of_view=45;
	near=0.1;
	focal=5;
	far=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0: y=0: z=-0.4765596: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=3.52344;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @["Tools"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_49";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_win_lft"] {
       name="view_win_lft";
       value 8 0=0;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_top"] {
       name="view_win_top";
       value 8 0=0.03306727;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_wd"] {
       name="view_win_wd";
       value 8 0=0.05710306;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_ht"] {
       name="view_win_ht";
       value 8 0=0.6921323;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_iconified"] {
       name="view_win_iconified";
       value 1 0=0;
       val_type_fixed=0;
      };
      UserDataItem @["view_visible"] {
       name="view_visible";
       value 1 0=0;
       val_type_fixed=0;
      };
     };
     name="Tools";
     m_data=NULL;
     visible=0;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc=;
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
 };
};
