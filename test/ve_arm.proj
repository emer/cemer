// ta_Dump File v2.0
taPluginBase_List .plugin_deps { 
  taPluginBase_List @.plugin_deps = [1] {
    taPluginDep @[0] { };
  };
};
taPluginBase_List .plugin_deps {
 name=;
 el_typ=taPluginDep;
 el_def=0;
 taPluginDep @[0] {
  name="VEOdePlugin";
  desc="Virtual Simulated Environment, using ODE physics engine";
  unique_id="virtenvplugin.ccnlab.psych.colorado.edu";
  version="1.0.0.0";
  url=;
 };
};
LeabraProject .projects[0] { 
  Wizard_Group @.wizards = [1] {
    LeabraWizard @[0] { 
      taBase_List @.layer_cfg = [3] {
	LayerWizEl @[0] { };
	LayerWizEl @[1] { };
	LayerWizEl @[2] { };
      };
    };
  };

  SelectEdit_Group @.edits = [1] {
    SelectEdit @[0] { };
  };

  DataTable_Group @.data = [0] {
    DataTable_Group @.gp[0] = [1] { 
      DataTable @[0] { 
	DataTableCols @.data = [5] {
	  String_Data @[0] { };
	  float_Data @[1] { };
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	};
      };
    };
    DataTable_Group @.gp[1] = [2] { 
      DataTable @[0] { 
	DataTableCols @.data = [9] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[2] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  String_Data @[3] { };
	  String_Data @[4] { };
	  int_Data @[5] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	};
      };
      DataTable @[1] { 
	DataTableCols @.data = [8] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	  float_Data @[5] { };
	  float_Data @[6] { };
	  float_Data @[7] { };
	};
      };
    };
    DataTable_Group @.gp[2] { };
  };

  taBase_Group @.data_proc = [4] {
    taDataProc @[0] { };
    taDataAnal @[1] { };
    taDataGen @[2] { };
    taImageProc @[3] { };
  };

  Program_Group @.programs = [0] {
    Program_Group @.gp[0] = [10] { 
      Program @[0] { 
	ProgVar_List @.args = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  NetCounterInit @[0] { };
	  WhileLoop @[1] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	    };
	  };
	};
      };
      Program @[1] { 
	ProgObjList @.objs = [1] {
	  RndSeed @[0] { };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [6] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	};

	ProgEl_List @.init_code = [5] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  AssignExpr @[1] { };
	  NetCounterInit @[2] { };
	  MethodCall @[3] { };
	  MethodCall @[4] { };
	};

	ProgEl_List @.prog_code = [7] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  NetCounterInit @[2] { };
	  UserScript @[3] { };
	  MethodCall @[4] { };
	  WhileLoop @[5] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfBreak @[2] { };
	    };
	  };
	  MethodCall @[6] { };
	};
      };
      Program @[2] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [7] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	};

	ProgEl_List @.init_code = [2] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	};

	ProgEl_List @.prog_code = [12] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[3] { };
	  MethodCall @[4] { };
	  ResetDataRows @[5] { };
	  ResetDataRows @[6] { };
	  ForLoop @[7] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      IfElse @[1] { 
		ProgEl_List @.true_code = [1] {
		  MethodCall @[0] { };
		};
	      };
	    };
	  };
	  IfElse @[8] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  MethodCall @[9] { };
	  MethodCall @[10] { };
	  ProgramCall @[11] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};
      };
      Program @[3] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [6] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  WhileLoop @[2] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      MethodCall @[2] { };
	    };
	  };
	  MethodCall @[3] { };
	  ProgramCall @[4] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  NetUpdateView @[5] { };
	};
      };
      Program @[4] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [11] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  ProgramCall @[2] { 
	    ProgArg_List @.prog_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  ProgramCall @[3] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[4] { };
	  UserScript @[5] { };
	  WhileLoop @[6] { 
	    ProgEl_List @.loop_code = [4] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [1] {
		  ProgArg @[0] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfContinue @[2] { };
	      IfBreak @[3] { };
	    };
	  };
	  MethodCall @[7] { };
	  IfElse @[8] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  IfElse @[9] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  NetUpdateView @[10] { };
	};
      };
      Program @[5] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  NetUpdateView @[1] { };
	};
      };
      Program @[6] { 
	ProgObjList @.objs = [1] {
	  LayerWriter @[0] { 
	    LayerDataEl_List @.layer_data = [5] {
	      LayerWriterEl @[0] { };
	      LayerWriterEl @[1] { };
	      LayerWriterEl @[2] { };
	      LayerWriterEl @[3] { };
	      LayerWriterEl @[4] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [2] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [1] {
	  MethodCall @[0] { };
	};
      };
      Program @[7] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [9] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [3] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [4] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  MethodCall @[2] { };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
      Program @[8] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [8] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [4] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [5] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  AssignExpr @[2] { };
	  UserScript @[3] { };
	  MethodCall @[4] { };
	};
      };
      Program @[9] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [6] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	};

	ProgEl_List @.prog_code = [6] {
	  IfElse @[0] { 
	    ProgEl_List @.true_code = [1] {
	      UserScript @[0] { };
	    };
	  };
	  MiscCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MiscCall @[2] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  AssignExpr @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [4] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
    };
    Program_Group @.gp[1] = [1] { 
      Program @[0] { 
	ProgObjList @.objs = [5] {
	  VEWorld @[0] { 
	    VEObject_Group @.objects = [1] {
	      VEObject @[0] { 
		VEBody_Group @.bodies = [4] {
		  VEBody @[0] { };
		  VEBody @[1] { };
		  VEBody @[2] { };
		  VEBody @[3] { };
		};

		VEJoint_Group @.joints = [3] {
		  VEJoint @[0] { };
		  VEJoint @[1] { };
		  VEJoint @[2] { };
		};
	      };
	    };
	  };
	  NetMonitor @[1] { 
	    NetMonItem_List @.items = [8] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	    };
	  };
	  NetMonitor @[2] { 
	    NetMonItem_List @.items = [4] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	    };
	  };
	  DataTable @[3] { 
	    DataTableCols @.data = [8] {
	      float_Data @[0] { };
	      float_Data @[1] { };
	      float_Data @[2] { };
	      float_Data @[3] { };
	      float_Data @[4] { };
	      float_Data @[5] { };
	      float_Data @[6] { };
	      float_Data @[7] { };
	    };
	  };
	  DataTable @[4] { 
	    DataTableCols @.data = [4] {
	      float_Data @[0] { };
	      float_Data @[1] { };
	      float_Data @[2] { };
	      float_Data @[3] { };
	    };
	  };
	};

	ProgVar_List @.args = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgVar_List @.vars = [34] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	  ProgVar @[7] { };
	  ProgVar @[8] { };
	  ProgVar @[9] { };
	  ProgVar @[10] { };
	  ProgVar @[11] { };
	  ProgVar @[12] { };
	  ProgVar @[13] { };
	  ProgVar @[14] { };
	  ProgVar @[15] { };
	  ProgVar @[16] { };
	  ProgVar @[17] { };
	  ProgVar @[18] { };
	  ProgVar @[19] { };
	  ProgVar @[20] { };
	  ProgVar @[21] { };
	  ProgVar @[22] { };
	  ProgVar @[23] { };
	  ProgVar @[24] { };
	  ProgVar @[25] { };
	  ProgVar @[26] { };
	  ProgVar @[27] { };
	  ProgVar @[28] { };
	  ProgVar @[29] { };
	  ProgVar @[30] { };
	  ProgVar @[31] { };
	  ProgVar @[32] { };
	  ProgVar @[33] { };
	};

	ProgEl_List @.functions = [4] {
	  Function @[0] { 
	    ProgVar_List @.args = [1] {
	      ProgVar @[0] { };
	    };

	    ProgEl_List @.fun_code = [1] {
	      ReturnExpr @[0] { };
	    };
	  };
	  Function @[1] { 
	    ProgVar_List @.args = [1] {
	      ProgVar @[0] { };
	    };

	    ProgEl_List @.fun_code = [1] {
	      ReturnExpr @[0] { };
	    };
	  };
	  Function @[2] { 
	    ProgVar_List @.args = [3] {
	      ProgVar @[0] { };
	      ProgVar @[1] { };
	      ProgVar @[2] { };
	    };

	    ProgEl_List @.fun_code = [5] {
	      ProgVars @[0] { 
		ProgVar_List @.local_vars = [1] {
		  ProgVar @[0] { };
		};
	      };
	      FunctionCall @[1] { 
		ProgArg_List @.fun_args = [1] {
		  ProgArg @[0] { };
		};
	      };
	      MethodCall @[2] { 
		ProgArg_List @.meth_args = [7] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		  ProgArg @[3] { };
		  ProgArg @[4] { };
		  ProgArg @[5] { };
		  ProgArg @[6] { };
		};
	      };
	      FunctionCall @[3] { 
		ProgArg_List @.fun_args = [1] {
		  ProgArg @[0] { };
		};
	      };
	      MethodCall @[4] { 
		ProgArg_List @.meth_args = [7] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		  ProgArg @[3] { };
		  ProgArg @[4] { };
		  ProgArg @[5] { };
		  ProgArg @[6] { };
		};
	      };
	    };
	  };
	  Function @[3] { 
	    ProgVar_List @.args = [3] {
	      ProgVar @[0] { };
	      ProgVar @[1] { };
	      ProgVar @[2] { };
	    };

	    ProgEl_List @.fun_code = [1] {
	      ReturnExpr @[0] { };
	    };
	  };
	};

	ProgEl_List @.init_code = [9] {
	  MethodCall @[0] { };
	  ResetDataRows @[1] { };
	  ResetDataRows @[2] { };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[6] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[7] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[8] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [20] {
	  Comment @[0] { };
	  AddNewDataRow @[1] { };
	  FunctionCall @[2] { 
	    ProgArg_List @.fun_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  CodeBlock @[3] { 
	    ProgEl_List @.prog_code = [3] {
	      AssignExpr @[0] { };
	      AssignExpr @[1] { };
	      FunctionCall @[2] { 
		ProgArg_List @.fun_args = [3] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		};
	      };
	    };
	  };
	  Comment @[4] { };
	  IfElse @[5] { 
	    ProgEl_List @.true_code = [1] {
	      ForLoop @[0] { 
		ProgEl_List @.loop_code = [18] {
		  Comment @[0] { };
		  AssignExpr @[1] { };
		  AssignExpr @[2] { };
		  AssignExpr @[3] { };
		  AssignExpr @[4] { };
		  AssignExpr @[5] { };
		  AssignExpr @[6] { };
		  Comment @[7] { };
		  MethodCall @[8] { 
		    ProgArg_List @.meth_args = [4] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		      ProgArg @[2] { };
		      ProgArg @[3] { };
		    };
		  };
		  MethodCall @[9] { 
		    ProgArg_List @.meth_args = [4] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		      ProgArg @[2] { };
		      ProgArg @[3] { };
		    };
		  };
		  MethodCall @[10] { 
		    ProgArg_List @.meth_args = [2] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		    };
		  };
		  MethodCall @[11] { 
		    ProgArg_List @.meth_args = [2] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		    };
		  };
		  MethodCall @[12] { };
		  AddNewDataRow @[13] { };
		  DataVarProg @[14] { };
		  DataVarProg @[15] { };
		  DataVarProg @[16] { };
		  DoneWritingDataRow @[17] { };
		};
	      };
	    };
	  };
	  Comment @[6] { };
	  CodeBlock @[7] { 
	    ProgEl_List @.prog_code = [6] {
	      AssignExpr @[0] { };
	      AssignExpr @[1] { };
	      FunctionCall @[2] { 
		ProgArg_List @.fun_args = [3] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		};
	      };
	      AssignExpr @[3] { };
	      AssignExpr @[4] { };
	      MethodCall @[5] { 
		ProgArg_List @.meth_args = [7] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		  ProgArg @[3] { };
		  ProgArg @[4] { };
		  ProgArg @[5] { };
		  ProgArg @[6] { };
		};
	      };
	    };
	  };
	  IfElse @[8] { 
	    ProgEl_List @.true_code = [3] {
	      AddNewDataRow @[0] { };
	      DataVarProg @[1] { };
	      DoneWritingDataRow @[2] { };
	    };
	  };
	  Comment @[9] { };
	  AssignExpr @[10] { };
	  AssignExpr @[11] { };
	  AssignExpr @[12] { };
	  AssignExpr @[13] { };
	  AssignExpr @[14] { };
	  AssignExpr @[15] { };
	  Comment @[16] { };
	  MethodCall @[17] { 
	    ProgArg_List @.meth_args = [5] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	      ProgArg @[4] { };
	    };
	  };
	  MethodCall @[18] { 
	    ProgArg_List @.meth_args = [5] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	      ProgArg @[4] { };
	    };
	  };
	  MethodCall @[19] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};
      };
    };
  };

  DataViewer_List @.viewers = [1] {
    MainWindowViewer @[0] { 
      ToolBar_List @.toolbars = [1] {
	ToolBar @[0] { };
      };

      FrameViewer_List @.frames = [3] {
	tabBrowseViewer @[0] { };
	PanelViewer @[1] { };
	T3DataViewer @[2] { 
	  T3DataViewFrame_List @.frames = [3] {
	    T3DataViewFrame @[0] { 
	      T3DataView_List @.children = [2] {
		NetView @[0] { 
		  T3DataView_List @.children = [71] {
		    LayerView @[0] { };
		    LayerView @[1] { };
		    LayerView @[2] { };
		    LayerView @[3] { };
		    LayerView @[4] { };
		    LayerView @[5] { };
		    LayerView @[6] { };
		    LayerView @[7] { };
		    LayerView @[8] { };
		    LayerView @[9] { };
		    LayerView @[10] { };
		    LayerView @[11] { };
		    LayerView @[12] { };
		    LayerView @[13] { };
		    LayerView @[14] { };
		    PrjnView @[15] { };
		    PrjnView @[16] { };
		    PrjnView @[17] { };
		    PrjnView @[18] { };
		    PrjnView @[19] { };
		    PrjnView @[20] { };
		    PrjnView @[21] { };
		    PrjnView @[22] { };
		    PrjnView @[23] { };
		    PrjnView @[24] { };
		    PrjnView @[25] { };
		    PrjnView @[26] { };
		    PrjnView @[27] { };
		    PrjnView @[28] { };
		    PrjnView @[29] { };
		    PrjnView @[30] { };
		    PrjnView @[31] { };
		    PrjnView @[32] { };
		    PrjnView @[33] { };
		    PrjnView @[34] { };
		    PrjnView @[35] { };
		    PrjnView @[36] { };
		    PrjnView @[37] { };
		    PrjnView @[38] { };
		    PrjnView @[39] { };
		    PrjnView @[40] { };
		    PrjnView @[41] { };
		    PrjnView @[42] { };
		    PrjnView @[43] { };
		    PrjnView @[44] { };
		    PrjnView @[45] { };
		    PrjnView @[46] { };
		    PrjnView @[47] { };
		    PrjnView @[48] { };
		    PrjnView @[49] { };
		    PrjnView @[50] { };
		    PrjnView @[51] { };
		    PrjnView @[52] { };
		    PrjnView @[53] { };
		    PrjnView @[54] { };
		    PrjnView @[55] { };
		    PrjnView @[56] { };
		    PrjnView @[57] { };
		    PrjnView @[58] { };
		    PrjnView @[59] { };
		    PrjnView @[60] { };
		    PrjnView @[61] { };
		    PrjnView @[62] { };
		    PrjnView @[63] { };
		    PrjnView @[64] { };
		    PrjnView @[65] { };
		    PrjnView @[66] { };
		    PrjnView @[67] { };
		    PrjnView @[68] { };
		    PrjnView @[69] { };
		    PrjnView @[70] { };
		  };

		  ScaleRange_List @.scale_ranges = [13] {
		    ScaleRange @[0] { };
		    ScaleRange @[1] { };
		    ScaleRange @[2] { };
		    ScaleRange @[3] { };
		    ScaleRange @[4] { };
		    ScaleRange @[5] { };
		    ScaleRange @[6] { };
		    ScaleRange @[7] { };
		    ScaleRange @[8] { };
		    ScaleRange @[9] { };
		    ScaleRange @[10] { };
		    ScaleRange @[11] { };
		    ScaleRange @[12] { };
		  };
		};
		VEWorldView @[1] { 
		  T3DataView_List @.children = [1] {
		    VEObjectView @[0] { 
		      T3DataView_List @.children = [4] {
			VEBodyView @[0] { };
			VEBodyView @[1] { };
			VEBodyView @[2] { };
			VEBodyView @[3] { };
		      };
		    };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[1] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [8] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[2] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [4] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		  };
		};
	      };
	    };
	  };
	};
      };

      DockViewer_List @.docks = [1] {
	ToolBoxDockViewer @[0] { };
      };
    };
  };

  Network_Group @.networks = [1] {
    LeabraNetwork @[0] { 
      BaseSpec_Group @.specs = [6] {
	LeabraLayerSpec @[0] { 
	  BaseSpec_Group @.children = [1] {
	    LeabraLayerSpec @[0] { };
	  };
	};
	FullPrjnSpec @[1] { };
	LeabraConSpec @[2] { 
	  BaseSpec_Group @.children = [3] {
	    LeabraBiasSpec @[0] { };
	    LeabraConSpec @[1] { };
	    LeabraConSpec @[2] { };
	  };
	};
	TwoDValLayerSpec @[3] { };
	MotorForceLayerSpec @[4] { 
	  BaseSpec_Group @.children = [2] {
	    MotorForceLayerSpec @[0] { };
	    MotorForceLayerSpec @[1] { };
	  };
	};
	DaModUnitSpec @[5] { 
	  BaseSpec_Group @.children = [1] {
	    DaModUnitSpec @[0] { };
	  };
	};
	BaseSpec_Group @.gp[0] = [2] { 
	  DaModUnitSpec @[0] { 
	    BaseSpec_Group @.children = [1] {
	      DaModUnitSpec @[0] { };
	    };
	  };
	  DaModUnitSpec @[1] { };
	};
	BaseSpec_Group @.gp[1] = [2] { 
	  LeabraConSpec @[0] { 
	    BaseSpec_Group @.children = [2] {
	      PVConSpec @[0] { 
		BaseSpec_Group @.children = [2] {
		  PVConSpec @[0] { };
		  PVConSpec @[1] { 
		    BaseSpec_Group @.children = [1] {
		      PVConSpec @[0] { };
		    };
		  };
		};
	      };
	      LeabraBiasSpec @[1] { 
		BaseSpec_Group @.children = [1] {
		  LeabraBiasSpec @[0] { };
		};
	      };
	    };
	  };
	  MarkerConSpec @[1] { };
	};
	BaseSpec_Group @.gp[2] = [5] { 
	  ExtRewLayerSpec @[0] { };
	  PVrLayerSpec @[1] { };
	  PViLayerSpec @[2] { };
	  LVeLayerSpec @[3] { 
	    BaseSpec_Group @.children = [1] {
	      LViLayerSpec @[0] { };
	    };
	  };
	  PVLVDaLayerSpec @[4] { };
	};
	BaseSpec_Group @.gp[3] = [2] { 
	  FullPrjnSpec @[0] { };
	  OneToOnePrjnSpec @[1] { };
	};
      };

      Layer_Group @.layers = [15] {
	LeabraLayer @[0] { 
	  Unit_Group @.units = [1] {
	  };
	};
	LeabraLayer @[1] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[2] { 
	  Projection_Group @.projections = [7] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	    LeabraPrjn @[4] { };
	    LeabraPrjn @[5] { };
	    LeabraPrjn @[6] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[3] { 
	  Projection_Group @.projections = [7] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	    LeabraPrjn @[4] { };
	    LeabraPrjn @[5] { };
	    LeabraPrjn @[6] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[4] { 
	  Projection_Group @.projections = [8] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	    LeabraPrjn @[4] { };
	    LeabraPrjn @[5] { };
	    LeabraPrjn @[6] { };
	    LeabraPrjn @[7] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[5] { 
	  Projection_Group @.projections = [8] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	    LeabraPrjn @[4] { };
	    LeabraPrjn @[5] { };
	    LeabraPrjn @[6] { };
	    LeabraPrjn @[7] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[6] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [1] {
	  };
	};
	LeabraLayer @[7] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [4] { 
	    };
	    LeabraUnit_Group @.gp[1] = [4] { 
	    };
	    LeabraUnit_Group @.gp[2] = [4] { 
	    };
	    LeabraUnit_Group @.gp[3] = [4] { 
	    };
	    LeabraUnit_Group @.gp[4] = [4] { 
	    };
	    LeabraUnit_Group @.gp[5] = [4] { 
	    };
	    LeabraUnit_Group @.gp[6] = [4] { 
	    };
	    LeabraUnit_Group @.gp[7] = [4] { 
	    };
	    LeabraUnit_Group @.gp[8] = [4] { 
	    };
	    LeabraUnit_Group @.gp[9] = [4] { 
	    };
	    LeabraUnit_Group @.gp[10] = [4] { 
	    };
	    LeabraUnit_Group @.gp[11] = [4] { 
	    };
	    LeabraUnit_Group @.gp[12] = [4] { 
	    };
	    LeabraUnit_Group @.gp[13] = [4] { 
	    };
	    LeabraUnit_Group @.gp[14] = [4] { 
	    };
	    LeabraUnit_Group @.gp[15] = [4] { 
	    };
	    LeabraUnit_Group @.gp[16] = [4] { 
	    };
	    LeabraUnit_Group @.gp[17] = [4] { 
	    };
	    LeabraUnit_Group @.gp[18] = [4] { 
	    };
	    LeabraUnit_Group @.gp[19] = [4] { 
	    };
	    LeabraUnit_Group @.gp[20] = [4] { 
	    };
	    LeabraUnit_Group @.gp[21] = [4] { 
	    };
	    LeabraUnit_Group @.gp[22] = [4] { 
	    };
	    LeabraUnit_Group @.gp[23] = [4] { 
	    };
	    LeabraUnit_Group @.gp[24] = [4] { 
	    };
	  };
	};
	LeabraLayer @[8] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [4] { 
	    };
	    LeabraUnit_Group @.gp[1] = [4] { 
	    };
	    LeabraUnit_Group @.gp[2] = [4] { 
	    };
	    LeabraUnit_Group @.gp[3] = [4] { 
	    };
	    LeabraUnit_Group @.gp[4] = [4] { 
	    };
	    LeabraUnit_Group @.gp[5] = [4] { 
	    };
	    LeabraUnit_Group @.gp[6] = [4] { 
	    };
	    LeabraUnit_Group @.gp[7] = [4] { 
	    };
	    LeabraUnit_Group @.gp[8] = [4] { 
	    };
	    LeabraUnit_Group @.gp[9] = [4] { 
	    };
	    LeabraUnit_Group @.gp[10] = [4] { 
	    };
	    LeabraUnit_Group @.gp[11] = [4] { 
	    };
	    LeabraUnit_Group @.gp[12] = [4] { 
	    };
	    LeabraUnit_Group @.gp[13] = [4] { 
	    };
	    LeabraUnit_Group @.gp[14] = [4] { 
	    };
	    LeabraUnit_Group @.gp[15] = [4] { 
	    };
	    LeabraUnit_Group @.gp[16] = [4] { 
	    };
	    LeabraUnit_Group @.gp[17] = [4] { 
	    };
	    LeabraUnit_Group @.gp[18] = [4] { 
	    };
	    LeabraUnit_Group @.gp[19] = [4] { 
	    };
	    LeabraUnit_Group @.gp[20] = [4] { 
	    };
	    LeabraUnit_Group @.gp[21] = [4] { 
	    };
	    LeabraUnit_Group @.gp[22] = [4] { 
	    };
	    LeabraUnit_Group @.gp[23] = [4] { 
	    };
	    LeabraUnit_Group @.gp[24] = [4] { 
	    };
	  };
	};
	LeabraLayer @[9] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [110] {
	  };
	};
	LeabraLayer @[10] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [110] {
	  };
	};
	LeabraLayer @[11] { 
	  Projection_Group @.projections = [8] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	    LeabraPrjn @[4] { };
	    LeabraPrjn @[5] { };
	    LeabraPrjn @[6] { };
	    LeabraPrjn @[7] { };
	  };

	  Unit_Group @.units = [100] {
	  };
	};
	LeabraLayer @[12] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [4] { 
	    };
	    LeabraUnit_Group @.gp[1] = [4] { 
	    };
	    LeabraUnit_Group @.gp[2] = [4] { 
	    };
	    LeabraUnit_Group @.gp[3] = [4] { 
	    };
	    LeabraUnit_Group @.gp[4] = [4] { 
	    };
	    LeabraUnit_Group @.gp[5] = [4] { 
	    };
	    LeabraUnit_Group @.gp[6] = [4] { 
	    };
	    LeabraUnit_Group @.gp[7] = [4] { 
	    };
	    LeabraUnit_Group @.gp[8] = [4] { 
	    };
	    LeabraUnit_Group @.gp[9] = [4] { 
	    };
	    LeabraUnit_Group @.gp[10] = [4] { 
	    };
	    LeabraUnit_Group @.gp[11] = [4] { 
	    };
	    LeabraUnit_Group @.gp[12] = [4] { 
	    };
	    LeabraUnit_Group @.gp[13] = [4] { 
	    };
	    LeabraUnit_Group @.gp[14] = [4] { 
	    };
	    LeabraUnit_Group @.gp[15] = [4] { 
	    };
	    LeabraUnit_Group @.gp[16] = [4] { 
	    };
	    LeabraUnit_Group @.gp[17] = [4] { 
	    };
	    LeabraUnit_Group @.gp[18] = [4] { 
	    };
	    LeabraUnit_Group @.gp[19] = [4] { 
	    };
	    LeabraUnit_Group @.gp[20] = [4] { 
	    };
	    LeabraUnit_Group @.gp[21] = [4] { 
	    };
	    LeabraUnit_Group @.gp[22] = [4] { 
	    };
	    LeabraUnit_Group @.gp[23] = [4] { 
	    };
	    LeabraUnit_Group @.gp[24] = [4] { 
	    };
	  };
	};
	LeabraLayer @[13] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [4] { 
	    };
	    LeabraUnit_Group @.gp[1] = [4] { 
	    };
	    LeabraUnit_Group @.gp[2] = [4] { 
	    };
	    LeabraUnit_Group @.gp[3] = [4] { 
	    };
	    LeabraUnit_Group @.gp[4] = [4] { 
	    };
	    LeabraUnit_Group @.gp[5] = [4] { 
	    };
	    LeabraUnit_Group @.gp[6] = [4] { 
	    };
	    LeabraUnit_Group @.gp[7] = [4] { 
	    };
	    LeabraUnit_Group @.gp[8] = [4] { 
	    };
	    LeabraUnit_Group @.gp[9] = [4] { 
	    };
	    LeabraUnit_Group @.gp[10] = [4] { 
	    };
	    LeabraUnit_Group @.gp[11] = [4] { 
	    };
	    LeabraUnit_Group @.gp[12] = [4] { 
	    };
	    LeabraUnit_Group @.gp[13] = [4] { 
	    };
	    LeabraUnit_Group @.gp[14] = [4] { 
	    };
	    LeabraUnit_Group @.gp[15] = [4] { 
	    };
	    LeabraUnit_Group @.gp[16] = [4] { 
	    };
	    LeabraUnit_Group @.gp[17] = [4] { 
	    };
	    LeabraUnit_Group @.gp[18] = [4] { 
	    };
	    LeabraUnit_Group @.gp[19] = [4] { 
	    };
	    LeabraUnit_Group @.gp[20] = [4] { 
	    };
	    LeabraUnit_Group @.gp[21] = [4] { 
	    };
	    LeabraUnit_Group @.gp[22] = [4] { 
	    };
	    LeabraUnit_Group @.gp[23] = [4] { 
	    };
	    LeabraUnit_Group @.gp[24] = [4] { 
	    };
	  };
	};
	LeabraLayer @[14] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [110] {
	  };
	};
      };
    };
  };
};
LeabraProject .projects[0] {
 name="Project_0";
 desc=;
 templates {
  name=;
  el_typ=taBase;
  el_def=0;
 };
 wizards {
  name=;
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   name="LeabraWizard_0";
   auto_open=0;
   n_layers=3;
   layer_cfg {
    name=;
    el_typ=LayerWizEl;
    el_def=0;
    LayerWizEl @[0] {
     name="Input";
     n_units=25;
     io_type=INPUT;
    };
    LayerWizEl @[1] {
     name="Hidden";
     n_units=25;
     io_type=HIDDEN;
    };
    LayerWizEl @[2] {
     name="Output";
     n_units=25;
     io_type=OUTPUT;
    };
   };
   connectivity=BIDIRECTIONAL;
  };
 };
 edits {
  name=;
  el_typ=SelectEdit;
  el_def=0;
  SelectEdit @[0] {
   name="SelectEdit_0";
   desc=;
   config {
    auto_edit=0;
    mbr_labels{ Shoulder ~ ceLayer;Shoulder ~ ceLayer;ForceUnits;ForceUnits;pvr;pvi;lve;lvi;pve;pvr;vta;Shoulder ~ ceLayer;Shoulder ~ ceLayer;DaModUnitSpec_0;    };
    meth_labels{     };
   };
   mbr_bases {
    name=;
    el_typ=taBase;
    el_def=0;
	taBase_List @. = [0] = MotorForceLayerSpec .projects[0].networks[0].specs[4];
	taBase_List @. = [1] = MotorForceLayerSpec .projects[0].networks[0].specs[4];
	taBase_List @. = [2] = DaModUnitSpec .projects[0].networks[0].specs[5].children[0];
	taBase_List @. = [3] = DaModUnitSpec .projects[0].networks[0].specs[5].children[0];
	taBase_List @. = [4] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0].children[0];
	taBase_List @. = [5] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0];
	taBase_List @. = [6] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0].children[1];
	taBase_List @. = [7] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0].children[1].children[0];
	taBase_List @. = [8] = ExtRewLayerSpec .projects[0].networks[0].specs.gp[2][0];
	taBase_List @. = [9] = PVrLayerSpec .projects[0].networks[0].specs.gp[2][1];
	taBase_List @. = [10] = PVLVDaLayerSpec .projects[0].networks[0].specs.gp[2][4];
	taBase_List @. = [11] = MotorForceLayerSpec .projects[0].networks[0].specs[4];
	taBase_List @. = [12] = MotorForceLayerSpec .projects[0].networks[0].specs[4];
	taBase_List @. = [13] = DaModUnitSpec .projects[0].networks[0].specs[5];
   };
   mbr_strs{ force_noise;add_noise;noise_type;noise;lrate;lrate;lrate;lrate;rew;pv_detect;da;vel_range;bias_val;da_mod;   };
   meth_bases {
    name=;
    el_typ=taBase;
    el_def=0;
   };
   meth_strs{    };
  };
 };
 data {
  name=;
  el_typ=DataTable;
  el_def=0;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="ArmInputData";
    desc=;
    data {
     name="data";
     el_typ=float_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [3] ;;;      };
     };
     float_Data @[1] {
      name="HandPos_In";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [2 1 3] 0.48869643;0.45007104;0.48869643;0.45007104;0.52808243;0.4730832;      };
     };
     float_Data @[2] {
      name="HandGoal_In";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [2 1 3] 0.8125;0.33333334;0.8125;0.33333334;0.8125;0.33333334;      };
     };
     float_Data @[3] {
      name="HandPos_Out";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [2 1 3] 0.48869643;0.45007104;0.52808243;0.4730832;0.52808243;0.4730832;      };
     };
     float_Data @[4] {
      name="PVe";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [1 1 3] 0.092262745;0.1517044;0.1517044;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="trial";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     String_Data @[3] {
      name="trial_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     String_Data @[4] {
      name="group_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     int_Data @[5] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="phase_no";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[6] {
      name="minus_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[7] {
      name="sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[8] {
      name="ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[2] {
      name="avg_sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[3] {
      name="cnt_err";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[4] {
      name="avg_ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[5] {
      name="avg_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[6] {
      name="epoch_time_tot";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
     float_Data @[7] {
      name="epoch_time_usr";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name="taNBase";
	    [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
  };
 };
 data_proc {
  name=;
  el_typ=taDataProc;
  el_def=0;
  taDataProc @[0] {
   name="data_base";
  };
  taDataAnal @[1] {
   name="data_anal";
  };
  taDataGen @[2] {
   name="data_gen";
  };
  taImageProc @[3] {
   name="image_proc";
  };
 };
 programs {
  name=;
  el_typ=Program;
  el_def=0;
  step_prog=NULL;
  desc=;
  Program_Group @.gp[0] {
   name="LeabraAll_Std";
   el_typ=Program;
   el_def=0;
   step_prog=.projects[0].programs.gp[0][4]$0$;
   desc="The full set of programs for training a standard Leabra network";
   Program @[0] {
    name="LeabraBatch";
    desc="Iterate over training runs";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=.projects[0].networks[0]$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[0][0]$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="max_batch";
      var_type=T_Int;
      int_val=10;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="batch counter";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=.projects[0].programs.gp[0][0].args[0]$3$;
      local_ctr_var=.projects[0].programs.gp[0][0].vars[0]$4$;
      counter=Network::batch;
     };
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=$3$;
      local_ctr_var=$4$;
      counter=Network::batch;
     };
     WhileLoop @[1] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][1]$5$;
	targ_ld_init="*LeabraTrain*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=;
	network_var=$3$;
	local_ctr_var=$4$;
	counter=Network::batch;
       };
      };
      test {
       expr="batch < max_batch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ batch;max_batch;       };
       bad_vars{        };
      };
     };
    };
   };
   Program @[1] {
    name="LeabraTrain";
    desc="A complete training run of a Leabra network: iterating over epochs until the network has learned the task";
    flags=;
    objs {
     name=;
     el_typ=RndSeed;
     el_def=0;
     RndSeed @[0] {
      name="rnd_seed";
      seed{ 897248114;-1259630319;-1954705695;-2086433643;-1705562578;-246166775;142172280;-1066196830;649876912;-363601797;-1551220787;-201998924;984813377;-1929982005;1866720504;1737535582;-2064818913;-596409631;-537210356;-394821123;-1176302275;-1088439095;390472553;1002483428;-644065336;-93234492;-249392311;1955837623;486322880;268723693;-1316990013;-1148081097;1053267338;-194887551;722894185;-1796145741;-419870710;-744395548;-2126350183;-1623934615;-1975558537;-1109580724;1457379925;952758326;-932820647;-793678521;622734178;-1116891631;992844023;348717466;1162608598;-2078137647;-402129645;-523610230;-892508948;-545793120;1897913877;280270467;-1694155315;294983543;-1251003482;-1650029695;-1335161250;-843867016;1576969605;-260969840;-224140684;1265137246;954732510;2064975050;-1145863940;-1435022393;-1859029257;1513712809;985631399;417291160;-2038587757;-1933156114;888379733;1446724555;-464909414;-1706911051;-1159096460;-1791674743;-147343083;960690226;682596297;1099430942;359127508;311504974;93962501;-1671326033;632618192;-885562045;1179982281;-1505675969;1344906533;-1418551925;1622092278;1701084792;242471559;-1984251903;-1568971862;-1063520265;1591722069;-1959097976;-1601150455;-874166212;-889564662;717605003;-1582378599;-1301052667;1211123575;485189748;-182999148;374766658;1150697026;-738165078;-390496439;960351772;-332421139;71115877;-1747551486;-288197538;2067393244;-402841323;168191432;698976579;-691346957;454158309;419567441;-1655444926;1843518827;-1387150657;-1775972895;1209349907;1737084105;-273997764;2063222132;-629133755;1321145195;-340980602;-64855207;836106865;-384606302;857100345;-616134379;-1192753754;-1534913223;1646103447;-337508797;-104008340;1371554336;1910014402;1731164243;157488784;-1230766726;1651230814;-1801393009;1853249886;-1909629469;-2064890998;-586605120;1029458265;-1567764431;-569878997;-1071722633;1842759325;1870815306;1275367738;-2047480342;699437794;-2078020834;2120915280;1609487567;715455530;-1961002406;-1366381474;1214551640;1682680277;1866914062;-1438763676;1522254727;410589237;1882867230;-2066414372;335577213;-1969515802;-2079897542;1101145964;-914546306;-578950040;-399253994;-1096753521;-660660212;-1198578643;1339175923;-781551297;-1839371394;1105332893;-1928816742;-400816250;1655921312;-452260989;2002840327;447789431;319958765;-658015714;-2019202134;-1586612048;-137582258;706769011;1101838665;827045450;599553857;-2145445088;244597783;1487421271;1630555190;-344172316;-1830139429;-1553867370;-156727033;-755056810;-2131860048;-494346652;1852068823;91308896;725609566;-1111505690;-982815291;1292267944;1836226774;-810066908;-496780978;202956912;603675823;637918661;-10943404;552199869;1297990249;-1519144401;-1727998742;1493519921;-1227758025;-860568373;2118867559;1126222143;-1549971275;-1469719981;-370967157;-1094842937;2081077388;-1045858167;-179155018;-384518151;905350287;-1851803717;571620219;760498291;-480881197;-973785647;838212682;340510526;510321855;-801267485;-852016520;1774211485;39420368;537777206;2107097314;1618664461;210916571;-423959548;631482818;-1040919263;-279241335;-892903760;497369428;1334556795;-290177741;-620998078;1723791759;253979182;2098469877;2033083432;2025527244;-556275368;-1153759308;1554310973;-2109179006;1594713042;-1652347925;-1896234258;1399293819;-1212915145;264979477;2035769098;-26264659;816116738;-1472777223;-1886895409;579752040;1987550252;850378084;-592526232;228677599;-1282752773;-3264037;1636907752;554996081;10747923;1856021975;150743074;1441285143;-284865308;64061770;547700487;2007963302;-518601320;717968026;-1887063740;-1161755710;654757340;624448862;1095845326;1219653475;1112960789;540367258;1430941426;-1573264900;842324047;-1866598839;672477326;-834606497;456739053;2014938441;1820294365;-1127769538;237909957;778195458;-320898672;-493131725;374332760;1492882317;244532839;1469335464;813662131;1904048850;1828753335;1969748325;1462812563;773013089;1263710334;6222118;1806899780;-1306665146;695150693;1034369820;-410885147;-2065109159;-21981403;1688153775;-1834763828;-2034905187;-868895926;-2040902706;760295113;705437415;-801989522;-327259983;340256932;1639347777;676478214;-868392127;-2126595595;1085040460;-101711712;1181203896;-1177629723;1052562025;-385800214;-2127578499;-247860261;-210619237;-1285411717;-1501642238;-1370695642;-901640534;-1139102088;-1435816006;2062624444;733280257;-325264040;815916517;1806401640;106587238;222094010;-1348528385;297616670;-861761020;117428779;2046490308;1520601476;1774880419;2117307057;709856479;658783300;-1019651996;1857641166;-1623434894;-1466106812;1764750271;337867896;1769011978;1878580541;-337505063;55931846;657238908;1968152816;-169076117;-975001150;-619957198;463669432;-1908341507;-643594058;-2026430605;1348524010;-730896925;454931916;416148985;-1578791134;-739712940;-1725329931;204101311;-1062609662;-1691773722;860783264;946450304;1161241387;207536058;3478215;923381087;-305329130;-1353819564;48467194;-497866365;-1191262819;1442954968;-408984143;934531440;1843513070;-1086308879;585900848;-1977125474;-643228730;1005419111;430194483;1169789286;892875109;-1732318651;-897476207;416658129;2090816327;-186559977;-187909452;1699611428;132945605;1386154990;-1021089733;1553010825;1685237703;1771892687;-1665309430;-1471203233;408978895;-1985168698;-1461014828;-475885929;-149644797;184461852;-1631733780;-113049057;1929365839;-1841043271;755994780;1384891379;-572376242;-1822728640;527993133;536302677;-728200547;-1916517795;401821920;777687226;634513383;938837982;-1741204308;-712292839;-888158003;-989731250;1070351745;-997999887;-1220926516;-477621207;-668502217;432615022;341097247;-1817216444;-1580909839;1073812924;-1037427637;-421491456;-2071807233;419582815;835099779;-300811050;1008848942;-622226245;1119083448;2015783992;374250496;417956216;70961961;-1285132279;1021911943;1585993281;1118486430;-946608452;-1704284523;1344252873;908115709;2135579935;636192621;-776174384;533471998;586778067;-154978136;1359740759;1629951629;-1733015859;2121954041;2104107711;-295897115;1345244080;-1738577645;-559564224;1033955967;-1763695458;250221436;-693902564;1091788545;927707887;-712040796;1439001997;1595609215;1364606826;661845780;-755815374;-2034931863;1346096804;-2074100882;-1065691144;654888208;1007146357;778226326;1410374083;1808044267;239070962;-300943249;1387420801;914251343;580430497;1404608152;117575915;1513662704;256310634;-569005681;-1678005121;-1445134348;2053633677;2025466731;-1577911340;-1278866808;-623511374;-1672074119;45321757;1247003680;1061170196;1198754894;-104913407;2054118989;-1781862918;1530368638;-226966082;-707276305;1591871350;331461390;608113940;235882513;-2046843672;-1075932011;-1894925926;1648301914;1170547429;1665497643;-1251944432;-1796010764;-73953480;788544378;1090859788;-1128050928;-145143834;594707390;-728801566;-252193318;1890915838;-834826210;602694736;1275821290;-2078563303;-1397408457;-343458496;1558647263;      };
      mti=156;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=500;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=Network::TrainMode;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="epoch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[4] {
      name="rnd_seed";
      var_type=T_Object;
      object_type=RndSeed;
      object_val=.projects[0].programs.gp[0][1].objs[0]$6$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[5] {
      name="train_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].train_time$7$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].args[0]$8$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[5]$9$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     NetCounterInit @[2] {
      desc="initialize epoch counter ";
      flags=;
      network_var=$8$;
      local_ctr_var=.projects[0].programs.gp[0][1].vars[2]$10$;
      counter=Network::epoch;
     };
     MethodCall @[3] {
      desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].vars[4]$11$;
      method=RndSeed::OldSeed;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[4] {
      desc="this initializes the weights every time user presses Init -- could turn this off for large nets (init is also in prog_code)";
      flags=;
      result_var=NULL;
      obj=$8$;
      method=Network::Init_Weights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=$9$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc="keeps track of how long it takes to run entire training run";
      flags=;
      result_var=NULL;
      obj=$9$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     NetCounterInit @[2] {
      desc="initialize epoch counter ";
      flags=;
      network_var=$8$;
      local_ctr_var=$10$;
      counter=Network::epoch;
     };
     UserScript @[3] {
      desc="update network's train mode to be same as ours";
      flags=;
      script {
       expr="network.train_mode = train_mode;";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$.train_mode = $#1#$;";
       vars {
       };
       var_names{ network;train_mode;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc="initialize network weights: could also load pre-set weights or something else here";
      flags=;
      result_var=NULL;
      obj=$8$;
      method=Network::Init_Weights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WhileLoop @[5] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][2]$12$;
	targ_ld_init="*LeabraEpoch*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the epoch counter";
	flags=;
	network_var=$8$;
	local_ctr_var=$10$;
	counter=Network::epoch;
       };
       IfBreak @[2] {
	desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here too)";
	flags=OFF;
	cond {
	 expr="network.cnt_err <= err_stopcrit";
	 flags=;
	 var_expr="$#0#$.cnt_err <= $#1#$";
	 vars {
	 };
	 var_names{ network;err_stopcrit;	 };
	 bad_vars{ 	 };
	};
       };
      };
      test {
       expr="epoch < max_epoch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ epoch;max_epoch;       };
       bad_vars{        };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$9$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[2] {
    name="LeabraEpoch";
    desc="iterates over all of the items in a data table and calls LeabraTrial process on them";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="table of patterns to present to the network, one row at a time";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="data_loop_order";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=DataLoop::Order;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="controls the order in which events (rows of the input data datatable) are presented to the network";
     };
     ProgVar @[1] {
      name="trial";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="current trial (event) within the epoch -- increments automatically";
     };
     ProgVar @[2] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[1][0]$13$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data";
     };
     ProgVar @[3] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].epoch_time$14$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[4] {
      name="data_loop_index";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[5] {
      name="ForceData";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].programs.gp[1][0].objs[3]$15$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[6] {
      name="PosData";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].programs.gp[1][0].objs[4]$16$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter: note also needs to do this in regular running program";
      flags=;
      network_var=.projects[0].programs.gp[0][2].args[0]$17$;
      local_ctr_var=.projects[0].programs.gp[0][2].vars[1]$18$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][2].vars[3]$19$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter";
      flags=;
      network_var=$17$;
      local_ctr_var=$18$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=$19$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[2] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$19$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn OFF if not wanted)";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][2].vars[2]$20$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[4] {
      desc="reset input data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][2].args[1]$21$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ResetDataRows @[5] {
      desc=;
      flags=;
      data_var=.projects[0].programs.gp[0][2].vars[5]$22$;
     };
     ResetDataRows @[6] {
      desc=;
      flags=;
      data_var=.projects[0].programs.gp[0][2].vars[6]$23$;
     };
     ForLoop @[7] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][3]$24$;
	targ_ld_init="*LeabraTrial*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       IfElse @[1] {
	desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
	flags=;
	cond {
	 expr="network.Compute_Weights_Test(trial+1)";
	 flags=;
	 var_expr="$#0#$.Compute_Weights_Test($#1#$+1)";
	 vars {
	 };
	 var_names{ network;trial;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=MethodCall;
	 el_def=0;
	 MethodCall @[0] {
	  desc=;
	  flags=;
	  result_var=NULL;
	  obj=$17$;
	  method=Network::Compute_Weights;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	};
       };
      };
      init {
       expr="trial = 0";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$ = 0";
       vars {
       };
       var_names{ trial;       };
       bad_vars{        };
      };
      test {
       expr="trial < 100";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$ < 100";
       vars {
       };
       var_names{ trial;       };
       bad_vars{        };
      };
      iter {
       expr="trial++";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$++";
       vars {
       };
       var_names{ trial;       };
       bad_vars{        };
      };
     };
     IfElse @[8] {
      desc="if full batch mode, update only at end of epoch";
      flags=;
      cond {
       expr="network.wt_update == Network::BATCH";
       flags=;
       var_expr="$#0#$.wt_update == Network::BATCH";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$17$;
	method=Network::Compute_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MethodCall @[9] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$17$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[10] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$19$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[11] {
      desc=;
      flags=;
      target=.projects[0].programs.gp[0][8]$25$;
      targ_ld_init="*LeabraEpochMonitor*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[3] {
    name="LeabraTrial";
    desc="Leabra processing of a single input/toutput event or external information: typically runs a minus and a plus phase, then learns (unless testing)";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="phase_no";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=.projects[0].programs.gp[0][3].args[0]$26$;
      local_ctr_var=.projects[0].programs.gp[0][3].vars[0]$27$;
      counter=LeabraNetwork::phase_no;
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=$26$;
      local_ctr_var=$27$;
      counter=LeabraNetwork::phase_no;
     };
     MethodCall @[1] {
      desc="initializes various counters at start of trial";
      flags=;
      result_var=NULL;
      obj=$26$;
      method=LeabraNetwork::Trial_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WhileLoop @[2] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=$0$;
	targ_ld_init="*LeabraSettle*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=;
	network_var=$26$;
	local_ctr_var=$27$;
	counter=LeabraNetwork::phase_no;
       };
       MethodCall @[2] {
	desc="increments phase_no and other phase state";
	flags=;
	result_var=NULL;
	obj=$26$;
	method=LeabraNetwork::Trial_UpdatePhase;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      test {
       expr="phase_no < network.phase_max";
       flags=;
       var_expr="$#0#$ < $#1#$.phase_max";
       vars {
       };
       var_names{ phase_no;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[3] {
      desc="does Compute_dWt etc";
      flags=;
      result_var=NULL;
      obj=$26$;
      method=LeabraNetwork::Trial_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[4] {
      desc="monitor data on a trial level";
      flags=;
      target=.projects[0].programs.gp[0][7]$28$;
      targ_ld_init="*LeabraTrialMonitor*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     NetUpdateView @[5] {
      desc=;
      flags=;
      network_var=$26$;
      update_var=.projects[0].programs.gp[0][3].vars[1]$29$;
     };
    };
   };
   Program @[4] {
    name="LeabraSettle";
    desc="iterates over cycles of updating until network has settled into a stable state, or output activations have exceeded a threshold";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="min_cycles";
      var_type=T_Int;
      int_val=15;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=.projects[0].programs.gp[0][4].args[0]$30$;
      local_ctr_var=.projects[0].programs.gp[0][4].vars[0]$31$;
      counter=Network::cycle;
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=$30$;
      local_ctr_var=$31$;
      counter=Network::cycle;
     };
     MethodCall @[1] {
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=;
      result_var=NULL;
      obj=$30$;
      method=Network::Init_InputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[2] {
      desc="this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=;
      target=.projects[0].programs.gp[1][0]$32$;
      targ_ld_init="*ApplyInputs*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="phase";
	required=1;
	def_val=;
	expr {
	 expr="network.phase_no";
	 flags=;
	 var_expr="$#0#$.phase_no";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     ProgramCall @[3] {
      desc="this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=;
      target=.projects[0].programs.gp[0][6]$33$;
      targ_ld_init="*ApplyInputs*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[4] {
      desc="initializes various counters at start of settling";
      flags=;
      result_var=NULL;
      obj=$30$;
      method=LeabraNetwork::Settle_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     UserScript @[5] {
      desc="get min cycles";
      flags=;
      script {
       expr="if(network.phase_no <= 1) min_cycles = network.min_cycles;
else min_cycles = network.min_cycles_phase2;

";
       flags=NO_VAR_ERRS;
       var_expr="if($#0#$.phase_no <= 1) $#1#$ = $#0#$.min_cycles;
else $#1#$ = $#0#$.min_cycles_phase2;


";
       vars {
       };
       var_names{ network;min_cycles;       };
       bad_vars{ if;else;       };
      };
     };
     WhileLoop @[6] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][5]$34$;
	targ_ld_init="*LeabraCycle*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=;
	network_var=$30$;
	local_ctr_var=$31$;
	counter=Network::cycle;
       };
       IfContinue @[2] {
	desc="avoid subsequent stopping criteria";
	flags=;
	cond {
	 expr="cycle < min_cycles";
	 flags=;
	 var_expr="$#0#$ < $#1#$";
	 vars {
	 };
	 var_names{ cycle;min_cycles;	 };
	 bad_vars{ 	 };
	};
       };
       IfBreak @[3] {
	desc="stopping criterion for settling";
	flags=;
	cond {
	 expr="(network.maxda < network.maxda_stopcrit) ||
 (network.trg_max_act > network.trg_max_act_stopcrit)";
	 flags=;
	 var_expr="($#0#$.maxda < $#0#$.maxda_stopcrit) ||
 ($#0#$.trg_max_act > $#0#$.trg_max_act_stopcrit)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      test {
       expr="cycle < network.cycle_max";
       flags=;
       var_expr="$#0#$ < $#1#$.cycle_max";
       vars {
       };
       var_names{ cycle;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[7] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$30$;
      method=LeabraNetwork::Settle_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     IfElse @[8] {
      desc="only run sse in minus phase";
      flags=;
      cond {
       expr="network.phase == LeabraNetwork::MINUS_PHASE";
       flags=;
       var_expr="$#0#$.phase == LeabraNetwork::MINUS_PHASE";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=MethodCall;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$30$;
	method=LeabraNetwork::Compute_TrialStats;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     IfElse @[9] {
      desc="this stat must be called in plus phase when reward information is avail";
      flags=;
      cond {
       expr="network.phase_no == 1";
       flags=;
       var_expr="$#0#$.phase_no == 1";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$30$;
	method=LeabraNetwork::Compute_ExtRew;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     NetUpdateView @[10] {
      desc=;
      flags=;
      network_var=$30$;
      update_var=.projects[0].programs.gp[0][4].vars[2]$35$;
     };
    };
   };
   Program @[5] {
    name="LeabraCycle";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="this does all the standard leabra processing for one cycle of activation updating";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][5].args[0]$36$;
      method=LeabraNetwork::Cycle_Run;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetUpdateView @[1] {
      desc=;
      flags=;
      network_var=$36$;
      update_var=.projects[0].programs.gp[0][5].vars[0]$37$;
     };
    };
   };
   Program @[6] {
    name="ApplyInputs";
    desc="apply the current input data to the network as external input and target values";
    flags=NO_USER_RUN;
    objs {
     name=;
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$2$;
      network=$1$;
      layer_data {
       name=;
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	chan_name="PVe";
	net_target=LAYER;
	layer_name="PVe";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=TARG;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[1] {
	chan_name="HandGoal_In";
	net_target=LAYER;
	layer_name="HandGoal_In";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[2] {
	chan_name="HandPos_In";
	net_target=LAYER;
	layer_name="HandPos_In";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[3] {
	chan_name="HandPos_Out";
	net_target=LAYER;
	layer_name="HandPos_Out";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=TARG;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[4] {
	chan_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
      };
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="LayerWriter_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.projects[0].programs.gp[0][6].objs[0]$38$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][6].vars[0]$39$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataBlock_ptr;
	type="DataBlock*";
	name="db";
	required=0;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$39$;
      method=taList_impl::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=;
      result_var=NULL;
      obj=$39$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[7] {
    name="LeabraTrialMonitor";
    desc="monitor trial-level data from the network";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="phase_no";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="phase_no";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="cycle";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="minus_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=$13$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$13$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][7].objs[0]$40$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[1]$41$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$41$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$41$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[0]$42$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=;
      result_var=NULL;
      obj=$41$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[2] {
      desc="update after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$42$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[3] {
      desc="only functional for dmem projects: synchronizes trial data across processes";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].args[0]$43$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	expr {
	 expr="1";
	 flags=;
	 var_expr="1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[8] {
    name="LeabraEpochMonitor";
    desc="monitor epoch-level data from the network";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=.projects[0].data.gp[1][1]$44$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$44$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][8].objs[0]$45$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$14$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=AssignExpr;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][8].vars[2]$46$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[1]$47$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="epoch_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ epoch_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$47$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$47$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[0]$48$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=;
      result_var=NULL;
      obj=$47$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     AssignExpr @[2] {
      desc=;
      flags=;
      result_var=$46$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     UserScript @[3] {
      desc="set the timing information from the epoch timer";
      flags=;
      script {
       expr="epoch_mon_data.SetDataByName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\");
epoch_mon_data.SetDataByName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\");

";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$.SetDataByName($#1#$.used.GetTotSecs(), \"epoch_time_tot\");
epoch_mon_data.SetDataByName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\");

";
       vars {
       };
       var_names{ epoch_mon_data;epoch_timer;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc="update after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$48$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[9] {
    name="SaveWeights";
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="tag";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided tag (startup script will set this!)";
     };
     ProgVar @[1] {
      name="wts_subdir";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided subdirectory to save weights in";
     };
     ProgVar @[2] {
      name="fname";
      var_type=T_String;
      string_val="/Users/oreilly/pdp4.0/trunk/test/leabra_ra.03_0036.wts.gz";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="final generated file name -- do not edit!";
     };
     ProgVar @[3] {
      name="epoch_str";
      var_type=T_String;
      string_val="0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of epoch with leading zeros";
     };
     ProgVar @[4] {
      name="batch_str";
      var_type=T_String;
      string_val="03";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of batch with leading zeros";
     };
     ProgVar @[5] {
      name="final_tag";
      var_type=T_String;
      string_val=".03_0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="batch + epoch";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     IfElse @[0] {
      desc="don't save if not first dmem process";
      flags=;
      cond {
       expr="taMisc::dmem_proc > 0";
       flags=;
       var_expr="taMisc::dmem_proc > 0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       UserScript @[0] {
	desc=;
	flags=;
	script {
	 expr="return;";
	 flags=NO_VAR_ERRS;
	 var_expr="return;";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ return;	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MiscCall @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[4]$49$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="2";
	 flags=;
	 var_expr="2";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MiscCall @[2] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[3]$50$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.epoch";
	 flags=;
	 var_expr="$#0#$.epoch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="4";
	 flags=;
	 var_expr="4";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[5]$51$;
      expr {
       expr="tag + \".\" + batch_str + \"_\" + epoch_str";
       flags=;
       var_expr="$#0#$ + \".\" + batch_str + \"_\" + epoch_str";
       vars {
       };
       var_names{ tag;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[2]$52$;
      obj=.projects[0].programs.gp[0][9].args[0]$53$;
      method=taBase::GetFileNameFmProject;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ext";
	required=1;
	def_val=;
	expr {
	 expr="\".wts.gz\"";
	 flags=;
	 var_expr="\".wts.gz\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="tag";
	required=0;
	def_val="\"\"";
	expr {
	 expr="final_tag";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ final_tag;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="subdir";
	required=0;
	def_val="\"\"";
	expr {
	 expr="wts_subdir";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ wts_subdir;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="dmem_proc_no";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$53$;
      method=Network::SaveWeights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	expr {
	 expr="fname";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ fname;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network::WtSaveFormat;
	type="Network::WtSaveFormat";
	name="fmt";
	required=0;
	def_val="Network::NET_FMT";
	expr {
	 expr="Network::NET_FMT";
	 flags=;
	 var_expr="Network::NET_FMT";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
  };
  Program_Group @.gp[1] {
   name="VeArmEnv";
   el_typ=Program;
   el_def=0;
   step_prog=$32$;
   desc=;
   Program @[0] {
    name="VeArmProg";
    desc=;
    flags=;
    objs {
     name=;
     el_typ=VEWorld;
     el_def=0;
     VEWorld @[0] {
      name="VEArmWorld";
      step_type=QUICK_STEP;
      stepsize=0.1;
      quick_iters=20;
      gravity {x=0: y=0: z=0: };
      objects {
       name=;
       el_typ=VEObject;
       el_def=0;
       VEObject @[0] {
	name="LeftArm";
	bodies {
	 name=;
	 el_typ=VEBody;
	 el_def=0;
	 VEBody @[0] {
	  name="Torso";
	  flags=FIXED;
	  init_pos {x=0: y=0: z=0: };
	  init_rot {x=0: y=0: z=1: rot=0: };
	  init_lin_vel {x=0: y=0: z=0: };
	  init_ang_vel {x=0: y=0: z=0: };
	  cur_pos {x=-1.627291e-11: y=0: z=5.362682e-11: };
	  cur_rot {x=-0: y=1: z=0: rot=3.147243: };
	  cur_lin_vel {x=2.781745e-11: y=0: z=-4.432277e-11: };
	  cur_ang_vel {x=0: y=0: z=0: };
	  mass=1;
	  mass_shape=BOX;
	  mass_radius=0.1;
	  mass_length=1;
	  mass_long_axis=LONG_Y;
	  mass_box {x=0.48: y=0.1: z=0.1: };
	  obj_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  use_fname=0;
	  obj_fname=;
	  color {r=0: g=1: b=0: a=1: };
	 };
	 VEBody @[1] {
	  name="Humerus";
	  flags=;
	  init_pos {x=0.4: y=0: z=0: };
	  init_rot {x=0: y=0: z=1: rot=0: };
	  init_lin_vel {x=0: y=0: z=0: };
	  init_ang_vel {x=0: y=0: z=0: };
	  cur_pos {x=0.3435728: y=0: z=0.1158362: };
	  cur_rot {x=-0: y=1: z=0: rot=2.244383: };
	  cur_lin_vel {x=0.007021549: y=0: z=-0.005568132: };
	  cur_ang_vel {x=0: y=0.05973811: z=0: };
	  mass=0.2;
	  mass_shape=CYLINDER;
	  mass_radius=0.04;
	  mass_length=0.28;
	  mass_long_axis=LONG_X;
	  mass_box {x=1: y=1: z=1: };
	  obj_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  use_fname=0;
	  obj_fname=;
	  color {r=0.2: g=0.2: b=0.4901961: a=1: };
	 };
	 VEBody @[2] {
	  name="Ulna";
	  flags=;
	  init_pos {x=0.7: y=0: z=0: };
	  init_rot {x=0: y=0: z=1: rot=0: };
	  init_lin_vel {x=0: y=0: z=0: };
	  init_ang_vel {x=0: y=0: z=0: };
	  cur_pos {x=0.3120226: y=0: z=0.3158329: };
	  cur_rot {x=-0: y=0.9999998: z=0: rot=0.5842887: };
	  cur_lin_vel {x=0.01905589: y=0: z=-0.003503348: };
	  cur_ang_vel {x=0: y=0.06087412: z=0: };
	  mass=0.15;
	  mass_shape=CYLINDER;
	  mass_radius=0.03;
	  mass_length=0.28;
	  mass_long_axis=LONG_X;
	  mass_box {x=1: y=1: z=1: };
	  obj_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  use_fname=0;
	  obj_fname=;
	  color {r=0: g=0: b=1: a=1: };
	 };
	 VEBody @[3] {
	  name="Hand";
	  flags=;
	  init_pos {x=0.9: y=0: z=0: };
	  init_rot {x=0: y=0: z=1: rot=0: };
	  init_lin_vel {x=0: y=0: z=0: };
	  init_ang_vel {x=0: y=0: z=0: };
	  cur_pos {x=0.1449319: y=0: z=0.4257749: };
	  cur_rot {x=-0: y=1.000001: z=0: rot=0.5749958: };
	  cur_lin_vel {x=0.02581302: y=0: z=0.006843115: };
	  cur_ang_vel {x=0: y=0.06451073: z=0: };
	  mass=0.05;
	  mass_shape=SPHERE;
	  mass_radius=0.04;
	  mass_length=0.3;
	  mass_long_axis=LONG_X;
	  mass_box {x=1: y=1: z=1: };
	  obj_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  use_fname=0;
	  obj_fname=;
	  color {r=1: g=0: b=1: a=1: };
	 };
	};
	joints {
	 name=;
	 el_typ=VEJoint;
	 el_def=0;
	 VEJoint @[0] {
	  name="Shoulder";
	  flags=FEEDBACK|USE_STOPS;
	  body1=.projects[0].programs.gp[1][0].objs[0].objects[0].bodies[0]$54$;
	  body2=.projects[0].programs.gp[1][0].objs[0].objects[0].bodies[1]$55$;
	  joint_type=HINGE;
	  anchor {x=0.25: y=0: z=0: };
	  axis {x=0: y=1: z=0: };
	  axis2 {x=1: y=0: z=0: };
	  lo_stop=-0.01;
	  hi_stop=2;
	  stop_bounce=0.1;
	  pos=0.9028595;
	  vel=-0.05973811;
	  pos2=2.09913e-15;
	  vel2=2.16122e-15;
	  cur_force1 {x=2.130616e-05: y=0: z=0.0003096678: };
	  cur_torque1 {x=0: y=-7.744582e-05: z=0: };
	  cur_force2 {x=-2.130616e-05: y=0: z=-0.0003096678: };
	  cur_torque2 {x=0: y=-2.624816e-05: z=0: };
	 };
	 VEJoint @[1] {
	  name="Elbow";
	  flags=FEEDBACK|USE_STOPS;
	  body1=$55$;
	  body2=.projects[0].programs.gp[1][0].objs[0].objects[0].bodies[2]$56$;
	  joint_type=HINGE;
	  anchor {x=0.15: y=0: z=0: };
	  axis {x=0: y=1: z=0: };
	  axis2 {x=1: y=0: z=0: };
	  lo_stop=-0.01;
	  hi_stop=3;
	  stop_bounce=0.1;
	  pos=1.660095;
	  vel=-0.001136016;
	  pos2=2.522337e-44;
	  vel2=2.690493e-43;
	  cur_force1 {x=-3.718011e-05: y=0: z=0.0002187779: };
	  cur_torque1 {x=0: y=-2.469689e-05: z=0: };
	  cur_force2 {x=3.718011e-05: y=0: z=-0.0002187779: };
	  cur_torque2 {x=0: y=2.443429e-05: z=0: };
	 };
	 VEJoint @[2] {
	  name="Wrist";
	  flags=FEEDBACK|USE_STOPS;
	  body1=$56$;
	  body2=.projects[0].programs.gp[1][0].objs[0].objects[0].bodies[3]$57$;
	  joint_type=HINGE;
	  anchor {x=0.15: y=0: z=0: };
	  axis {x=0: y=1: z=0: };
	  axis2 {x=1: y=0: z=0: };
	  lo_stop=-0.01;
	  hi_stop=0.01;
	  stop_bounce=0;
	  pos=0.009292427;
	  vel=-0.003636602;
	  pos2=2.522337e-44;
	  vel2=2.690493e-43;
	  cur_force1 {x=-5.006577e-05: y=0: z=4.381229e-05: };
	  cur_torque1 {x=0: y=1.399291e-06: z=0: };
	  cur_force2 {x=5.006577e-05: y=0: z=-4.381229e-05: };
	  cur_torque2 {x=0: y=4.982099e-07: z=0: };
	 };
	};
       };
      };
     };
     NetMonitor @[1] {
      name="ForceMonitor";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="shoulder_pos";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="shoulder_vel";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="shoulder_force_fmnet";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="shoulder_force_joint";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="elbow_pos";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="elbow_vel";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="elbow_force_fmnet";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="elbow_force_joint";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=$15$;
      rmv_orphan_cols=1;
     };
     NetMonitor @[2] {
      name="PosMonitor";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="hand_pos_x";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="hand_pos_z";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="goal_dist";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="rew_val";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=$16$;
      rmv_orphan_cols=1;
     };
     DataTable @[3] {
      name="ForceData";
      desc="monitor of force _Out layers -- for computing";
      data {
       name="data";
       el_typ=float_Data;
       el_def=0;
       float_Data @[0] {
	name="shoulder_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
       float_Data @[1] {
	name="shoulder_vel";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
       float_Data @[2] {
	name="shoulder_force_fmnet";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
       float_Data @[3] {
	name="shoulder_force_joint";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
       float_Data @[4] {
	name="elbow_pos";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
       float_Data @[5] {
	name="elbow_vel";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
       float_Data @[6] {
	name="elbow_force_fmnet";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
       float_Data @[7] {
	name="elbow_force_joint";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
     };
     DataTable @[4] {
      name="PosData";
      desc=;
      data {
       name="data";
       el_typ=float_Data;
       el_def=0;
       float_Data @[0] {
	name="hand_pos_x";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[0] 	};
       };
       float_Data @[1] {
	name="hand_pos_z";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[0] 	};
       };
       float_Data @[2] {
	name="goal_dist";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[0] 	};
       };
       float_Data @[3] {
	name="rew_val";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[0] 	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="phase";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="which phase is this being called in? 0 = minus (just read current vals and set inputs), 1 = plus (run physics, get results)";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="VEArmWorld";
      var_type=T_Object;
      object_type=VEWorld;
      object_val=.projects[0].programs.gp[1][0].objs[0]$58$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="Shoulder";
      var_type=T_Object;
      object_type=VEJoint;
      object_val=.projects[0].programs.gp[1][0].objs[0].objects[0].joints[0]$59$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="Elbow";
      var_type=T_Object;
      object_type=VEJoint;
      object_val=.projects[0].programs.gp[1][0].objs[0].objects[0].joints[1]$60$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="Hand";
      var_type=T_Object;
      object_type=VEBody;
      object_val=$57$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[4] {
      name="n_steps";
      var_type=T_Int;
      int_val=30;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[5] {
      name="step";
      var_type=T_Int;
      int_val=30;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="current step";
     };
     ProgVar @[6] {
      name="hand_goal_x";
      var_type=T_Real;
      real_val=0.6;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[7] {
      name="hand_goal_z";
      var_type=T_Real;
      real_val=0.3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[8] {
      name="goal_dist_rew_thr";
      var_type=T_Real;
      real_val=0.3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="threshold for distance from goal for reward to transition from negative to positive";
     };
     ProgVar @[9] {
      name="rew_gain";
      var_type=T_Real;
      real_val=10;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="gain on the reward logistic function converting distance into reward";
     };
     ProgVar @[10] {
      name="goal_dist";
      var_type=T_Real;
      real_val=0.4721295237541199;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="current distance of hand from goal";
     };
     ProgVar @[11] {
      name="rew_val";
      var_type=T_Real;
      real_val=0.1517044007778168;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="reward value based on goal distance";
     };
     ProgVar @[12] {
      name="max_force";
      var_type=T_Real;
      real_val=0.1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[13] {
      name="max_vel";
      var_type=T_Real;
      real_val=0.2;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[14] {
      name="shoulder_force_fmnet";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="shoulder force command coming from network";
     };
     ProgVar @[15] {
      name="shoulder_force_joint";
      var_type=T_Real;
      real_val=-0.001036939738696674;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="shoulder force command coming from joint";
     };
     ProgVar @[16] {
      name="elbow_force_fmnet";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="elbow force command coming from network";
     };
     ProgVar @[17] {
      name="elbow_force_joint";
      var_type=T_Real;
      real_val=-2.625929482746869e-06;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="elbow force command coming from joint";
     };
     ProgVar @[18] {
      name="hand_pos_x";
      var_type=T_Real;
      real_val=0.144931897521019;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[19] {
      name="hand_pos_z";
      var_type=T_Real;
      real_val=0.425774872303009;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[20] {
      name="max_hand_x";
      var_type=T_Real;
      real_val=0.9;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[21] {
      name="min_hand_x";
      var_type=T_Real;
      real_val=-0.7;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[22] {
      name="max_hand_z";
      var_type=T_Real;
      real_val=0.9;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[23] {
      name="min_hand_z";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[24] {
      name="shoulder_pos";
      var_type=T_Real;
      real_val=0.9028595089912415;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[25] {
      name="shoulder_vel";
      var_type=T_Real;
      real_val=-0.05973810702562332;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="current velocity of the shoulder";
     };
     ProgVar @[26] {
      name="elbow_pos";
      var_type=T_Real;
      real_val=1.660094618797302;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="current position of the elbow";
     };
     ProgVar @[27] {
      name="elbow_vel";
      var_type=T_Real;
      real_val=-0.001136016100645065;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="current velocity of the elbow";
     };
     ProgVar @[28] {
      name="ForceMonitor";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[1][0].objs[1]$61$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[29] {
      name="ForceData";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$15$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[30] {
      name="ShoulderForceLayer";
      var_type=T_Object;
      object_type=MotorForceLayerSpec;
      object_val=.projects[0].networks[0].specs[4]$62$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[31] {
      name="ElbowForceLayer";
      var_type=T_Object;
      object_type=MotorForceLayerSpec;
      object_val=.projects[0].networks[0].specs[4].children[0]$63$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[32] {
      name="PosMonitor";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[1][0].objs[2]$64$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[33] {
      name="PosData";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$16$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
     Function @[0] {
      desc="normalized x hand position";
      flags=;
      return_val {
       name="rval";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=CTRL_PANEL|NULL_CHECK;
       desc=;
      };
      name="NormXPos";
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="x_val";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
      };
      fun_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ReturnExpr @[0] {
	desc=;
	flags=;
	expr {
	 expr="(x_val - min_hand_x) / (max_hand_x - min_hand_x)";
	 flags=;
	 var_expr="($#0#$ - $#1#$) / ($#2#$ - $#1#$)";
	 vars {
	 };
	 var_names{ x_val;min_hand_x;max_hand_x;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     Function @[1] {
      desc="normalized z hand position";
      flags=;
      return_val {
       name="rval";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=CTRL_PANEL|NULL_CHECK;
       desc=;
      };
      name="NormZPos";
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="z_val";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
      };
      fun_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ReturnExpr @[0] {
	desc=;
	flags=;
	expr {
	 expr="(z_val - min_hand_z) / (max_hand_z - min_hand_z)";
	 flags=;
	 var_expr="($#0#$ - $#1#$) / ($#2#$ - $#1#$)";
	 vars {
	 };
	 var_names{ z_val;min_hand_z;max_hand_z;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     Function @[2] {
      desc="set position value in input_data";
      flags=;
      return_val {
       name="rval";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=CTRL_PANEL|NULL_CHECK;
       desc=;
      };
      name="SetPosVal";
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="x_val";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
       ProgVar @[1] {
	name="z_val";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
       ProgVar @[2] {
	name="col_name";
	var_type=T_String;
	string_val=;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
      };
      fun_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgVars @[0] {
	desc=;
	flags=;
	local_vars {
	 name=;
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @[0] {
	  name="norm_val";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=CTRL_PANEL|NULL_CHECK;
	  desc="normalized value";
	 };
	};
       };
       FunctionCall @[1] {
	desc=;
	flags=;
	result_var=.projects[0].programs.gp[1][0].functions[2].fun_code[0].local_vars[0]$65$;
	fun=.projects[0].programs.gp[1][0].functions[0]$66$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=double;
	  type="double";
	  name="x_val";
	  required=1;
	  def_val=;
	  expr {
	   expr="x_val";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ x_val;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       MethodCall @[2] {
	desc=;
	flags=;
	result_var=NULL;
	obj=.projects[0].programs.gp[1][0].args[1]$67$;
	method=DataTable::SetMatrixValColName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="val";
	  required=1;
	  def_val=;
	  expr {
	   expr="norm_val";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ norm_val;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="col_name";
	  required=1;
	  def_val=;
	  expr {
	   expr="col_name";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ col_name;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="row";
	  required=1;
	  def_val=;
	  expr {
	   expr="-1";
	   flags=;
	   var_expr="-1";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[3] {
	  arg_type=int;
	  type="int";
	  name="d0";
	  required=1;
	  def_val=;
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[4] {
	  arg_type=int;
	  type="int";
	  name="d1";
	  required=0;
	  def_val="0";
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[5] {
	  arg_type=int;
	  type="int";
	  name="d2";
	  required=0;
	  def_val="0";
	  expr {
	   expr=;
	   flags=;
	   var_expr=;
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[6] {
	  arg_type=int;
	  type="int";
	  name="d3";
	  required=0;
	  def_val="0";
	  expr {
	   expr=;
	   flags=;
	   var_expr=;
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       FunctionCall @[3] {
	desc=;
	flags=;
	result_var=$65$;
	fun=.projects[0].programs.gp[1][0].functions[1]$68$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=double;
	  type="double";
	  name="z_val";
	  required=1;
	  def_val=;
	  expr {
	   expr="z_val";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ z_val;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       MethodCall @[4] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$67$;
	method=DataTable::SetMatrixValColName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="val";
	  required=1;
	  def_val=;
	  expr {
	   expr="norm_val";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ norm_val;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="col_name";
	  required=1;
	  def_val=;
	  expr {
	   expr="col_name";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ col_name;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="row";
	  required=1;
	  def_val=;
	  expr {
	   expr="-1";
	   flags=;
	   var_expr="-1";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[3] {
	  arg_type=int;
	  type="int";
	  name="d0";
	  required=1;
	  def_val=;
	  expr {
	   expr="1";
	   flags=;
	   var_expr="1";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[4] {
	  arg_type=int;
	  type="int";
	  name="d1";
	  required=0;
	  def_val="0";
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[5] {
	  arg_type=int;
	  type="int";
	  name="d2";
	  required=0;
	  def_val="0";
	  expr {
	   expr=;
	   flags=;
	   var_expr=;
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[6] {
	  arg_type=int;
	  type="int";
	  name="d3";
	  required=0;
	  def_val="0";
	  expr {
	   expr=;
	   flags=;
	   var_expr=;
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
     };
     Function @[3] {
      desc="get index value for joint force rep in network";
      flags=;
      return_val {
       name="rval";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=CTRL_PANEL|NULL_CHECK;
       desc=;
      };
      name="GetJointIdx";
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="pos";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
       ProgVar @[1] {
	name="min_pos";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
       ProgVar @[2] {
	name="max_pos";
	var_type=T_Real;
	real_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc=;
       };
      };
      fun_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ReturnExpr @[0] {
	desc=;
	flags=;
	expr {
	 expr="(pos - min_pos) / (max_pos - min_pos)";
	 flags=;
	 var_expr="($#0#$ - $#1#$) / ($#2#$ - $#1#$)";
	 vars {
	 };
	 var_names{ pos;min_pos;max_pos;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[1][0].vars[0]$69$;
      method=VEWorld::SetValsToODE;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ResetDataRows @[1] {
      desc=;
      flags=;
      data_var=.projects[0].programs.gp[1][0].vars[29]$70$;
     };
     ResetDataRows @[2] {
      desc=;
      flags=;
      data_var=.projects[0].programs.gp[1][0].vars[33]$71$;
     };
     MethodCall @[3] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[1][0].vars[28]$72$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="ForceData";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ ForceData;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$72$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$72$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[1][0].vars[32]$73$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="PosData";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ PosData;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[7] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$73$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[8] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$73$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     Comment @[0] {
      desc="==== Set Hand Position Info";
      flags=;
     };
     AddNewDataRow @[1] {
      desc=;
      flags=;
      data_var=$67$;
     };
     FunctionCall @[2] {
      desc="set hand goal in";
      flags=;
      result_var=NULL;
      fun=.projects[0].programs.gp[1][0].functions[2]$74$;
      fun_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=double;
	type="double";
	name="x_val";
	required=1;
	def_val=;
	expr {
	 expr="hand_goal_x";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ hand_goal_x;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=double;
	type="double";
	name="z_val";
	required=1;
	def_val=;
	expr {
	 expr="hand_goal_z";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ hand_goal_z;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=taString;
	type="String";
	name="col_name";
	required=1;
	def_val=;
	expr {
	 expr="\"HandGoal_In\"";
	 flags=;
	 var_expr="\"HandGoal_In\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     CodeBlock @[3] {
      desc="set current hand pos IN";
      flags=;
      prog_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AssignExpr @[0] {
	desc=;
	flags=;
	result_var=.projects[0].programs.gp[1][0].vars[18]$75$;
	expr {
	 expr="Hand.cur_pos.x";
	 flags=;
	 var_expr="$#0#$.cur_pos.x";
	 vars {
	 };
	 var_names{ Hand;	 };
	 bad_vars{ 	 };
	};
       };
       AssignExpr @[1] {
	desc=;
	flags=;
	result_var=.projects[0].programs.gp[1][0].vars[19]$76$;
	expr {
	 expr="Hand.cur_pos.z";
	 flags=;
	 var_expr="$#0#$.cur_pos.z";
	 vars {
	 };
	 var_names{ Hand;	 };
	 bad_vars{ 	 };
	};
       };
       FunctionCall @[2] {
	desc="set cur hand pos in";
	flags=;
	result_var=NULL;
	fun=$74$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=double;
	  type="double";
	  name="x_val";
	  required=1;
	  def_val=;
	  expr {
	   expr="hand_pos_x";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ hand_pos_x;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=double;
	  type="double";
	  name="z_val";
	  required=1;
	  def_val=;
	  expr {
	   expr="hand_pos_z";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ hand_pos_z;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=taString;
	  type="String";
	  name="col_name";
	  required=1;
	  def_val=;
	  expr {
	   expr="\"HandPos_In\"";
	   flags=;
	   var_expr="\"HandPos_In\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
     };
     Comment @[4] {
      desc="==== Run the World (plus phase!)";
      flags=;
     };
     IfElse @[5] {
      desc="if start of plus phase, get output forces from network, else from current";
      flags=;
      cond {
       expr="phase == 1";
       flags=;
       var_expr="$#0#$ == 1";
       vars {
       };
       var_names{ phase;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ForLoop @[0] {
	desc="run world for n steps with applied forces";
	flags=;
	loop_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 Comment @[0] {
	  desc="==== Get Joint Pos/Vel/Force";
	  flags=;
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[24]$77$;
	  expr {
	   expr="Shoulder.pos";
	   flags=;
	   var_expr="$#0#$.pos";
	   vars {
	   };
	   var_names{ Shoulder;	   };
	   bad_vars{ 	   };
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[25]$78$;
	  expr {
	   expr="Shoulder.vel";
	   flags=;
	   var_expr="$#0#$.vel";
	   vars {
	   };
	   var_names{ Shoulder;	   };
	   bad_vars{ 	   };
	  };
	 };
	 AssignExpr @[3] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[15]$79$;
	  expr {
	   expr="(Shoulder.cur_torque1.y + Shoulder.cur_torque2.y)/max_force";
	   flags=;
	   var_expr="($#0#$.cur_torque1.y + $#0#$.cur_torque2.y)/$#1#$";
	   vars {
	   };
	   var_names{ Shoulder;max_force;	   };
	   bad_vars{ 	   };
	  };
	 };
	 AssignExpr @[4] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[26]$80$;
	  expr {
	   expr="Elbow.pos";
	   flags=;
	   var_expr="$#0#$.pos";
	   vars {
	   };
	   var_names{ Elbow;	   };
	   bad_vars{ 	   };
	  };
	 };
	 AssignExpr @[5] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[27]$81$;
	  expr {
	   expr="Elbow.vel";
	   flags=;
	   var_expr="$#0#$.vel";
	   vars {
	   };
	   var_names{ Elbow;	   };
	   bad_vars{ 	   };
	  };
	 };
	 AssignExpr @[6] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[17]$82$;
	  expr {
	   expr="(Elbow.cur_torque1.y + Elbow.cur_torque2.y) / max_force";
	   flags=;
	   var_expr="($#0#$.cur_torque1.y + $#0#$.cur_torque2.y) / $#1#$";
	   vars {
	   };
	   var_names{ Elbow;max_force;	   };
	   bad_vars{ 	   };
	  };
	 };
	 Comment @[7] {
	  desc="==== Get Net Forces";
	  flags=;
	 };
	 MethodCall @[8] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[14]$83$;
	  obj=.projects[0].programs.gp[1][0].vars[30]$84$;
	  method=MotorForceLayerSpec::ReadForce;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=LeabraLayer_ptr;
	    type="LeabraLayer*";
	    name="lay";
	    required=0;
	    def_val=;
	    expr {
	     expr="network.layers.Shoulder_Out";
	     flags=;
	     var_expr="$#0#$.layers.Shoulder_Out";
	     vars {
	     };
	     var_names{ network;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=LeabraNetwork_ptr;
	    type="LeabraNetwork*";
	    name="net";
	    required=0;
	    def_val=;
	    expr {
	     expr="network";
	     flags=;
	     var_expr="$#0#$";
	     vars {
	     };
	     var_names{ network;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[2] {
	    arg_type=float;
	    type="float";
	    name="pos";
	    required=0;
	    def_val=;
	    expr {
	     expr="shoulder_pos";
	     flags=;
	     var_expr="$#0#$";
	     vars {
	     };
	     var_names{ shoulder_pos;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[3] {
	    arg_type=float;
	    type="float";
	    name="vel";
	    required=0;
	    def_val=;
	    expr {
	     expr="shoulder_vel";
	     flags=;
	     var_expr="$#0#$";
	     vars {
	     };
	     var_names{ shoulder_vel;	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 MethodCall @[9] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][0].vars[16]$85$;
	  obj=.projects[0].programs.gp[1][0].vars[31]$86$;
	  method=MotorForceLayerSpec::ReadForce;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=LeabraLayer_ptr;
	    type="LeabraLayer*";
	    name="lay";
	    required=0;
	    def_val=;
	    expr {
	     expr="network.layers.Elbow_Out";
	     flags=;
	     var_expr="$#0#$.layers.Elbow_Out";
	     vars {
	     };
	     var_names{ network;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=LeabraNetwork_ptr;
	    type="LeabraNetwork*";
	    name="net";
	    required=0;
	    def_val=;
	    expr {
	     expr="network";
	     flags=;
	     var_expr="$#0#$";
	     vars {
	     };
	     var_names{ network;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[2] {
	    arg_type=float;
	    type="float";
	    name="pos";
	    required=0;
	    def_val=;
	    expr {
	     expr="elbow_pos";
	     flags=;
	     var_expr="$#0#$";
	     vars {
	     };
	     var_names{ elbow_pos;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[3] {
	    arg_type=float;
	    type="float";
	    name="vel";
	    required=0;
	    def_val=;
	    expr {
	     expr="elbow_vel";
	     flags=;
	     var_expr="$#0#$";
	     vars {
	     };
	     var_names{ elbow_vel;	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 MethodCall @[10] {
	  desc=;
	  flags=;
	  result_var=NULL;
	  obj=.projects[0].programs.gp[1][0].vars[1]$87$;
	  method=VEJoint::ApplyForce;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=float;
	    type="float";
	    name="force1";
	    required=1;
	    def_val=;
	    expr {
	     expr="max_force * shoulder_force_fmnet";
	     flags=;
	     var_expr="$#0#$ * $#1#$";
	     vars {
	     };
	     var_names{ max_force;shoulder_force_fmnet;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=float;
	    type="float";
	    name="force2";
	    required=0;
	    def_val="0.0f";
	    expr {
	     expr=;
	     flags=;
	     var_expr=;
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 MethodCall @[11] {
	  desc=;
	  flags=;
	  result_var=NULL;
	  obj=.projects[0].programs.gp[1][0].vars[2]$88$;
	  method=VEJoint::ApplyForce;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=float;
	    type="float";
	    name="force1";
	    required=1;
	    def_val=;
	    expr {
	     expr="max_force * elbow_force_fmnet";
	     flags=;
	     var_expr="$#0#$ * $#1#$";
	     vars {
	     };
	     var_names{ max_force;elbow_force_fmnet;	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=float;
	    type="float";
	    name="force2";
	    required=0;
	    def_val="0.0f";
	    expr {
	     expr=;
	     flags=;
	     var_expr=;
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 MethodCall @[12] {
	  desc="run one time step";
	  flags=;
	  result_var=NULL;
	  obj=$69$;
	  method=VEWorld::Step;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	 AddNewDataRow @[13] {
	  desc=;
	  flags=;
	  data_var=$70$;
	 };
	 DataVarProg @[14] {
	  desc=;
	  flags=;
	  data_var=$70$;
	  set_data=1;
	  row_spec=CUR_ROW;
	  row_var=NULL;
	  var_1=$77$;
	  var_2=$78$;
	  var_3=$83$;
	  var_4=$79$;
	 };
	 DataVarProg @[15] {
	  desc=;
	  flags=;
	  data_var=$70$;
	  set_data=1;
	  row_spec=CUR_ROW;
	  row_var=NULL;
	  var_1=$80$;
	  var_2=$81$;
	  var_3=$85$;
	  var_4=$82$;
	 };
	 DataVarProg @[16] {
	  desc=;
	  flags=;
	  data_var=$70$;
	  set_data=1;
	  row_spec=CUR_ROW;
	  row_var=NULL;
	  var_1=$75$;
	  var_2=$76$;
	  var_3=.projects[0].programs.gp[1][0].vars[10]$89$;
	  var_4=NULL;
	 };
	 DoneWritingDataRow @[17] {
	  desc=;
	  flags=;
	  data_var=$70$;
	 };
	};
	init {
	 expr="step = 0";
	 flags=NO_VAR_ERRS;
	 var_expr="$#0#$ = 0";
	 vars {
	 };
	 var_names{ step;	 };
	 bad_vars{ 	 };
	};
	test {
	 expr="step < n_steps";
	 flags=NO_VAR_ERRS;
	 var_expr="$#0#$ < $#1#$";
	 vars {
	 };
	 var_names{ step;n_steps;	 };
	 bad_vars{ 	 };
	};
	iter {
	 expr="step++";
	 flags=NO_VAR_ERRS;
	 var_expr="$#0#$++";
	 vars {
	 };
	 var_names{ step;	 };
	 bad_vars{ 	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     Comment @[6] {
      desc="==== Get New Hand Position (plus phase training)";
      flags=;
     };
     CodeBlock @[7] {
      desc="set current hand pos OUT";
      flags=;
      prog_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AssignExpr @[0] {
	desc=;
	flags=;
	result_var=$75$;
	expr {
	 expr="Hand.cur_pos.x";
	 flags=;
	 var_expr="$#0#$.cur_pos.x";
	 vars {
	 };
	 var_names{ Hand;	 };
	 bad_vars{ 	 };
	};
       };
       AssignExpr @[1] {
	desc=;
	flags=;
	result_var=$76$;
	expr {
	 expr="Hand.cur_pos.z";
	 flags=;
	 var_expr="$#0#$.cur_pos.z";
	 vars {
	 };
	 var_names{ Hand;	 };
	 bad_vars{ 	 };
	};
       };
       FunctionCall @[2] {
	desc="set cur hand pos out";
	flags=;
	result_var=NULL;
	fun=$74$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=double;
	  type="double";
	  name="x_val";
	  required=1;
	  def_val=;
	  expr {
	   expr="hand_pos_x";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ hand_pos_x;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=double;
	  type="double";
	  name="z_val";
	  required=1;
	  def_val=;
	  expr {
	   expr="hand_pos_z";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ hand_pos_z;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=taString;
	  type="String";
	  name="col_name";
	  required=1;
	  def_val=;
	  expr {
	   expr="\"HandPos_Out\"";
	   flags=;
	   var_expr="\"HandPos_Out\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       AssignExpr @[3] {
	desc=;
	flags=;
	result_var=$89$;
	expr {
	 expr="taMath_float::euc_dist(hand_pos_x, hand_pos_z, hand_goal_x, hand_goal_z)";
	 flags=;
	 var_expr="taMath_float::euc_dist($#0#$, $#1#$, $#2#$, $#3#$)";
	 vars {
	 };
	 var_names{ hand_pos_x;hand_pos_z;hand_goal_x;hand_goal_z;	 };
	 bad_vars{ 	 };
	};
       };
       AssignExpr @[4] {
	desc=;
	flags=;
	result_var=.projects[0].programs.gp[1][0].vars[11]$90$;
	expr {
	 expr="taMath_float::logistic(goal_dist_rew_thr - goal_dist, rew_gain)";
	 flags=;
	 var_expr="taMath_float::logistic($#0#$ - $#1#$, $#2#$)";
	 vars {
	 };
	 var_names{ goal_dist_rew_thr;goal_dist;rew_gain;	 };
	 bad_vars{ 	 };
	};
       };
       MethodCall @[5] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$67$;
	method=DataTable::SetMatrixValColName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="val";
	  required=1;
	  def_val=;
	  expr {
	   expr="rew_val";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ rew_val;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="col_name";
	  required=1;
	  def_val=;
	  expr {
	   expr="\"PVe\"";
	   flags=;
	   var_expr="\"PVe\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="row";
	  required=1;
	  def_val=;
	  expr {
	   expr="-1";
	   flags=;
	   var_expr="-1";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[3] {
	  arg_type=int;
	  type="int";
	  name="d0";
	  required=1;
	  def_val=;
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[4] {
	  arg_type=int;
	  type="int";
	  name="d1";
	  required=0;
	  def_val="0";
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[5] {
	  arg_type=int;
	  type="int";
	  name="d2";
	  required=0;
	  def_val="0";
	  expr {
	   expr=;
	   flags=;
	   var_expr=;
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[6] {
	  arg_type=int;
	  type="int";
	  name="d3";
	  required=0;
	  def_val="0";
	  expr {
	   expr=;
	   flags=;
	   var_expr=;
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
     };
     IfElse @[8] {
      desc="write position data";
      flags=;
      cond {
       expr="phase ==1";
       flags=;
       var_expr="$#0#$ ==1";
       vars {
       };
       var_names{ phase;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AddNewDataRow @[0] {
	desc=;
	flags=;
	data_var=$71$;
       };
       DataVarProg @[1] {
	desc=;
	flags=;
	data_var=$71$;
	set_data=1;
	row_spec=CUR_ROW;
	row_var=NULL;
	var_1=$75$;
	var_2=$76$;
	var_3=$89$;
	var_4=$90$;
       };
       DoneWritingDataRow @[2] {
	desc=;
	flags=;
	data_var=$71$;
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     Comment @[9] {
      desc="==== Get Joint Pos/Vel/Force";
      flags=;
     };
     AssignExpr @[10] {
      desc=;
      flags=;
      result_var=$77$;
      expr {
       expr="Shoulder.pos";
       flags=;
       var_expr="$#0#$.pos";
       vars {
       };
       var_names{ Shoulder;       };
       bad_vars{        };
      };
     };
     AssignExpr @[11] {
      desc=;
      flags=;
      result_var=$78$;
      expr {
       expr="Shoulder.vel";
       flags=;
       var_expr="$#0#$.vel";
       vars {
       };
       var_names{ Shoulder;       };
       bad_vars{        };
      };
     };
     AssignExpr @[12] {
      desc=;
      flags=;
      result_var=$79$;
      expr {
       expr="(Shoulder.cur_torque1.y + Shoulder.cur_torque2.y)/max_force";
       flags=;
       var_expr="($#0#$.cur_torque1.y + $#0#$.cur_torque2.y)/$#1#$";
       vars {
       };
       var_names{ Shoulder;max_force;       };
       bad_vars{        };
      };
     };
     AssignExpr @[13] {
      desc=;
      flags=;
      result_var=$80$;
      expr {
       expr="Elbow.pos";
       flags=;
       var_expr="$#0#$.pos";
       vars {
       };
       var_names{ Elbow;       };
       bad_vars{        };
      };
     };
     AssignExpr @[14] {
      desc=;
      flags=;
      result_var=$81$;
      expr {
       expr="Elbow.vel";
       flags=;
       var_expr="$#0#$.vel";
       vars {
       };
       var_names{ Elbow;       };
       bad_vars{        };
      };
     };
     AssignExpr @[15] {
      desc=;
      flags=;
      result_var=$82$;
      expr {
       expr="(Elbow.cur_torque1.y + Elbow.cur_torque2.y) / max_force";
       flags=;
       var_expr="($#0#$.cur_torque1.y + $#0#$.cur_torque2.y) / $#1#$";
       vars {
       };
       var_names{ Elbow;max_force;       };
       bad_vars{        };
      };
     };
     Comment @[16] {
      desc="==== Set Net Forces";
      flags=;
     };
     MethodCall @[17] {
      desc=;
      flags=;
      result_var=$83$;
      obj=$84$;
      method=MotorForceLayerSpec::ClampForce;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraLayer_ptr;
	type="LeabraLayer*";
	name="lay";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.Shoulder_In";
	 flags=;
	 var_expr="$#0#$.layers.Shoulder_In";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=LeabraNetwork_ptr;
	type="LeabraNetwork*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=float;
	type="float";
	name="force";
	required=0;
	def_val=;
	expr {
	 expr="shoulder_force_joint";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ shoulder_force_joint;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=float;
	type="float";
	name="pos";
	required=0;
	def_val=;
	expr {
	 expr="shoulder_pos";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ shoulder_pos;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[4] {
	arg_type=float;
	type="float";
	name="vel";
	required=0;
	def_val=;
	expr {
	 expr="shoulder_vel";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ shoulder_vel;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[18] {
      desc=;
      flags=;
      result_var=$85$;
      obj=$86$;
      method=MotorForceLayerSpec::ClampForce;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraLayer_ptr;
	type="LeabraLayer*";
	name="lay";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.Elbow_In";
	 flags=;
	 var_expr="$#0#$.layers.Elbow_In";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=LeabraNetwork_ptr;
	type="LeabraNetwork*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=float;
	type="float";
	name="force";
	required=0;
	def_val=;
	expr {
	 expr="elbow_force_joint";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ elbow_force_joint;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=float;
	type="float";
	name="pos";
	required=0;
	def_val=;
	expr {
	 expr="elbow_pos";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ elbow_pos;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[4] {
	arg_type=float;
	type="float";
	name="vel";
	required=0;
	def_val=;
	expr {
	 expr="elbow_vel";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ elbow_vel;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[19] {
      desc=" ";
      flags=;
      result_var=NULL;
      obj=$67$;
      method=DataBlock_Idx::ReadItem;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="idx";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
  };
 };
 viewers {
  name=;
  el_typ=TopLevelViewer;
  el_def=0;
  MainWindowViewer @[0] {
   m_data=.projects[0]$91$;
   name="Browser";
   visible=1;
   m_is_root=0;
   m_is_proj_viewer=1;
   toolbars {
    name=;
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     m_data=NULL;
     name="Application";
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name=;
    el_typ=FrameViewer;
    el_def=0;
    tabBrowseViewer @[0] {
     m_data=NULL;
     name="Tree";
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$91$;
    };
    PanelViewer @[1] {
     m_data=NULL;
     name="Panels";
     visible=1;
    };
    T3DataViewer @[2] {
     m_data=NULL;
     name="T3Frames";
     visible=1;
     frames {
      name=;
      el_typ=T3DataViewFrame;
      el_def=0;
      T3DataViewFrame @[0] {
       m_data=NULL;
       name="Frame1";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 NetView @[0] {
	  m_data=$1$;
FloatTransform @*(.m_transform) {scale={x=0.7716515: y=0.7716515: z=0.7716515: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=-0.3725792: y=0.453284: z=0.1784656: }: };
	  children {
	   name=;
	   el_typ=T3DataView;
	   el_def=0;
	   LayerView @[0] {
	    m_data=.projects[0].networks[0].layers[0]$92$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.1666667: z=-0.2608696: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[1] {
	    m_data=.projects[0].networks[0].layers[1]$93$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.1666667: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[2] {
	    m_data=.projects[0].networks[0].layers[2]$94$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.1666667: z=-0.173913: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[3] {
	    m_data=.projects[0].networks[0].layers[3]$95$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.1666667: z=-0.08695652: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[4] {
	    m_data=.projects[0].networks[0].layers[4]$96$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1216216: y=0.1666667: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[5] {
	    m_data=.projects[0].networks[0].layers[5]$97$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1216216: y=0.1666667: z=-0.08695652: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[6] {
	    m_data=.projects[0].networks[0].layers[6]$98$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.2432432: y=0.1666667: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[7] {
	    m_data=.projects[0].networks[0].layers[7]$99$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.8333333: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[8] {
	    m_data=.projects[0].networks[0].layers[8]$100$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.8333333: z=-0.4782609: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[9] {
	    m_data=.projects[0].networks[0].layers[9]$101$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7027027: y=0.8333333: z=-0.5217391: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[10] {
	    m_data=.projects[0].networks[0].layers[10]$102$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7027027: y=0.8333333: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[11] {
	    m_data=.projects[0].networks[0].layers[11]$103$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.04054054: y=0.5: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[12] {
	    m_data=.projects[0].networks[0].layers[12]$104$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3513514: y=0.8333333: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[13] {
	    m_data=.projects[0].networks[0].layers[13]$105$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3513514: y=0.8333333: z=-0.4782609: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[14] {
	    m_data=.projects[0].networks[0].layers[14]$106$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.8648649: y=0.8333333: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   PrjnView @[15] {
	    m_data=.projects[0].networks[0].layers[1].projections[0]$107$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.3111046: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[16] {
	    m_data=.projects[0].networks[0].layers[1].projections[1]$108$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3581081: y=0.8326576: z=-0.876322: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[17] {
	    m_data=.projects[0].networks[0].layers[1].projections[2]$109$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.8716217: y=0.8326576: z=-0.4850176: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[18] {
	    m_data=.projects[0].networks[0].layers[1].projections[3]$110$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3581081: y=0.8326576: z=-0.3980611: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[19] {
	    m_data=.projects[0].networks[0].layers[2].projections[0]$111$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[20] {
	    m_data=.projects[0].networks[0].layers[2].projections[1]$112$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[21] {
	    m_data=.projects[0].networks[0].layers[2].projections[2]$113$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.876322: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[22] {
	    m_data=.projects[0].networks[0].layers[2].projections[3]$114$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-1.006757: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[23] {
	    m_data=.projects[0].networks[0].layers[2].projections[4]$115$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-0.4850176: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[24] {
	    m_data=.projects[0].networks[0].layers[2].projections[5]$116$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.3980611: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[25] {
	    m_data=.projects[0].networks[0].layers[2].projections[6]$117$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.0472973: y=0.4993243: z=-0.4415393: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[26] {
	    m_data=.projects[0].networks[0].layers[3].projections[0]$118$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[27] {
	    m_data=.projects[0].networks[0].layers[3].projections[1]$119$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[28] {
	    m_data=.projects[0].networks[0].layers[3].projections[2]$120$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.876322: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[29] {
	    m_data=.projects[0].networks[0].layers[3].projections[3]$121$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-1.006757: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[30] {
	    m_data=.projects[0].networks[0].layers[3].projections[4]$122$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-0.4850176: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[31] {
	    m_data=.projects[0].networks[0].layers[3].projections[5]$123$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.3980611: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[32] {
	    m_data=.projects[0].networks[0].layers[3].projections[6]$124$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.0472973: y=0.4993243: z=-0.4415393: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[33] {
	    m_data=.projects[0].networks[0].layers[4].projections[0]$125$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.1371915: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[34] {
	    m_data=.projects[0].networks[0].layers[4].projections[1]$126$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[35] {
	    m_data=.projects[0].networks[0].layers[4].projections[2]$127$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.224148: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[36] {
	    m_data=.projects[0].networks[0].layers[4].projections[3]$128$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.876322: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[37] {
	    m_data=.projects[0].networks[0].layers[4].projections[4]$129$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-1.006757: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[38] {
	    m_data=.projects[0].networks[0].layers[4].projections[5]$130$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-0.4850176: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[39] {
	    m_data=.projects[0].networks[0].layers[4].projections[6]$131$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.3980611: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[40] {
	    m_data=.projects[0].networks[0].layers[4].projections[7]$132$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.0472973: y=0.4993243: z=-0.4415393: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[41] {
	    m_data=.projects[0].networks[0].layers[5].projections[0]$133$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.1371915: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[42] {
	    m_data=.projects[0].networks[0].layers[5].projections[1]$134$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[43] {
	    m_data=.projects[0].networks[0].layers[5].projections[2]$135$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.224148: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[44] {
	    m_data=.projects[0].networks[0].layers[5].projections[3]$136$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.876322: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[45] {
	    m_data=.projects[0].networks[0].layers[5].projections[4]$137$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-1.006757: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[46] {
	    m_data=.projects[0].networks[0].layers[5].projections[5]$138$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-0.4850176: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[47] {
	    m_data=.projects[0].networks[0].layers[5].projections[6]$139$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.3980611: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[48] {
	    m_data=.projects[0].networks[0].layers[5].projections[7]$140$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.0472973: y=0.4993243: z=-0.4415393: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[49] {
	    m_data=.projects[0].networks[0].layers[6].projections[0]$141$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.1371915: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[50] {
	    m_data=.projects[0].networks[0].layers[6].projections[1]$142$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1283784: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[51] {
	    m_data=.projects[0].networks[0].layers[6].projections[2]$143$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1283784: y=0.1673423: z=-0.1371915: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[52] {
	    m_data=.projects[0].networks[0].layers[6].projections[3]$144$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.1673423: z=-0.224148: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[53] {
	    m_data=.projects[0].networks[0].layers[7].projections[0]$145$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[54] {
	    m_data=.projects[0].networks[0].layers[8].projections[0]$146$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[55] {
	    m_data=.projects[0].networks[0].layers[9].projections[0]$147$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[56] {
	    m_data=.projects[0].networks[0].layers[10].projections[0]$148$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[57] {
	    m_data=.projects[0].networks[0].layers[11].projections[0]$149$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.3980611: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[58] {
	    m_data=.projects[0].networks[0].layers[11].projections[1]$150$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.006756757: y=0.8326576: z=-0.876322: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[59] {
	    m_data=.projects[0].networks[0].layers[11].projections[2]$151$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-0.4850176: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[60] {
	    m_data=.projects[0].networks[0].layers[11].projections[3]$152$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.7094595: y=0.8326576: z=-1.006757: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[61] {
	    m_data=.projects[0].networks[0].layers[11].projections[4]$153$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3581081: y=0.8326576: z=-0.3980611: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[62] {
	    m_data=.projects[0].networks[0].layers[11].projections[5]$154$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3581081: y=0.8326576: z=-0.876322: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[63] {
	    m_data=.projects[0].networks[0].layers[11].projections[6]$155$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.8716217: y=0.8326576: z=-0.4850176: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[64] {
	    m_data=.projects[0].networks[0].layers[11].projections[7]$156$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[65] {
	    m_data=.projects[0].networks[0].layers[12].projections[0]$157$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.0472973: y=0.5006757: z=-0.4415393: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[66] {
	    m_data=.projects[0].networks[0].layers[12].projections[1]$158$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[67] {
	    m_data=.projects[0].networks[0].layers[13].projections[0]$159$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.0472973: y=0.5006757: z=-0.4415393: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[68] {
	    m_data=.projects[0].networks[0].layers[13].projections[1]$160$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[69] {
	    m_data=.projects[0].networks[0].layers[14].projections[0]$161$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.0472973: y=0.5006757: z=-0.4415393: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[70] {
	    m_data=.projects[0].networks[0].layers[14].projections[1]$162$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.25: y=0.1673423: z=-0.05023502: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	  };
	  main_xform {scale={x=0.7716515: y=0.7716515: z=0.7716515: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=-0.3725792: y=0.453284: z=0.1784656: }: };
	  lay_disp_modes{ RewTarg=0;PVe=0;PVr=0;PVi=0;LVe=0;LVi=0;DA=0;Shoulder_In=0;Elbow_In=0;HandGoal_In=0;HandPos_In=0;Hidden=0;Shoulder_Out=0;Elbow_Out=0;HandPos_Out=0;	  };
	  scale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs[0]$163$;
	   auto_scale=0;
	  };
	  scale_ranges {
	   name=;
	   el_typ=ScaleRange;
	   el_def=0;
	   ScaleRange @[0] {
	    name="act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[1] {
	    name="ext";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[2] {
	    name="act_eq";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[3] {
	    name="targ";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[4] {
	    name="net";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[5] {
	    name="act_m";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[6] {
	    name="act_p";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[7] {
	    name="act_avg";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[8] {
	    name="gc.h";
	    auto_scale=0;
	    min=-0.06479999;
	    max=0.06479999;
	   };
	   ScaleRange @[9] {
	    name="bias.wt";
	    auto_scale=0;
	    min=-0.0207;
	    max=0.0207;
	   };
	   ScaleRange @[10] {
	    name="gc.a";
	    auto_scale=0;
	    min=-0.01222222;
	    max=0.01222222;
	   };
	   ScaleRange @[11] {
	    name="r.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[12] {
	    name="dav";
	    auto_scale=0;
	    min=-0.2522222;
	    max=0.2522222;
	   };
	  };
	  display=1;
	  ordered_uvg_list{ 8;	  };
	  unit_disp_mode=UDM_BLOCK;
	  unit_text_disp=UTD_NAMES;
	  max_size {x=74: y=23: z=3: };
	  font_sizes {
	   net_name=0.05;
	   net_vals=0.05;
	   layer=0.04;
	   layer_vals=0.03;
	   prjn=0.01;
	   unit=0.02;
	   un_nm_len=3;
	  };
	  view_params {
	   xy_square=0;
	   unit_spacing=0.05;
	   prjn_disp=L_R_B;
	   prjn_name=0;
	   prjn_width=0.002;
	   prjn_trans=0.5;
	   lay_trans=0.5;
	   unit_trans=0.6;
	  };
	 };
	 VEWorldView @[1] {
	  m_data=$58$;
	  m_transform=NULL;
	  children {
	   name=;
	   el_typ=VEObjectView;
	   el_def=0;
	   VEObjectView @[0] {
	    m_data=.projects[0].programs.gp[1][0].objs[0].objects[0]$164$;
	    m_transform=NULL;
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	     VEBodyView @[0] {
	      m_data=$54$;
	      m_transform=NULL;
	      name="Torso";
	     };
	     VEBodyView @[1] {
	      m_data=$55$;
	      m_transform=NULL;
	      name="Humerus";
	     };
	     VEBodyView @[2] {
	      m_data=$56$;
	      m_transform=NULL;
	      name="Ulna";
	     };
	     VEBodyView @[3] {
	      m_data=$57$;
	      m_transform=NULL;
	      name="Hand";
	     };
	    };
	    name="LeftArm";
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  display_on=0;
	 };
	};
       };
       camera_pos {x=0.1330452: y=1.966706: z=1.510137: };
       camera_orient {x=-0.9998338: y=-0.01805479: z=0.002513357: rot=0.7735013: };
       camera_focdist=2.122966;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[1] {
       m_data=NULL;
       name="ForceData";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GraphTableView @[0] {
	  m_data=$15$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[0]$165$;
	    m_transform=NULL;
	    name="shoulder_pos";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=269: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[1]$166$;
	    m_transform=NULL;
	    name="shoulder_vel";
	    visible=1;
	    fixed_range {fix_min=0: min=-0.3204734: fix_max=0: max=0.8388085: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[2]$167$;
	    m_transform=NULL;
	    name="shoulder_force_fmnet";
	    visible=1;
	    fixed_range {fix_min=0: min=-0.226577: fix_max=0: max=0.2204782: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[3]$168$;
	    m_transform=NULL;
	    name="shoulder_force_joint";
	    visible=1;
	    fixed_range {fix_min=0: min=-0.4007865: fix_max=0: max=1.535369: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[4]$169$;
	    m_transform=NULL;
	    name="elbow_pos";
	    visible=1;
	    fixed_range {fix_min=0: min=-0.05964108: fix_max=0: max=1.315451: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[5]$170$;
	    m_transform=NULL;
	    name="elbow_vel";
	    visible=1;
	    fixed_range {fix_min=0: min=-0.7146691: fix_max=0: max=0.406016: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[6]$171$;
	    m_transform=NULL;
	    name="elbow_force_fmnet";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    m_data=.projects[0].programs.gp[1][0].objs[3].data[7]$172$;
	    m_transform=NULL;
	    name="elbow_force_joint";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=2369: };
	  display_on=0;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="shoulder_pos";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=2369: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=2369: };
	   range {min=0: max=2369: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name="hand_pos_z";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="shoulder_vel";
	   fixed_range {fix_min=0: min=-0.3769589: fix_max=0: max=0.3019092: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.3769589: max=0.3019092: };
	   range {min=-0.3769589: max=0.3019092: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="shoulder_force_joint";
	   fixed_range {fix_min=0: min=-0.2432011: fix_max=0: max=0.09196404: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.2432011: max=0.1365595: };
	   range {min=-0.25: max=0.15: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="shoulder_force_fmnet";
	   fixed_range {fix_min=0: min=-0.08703549: fix_max=0: max=0.1365595: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=-0.08703549: max=0.1365595: };
	   range {min=-0.08703549: max=0.1365595: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=1;
	  alt_y_3=1;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=LINE;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=VALUE_COLOR;
	  negative_draw=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=-1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$163$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=1.457216: y=0.5148625: z=1.648544: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=1.661044;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[2] {
       m_data=NULL;
       name="PosData";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GraphTableView @[0] {
	  m_data=$16$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=.projects[0].programs.gp[1][0].objs[4].data[0]$173$;
	    m_transform=NULL;
	    name="hand_pos_x";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=.projects[0].programs.gp[1][0].objs[4].data[1]$174$;
	    m_transform=NULL;
	    name="hand_pos_z";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=.projects[0].programs.gp[1][0].objs[4].data[2]$175$;
	    m_transform=NULL;
	    name="goal_dist";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=.projects[0].programs.gp[1][0].objs[4].data[3]$176$;
	    m_transform=NULL;
	    name="rew_val";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=76: };
	  display_on=1;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="hand_pos_x";
	   fixed_range {fix_min=1: min=-0.3: fix_max=1: max=0.9: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.3: max=0.9: };
	   range {min=-0.3: max=0.9: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="hand_pos_z";
	   fixed_range {fix_min=1: min=-0.1: fix_max=1: max=0.7: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.1: max=0.7: };
	   range {min=-0.1: max=0.7: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="goal_dist";
	   fixed_range {fix_min=1: min=0: fix_max=1: max=1: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="rew_val";
	   fixed_range {fix_min=0: min=0.005243759: fix_max=0: max=0.7497318: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0.005243759: max=0.7497318: };
	   range {min=0.005243759: max=0.7497318: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=POINTS;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=FIXED_COLOR;
	  negative_draw=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=-1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$163$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=1.411304: y=1.641706: z=1.181584: };
       camera_orient {x=-0.9966293: y=-0.07854605: z=0.02369622: rot=0.6620544: };
       camera_focdist=1.700514;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
     };
    };
   };
   docks {
    name=;
    el_typ=DockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     m_data=NULL;
     name="Tools";
     visible=1;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 use_sim_log=0;
 networks {
  name=;
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   name="ArmNet";
   desc=;
   specs {
    name=;
    el_typ=LeabraUnitSpec;
    el_def=0;
    LeabraLayerSpec @[0] {
     name="HiddenLayer";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraLayerSpec;
      el_def=0;
      LeabraLayerSpec @[0] {
       name="Input_Output";
       desc=;
       unique{ compute_i;i_kwta_pt;kwta;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       inhib_group=ENTIRE_LAYER;
       kwta {k_from=USE_PAT_K: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       compute_i=KWTA_INHIB;
       i_kwta_pt=0.25;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
       net_rescale {on=0: max_net=0.6: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.1;
       };
      };
     };
     inhib_group=ENTIRE_LAYER;
     kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     compute_i=KWTA_AVG_INHIB;
     i_kwta_pt=0.6;
     gp_i_pt=0.2;
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: d_gain=0: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
     net_rescale {on=0: max_net=0.6: net_extra=0.2: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.1;
     };
    };
    FullPrjnSpec @[1] {
     name="FullPrjnSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
    };
    LeabraConSpec @[2] {
     name="LeabraConSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraConSpec;
      el_def=0;
      LeabraBiasSpec @[0] {
       name="LeabraBiasSpec_0";
       desc=;
       unique{ rnd;wt_limits;wt_scale;       };
       children {
	name=;
	el_typ=LeabraBiasSpec;
	el_def=0;
       };
       rnd {type=UNIFORM: mean=0: var=0: par=1: };
       wt_limits {type=NONE: min=-1: max=5: sym=0: };
       inhib=0;
       wt_scale {abs=1: rel=1: };
       wt_sig {gain=6: off=1.25: };
       lrate=0.02;
       cur_lrate=0.02;
       lrs_value=EPOCH;
       lrate_sched {
	name=;
	el_typ=SchedItem;
	el_def=0;
	last_ctr=-1;
	default_val=1;
	interpolate=0;
	cur_val=1;
       };
       lmix {hebb=0.001: err=0.999: err_sb=1: };
       savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.1;
       };
       dwt_thresh=0.1;
      };
      LeabraConSpec @[1] {
       name="ToForce";
       desc=;
       unique{ rnd;wt_sig;lmix;wt_limits;       };
       children {
	name=;
	el_typ=LeabraConSpec;
	el_def=0;
       };
       rnd {type=UNIFORM: mean=0.1: var=0: par=1: };
       wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
       inhib=0;
       wt_scale {abs=1: rel=1: };
       wt_sig {gain=1: off=1: };
       lrate=0.02;
       cur_lrate=0.02;
       lrs_value=EPOCH;
       lrate_sched {
	name=;
	el_typ=SchedItem;
	el_def=0;
	last_ctr=-1;
	default_val=1;
	interpolate=0;
	cur_val=1;
       };
       lmix {hebb=0: err=1: err_sb=0: };
       savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.1;
       };
      };
      LeabraConSpec @[2] {
       name="FmForce";
       desc=;
       unique{ wt_limits;       };
       children {
	name=;
	el_typ=LeabraConSpec;
	el_def=0;
       };
       rnd {type=UNIFORM: mean=0.5: var=0.25: par=1: };
       wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
       inhib=0;
       wt_scale {abs=1: rel=1: };
       wt_sig {gain=6: off=1.25: };
       lrate=0.02;
       cur_lrate=0.02;
       lrs_value=EPOCH;
       lrate_sched {
	name=;
	el_typ=SchedItem;
	el_def=0;
	last_ctr=-1;
	default_val=1;
	interpolate=0;
	cur_val=1;
       };
       lmix {hebb=0.001: err=0.999: err_sb=1: };
       savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.1;
       };
      };
     };
     rnd {type=UNIFORM: mean=0.5: var=0.25: par=1: };
     wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
     inhib=0;
     wt_scale {abs=1: rel=1: };
     wt_sig {gain=6: off=1.25: };
     lrate=0.02;
     cur_lrate=0.02;
     lrs_value=EPOCH;
     lrate_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=0;
      cur_val=1;
     };
     lmix {hebb=0.001: err=0.999: err_sb=1: };
     savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.1;
     };
    };
    TwoDValLayerSpec @[3] {
     name="PosRep";
     desc=;
     unique{ kwta;inhib_group;compute_i;i_kwta_pt;     };
     children {
      name=;
      el_typ=TwoDValLayerSpec;
      el_def=0;
     };
     inhib_group=ENTIRE_LAYER;
     kwta {k_from=USE_K: k=9: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_K: k=9: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     compute_i=KWTA_AVG_INHIB;
     i_kwta_pt=0.6;
     gp_i_pt=0.2;
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: d_gain=0: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
     net_rescale {on=0: max_net=0.6: net_extra=0.2: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.1;
     };
     twod {rep=GAUSSIAN: n_vals=1: un_width=0.2: norm_width=1: clamp_pat=0: min_sum_act=0.2: mn_dst=0.5: clip_val=1: };
     x_range {min=0: max=1: range=1: scale=1: };
     y_range {min=0: max=1: range=1: scale=1: };
     bias_val {un=NO_UN: un_gain=1: wt=NO_WT: wt_gain=1: x_val=0: y_val=0: };
     x_val_range {min=0.1: max=0.9: range=0.8: scale=1.25: };
     y_val_range {min=0.1: max=0.9: range=0.8: scale=1.25: };
    };
    MotorForceLayerSpec @[4] {
     name="ShoulderForceLayer";
     desc=;
     unique{ kwta;inhib_group;compute_i;i_kwta_pt;     };
     children {
      name=;
      el_typ=MotorForceLayerSpec;
      el_def=0;
      MotorForceLayerSpec @[0] {
       name="ElbowForceLayer";
       desc=;
       unique{ kwta;pos_range;gp_kwta;i_kwta_pt;       };
       children {
	name=;
	el_typ=MotorForceLayerSpec;
	el_def=0;
       };
       inhib_group=UNIT_GROUPS;
       kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       compute_i=KWTA_AVG_INHIB;
       i_kwta_pt=0.9;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
       net_rescale {on=0: max_net=0.6: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.1;
       };
       scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=1: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
       unit_range {min=-1: max=1: range=2: scale=0.5: };
       bias_val {un=BWT: un_shp=VAL: un_gain=0.5: wt=NO_WT: wt_gain=1: val=0: };
       val_range {min=-1: max=1: range=2: scale=0.5: };
       motor_force {pos_width=0.3: vel_width=0.3: norm_width=1: clip_vals=1: };
       pos_range {min=0: max=3: range=3: scale=0.3333333: };
       vel_range {min=-0.4: max=0.4: range=0.8: scale=1.25: };
       add_noise=1;
       force_noise {type=GAUSSIAN: mean=0: var=0: par=1: };
      };
      MotorForceLayerSpec @[1] {
       name="Force_In";
       desc=;
       unique{ kwta;inhib_group;compute_i;i_kwta_pt;gp_kwta;       };
       children {
	name=;
	el_typ=MotorForceLayerSpec;
	el_def=0;
       };
       inhib_group=UNIT_GROUPS;
       kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=1: act_pct=0.1: gp_i=0: gp_g=0.5: };
       compute_i=KWTA_AVG_INHIB;
       i_kwta_pt=0.9;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
       net_rescale {on=0: max_net=0.6: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.1;
       };
       scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=1: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
       unit_range {min=-1: max=1: range=2: scale=0.5: };
       bias_val {un=BWT: un_shp=VAL: un_gain=0.5: wt=NO_WT: wt_gain=1: val=0: };
       val_range {min=-1: max=1: range=2: scale=0.5: };
       motor_force {pos_width=0.3: vel_width=0.3: norm_width=1: clip_vals=1: };
       pos_range {min=0: max=2: range=2: scale=0.5: };
       vel_range {min=-0.4: max=0.4: range=0.8: scale=1.25: };
       add_noise=1;
       force_noise {type=GAUSSIAN: mean=0: var=0: par=1: };
      };
     };
     inhib_group=UNIT_GROUPS;
     kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     compute_i=KWTA_AVG_INHIB;
     i_kwta_pt=0.9;
     gp_i_pt=0.2;
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: d_gain=0: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
     net_rescale {on=0: max_net=0.6: net_extra=0.2: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.1;
     };
     scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=1: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
     unit_range {min=-1: max=1: range=2: scale=0.5: };
     bias_val {un=BWT: un_shp=VAL: un_gain=0.5: wt=NO_WT: wt_gain=1: val=0: };
     val_range {min=-1: max=1: range=2: scale=0.5: };
     motor_force {pos_width=0.3: vel_width=0.3: norm_width=1: clip_vals=1: };
     pos_range {min=0: max=2: range=2: scale=0.5: };
     vel_range {min=-0.4: max=0.4: range=0.8: scale=1.25: };
     add_noise=1;
     force_noise {type=GAUSSIAN: mean=0: var=0: par=1: };
    };
    DaModUnitSpec @[5] {
     name="DaModUnitSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=DaModUnitSpec;
      el_def=0;
      DaModUnitSpec @[0] {
       name="ForceUnits";
       desc=;
       unique{ act_fun;act;dt;g_bar;noise_type;noise;       };
       children {
	name=;
	el_typ=DaModUnitSpec;
	el_def=0;
       };
       act_range {min=0: max=1: range=1: scale=1: };
       bias_con_type=LeabraCon;
       bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs[2].children[0]$177$: };
       sse_tol=0.5;
       act_fun=NOISY_LINEAR;
       act {thr=0.17: gain=220: nvar=0.01: avg_dt=0.005: send_delta=1: i_thr=STD: };
       spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
       depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
       opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
       clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
       vm_range {min=0: max=1: range=1: scale=1: };
       v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
       dt {vm=0.05: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
       g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
       e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
       hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
       acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
       act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
       maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
       noise_type=VM_NOISE;
       noise {type=GAUSSIAN: mean=0: var=0.0003: par=1: };
       noise_sched {
	name=;
	el_typ=SchedItem;
	el_def=0;
	last_ctr=-1;
	default_val=1;
	interpolate=1;
	cur_val=1;
       };
       da_mod {on=1: mod=PLUS_CONT: gain=0.5: neg_rec=0.2: p_dwt=0: };
      };
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=$177$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
     spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
     depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
     opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=1: range=1: scale=1: };
     v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
     dt {vm=0.1: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
     g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
     e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
     hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
     acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
     act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     noise_type=NO_NOISE;
     noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
     noise_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=1;
      cur_val=0;
     };
     da_mod {on=1: mod=PLUS_CONT: gain=0.5: neg_rec=0.2: p_dwt=0: };
    };
    BaseSpec_Group @.gp[0] {
     name="PFC_BG_Units";
     el_typ=DaModUnitSpec;
     el_def=0;
     DaModUnitSpec @[0] {
      name="PVUnits";
      desc=;
      unique{ g_bar;act;act_fun;dt;opt_thresh;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
       DaModUnitSpec @[0] {
	name="LVUnits";
	desc=;
	unique{ 	};
	children {
	 name=;
	 el_typ=DaModUnitSpec;
	 el_def=0;
	};
	act_range {min=0: max=1: range=1: scale=1: };
	bias_con_type=LeabraCon;
	bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1]$178$: };
	sse_tol=0.5;
	act_fun=NOISY_LINEAR;
	act {thr=0.17: gain=220: nvar=0.01: avg_dt=0: send_delta=1: i_thr=STD: };
	spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
	depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
	opt_thresh {send=0: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
	clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
	vm_range {min=0: max=1: range=1: scale=1: };
	v_m_init {type=UNIFORM: mean=0.1500000059604645: var=0: par=1: };
	dt {vm=0.05: net=0.7: d_vm_max=0.025: vm_eq_cyc=100: vm_eq_dt=1: };
	g_bar {e=1: l=0.1: i=1: h=0.03: a=0.09: };
	e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
	hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
	acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
	act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
	maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
	noise_type=NO_NOISE;
	noise {type=GAUSSIAN: mean=0: var=0.001000000047497451: par=1: };
	noise_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=1;
	 cur_val=0;
	};
	da_mod {on=0: mod=PLUS_CONT: gain=0.1: neg_rec=0.2: p_dwt=0: };
       };
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=$178$: };
      sse_tol=0.5;
      act_fun=NOISY_LINEAR;
      act {thr=0.17: gain=220: nvar=0.01: avg_dt=0: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {type=UNIFORM: mean=0.1500000059604645: var=0: par=1: };
      dt {vm=0.05: net=0.7: d_vm_max=0.025: vm_eq_cyc=100: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.03: a=0.09: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
      acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {type=GAUSSIAN: mean=0: var=0.001000000047497451: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=0.1: neg_rec=0.2: p_dwt=0: };
     };
     DaModUnitSpec @[1] {
      name="DaUnits";
      desc=;
      unique{ act_range;clamp_range;act;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
      };
      act_range {min=-2: max=2: range=4: scale=0.25: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1].children[0]$179$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=600: nvar=0.005: avg_dt=0: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
      clamp_range {min=-2: max=2: range=4: scale=0.25: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {type=UNIFORM: mean=0.1500000059604645: var=0: par=1: };
      dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
      acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {type=GAUSSIAN: mean=0: var=0.001000000047497451: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=0.1: neg_rec=0.2: p_dwt=0: };
     };
    };
    BaseSpec_Group @.gp[1] {
     name="PFC_BG_Cons";
     el_typ=LeabraConSpec;
     el_def=0;
     LeabraConSpec @[0] {
      name="LearnCons";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=PVConSpec;
       el_def=0;
       PVConSpec @[0] {
	name="PVi";
	desc=;
	unique{ lmix;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	};
	children {
	 name=;
	 el_typ=PVConSpec;
	 el_def=0;
	 PVConSpec @[0] {
	  name="PVr";
	  desc=;
	  unique{ lmix;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	  };
	  children {
	   name=;
	   el_typ=PVConSpec;
	   el_def=0;
	  };
	  rnd {type=UNIFORM: mean=0.1000000014901161: var=0: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_sig {gain=1: off=1: };
	  lrate=0.02;
	  cur_lrate=0.02;
	  lrs_value=NO_LRS;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=0;
	  };
	  lmix {hebb=0: err=1: err_sb=0: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.1;
	  };
	 };
	 PVConSpec @[1] {
	  name="LVe";
	  desc=;
	  unique{ lrate;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	  };
	  children {
	   name=;
	   el_typ=PVConSpec;
	   el_def=0;
	   PVConSpec @[0] {
	    name="LVi";
	    desc=;
	    unique{ lrate;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	    };
	    children {
	     name=;
	     el_typ=PVConSpec;
	     el_def=0;
	    };
	    rnd {type=UNIFORM: mean=0.1000000014901161: var=0: par=1: };
	    wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	    inhib=0;
	    wt_scale {abs=1: rel=1: };
	    wt_sig {gain=1: off=1: };
	    lrate=0.001;
	    cur_lrate=0.001;
	    lrs_value=NO_LRS;
	    lrate_sched {
	     name=;
	     el_typ=SchedItem;
	     el_def=0;
	     last_ctr=-1;
	     default_val=1;
	     interpolate=0;
	     cur_val=0;
	    };
	    lmix {hebb=0: err=1: err_sb=0: };
	    savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	    rel_net_adapt {
	     on=0;
	     trg_fm_input=0.85;
	     trg_fm_output=0.15;
	     trg_lateral=0;
	     trg_sum=1;
	     tol_lg=0.05;
	     tol_sm=0.2;
	     rel_lrate=0.1;
	    };
	   };
	  };
	  rnd {type=UNIFORM: mean=0.1000000014901161: var=0: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_sig {gain=1: off=1: };
	  lrate=0.05;
	  cur_lrate=0.05;
	  lrs_value=NO_LRS;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=0;
	  };
	  lmix {hebb=0: err=1: err_sb=0: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.1;
	  };
	 };
	};
	rnd {type=UNIFORM: mean=0.1000000014901161: var=0: par=1: };
	wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_sig {gain=1: off=1: };
	lrate=0.01;
	cur_lrate=0.01;
	lrs_value=NO_LRS;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=0;
	};
	lmix {hebb=0: err=1: err_sb=0: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.1;
	};
       };
       LeabraBiasSpec @[1] {
	name="BgBias";
	desc=;
	unique{ rnd;wt_limits;wt_scale;lrate;	};
	children {
	 name=;
	 el_typ=LeabraBiasSpec;
	 el_def=0;
	 LeabraBiasSpec @[0] {
	  name="FixedBias";
	  desc=;
	  unique{ rnd;wt_limits;wt_scale;lrate;	  };
	  children {
	   name=;
	   el_typ=LeabraBiasSpec;
	   el_def=0;
	  };
	  rnd {type=UNIFORM: mean=0: var=0: par=1: };
	  wt_limits {type=NONE: min=-1: max=5: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0;
	  lrs_value=EPOCH;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.1;
	  };
	  dwt_thresh=0.1;
	 };
	};
	rnd {type=UNIFORM: mean=0: var=0: par=1: };
	wt_limits {type=NONE: min=-1: max=5: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_sig {gain=6: off=1.25: };
	lrate=0;
	cur_lrate=0;
	lrs_value=EPOCH;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=1;
	};
	lmix {hebb=0.001: err=0.999: err_sb=1: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.1;
	};
	dwt_thresh=0.1;
       };
      };
      rnd {type=UNIFORM: mean=0.5: var=0.25: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
      inhib=0;
      wt_scale {abs=1: rel=1: };
      wt_sig {gain=6: off=1.25: };
      lrate=0.01;
      cur_lrate=0.01;
      lrs_value=EPOCH;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=0;
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.1;
      };
     };
     MarkerConSpec @[1] {
      name="MarkerCons";
      desc=;
      unique{ rnd;wt_limits;wt_scale;lrate;      };
      children {
       name=;
       el_typ=MarkerConSpec;
       el_def=0;
      };
      rnd {type=UNIFORM: mean=0: var=0: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
      inhib=0;
      wt_scale {abs=1: rel=0: };
      wt_sig {gain=6: off=1.25: };
      lrate=0;
      cur_lrate=0;
      lrs_value=EPOCH;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=1;
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.1;
      };
     };
    };
    BaseSpec_Group @.gp[2] {
     name="PFC_BG_Layers";
     el_typ=ExtRewLayerSpec;
     el_def=0;
     ExtRewLayerSpec @[0] {
      name="PVeLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=ExtRewLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=1: };
      net_rescale {on=0: max_net=0.6: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.1;
      };
      scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=NO_UN: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0: };
      val_range {min=0: max=1: range=1: scale=1: };
      rew_type=EXT_REW;
      avg_rew {sub_avg=0: avg_dt=0.005: };
      out_err {err_tol=0.5: graded=0: no_off_err=0: seq_all_cor=0: };
      rew {err_val=0: norew_val=0.5: rew_val=1: };
     };
     PVrLayerSpec @[1] {
      name="PVrLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=PVrLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.6: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.1;
      };
      scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
      val_range {min=0: max=1: range=1: scale=1: };
      pv_detect {thr_min=0.4: thr_max=0.6: };
     };
     PViLayerSpec @[2] {
      name="PViLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=PViLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.6: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.1;
      };
      scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
      val_range {min=0: max=1: range=1: scale=1: };
      pv_detect {thr_min=0.2: thr_max=0.8: };
     };
     LVeLayerSpec @[3] {
      name="LVeLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=LViLayerSpec;
       el_def=0;
       LViLayerSpec @[0] {
	name="LViLayer";
	desc=;
	unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;	};
	children {
	 name=;
	 el_typ=LViLayerSpec;
	 el_def=0;
	};
	inhib_group=ENTIRE_LAYER;
	kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	compute_i=KWTA_AVG_INHIB;
	i_kwta_pt=0.9;
	gp_i_pt=0.2;
	tie_brk {on=0: k_thr=1: diff_thr=0.2: };
	adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
	clamp {hard=1: gain=0.5: d_gain=0: };
	decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
	net_rescale {on=0: max_net=0.6: net_extra=0.2: };
	abs_net_adapt {
	 on=0;
	 trg_net=0.5;
	 tol=0.1;
	 abs_lrate=0.1;
	};
	scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
	unit_range {min=0: max=1: range=1: scale=1: };
	bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
	val_range {min=0: max=1: range=1: scale=1: };
	lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
       };
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.6: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.1;
      };
      scalar {rep=LOCALIST: un_width=0.3: norm_width=0: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
      val_range {min=0: max=1: range=1: scale=1: };
      lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
     };
     PVLVDaLayerSpec @[4] {
      name="DALayer";
      desc=;
      unique{ decay;kwta;inhib_group;compute_i;i_kwta_pt;      };
      children {
       name=;
       el_typ=PVLVDaLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_INHIB;
      i_kwta_pt=0.25;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.6: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.1;
      };
      da {da_gain=1: tonic_da=0: use_actual_er=0: syn_dep=0: min_lvi=0.1: };
     };
    };
    BaseSpec_Group @.gp[3] {
     name="PFC_BG_Prjns";
     el_typ=FullPrjnSpec;
     el_def=0;
     FullPrjnSpec @[0] {
      name="FullPrjn";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=FullPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
     };
     OneToOnePrjnSpec @[1] {
      name="OneToOne";
      desc=;
      unique{ self_con;      };
      children {
       name=;
       el_typ=OneToOnePrjnSpec;
       el_def=0;
      };
      self_con=1;
      init_wts=0;
      n_conns=-1;
      recv_start=0;
      send_start=0;
     };
    };
   };
   layers {
    name=;
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    LeabraLayer @[0] {
     name="RewTarg";
     flags=;
     layer_type=INPUT;
     pos {x=0: y=6: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=1: y=1: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs[5]$180$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0: max=0: max_i=0: };
     acts_m {avg=0: max=0: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=1: pct=1: pct_c=0: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=1: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[0]$181$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[1] {
     name="PVe";
     flags=;
     layer_type=TARGET;
     pos {x=0: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_RewTarg";
       from_type=CUSTOM;
       from=$92$;
       spec {type=OneToOnePrjnSpec: spec=.projects[0].networks[0].specs.gp[3][1]$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=.projects[0].networks[0].specs.gp[1][1]$183$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Elbow_Out";
       from_type=CUSTOM;
       from=$105$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_HandPos_Out";
       from_type=CUSTOM;
       from=$106$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=2;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_Shoulder_Out";
       from_type=CUSTOM;
       from=$104$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=3;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[0];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][0]$184$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3333333: max=0.6965912: max_i=1: };
     acts_m {avg=0.3166667: max=0.95: max_i=2: };
     phase_dif_ratio=0.95;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=ExtRewLayerSpec: spec=.projects[0].networks[0].specs.gp[2][0]$185$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[2] {
     name="PVr";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=4: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVe";
       from_type=CUSTOM;
       from=$93$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=11;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Elbow_In";
       from_type=CUSTOM;
       from=$100$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs.gp[3][0]$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0].children[0]$187$: };
       recv_idx=2;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_HandGoal_In";
       from_type=CUSTOM;
       from=$101$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$187$: };
       recv_idx=3;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[4] {
       name="Fm_HandPos_In";
       from_type=CUSTOM;
       from=$102$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$187$: };
       recv_idx=4;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[5] {
       name="Fm_Shoulder_In";
       from_type=CUSTOM;
       from=$99$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$187$: };
       recv_idx=5;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[6] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$103$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$187$: };
       recv_idx=6;
       send_idx=6;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[4].projections[2];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[5].projections[2];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[6].projections[3];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$184$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3558573: max=0.7536246: max_i=1: };
     acts_m {avg=0.3662673: max=0.7475473: max_i=1: };
     phase_dif_ratio=1.029253;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=6.633037: k1_ithr=3.064422: ithr_r=0.7722038: ithr_diff=0.5380062: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PVrLayerSpec: spec=.projects[0].networks[0].specs.gp[2][1]$188$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[3] {
     name="PVi";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=2: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVe";
       from_type=CUSTOM;
       from=$93$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=10;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Elbow_In";
       from_type=CUSTOM;
       from=$100$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0]$189$: };
       recv_idx=2;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_HandGoal_In";
       from_type=CUSTOM;
       from=$101$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$189$: };
       recv_idx=3;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[4] {
       name="Fm_HandPos_In";
       from_type=CUSTOM;
       from=$102$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$189$: };
       recv_idx=4;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[5] {
       name="Fm_Shoulder_In";
       from_type=CUSTOM;
       from=$99$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$189$: };
       recv_idx=5;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[6] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$103$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$189$: };
       recv_idx=6;
       send_idx=5;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[4].projections[0];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[5].projections[0];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[6].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$184$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3367836: max=0.7459868: max_i=1: };
     acts_m {avg=0.348697: max=0.7387491: max_i=1: };
     phase_dif_ratio=1.035374;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=5.404939: k1_ithr=2.661342: ithr_r=0.7084828: ithr_diff=0.5076093: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PViLayerSpec: spec=.projects[0].networks[0].specs.gp[2][2]$190$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[4] {
     name="LVe";
     flags=;
     layer_type=HIDDEN;
     pos {x=9: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$95$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=9;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_PVr";
       from_type=CUSTOM;
       from=$94$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=2;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_Elbow_In";
       from_type=CUSTOM;
       from=$100$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0].children[1]$191$: };
       recv_idx=3;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[4] {
       name="Fm_HandGoal_In";
       from_type=CUSTOM;
       from=$101$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$191$: };
       recv_idx=4;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[5] {
       name="Fm_HandPos_In";
       from_type=CUSTOM;
       from=$102$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$191$: };
       recv_idx=5;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[6] {
       name="Fm_Shoulder_In";
       from_type=CUSTOM;
       from=$99$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$191$: };
       recv_idx=6;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[7] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$103$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$191$: };
       recv_idx=7;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[6].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][0].children[0]$192$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3653629: max=0.7626678: max_i=1: };
     acts_m {avg=0.3705957: max=0.7588614: max_i=1: };
     phase_dif_ratio=1.014322;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=9.191623: k1_ithr=3.891796: ithr_r=0.8594217: ithr_diff=0.5765932: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LVeLayerSpec: spec=.projects[0].networks[0].specs.gp[2][3]$193$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[5] {
     name="LVi";
     flags=;
     layer_type=HIDDEN;
     pos {x=9: y=2: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$95$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=8;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_PVr";
       from_type=CUSTOM;
       from=$94$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=2;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_Elbow_In";
       from_type=CUSTOM;
       from=$100$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0].children[1].children[0]$194$: };
       recv_idx=3;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[4] {
       name="Fm_HandGoal_In";
       from_type=CUSTOM;
       from=$101$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$194$: };
       recv_idx=4;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[5] {
       name="Fm_HandPos_In";
       from_type=CUSTOM;
       from=$102$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$194$: };
       recv_idx=5;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[6] {
       name="Fm_Shoulder_In";
       from_type=CUSTOM;
       from=$99$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$194$: };
       recv_idx=6;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[7] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$103$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$194$: };
       recv_idx=7;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[6].projections[2];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$192$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3159629: max=0.6936616: max_i=1: };
     acts_m {avg=0.3256368: max=0.687478: max_i=1: };
     phase_dif_ratio=1.030617;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.149265: k1_ithr=2.204615: ithr_r=0.3566161: ithr_diff=0.2999587: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LViLayerSpec: spec=.projects[0].networks[0].specs.gp[2][3].children[0]$195$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[6] {
     name="DA";
     flags=;
     layer_type=HIDDEN;
     pos {x=18: y=0: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$95$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_LVe";
       from_type=CUSTOM;
       from=$96$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_LVi";
       from_type=CUSTOM;
       from=$97$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=2;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_PVr";
       from_type=CUSTOM;
       from=$94$;
       spec {type=OneToOnePrjnSpec: spec=$182$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=3;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[1];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[1];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[5].projections[1];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[8].projections[0];
	    Projection_Group @. = [5] = LeabraPrjn .projects[0].networks[0].layers[13].projections[1];
	    Projection_Group @. = [6] = LeabraPrjn .projects[0].networks[0].layers[9].projections[0];
	    Projection_Group @. = [7] = LeabraPrjn .projects[0].networks[0].layers[10].projections[0];
	    Projection_Group @. = [8] = LeabraPrjn .projects[0].networks[0].layers[14].projections[1];
	    Projection_Group @. = [9] = LeabraPrjn .projects[0].networks[0].layers[11].projections[7];
	    Projection_Group @. = [10] = LeabraPrjn .projects[0].networks[0].layers[7].projections[0];
	    Projection_Group @. = [11] = LeabraPrjn .projects[0].networks[0].layers[12].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=1: y=1: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][1]$196$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.03020155: max=0.03020155: max_i=0: };
     acts_m {avg=-0.02298799: max=-0.02298799: max_i=0: };
     phase_dif_ratio=-0.7611528;
     kwta {k=1: pct=1: pct_c=0: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=1: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PVLVDaLayerSpec: spec=.projects[0].networks[0].specs.gp[2][4]$197$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=-0.02298799;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[7] {
     name="Shoulder_In";
     flags=;
     layer_type=INPUT;
     pos {x=0: y=0: z=2: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=1;
     gp_geom {x=5: y=5: n_not_xy=0: n=25: };
     gp_spc {x=1: y=1: };
     act_geom {x=24: y=9: n_not_xy=0: n=25: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=7;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[0];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[2].projections[5];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[3].projections[5];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[4].projections[6];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[5].projections[6];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.04346066: max=0.130382: max_i=2: };
       acts_m {avg=0.04346066: max=0.130382: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[4] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[5] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[6] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1507664: max=0.4522993: max_i=2: };
       acts_m {avg=0.1507664: max=0.4522993: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[7] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.2305209: max=0.6915628: max_i=2: };
       acts_m {avg=0.2305209: max=0.6915628: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[8] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.08788794: max=0.2636638: max_i=2: };
       acts_m {avg=0.08788794: max=0.2636638: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[9] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[10] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[11] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1994031: max=0.5982092: max_i=2: };
       acts_m {avg=0.1994031: max=0.5982092: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[12] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.304886: max=0.9146581: max_i=2: };
       acts_m {avg=0.304886: max=0.9146581: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[13] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1162402: max=0.3487207: max_i=2: };
       acts_m {avg=0.1162402: max=0.3487207: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[14] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[15] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[16] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.06576158: max=0.1972847: max_i=2: };
       acts_m {avg=0.06576158: max=0.1972847: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[17] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.100549: max=0.3016471: max_i=2: };
       acts_m {avg=0.100549: max=0.3016471: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[18] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.03833512: max=0.1150054: max_i=2: };
       acts_m {avg=0.03833512: max=0.1150054: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[19] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[20] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[21] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[22] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[23] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[24] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0.709402: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs[5].children[0]$198$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.05351244: max=0.9146581: max_i=12: };
     acts_m {avg=0.05351244: max=0.9146581: max_i=12: };
     phase_dif_ratio=1;
     kwta {k=25: pct=0.1: pct_c=0.75: adth_k=1: k_ithr=-0.1: k1_ithr=-0.1: ithr_r=0: ithr_diff=-0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.1: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=MotorForceLayerSpec: spec=.projects[0].networks[0].specs[4].children[1]$199$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[8] {
     name="Elbow_In";
     flags=;
     layer_type=INPUT;
     pos {x=0: y=11: z=2: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=1;
     gp_geom {x=5: y=5: n_not_xy=0: n=25: };
     gp_spc {x=1: y=1: };
     act_geom {x=24: y=9: n_not_xy=0: n=25: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=6;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[2].projections[2];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[3].projections[2];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[4].projections[3];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[5].projections[3];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[4] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[5] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[6] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.06034056: max=0.1810217: max_i=2: };
       acts_m {avg=0.06034056: max=0.1810217: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[7] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1625394: max=0.4876181: max_i=2: };
       acts_m {avg=0.1625394: max=0.4876181: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[8] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1091745: max=0.3275235: max_i=2: };
       acts_m {avg=0.1091745: max=0.3275235: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[9] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[10] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[11] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1198882: max=0.3596647: max_i=2: };
       acts_m {avg=0.1198882: max=0.3596647: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[12] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3166667: max=0.95: max_i=2: };
       acts_m {avg=0.3166667: max=0.95: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[13] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.2169144: max=0.6507431: max_i=2: };
       acts_m {avg=0.2169144: max=0.6507431: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[14] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.0363299: max=0.1089897: max_i=2: };
       acts_m {avg=0.0363299: max=0.1089897: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[15] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[16] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.05939597: max=0.1781879: max_i=2: };
       acts_m {avg=0.05939597: max=0.1781879: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[17] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1599949: max=0.4799848: max_i=2: };
       acts_m {avg=0.1599949: max=0.4799848: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[18] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1074654: max=0.3223963: max_i=2: };
       acts_m {avg=0.1074654: max=0.3223963: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[19] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[20] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[21] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[22] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[23] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[24] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=1: };
       acts_m {avg=0: max=0: max_i=1: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=$198$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.05394839: max=0.95: max_i=12: };
     acts_m {avg=0.05394839: max=0.95: max_i=12: };
     phase_dif_ratio=1;
     kwta {k=25: pct=0.1: pct_c=0.75: adth_k=1: k_ithr=-0.05849999: k1_ithr=-0.08993937: ithr_r=0: ithr_diff=-0.5374253: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.1: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=MotorForceLayerSpec: spec=$199$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[9] {
     name="HandGoal_In";
     flags=;
     layer_type=INPUT;
     pos {x=52: y=12: z=2: };
     un_geom {x=10: y=11: n_not_xy=0: n=110: };
     unit_groups=0;
     gp_geom {x=5: y=5: n_not_xy=0: n=25: };
     gp_spc {x=1: y=1: };
     act_geom {x=10: y=11: n_not_xy=0: n=110: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=5;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[3];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[2].projections[3];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[3].projections[3];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[4].projections[4];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[5].projections[4];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=10: y=11: n_not_xy=0: n=110: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$180$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.09110025: max=0.95: max_i=47: };
     acts_m {avg=0.09110025: max=0.95: max_i=47: };
     phase_dif_ratio=1;
     kwta {k=9: pct=0.08181818: pct_c=0.9181818: adth_k=1: k_ithr=-0.1: k1_ithr=-0.1: ithr_r=0: ithr_diff=-1.490116e-07: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.08181818: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=TwoDValLayerSpec: spec=.projects[0].networks[0].specs[3]$200$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[10] {
     name="HandPos_In";
     flags=;
     layer_type=INPUT;
     pos {x=52: y=0: z=2: };
     un_geom {x=10: y=11: n_not_xy=0: n=110: };
     unit_groups=0;
     gp_geom {x=5: y=5: n_not_xy=0: n=25: };
     gp_spc {x=1: y=1: };
     act_geom {x=10: y=11: n_not_xy=0: n=110: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=0;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[2];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[2].projections[4];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[3].projections[4];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[4].projections[5];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[5].projections[5];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=10: y=11: n_not_xy=0: n=110: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$180$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.09222662: max=0.95: max_i=54: };
     acts_m {avg=0.09004541: max=0.95: max_i=55: };
     phase_dif_ratio=0.9763495;
     kwta {k=9: pct=0.08181818: pct_c=0.9181818: adth_k=1: k_ithr=-0.1: k1_ithr=-0.1: ithr_r=0: ithr_diff=-1.490116e-07: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.08181818: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=TwoDValLayerSpec: spec=$200$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[11] {
     name="Hidden";
     flags=;
     layer_type=HIDDEN;
     pos {x=3: y=0: z=1: };
     un_geom {x=10: y=10: n_not_xy=0: n=100: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=10: y=10: n_not_xy=0: n=100: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Shoulder_In";
       from_type=CUSTOM;
       from=$99$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs[1]$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs[2]$202$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Elbow_In";
       from_type=CUSTOM;
       from=$100$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$202$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_HandPos_In";
       from_type=CUSTOM;
       from=$102$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$202$: };
       recv_idx=2;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_HandGoal_In";
       from_type=CUSTOM;
       from=$101$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$202$: };
       recv_idx=3;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[4] {
       name="Fm_Shoulder_Out";
       from_type=CUSTOM;
       from=$104$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs[2].children[2]$203$: };
       recv_idx=4;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[5] {
       name="Fm_Elbow_Out";
       from_type=CUSTOM;
       from=$105$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$203$: };
       recv_idx=5;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[6] {
       name="Fm_HandPos_Out";
       from_type=CUSTOM;
       from=$106$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$202$: };
       recv_idx=6;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[7] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=7;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[12].projections[0];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[13].projections[0];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[14].projections[0];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[2].projections[6];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[3].projections[6];
	    Projection_Group @. = [5] = LeabraPrjn .projects[0].networks[0].layers[4].projections[7];
	    Projection_Group @. = [6] = LeabraPrjn .projects[0].networks[0].layers[5].projections[7];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=10: y=10: n_not_xy=0: n=100: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$180$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.1832643: max=0.5787607: max_i=11: };
     acts_m {avg=0.1806843: max=0.6076834: max_i=11: };
     phase_dif_ratio=0.9859217;
     kwta {k=25: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=2.779658: k1_ithr=2.596108: ithr_r=0.06831425: ithr_diff=0.0660331: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=$181$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[12] {
     name="Shoulder_Out";
     flags=;
     layer_type=OUTPUT;
     pos {x=26: y=0: z=2: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=1;
     gp_geom {x=5: y=5: n_not_xy=0: n=25: };
     gp_spc {x=1: y=1: };
     act_geom {x=24: y=9: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$103$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs[2].children[1]$204$: };
       recv_idx=0;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[4];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[1].projections[3];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3125006: max=0.7427624: max_i=2: };
       acts_m {avg=0.3564192: max=0.8299664: max_i=2: };
       phase_dif_ratio=1.140539;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.363268: k1_ithr=2.503759: ithr_r=0.5554281: ithr_diff=0.4261734: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4396891: max=0.9181921: max_i=2: };
       acts_m {avg=0.3499711: max=0.6805291: max_i=2: };
       phase_dif_ratio=0.7959514;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.927459: k1_ithr=2.612997: ithr_r=0.4074948: ithr_diff=0.3346851: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3678423: max=0.832222: max_i=3: };
       acts_m {avg=0.3273669: max=0.7257898: max_i=3: };
       phase_dif_ratio=0.8899652;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.676277: k1_ithr=2.6896: ithr_r=0.5531098: ithr_diff=0.4248416: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4361682: max=0.9027563: max_i=2: };
       acts_m {avg=0.4478584: max=0.825306: max_i=2: };
       phase_dif_ratio=1.026802;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.326462: k1_ithr=2.459822: ithr_r=0.3018204: ithr_diff=0.2605291: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[4] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3325357: max=0.7319734: max_i=3: };
       acts_m {avg=0.3488226: max=0.7935676: max_i=3: };
       phase_dif_ratio=1.048978;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.5675: k1_ithr=2.67446: ithr_r=0.5352184: ithr_diff=0.4144586: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[5] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5109891: max=0.7067803: max_i=1: };
       acts_m {avg=0.4916158: max=0.6520633: max_i=1: };
       phase_dif_ratio=0.9620866;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.014655: k1_ithr=2.996157: ithr_r=0.2926208: ithr_diff=0.253695: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[6] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.439519: max=0.6762918: max_i=2: };
       acts_m {avg=0.516557: max=0.8341673: max_i=2: };
       phase_dif_ratio=1.175278;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.715233: k1_ithr=2.751436: ithr_r=0.3003184: ithr_diff=0.2594176: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[7] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5877208: max=0.8711229: max_i=2: };
       acts_m {avg=0.5376687: max=0.6846988: max_i=2: };
       phase_dif_ratio=0.9148369;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.249591: k1_ithr=2.781696: ithr_r=0.1554682: ithr_diff=0.1439857: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[8] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3227243: max=0.7693157: max_i=3: };
       acts_m {avg=0.2859997: max=0.6418468: max_i=3: };
       phase_dif_ratio=0.8862044;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.411004: k1_ithr=2.463079: ithr_r=0.5826899: ithr_diff=0.4416057: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[9] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5327478: max=0.5822602: max_i=1: };
       acts_m {avg=0.6245813: max=0.6845378: max_i=1: };
       phase_dif_ratio=1.172377;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.164019: k1_ithr=2.85483: ithr_r=0.1028307: ithr_diff=0.0977203: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[10] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5056033: max=0.8957382: max_i=2: };
       acts_m {avg=0.4605363: max=0.8502108: max_i=2: };
       phase_dif_ratio=0.9108649;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.083848: k1_ithr=2.908421: ithr_r=0.3394294: ithr_diff=0.2878234: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[11] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4643947: max=0.7764289: max_i=2: };
       acts_m {avg=0.4846605: max=0.7292495: max_i=2: };
       phase_dif_ratio=1.043639;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.777371: k1_ithr=2.859884: ithr_r=0.2782473: ithr_diff=0.2428904: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[12] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4593148: max=0.7852462: max_i=1: };
       acts_m {avg=0.4086291: max=0.6141135: max_i=1: };
       phase_dif_ratio=0.8896493;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.114641: k1_ithr=2.805247: ithr_r=0.3830598: ithr_diff=0.3182279: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[13] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4448607: max=0.9099898: max_i=2: };
       acts_m {avg=0.4656225: max=0.8523763: max_i=2: };
       phase_dif_ratio=1.04667;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.267713: k1_ithr=2.931985: ithr_r=0.3753985: ithr_diff=0.3129846: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[14] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.563664: max=0.7054971: max_i=3: };
       acts_m {avg=0.6090208: max=0.780829: max_i=3: };
       phase_dif_ratio=1.080468;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.247736: k1_ithr=2.746638: ithr_r=0.1675807: ithr_diff=0.1542917: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[15] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5681383: max=0.7224842: max_i=2: };
       acts_m {avg=0.5629747: max=0.7339059: max_i=2: };
       phase_dif_ratio=0.9909114;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.567674: k1_ithr=2.987522: ithr_r=0.1774694: ithr_diff=0.1626134: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[16] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3789085: max=0.6979525: max_i=3: };
       acts_m {avg=0.392727: max=0.6669256: max_i=3: };
       phase_dif_ratio=1.036469;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.914267: k1_ithr=2.620391: ithr_r=0.4013045: ithr_diff=0.3305538: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[17] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3501012: max=0.8336504: max_i=2: };
       acts_m {avg=0.3572937: max=0.8308989: max_i=2: };
       phase_dif_ratio=1.020544;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.532521: k1_ithr=2.623867: ithr_r=0.5466291: ithr_diff=0.4211021: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[18] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3850936: max=0.7499866: max_i=2: };
       acts_m {avg=0.3944708: max=0.6992702: max_i=2: };
       phase_dif_ratio=1.024351;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.524307: k1_ithr=2.562127: ithr_r=0.318846: ithr_diff=0.2730125: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[19] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3568563: max=0.754649: max_i=3: };
       acts_m {avg=0.3681444: max=0.6912858: max_i=3: };
       phase_dif_ratio=1.031632;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.271584: k1_ithr=2.800338: ithr_r=0.4222447: ithr_diff=0.3444264: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[20] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3564994: max=0.8617336: max_i=2: };
       acts_m {avg=0.3822591: max=0.9144132: max_i=2: };
       phase_dif_ratio=1.072257;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.462948: k1_ithr=2.189733: ithr_r=0.4583409: ithr_diff=0.3676681: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[21] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4710638: max=0.7903317: max_i=1: };
       acts_m {avg=0.4472414: max=0.6615732: max_i=1: };
       phase_dif_ratio=0.9494286;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.155292: k1_ithr=2.911041: ithr_r=0.3558717: ithr_diff=0.2994376: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[22] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5667968: max=0.8609543: max_i=2: };
       acts_m {avg=0.5089106: max=0.6441689: max_i=2: };
       phase_dif_ratio=0.8978713;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.793409: k1_ithr=2.951267: ithr_r=0.2510305: ithr_diff=0.2220013: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[23] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3518112: max=0.8531326: max_i=1: };
       acts_m {avg=0.3999604: max=0.9655982: max_i=1: };
       phase_dif_ratio=1.136861;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.630911: k1_ithr=2.582392: ithr_r=0.5840374: ithr_diff=0.4423576: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[24] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4290213: max=0.8530024: max_i=1: };
       acts_m {avg=0.4028884: max=0.8002385: max_i=1: };
       phase_dif_ratio=0.9390872;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.638177: k1_ithr=2.612489: ithr_r=0.3311791: ithr_diff=0.2819234: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=$198$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.4373826: max=0.9181921: max_i=1: };
     acts_m {avg=0.437288: max=0.9655982: max_i=23: };
     phase_dif_ratio=0.9997838;
     kwta {k=25: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=22.68559: k1_ithr=21.97087: ithr_r=0.03201251: ithr_diff=0.03150554: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=MotorForceLayerSpec: spec=$62$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[13] {
     name="Elbow_Out";
     flags=;
     layer_type=OUTPUT;
     pos {x=26: y=11: z=2: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=1;
     gp_geom {x=5: y=5: n_not_xy=0: n=25: };
     gp_spc {x=1: y=1: };
     act_geom {x=24: y=9: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$103$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$204$: };
       recv_idx=0;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[5];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[1].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      output_name=;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4954493: max=0.728479: max_i=3: };
       acts_m {avg=0.533998: max=0.7921794: max_i=3: };
       phase_dif_ratio=1.077805;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.527121: k1_ithr=2.843311: ithr_r=0.2155126: ithr_diff=0.1938719: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4322072: max=0.7063283: max_i=1: };
       acts_m {avg=0.4609642: max=0.734834: max_i=1: };
       phase_dif_ratio=1.066535;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.772096: k1_ithr=2.670889: ithr_r=0.3452196: ithr_diff=0.2919351: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3458504: max=0.7260738: max_i=2: };
       acts_m {avg=0.3809312: max=0.8225967: max_i=2: };
       phase_dif_ratio=1.101433;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.559738: k1_ithr=2.397185: ithr_r=0.3953916: ithr_diff=0.3265837: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4292219: max=0.8599318: max_i=2: };
       acts_m {avg=0.4546095: max=0.8402351: max_i=2: };
       phase_dif_ratio=1.059148;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.680826: k1_ithr=2.680699: ithr_r=0.3170595: ithr_diff=0.2717126: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[4] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.363284: max=0.7957733: max_i=3: };
       acts_m {avg=0.3448425: max=0.7259353: max_i=3: };
       phase_dif_ratio=0.9492367;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.381873: k1_ithr=2.61628: ithr_r=0.5157227: ithr_diff=0.4029311: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[5] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4207693: max=0.6632892: max_i=2: };
       acts_m {avg=0.4479986: max=0.6800563: max_i=2: };
       phase_dif_ratio=1.064713;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.916744: k1_ithr=2.886036: ithr_r=0.3053769: ithr_diff=0.2631544: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[6] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5762936: max=0.710879: max_i=3: };
       acts_m {avg=0.5697175: max=0.724898: max_i=3: };
       phase_dif_ratio=0.9885889;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.741322: k1_ithr=3.09884: ithr_r=0.1884111: ithr_diff=0.1717259: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[7] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.347308: max=0.7526864: max_i=3: };
       acts_m {avg=0.3675642: max=0.8030876: max_i=3: };
       phase_dif_ratio=1.058324;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.484303: k1_ithr=2.729698: ithr_r=0.4963919: ithr_diff=0.391277: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[8] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3095015: max=0.761722: max_i=3: };
       acts_m {avg=0.2826283: max=0.7006677: max_i=3: };
       phase_dif_ratio=0.9131727;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.607596: k1_ithr=2.354228: ithr_r=0.6714933: ithr_diff=0.489055: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[9] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=2: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3496587: max=0.735298: max_i=1: };
       acts_m {avg=0.3813528: max=0.7189777: max_i=1: };
       phase_dif_ratio=1.090643;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.013381: k1_ithr=2.660142: ithr_r=0.4112548: ithr_diff=0.337182: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[10] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5009797: max=0.6362485: max_i=3: };
       acts_m {avg=0.5570371: max=0.799507: max_i=3: };
       phase_dif_ratio=1.111895;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.115185: k1_ithr=2.654011: ithr_r=0.1602165: ithr_diff=0.1480406: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[11] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4437338: max=0.73366: max_i=2: };
       acts_m {avg=0.4528447: max=0.7769823: max_i=2: };
       phase_dif_ratio=1.020532;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.883602: k1_ithr=2.815274: ithr_r=0.3217036: ithr_diff=0.275087: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[12] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3914098: max=0.9948838: max_i=2: };
       acts_m {avg=0.3321276: max=0.8125731: max_i=2: };
       phase_dif_ratio=0.848542;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.666158: k1_ithr=2.467084: ithr_r=0.6372992: ithr_diff=0.4712816: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[13] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3725758: max=0.8526693: max_i=1: };
       acts_m {avg=0.3436267: max=0.7238712: max_i=1: };
       phase_dif_ratio=0.9223003;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.940335: k1_ithr=2.460932: ithr_r=0.4707258: ithr_diff=0.3754512: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[14] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=4: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4191123: max=0.7194799: max_i=1: };
       acts_m {avg=0.4517842: max=0.7862667: max_i=1: };
       phase_dif_ratio=1.077955;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.315854: k1_ithr=2.997442: ithr_r=0.3645359: ithr_diff=0.3054811: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[15] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4452175: max=0.5924588: max_i=1: };
       acts_m {avg=0.4384255: max=0.598432: max_i=1: };
       phase_dif_ratio=0.9847444;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.377604: k1_ithr=2.617583: ithr_r=0.2549152: ithr_diff=0.2250178: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[16] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4943449: max=0.6590278: max_i=3: };
       acts_m {avg=0.4457458: max=0.5691987: max_i=3: };
       phase_dif_ratio=0.9016899;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.632695: k1_ithr=2.818942: ithr_r=0.2536131: ithr_diff=0.224008: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[17] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5172536: max=0.7244426: max_i=2: };
       acts_m {avg=0.5949354: max=0.7833181: max_i=2: };
       phase_dif_ratio=1.150181;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.638551: k1_ithr=2.989815: ithr_r=0.1963741: ithr_diff=0.1782953: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[18] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.4242664: max=0.7840112: max_i=1: };
       acts_m {avg=0.4306576: max=0.8602515: max_i=1: };
       phase_dif_ratio=1.015064;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.835213: k1_ithr=2.621968: ithr_r=0.3802997: ithr_diff=0.3163435: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[19] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=6: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.33926: max=0.7375658: max_i=2: };
       acts_m {avg=0.3624524: max=0.8357776: max_i=2: };
       phase_dif_ratio=1.068362;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.020181: k1_ithr=2.455577: ithr_r=0.4929653: ithr_diff=0.3891876: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[20] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3070308: max=0.8152997: max_i=2: };
       acts_m {avg=0.3544673: max=0.9012665: max_i=2: };
       phase_dif_ratio=1.154501;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.371277: k1_ithr=2.371086: ithr_r=0.611707: ithr_diff=0.4575759: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[21] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3532028: max=0.7916299: max_i=2: };
       acts_m {avg=0.3659083: max=0.782265: max_i=2: };
       phase_dif_ratio=1.035972;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.101906: k1_ithr=2.583563: ithr_r=0.4622822: ithr_diff=0.3701554: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[22] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3562728: max=0.8155946: max_i=2: };
       acts_m {avg=0.320266: max=0.7432583: max_i=2: };
       phase_dif_ratio=0.8989348;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.261851: k1_ithr=2.548995: ithr_r=0.5140046: ithr_diff=0.4019043: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[23] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5349305: max=0.8622907: max_i=1: };
       acts_m {avg=0.4522448: max=0.7214279: max_i=1: };
       phase_dif_ratio=0.8454273;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.015007: k1_ithr=2.967333: ithr_r=0.3023757: ithr_diff=0.2609396: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[24] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=20: y=8: z=0: };
       unique_geom=0;
       geom {x=4: y=1: n_not_xy=0: n=4: };
       units_lesioned=0;
       output_name=;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.3581953: max=0.8427644: max_i=1: };
       acts_m {avg=0.4196341: max=0.9660648: max_i=1: };
       phase_dif_ratio=1.171523;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.908311: k1_ithr=2.473389: ithr_r=0.4575162: ithr_diff=0.3671464: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=$198$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.4130932: max=0.9948838: max_i=12: };
     acts_m {avg=0.4218705: max=0.9660648: max_i=24: };
     phase_dif_ratio=1.021248;
     kwta {k=25: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=17.96422: k1_ithr=15.89675: ithr_r=0.1222677: ithr_diff=0.1150886: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=MotorForceLayerSpec: spec=$63$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[14] {
     name="HandPos_Out";
     flags=;
     layer_type=TARGET;
     pos {x=64: y=0: z=2: };
     un_geom {x=10: y=11: n_not_xy=0: n=110: };
     unit_groups=0;
     gp_geom {x=5: y=5: n_not_xy=0: n=25: };
     gp_spc {x=1: y=1: };
     act_geom {x=10: y=11: n_not_xy=0: n=110: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$103$;
       spec {type=FullPrjnSpec: spec=$201$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$202$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$98$;
       spec {type=FullPrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$183$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[6];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[1].projections[2];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=10: y=11: n_not_xy=0: n=110: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=DaModUnitSpec: spec=$180$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.09004541: max=0.95: max_i=55: };
     acts_m {avg=0.08907761: max=0.8799943: max_i=55: };
     phase_dif_ratio=0.9892521;
     kwta {k=9: pct=0.08181818: pct_c=0.9181818: adth_k=1: k_ithr=2.493877: k1_ithr=2.076528: ithr_r=0.1831414: ithr_diff=0.1673496: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.08181818: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=TwoDValLayerSpec: spec=$200$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
   };
   flags=;
   auto_build=AUTO_BUILD;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   batch=0;
   epoch=0;
   trial=0;
   cycle=0;
   time=0;
   group_name=;
   trial_name=;
   output_name=;
   sse_unit_avg=0;
   sse_sqrt=0;
   sse=0;
   sum_sse=0;
   avg_sse=0;
   cnt_err_tol=0;
   cnt_err=0;
   cur_sum_sse=0;
   avg_sse_n=0;
   cur_cnt_err=0;
   train_time {name="train_time": start={usr=137173: sys=30199: tot=2052800544: }: end={usr=5136: sys=1157: tot=2043469948: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   epoch_time {name="epoch_time": start={usr=209608: sys=39277: tot=2052894474: }: end={usr=209608: sys=39277: tot=2052894474: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   trial_time {name="trial_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   settle_time {name="settle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   cycle_time {name="cycle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   wt_sync_time {name="wt_sync_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   misc_time {name="misc_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   dmem_sync_level=DMEM_SYNC_NETWORK;
   dmem_nprocs=1;
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   lay_layout=THREE_D;
   n_units=852;
   n_cons=113195;
   max_size {x=74: y=23: z=3: };
   font_sizes {
    net_name=0.05;
    net_vals=0.05;
    layer=0.04;
    layer_vals=0.03;
    prjn=0.01;
    unit=0.02;
    un_nm_len=3;
   };
   view_params {
    xy_square=0;
    unit_spacing=0.05;
    prjn_disp=L_R_F;
    prjn_name=0;
    prjn_width=0.002;
    prjn_trans=0.5;
    lay_trans=0.5;
    unit_trans=0.6;
   };
   phase_order=MINUS_PLUS;
   no_plus_test=0;
   trial_init=DECAY_STATE;
   sequence_init=DO_NOTHING;
   first_plus_dwt=ONLY_FIRST_DWT;
   phase=MINUS_PHASE;
   phase_no=0;
   phase_max=2;
   cycle_max=60;
   min_cycles=15;
   min_cycles_phase2=35;
   minus_cycles=0;
   avg_cycles=0;
   avg_cycles_sum=0;
   avg_cycles_n=0;
   netin_mod=1;
   send_delta=1;
   maxda_stopcrit=0.005;
   maxda=0;
   trg_max_act_stopcrit=1;
   trg_max_act=0;
   ext_rew=0;
   avg_ext_rew=0;
   avg_ext_rew_sum=0;
   avg_ext_rew_n=0;
  };
 };
};
