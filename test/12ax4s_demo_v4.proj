// ta_Dump File v2.0
LeabraProject .projects[0] { 
  Wizard_Group @.wizards = [1] {
    LeabraWizard @[0] { 
      taBase_List @.layer_cfg = [3] {
	LayerWizEl @[0] { };
	LayerWizEl @[1] { };
	LayerWizEl @[2] { };
      };
    };
  };

  SelectEdit_Group @.edits = [1] {
    SelectEdit @[0] { };
  };

  DataTable_Group @.data = [0] {
    DataTable_Group @.gp[0] = [2] { 
      DataTable @[0] { 
    UserDataItem_List @*(.user_data_) { 
	  UserDataItem @[0] { };
    };

	DataTableCols @.data = [5] {
	  String_Data @[0] { };
	  String_Data @[1] { };
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	};
      };
      DataTable @[1] { 
    UserDataItem_List @*(.user_data_) { 
	  UserDataItem @[0] { };
	  UserDataItem @[1] { };
	  UserDataItem @[2] { };
    };

	DataTableCols @.data = [3] {
	  String_Data @[0] { };
	  String_Data @[1] { };
	  String_Data @[2] { };
	};
      };
    };
    DataTable_Group @.gp[1] = [2] { 
      DataTable @[0] { 
	DataTableCols @.data = [15] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[2] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  String_Data @[3] { };
	  String_Data @[4] { };
	  int_Data @[5] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	  float_Data @[9] { };
	  float_Data @[10] { };
	  float_Data @[11] { };
	  float_Data @[12] { };
	  float_Data @[13] { };
	  float_Data @[14] { };
	};
      };
      DataTable @[1] { 
	DataTableCols @.data = [17] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	  float_Data @[5] { };
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	  float_Data @[9] { };
	  float_Data @[10] { };
	  float_Data @[11] { };
	  float_Data @[12] { };
	  float_Data @[13] { };
	  float_Data @[14] { };
	  float_Data @[15] { };
	  float_Data @[16] { };
	};
      };
    };
    DataTable_Group @.gp[2] { };
  };

  taBase_Group @.data_proc = [4] {
    taDataProc @[0] { };
    taDataAnal @[1] { };
    taDataGen @[2] { };
    taImageProc @[3] { };
  };

  Program_Group @.programs = [0] {
    Program_Group @.gp[0] = [10] { 
      Program @[0] { 
	ProgVar_List @.args = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [3] {
	  UserScript @[0] { };
	  NetCounterInit @[1] { };
	  WhileLoop @[2] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	    };
	  };
	};
      };
      Program @[1] { 
	ProgObjList @.objs = [1] {
	  RndSeed_List @[0] { 
	    taList @.seeds = [25] {
	      RndSeed @[0] { };
	      RndSeed @[1] { };
	      RndSeed @[2] { };
	      RndSeed @[3] { };
	      RndSeed @[4] { };
	      RndSeed @[5] { };
	      RndSeed @[6] { };
	      RndSeed @[7] { };
	      RndSeed @[8] { };
	      RndSeed @[9] { };
	      RndSeed @[10] { };
	      RndSeed @[11] { };
	      RndSeed @[12] { };
	      RndSeed @[13] { };
	      RndSeed @[14] { };
	      RndSeed @[15] { };
	      RndSeed @[16] { };
	      RndSeed @[17] { };
	      RndSeed @[18] { };
	      RndSeed @[19] { };
	      RndSeed @[20] { };
	      RndSeed @[21] { };
	      RndSeed @[22] { };
	      RndSeed @[23] { };
	      RndSeed @[24] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [8] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	  ProgVar @[7] { };
	};

	ProgEl_List @.init_code = [6] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  AssignExpr @[1] { };
	  NetCounterInit @[2] { };
	  AssignExpr @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[5] { };
	};

	ProgEl_List @.prog_code = [9] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  NetCounterInit @[2] { };
	  AssignExpr @[3] { };
	  UserScript @[4] { };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[6] { };
	  WhileLoop @[7] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfElse @[2] { 
		ProgEl_List @.true_code = [2] {
		  AssignExpr @[0] { };
		  IfBreak @[1] { };
		};

		ProgEl_List @.false_code = [1] {
		  AssignExpr @[0] { };
		};
	      };
	    };
	  };
	  MethodCall @[8] { };
	};
      };
      Program @[2] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [7] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	};

	ProgEl_List @.init_code = [2] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	};

	ProgEl_List @.prog_code = [11] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  ProgramCall @[3] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[4] { };
	  NetGroupedDataLoop @[5] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      IfElse @[1] { 
		ProgEl_List @.true_code = [1] {
		  MethodCall @[0] { };
		};
	      };
	    };
	  };
	  IfElse @[6] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  MethodCall @[7] { };
	  MethodCall @[8] { };
	  ProgramCall @[9] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  ProgramCall @[10] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};
      };
      Program @[3] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [6] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  WhileLoop @[2] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      MethodCall @[2] { };
	    };
	  };
	  MethodCall @[3] { };
	  ProgramCall @[4] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  NetUpdateView @[5] { };
	};
      };
      Program @[4] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [10] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  ProgramCall @[2] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[3] { };
	  UserScript @[4] { };
	  WhileLoop @[5] { 
	    ProgEl_List @.loop_code = [4] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [1] {
		  ProgArg @[0] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfContinue @[2] { };
	      IfBreak @[3] { };
	    };
	  };
	  MethodCall @[6] { };
	  IfElse @[7] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  IfElse @[8] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  NetUpdateView @[9] { };
	};
      };
      Program @[5] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  NetUpdateView @[1] { };
	};
      };
      Program @[6] { 
	ProgObjList @.objs = [1] {
	  LayerWriter @[0] { 
	    LayerDataEl_List @.layer_data = [5] {
	      LayerWriterEl @[0] { };
	      LayerWriterEl @[1] { };
	      LayerWriterEl @[2] { };
	      LayerWriterEl @[3] { };
	      LayerWriterEl @[4] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [2] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  MemberAssign @[1] { };
	};
      };
      Program @[7] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [15] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	      NetMonItem @[9] { };
	      NetMonItem @[10] { };
	      NetMonItem @[11] { };
	      NetMonItem @[12] { };
	      NetMonItem @[13] { };
	      NetMonItem @[14] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [3] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [10] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[6] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[7] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[8] { };
	  MethodCall @[9] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
      Program @[8] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [17] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	      NetMonItem @[9] { };
	      NetMonItem @[10] { };
	      NetMonItem @[11] { };
	      NetMonItem @[12] { };
	      NetMonItem @[13] { };
	      NetMonItem @[14] { };
	      NetMonItem @[15] { };
	      NetMonItem @[16] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [4] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	};

	ProgEl_List @.init_code = [4] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [13] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  AssignExpr @[2] { };
	  UserScript @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[6] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[7] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[8] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[9] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[10] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  IfElse @[11] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { 
		ProgArg_List @.meth_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	    };

	    ProgEl_List @.false_code = [1] {
	      MethodCall @[0] { 
		ProgArg_List @.meth_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	    };
	  };
	  MethodCall @[12] { };
	};
      };
      Program @[9] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [6] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	};

	ProgEl_List @.prog_code = [6] {
	  IfElse @[0] { 
	    ProgEl_List @.true_code = [1] {
	      UserScript @[0] { };
	    };
	  };
	  MiscCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MiscCall @[2] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  AssignExpr @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [4] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
    };
    Program_Group @.gp[1] = [2] { 
      Program @[0] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  ForLoop @[1] { 
	    ProgEl_List @.loop_code = [1] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	    };
	  };
	};
      };
      Program @[1] { 
	ProgType_List @.types = [3] {
	  DynEnumType @[0] { 
	    DynEnumItem_List @.enums = [9] {
	      DynEnumItem @[0] { };
	      DynEnumItem @[1] { };
	      DynEnumItem @[2] { };
	      DynEnumItem @[3] { };
	      DynEnumItem @[4] { };
	      DynEnumItem @[5] { };
	      DynEnumItem @[6] { };
	      DynEnumItem @[7] { };
	      DynEnumItem @[8] { };
	    };
	  };
	  DynEnumType @[1] { 
	    DynEnumItem_List @.enums = [2] {
	      DynEnumItem @[0] { };
	      DynEnumItem @[1] { };
	    };
	  };
	  DynEnumType @[2] { 
	    DynEnumItem_List @.enums = [1] {
	      DynEnumItem @[0] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [11] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	  ProgVar @[7] { };
	  ProgVar @[8] { };
	  ProgVar @[9] { };
	  ProgVar @[10] { };
	};

	ProgEl_List @.functions = [1] {
	  Function @[0] { 
	    ProgVar_List @.args = [4] {
	      ProgVar @[0] { };
	      ProgVar @[1] { };
	      ProgVar @[2] { };
	      ProgVar @[3] { };
	    };

	    ProgEl_List @.fun_code = [5] {
	      AddNewDataRow @[0] { };
	      MethodCall @[1] { 
		ProgArg_List @.meth_args = [3] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		};
	      };
	      SetUnitsVar @[2] { };
	      SetUnitsVar @[3] { };
	      IfElse @[4] { 
		ProgEl_List @.true_code = [1] {
		  SetUnitsLit @[0] { };
		};
	      };
	    };
	  };
	};

	ProgEl_List @.init_code = [1] {
	  InitNamedUnits @[0] { };
	};

	ProgEl_List @.prog_code = [6] {
	  RandomCall @[0] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  VarIncr @[1] { };
	  RandomCall @[2] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  AssignExpr @[3] { };
	  FunctionCall @[4] { 
	    ProgArg_List @.fun_args = [4] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	    };
	  };
	  ForLoop @[5] { 
	    ProgEl_List @.loop_code = [7] {
	      ProgVars @[0] { 
		ProgVar_List @.local_vars = [3] {
		  ProgVar @[0] { };
		  ProgVar @[1] { };
		  ProgVar @[2] { };
		};
	      };
	      RandomCall @[1] { };
	      IfElse @[2] { 
		ProgEl_List @.true_code = [3] {
		  RandomCall @[0] { 
		    ProgArg_List @.meth_args = [1] {
		      ProgArg @[0] { };
		    };
		  };
		  AssignExpr @[1] { };
		  AssignExpr @[2] { };
		};

		ProgEl_List @.false_code = [2] {
		  RandomCall @[0] { 
		    ProgArg_List @.meth_args = [2] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		    };
		  };
		  RandomCall @[1] { 
		    ProgArg_List @.meth_args = [2] {
		      ProgArg @[0] { };
		      ProgArg @[1] { };
		    };
		  };
		};
	      };
	      IfElse @[3] { 
		ProgEl_List @.true_code = [1] {
		  AssignExpr @[0] { };
		};

		ProgEl_List @.false_code = [1] {
		  AssignExpr @[0] { };
		};
	      };
	      FunctionCall @[4] { 
		ProgArg_List @.fun_args = [4] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		  ProgArg @[3] { };
		};
	      };
	      FunctionCall @[5] { 
		ProgArg_List @.fun_args = [4] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		  ProgArg @[3] { };
		};
	      };
	      DoneWritingDataRow @[6] { };
	    };
	  };
	};
      };
    };
    Program_Group @.gp[2] = [1] { 
      Program @[0] { 
	ProgObjList @.objs = [1] {
	  DataTable @[0] { 
	    DataTableCols @.data = [6] {
	      String_Data @[0] { };
	      float_Data @[1] { };
	      float_Data @[2] { };
	      float_Data @[3] { };
	      float_Data @[4] { };
	      float_Data @[5] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [1] {
	  DataGroupProg @[0] { 
	    DataOpList @.ops = [7] {
	      DataGroupEl @[0] { };
	      DataGroupEl @[1] { };
	      DataGroupEl @[2] { };
	      DataGroupEl @[3] { };
	      DataGroupEl @[4] { };
	      DataGroupEl @[5] { };
	      DataGroupEl @[6] { };
	    };
	  };
	};
      };
    };
  };

  DataViewer_List @.viewers = [1] {
    MainWindowViewer @[0] { 
      ToolBar_List @.toolbars = [1] {
	ToolBar @[0] { };
      };

      FrameViewer_List @.frames = [3] {
	tabBrowseViewer @[0] { };
	PanelViewer @[1] { };
	T3DataViewer @[2] { 
	  T3DataViewFrame_List @.frames = [3] {
	    T3DataViewFrame @[0] { 
	      T3DataView_List @.children = [2] {
		NetView @[0] { 
		  T3DataView_List @.children = [46] {
		    LayerView @[0] { };
		    LayerView @[1] { };
		    LayerView @[2] { };
		    LayerView @[3] { };
		    LayerView @[4] { };
		    LayerView @[5] { };
		    LayerView @[6] { };
		    LayerView @[7] { };
		    LayerView @[8] { };
		    LayerView @[9] { };
		    LayerView @[10] { };
		    LayerView @[11] { };
		    LayerView @[12] { };
		    PrjnView @[13] { };
		    PrjnView @[14] { };
		    PrjnView @[15] { };
		    PrjnView @[16] { };
		    PrjnView @[17] { };
		    PrjnView @[18] { };
		    PrjnView @[19] { };
		    PrjnView @[20] { };
		    PrjnView @[21] { };
		    PrjnView @[22] { };
		    PrjnView @[23] { };
		    PrjnView @[24] { };
		    PrjnView @[25] { };
		    PrjnView @[26] { };
		    PrjnView @[27] { };
		    PrjnView @[28] { };
		    PrjnView @[29] { };
		    PrjnView @[30] { };
		    PrjnView @[31] { };
		    PrjnView @[32] { };
		    PrjnView @[33] { };
		    PrjnView @[34] { };
		    PrjnView @[35] { };
		    PrjnView @[36] { };
		    PrjnView @[37] { };
		    PrjnView @[38] { };
		    PrjnView @[39] { };
		    PrjnView @[40] { };
		    PrjnView @[41] { };
		    PrjnView @[42] { };
		    PrjnView @[43] { };
		    PrjnView @[44] { };
		    PrjnView @[45] { };
		  };

		  ScaleRange_List @.scale_ranges = [6] {
		    ScaleRange @[0] { };
		    ScaleRange @[1] { };
		    ScaleRange @[2] { };
		    ScaleRange @[3] { };
		    ScaleRange @[4] { };
		    ScaleRange @[5] { };
		  };
		};
		GraphTableView @[1] { 
		  T3DataView_List @.children = [17] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		    GraphColView @[9] { };
		    GraphColView @[10] { };
		    GraphColView @[11] { };
		    GraphColView @[12] { };
		    GraphColView @[13] { };
		    GraphColView @[14] { };
		    GraphColView @[15] { };
		    GraphColView @[16] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[1] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [6] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[2] { 
	      T3DataView_List @.children = [2] {
		GridTableView @[0] { 
		  T3DataView_List @.children = [5] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		    GridColView @[3] { };
		    GridColView @[4] { };
		  };
		};
		GridTableView @[1] { 
		  T3DataView_List @.children = [3] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		  };
		};
	      };
	    };
	  };
	};
      };

      DockViewer_List @.docks = [1] {
	ToolBoxDockViewer @[0] { };
      };
    };
  };

  Network_Group @.networks = [1] {
    LeabraNetwork @[0] { 
      BaseSpec_Group @.specs = [4] {
	DaModUnitSpec @[0] { };
	LeabraLayerSpec @[1] { 
	  BaseSpec_Group @.children = [2] {
	    LeabraLayerSpec @[0] { };
	    LeabraLayerSpec @[1] { };
	  };
	};
	FullPrjnSpec @[2] { };
	LeabraConSpec @[3] { 
	  BaseSpec_Group @.children = [1] {
	    LeabraBiasSpec @[0] { 
	      Schedule @.lrate_sched = [2] {
		SchedItem @[0] { };
		SchedItem @[1] { };
	      };
	    };
	  };

	  Schedule @.lrate_sched = [2] {
	    SchedItem @[0] { };
	    SchedItem @[1] { };
	  };
	};
	BaseSpec_Group @.gp[0] = [5] { 
	  DaModUnitSpec @[0] { 
	    BaseSpec_Group @.children = [1] {
	      DaModUnitSpec @[0] { };
	    };
	  };
	  DaModUnitSpec @[1] { };
	  DaModUnitSpec @[2] { };
	  MatrixUnitSpec @[3] { };
	  DaModUnitSpec @[4] { };
	};
	BaseSpec_Group @.gp[1] = [3] { 
	  LeabraConSpec @[0] { 
	    BaseSpec_Group @.children = [4] {
	      PVConSpec @[0] { 
		BaseSpec_Group @.children = [1] {
		  PVConSpec @[0] { 
		    BaseSpec_Group @.children = [1] {
		      PVConSpec @[0] { };
		    };
		  };
		};
	      };
	      LeabraBiasSpec @[1] { 
		BaseSpec_Group @.children = [2] {
		  LeabraBiasSpec @[0] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		  MatrixBiasSpec @[1] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		};

		Schedule @.lrate_sched = [2] {
		  SchedItem @[0] { };
		  SchedItem @[1] { };
		};
	      };
	      LeabraConSpec @[2] { 
		BaseSpec_Group @.children = [2] {
		  LeabraConSpec @[0] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		  LeabraBiasSpec @[1] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		};

		Schedule @.lrate_sched = [2] {
		  SchedItem @[0] { };
		  SchedItem @[1] { };
		};
	      };
	      MatrixConSpec @[3] { 
		BaseSpec_Group @.children = [1] {
		  MatrixConSpec @[0] { 
		    Schedule @.lrate_sched = [2] {
		      SchedItem @[0] { };
		      SchedItem @[1] { };
		    };
		  };
		};

		Schedule @.lrate_sched = [2] {
		  SchedItem @[0] { };
		  SchedItem @[1] { };
		};
	      };
	    };

	    Schedule @.lrate_sched = [2] {
	      SchedItem @[0] { };
	      SchedItem @[1] { };
	    };
	  };
	  MarkerConSpec @[1] { };
	  LeabraConSpec @[2] { };
	};
	BaseSpec_Group @.gp[2] = [7] { 
	  ExtRewLayerSpec @[0] { };
	  PViLayerSpec @[1] { };
	  LVeLayerSpec @[2] { 
	    BaseSpec_Group @.children = [2] {
	      LViLayerSpec @[0] { };
	      PatchLayerSpec @[1] { };
	    };
	  };
	  PVLVDaLayerSpec @[3] { 
	    BaseSpec_Group @.children = [1] {
	      SNcLayerSpec @[0] { };
	    };
	  };
	  PFCLayerSpec @[4] { };
	  MatrixLayerSpec @[5] { };
	  SNrThalLayerSpec @[6] { };
	};
	BaseSpec_Group @.gp[3] = [7] { 
	  FullPrjnSpec @[0] { };
	  OneToOnePrjnSpec @[1] { };
	  GpOneToOnePrjnSpec @[2] { };
	  UniformRndPrjnSpec @[3] { };
	  OneToOnePrjnSpec @[4] { };
	  GpRndTesselPrjnSpec @[5] { 
	    TessEl_List @.send_gp_offs = [2] {
	      GpTessEl @[0] { };
	      GpTessEl @[1] { };
	    };
	  };
	  TesselPrjnSpec @[6] { 
	    TessEl_List @.send_offs = [3] {
	      TessEl @[0] { };
	      TessEl @[1] { };
	      TessEl @[2] { };
	    };
	  };
	};
      };

      Layer_Group @.layers = [13] {
	LeabraLayer @[0] { 
	  Unit_Group @.units = [1] {
	  };
	};
	LeabraLayer @[1] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[2] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[3] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[4] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [4] {
	  };
	};
	LeabraLayer @[5] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [1] {
	  };
	};
	LeabraLayer @[6] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [49] {
	  };
	};
	LeabraLayer @[7] { 
	  Unit_Group @.units = [9] {
	  };
	};
	LeabraLayer @[8] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [2] {
	  };
	};
	LeabraLayer @[9] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [1] { 
	    };
	    LeabraUnit_Group @.gp[1] = [1] { 
	    };
	    LeabraUnit_Group @.gp[2] = [1] { 
	    };
	    LeabraUnit_Group @.gp[3] = [1] { 
	    };
	  };
	};
	LeabraLayer @[10] { 
	  Projection_Group @.projections = [4] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	    LeabraPrjn @[3] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [28] { 
	    };
	    LeabraUnit_Group @.gp[1] = [28] { 
	    };
	    LeabraUnit_Group @.gp[2] = [28] { 
	    };
	    LeabraUnit_Group @.gp[3] = [28] { 
	    };
	  };
	};
	LeabraLayer @[11] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [1] { 
	    };
	    LeabraUnit_Group @.gp[1] = [1] { 
	    };
	    LeabraUnit_Group @.gp[2] = [1] { 
	    };
	    LeabraUnit_Group @.gp[3] = [1] { 
	    };
	  };
	};
	LeabraLayer @[12] { 
	  Projection_Group @.projections = [3] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	    LeabraPrjn @[2] { };
	  };

	  Unit_Group @.units = [0] {
	    LeabraUnit_Group @.gp[0] = [9] { 
	    };
	    LeabraUnit_Group @.gp[1] = [9] { 
	    };
	    LeabraUnit_Group @.gp[2] = [9] { 
	    };
	    LeabraUnit_Group @.gp[3] = [9] { 
	    };
	  };
	};
      };
    };
  };
};
LeabraProject .projects[0] {
 name="LeabraProject_0";
 desc="sub 03/05: localist 220 kavg .9 pviferlv gc bias 2 iw1


";
 templates {
  name=;
  el_typ=taBase;
  el_def=0;
 };
 wizards {
  name=;
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   name="LeabraWizard_1";
   auto_open=0;
   n_layers=3;
   layer_cfg {
    name=;
    el_typ=LayerWizEl;
    el_def=0;
    LayerWizEl @[0] {
     name="Input";
     n_units=25;
     io_type=INPUT;
    };
    LayerWizEl @[1] {
     name="Hidden";
     n_units=25;
     io_type=HIDDEN;
    };
    LayerWizEl @[2] {
     name="Output";
     n_units=25;
     io_type=OUTPUT;
    };
   };
   connectivity=BIDIRECTIONAL;
  };
 };
 edits {
  name=;
  el_typ=SelectEdit;
  el_def=0;
  SelectEdit @[0] {
   name="SelectEdit_0";
   desc=;
   config {
    auto_edit=0;
    mbr_labels{ matrix;matrix;matrix;snr_thal;pv;lvde;lvdi;pvi;da;matrix;    };
    meth_labels{     };
   };
   mbr_bases {
    name=;
    el_typ=taBase;
    el_def=0;
	taBase_List @. = [0] = MatrixLayerSpec .projects[0].networks[0].specs.gp[2][5];
	taBase_List @. = [1] = MatrixLayerSpec .projects[0].networks[0].specs.gp[2][5];
	taBase_List @. = [2] = MatrixConSpec .projects[0].networks[0].specs.gp[1][0].children[3].children[0];
	taBase_List @. = [3] = LVeLayerSpec .projects[0].networks[0].specs.gp[2][2];
	taBase_List @. = [4] = PViLayerSpec .projects[0].networks[0].specs.gp[2][1];
	taBase_List @. = [5] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0].children[0];
	taBase_List @. = [6] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0].children[0].children[0];
	taBase_List @. = [7] = PVConSpec .projects[0].networks[0].specs.gp[1][0].children[0];
	taBase_List @. = [8] = PVLVDaLayerSpec .projects[0].networks[0].specs.gp[2][3];
	taBase_List @. = [9] = MatrixUnitSpec .projects[0].networks[0].specs.gp[0][3];
   };
   mbr_strs{ matrix;contrast;lmix;kwta;bias_val;lrate;lrate;lrate;da;g_bar;   };
   meth_bases {
    name=;
    el_typ=taBase;
    el_def=0;
   };
   meth_strs{    };
  };
 };
 data {
  name=;
  el_typ=DataTable;
  el_def=0;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserDataItemBase;
     el_def=0;
     UserDataItem @[0] {
      name="N_ROWS";
      value 2 0=5;
     };
    };
    name="TrainEnv_0";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Group";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [133] "0_I_ONE";"0_I_ONE";"0_I_ONE";"0_I_ONE";"0_I_ONE";"0_I_ONE";"0_I_ONE";"1_I_TWO";"1_I_TWO";"1_I_TWO";"1_I_TWO";"1_I_TWO";"2_I_ONE";"2_I_ONE";"2_I_ONE";"3_I_TWO";"3_I_TWO";"3_I_TWO";"4_I_ONE";"4_I_ONE";"4_I_ONE";"4_I_ONE";"4_I_ONE";"4_I_ONE";"4_I_ONE";"5_I_ONE";"5_I_ONE";"5_I_ONE";"5_I_ONE";"5_I_ONE";"5_I_ONE";"5_I_ONE";"6_I_TWO";"6_I_TWO";"6_I_TWO";"6_I_TWO";"6_I_TWO";"6_I_TWO";"6_I_TWO";"7_I_TWO";"7_I_TWO";"7_I_TWO";"7_I_TWO";"7_I_TWO";"8_I_TWO";"8_I_TWO";"8_I_TWO";"9_I_ONE";"9_I_ONE";"9_I_ONE";"9_I_ONE";"9_I_ONE";"10_I_TWO";"10_I_TWO";"10_I_TWO";"10_I_TWO";"10_I_TWO";"11_I_ONE";"11_I_ONE";"11_I_ONE";"11_I_ONE";"11_I_ONE";"12_I_TWO";"12_I_TWO";"12_I_TWO";"12_I_TWO";"12_I_TWO";"12_I_TWO";"12_I_TWO";"13_I_ONE";"13_I_ONE";"13_I_ONE";"13_I_ONE";"13_I_ONE";"13_I_ONE";"13_I_ONE";"14_I_ONE";"14_I_ONE";"14_I_ONE";"14_I_ONE";"14_I_ONE";"14_I_ONE";"14_I_ONE";"15_I_TWO";"15_I_TWO";"15_I_TWO";"16_I_ONE";"16_I_ONE";"16_I_ONE";"16_I_ONE";"16_I_ONE";"16_I_ONE";"16_I_ONE";"17_I_TWO";"17_I_TWO";"17_I_TWO";"18_I_TWO";"18_I_TWO";"18_I_TWO";"18_I_TWO";"18_I_TWO";"18_I_TWO";"18_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"19_I_TWO";"20_I_ONE";"20_I_ONE";"20_I_ONE";"21_I_TWO";"21_I_TWO";"21_I_TWO";"21_I_TWO";"21_I_TWO";"21_I_TWO";"21_I_TWO";"22_I_ONE";"22_I_ONE";"22_I_ONE";"22_I_ONE";"22_I_ONE";"23_I_TWO";"23_I_TWO";"23_I_TWO";"24_I_TWO";"24_I_TWO";"24_I_TWO";"24_I_TWO";"24_I_TWO";      };
     };
     String_Data @[1] {
      name="Name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [133] "ONE_L";"B_L";"Z_L";"C_L";"X_L";"B_L";"Y_L";"TWO_L";"B_L";"Y_R";"B_L";"Y_R";"ONE_L";"C_L";"Z_L";"TWO_L";"A_L";"X_L";"ONE_L";"C_L";"Y_L";"B_L";"Y_L";"A_L";"X_R";"ONE_L";"C_L";"X_L";"B_L";"Y_L";"C_L";"Z_L";"TWO_L";"A_L";"X_L";"A_L";"X_L";"A_L";"X_L";"TWO_L";"B_L";"Z_L";"A_L";"X_L";"TWO_L";"C_L";"Y_L";"ONE_L";"C_L";"X_L";"A_L";"Z_L";"TWO_L";"B_L";"Y_R";"B_L";"Y_R";"ONE_L";"B_L";"X_L";"A_L";"Z_L";"TWO_L";"A_L";"X_L";"B_L";"Y_R";"C_L";"X_L";"ONE_L";"B_L";"X_L";"A_L";"Y_L";"A_L";"Y_L";"ONE_L";"A_L";"X_R";"A_L";"Y_L";"A_L";"X_R";"TWO_L";"B_L";"Z_L";"ONE_L";"A_L";"X_R";"C_L";"Y_L";"A_L";"X_R";"TWO_L";"C_L";"Y_L";"TWO_L";"B_L";"Y_R";"B_L";"Y_R";"A_L";"Z_L";"TWO_L";"A_L";"Y_L";"A_L";"X_L";"A_L";"Z_L";"ONE_L";"A_L";"X_R";"TWO_L";"B_L";"Z_L";"A_L";"X_L";"A_L";"X_L";"ONE_L";"B_L";"Y_L";"B_L";"Z_L";"TWO_L";"A_L";"X_L";"TWO_L";"B_L";"X_L";"B_L";"Z_L";      };
     };
     float_Data @[2] {
      name="Input";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;3;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [3 3 133] 0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;1;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;1;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;      };
     };
     float_Data @[3] {
      name="Output";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [2 1 133] 1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;0;1;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;0;1;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;1;0;      };
     };
     float_Data @[4] {
      name="RewTarg";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [1 1 133] 0;0;1;0;1;0;1;0;0;1;0;1;0;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;1;0;0;1;0;0;1;0;1;0;1;0;0;1;0;1;0;0;1;0;0;1;0;1;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
   DataTable @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserDataItemBase;
     el_def=0;
     UserDataItem @[0] {
      name="N_ROWS";
      value 2 0=1;
     };
     UserDataItem @[1] {
      name="MAT_VAL_TEXT";
      value 2 0=1;
     };
     UserDataItem @[2] {
      name="WIDTH";
      value 6 0=3.299999952316284;
     };
    };
    name="UnitNames";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Input";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;3;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [3 3 1] "A";"B";"C";"X";"Y";"Z";"ONE";"TWO";"THREE";      };
     };
     String_Data @[1] {
      name="Output";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [2 1 1] "L";"R";      };
     };
     String_Data @[2] {
      name="RewTarg";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [1 1 1] "rew_targ";      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="trial";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     String_Data @[3] {
      name="trial_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     String_Data @[4] {
      name="group_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[5] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="phase_no";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[6] {
      name="minus_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[7] {
      name="sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[8] {
      name="ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[9] {
      name="DA";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[10] {
      name="PVe";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[11] {
      name="PVi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[12] {
      name="LVe";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[13] {
      name="LVi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[14] {
      name="absDA";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[2] {
      name="avg_sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[3] {
      name="cnt_err";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[4] {
      name="avg_ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[5] {
      name="avg_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[6] {
      name="Leabra_cur_lrate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[7] {
      name="epoch_time_tot";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[8] {
      name="epoch_time_usr";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[9] {
      name="A_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[10] {
      name="B_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[11] {
      name="C_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[12] {
      name="one_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[13] {
      name="two_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[14] {
      name="X_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[15] {
      name="Y_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
     float_Data @[16] {
      name="Z_da";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
  };
 };
 data_proc {
  name=;
  el_typ=taDataProc;
  el_def=0;
  taDataProc @[0] {
   name="data_base";
  };
  taDataAnal @[1] {
   name="data_anal";
  };
  taDataGen @[2] {
   name="data_gen";
  };
  taImageProc @[3] {
   name="image_proc";
  };
 };
 programs {
  name=;
  el_typ=Program;
  el_def=0;
  step_prog=NULL;
  desc=;
  Program_Group @.gp[0] {
   name="LeabraAll_Std";
   el_typ=Program;
   el_def=0;
   step_prog=.projects[0].programs.gp[0][3]$0$;
   desc="The full set of programs for training a standard Leabra network";
   Program @[0] {
    name="LeabraBatch";
    desc="Iterate over training runs";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=.projects[0].networks[0]$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[0][0]$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="max_batch";
      var_type=T_Int;
      int_val=10;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="batch counter";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=.projects[0].programs.gp[0][0].args[0]$3$;
      local_ctr_var=.projects[0].programs.gp[0][0].vars[0]$4$;
      counter=Network::batch;
     };
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     UserScript @[0] {
      desc="set network batch from our batch";
      flags=;
      script {
       expr="network.batch = batch;";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$.batch = $#1#$;";
       vars {
       };
       var_names{ network;batch;       };
       bad_vars{        };
      };
     };
     NetCounterInit @[1] {
      desc=;
      flags=OFF;
      network_var=$3$;
      local_ctr_var=$4$;
      counter=Network::batch;
     };
     WhileLoop @[2] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][1]$5$;
	targ_ld_init="*LeabraTrain*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=;
	network_var=$3$;
	local_ctr_var=$4$;
	counter=Network::batch;
       };
      };
      test {
       expr="batch < max_batch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ batch;max_batch;       };
       bad_vars{        };
      };
     };
    };
   };
   Program @[1] {
    name="LeabraTrainBatchSeedNThr";
    desc="A complete training run of a Leabra network: iterating over epochs until the network has learned the task
has a list of random seeds that are tied to the network batch counter, providing consistent runs regardless
of what happens in the training of each network, or where it is run (e.g., on different processors)
Also requires a specific number of repeated under threshold error epochs to stop
";
    flags=;
    objs {
     name=;
     el_typ=RndSeed;
     el_def=0;
     RndSeed_List @[0] {
      name="rnd_seeds";
      seeds {
       name=;
       el_typ=RndSeed;
       el_def=0;
       RndSeed @[0] {
	name="RndSeed_1";
	seed{ 2124098716;1919131378;1308803297;107870307;-234554861;-1137100715;538626393;230756644;1733560124;-1431207910;-163815038;-1937276688;-1810538106;943398177;-1982847213;25068228;-1908376732;155469135;1781505853;195358399;-149985169;585760433;-1569377045;-1880256252;1786801526;-243212532;-1398798331;-341841442;726239565;-1416077186;841248010;2046779153;621810032;-222572207;-1738770564;81760985;565842113;-1029249718;764118771;-672577274;574651425;1455792686;1124934581;1714842159;-1047756206;1248052002;-692144131;-106461851;-750438546;-453823694;-1934660729;1851955372;2035667317;1981724409;-1429149682;-1729234701;716386381;-1952037990;200082226;-1181350667;-677829457;-1799388135;771658213;-87679848;565525607;1688531940;1121765019;-308755195;1776284066;-48263020;1777720025;2080698239;1183771390;1394486756;-826627933;-1874712725;-1324368455;1541139988;1321282455;-341608323;-429131770;-1804171446;337700794;1528034997;1288874328;959213938;-1990409136;-857254223;461928082;-1169626637;-1785903761;2094971228;-1029904627;-118511901;-2030389570;-1143425909;-790918291;473817287;1529163237;1282809687;-2068225198;175767285;-1069173745;623801635;2147021367;508589495;1891524765;-787244553;533418416;-708941091;-815597564;-2064082382;-135756448;-1479304320;-1924993860;759895401;-286022687;2080479903;-1431138612;-1233087043;2098678739;2088914003;-2005008684;-2031087383;1345417267;1105856055;841046476;617257467;171119495;-666176572;276344069;-346623876;-2022057569;-674045834;2139368367;-1538827731;1253227539;-609757789;-773199702;-1486209992;79351150;-609948941;-1772412610;1331771707;1636933234;1164185328;17817255;1945843574;-351497849;544279977;-125250237;484139735;844369515;1607332816;-629994737;497076311;-368666129;-1569847623;169851749;-1248789384;-1733892414;-627717535;1192577868;-70391036;-332039833;1355507993;-1155117282;1345794739;-1429847326;-836615415;-1230320228;-1061245439;-1335379594;492257137;-1401519805;1790167124;-1518958791;1287581176;41755887;-894666242;1430226565;-22497591;-102221720;-1917024786;142615252;1358770781;-1537467642;-1880634033;-328387299;-732626029;492992654;2118094533;1775646740;-904241654;922282831;-1454694930;1595546336;634782858;-844913352;496616462;1006098510;497816975;-1219032779;1573261950;344212455;802580976;-1009173378;-377568480;258324639;-1555566964;1475157208;-353664144;-731355085;-968700987;298933236;-2055545829;-101632075;16081319;-777853251;1509078993;667997676;-514608391;228812672;-1470409121;-439625583;1146131579;-1701454076;-760925119;-906825490;1111679846;-1679370359;-1808175682;-2038044652;1554143127;436589848;1459546979;-2043129706;-1151140015;-403232851;1182844565;-1725985452;1903151583;-1053527160;408156618;-1772836954;1654188201;-143805634;-169976568;802330959;390775844;-1066227922;-689042756;249787735;-2098603184;1675651672;-186476772;371078971;1276599880;-424917809;610029951;-1904074977;-238564234;1131497519;-1668015827;-1942939757;1710351934;-1939829019;1793261870;-2089115753;-1210403882;-296654926;410165988;-1566422780;-1975187857;-1499013357;1387076552;-794195871;529351103;1797466225;1888675143;-745477194;-733750142;-2092037889;-1954287124;-1391930878;-1159931107;-62977191;-1989630559;-2107468433;1154959906;714210289;2063818808;73562273;-1513176662;1003311214;319658637;-2115080247;-1888305344;325961780;-740306513;-1439250936;433945887;1009841513;-192609124;-598938901;1617352377;-1870450742;-422845669;-2136968788;535099611;1350591133;-105880381;-1446870792;261664219;21220257;1159692480;312219233;1748352642;1505576429;730587995;-1504090329;-411336742;1980994271;-1151090471;-91403605;1632263565;-851782270;-1224784340;579293038;-1662634577;-1924676725;1236498264;-300173207;-1987674849;-489758017;-1239805573;1374791437;1209029901;-1891042546;-2089256689;581613685;1900307582;-1656971663;1390088118;-1915280501;-593209498;-10581709;1476841803;1370959246;-678460984;144759157;-905418360;-1130756041;1822202698;-1947113223;709476202;443433014;-145343309;-1538252074;437072651;1624442815;-2137473697;-484148197;-1468674333;374868273;-637674814;1115658387;1224430857;-18754152;-1515832680;-500725196;1578235942;-134953001;-1185985511;79723293;2073958632;1528006245;1046186733;1609672187;771704605;-258960147;-1019207325;-1010201506;757933872;1327048560;1797196310;-632927339;357112241;-462561959;-264011769;440379162;-180365111;314221370;865235307;-177863743;1536184085;-204674960;-1218297364;613311092;1074326867;532972778;235908067;1717587233;-1994092749;1113897193;118037789;-1359478009;-224796784;811590039;1152307500;1529126235;-753057763;1521245042;118857980;361980170;1096393873;23002736;-1783344175;-540672287;-1900903731;-1139317681;-201144058;1573911967;-384131331;-1215780386;14008693;1594880467;1047645061;896694821;1284177734;-2073774159;-1410316722;1736337836;1529366514;17461137;935960296;552459068;-1764844447;468299717;-56244368;1565080855;-214965913;-348229074;1442325116;1657111053;1222163577;-2119789290;-804485469;-144916768;905170000;397831506;-1866988259;-886006273;-794938831;1856278912;525497004;765021092;1215405437;8290230;708496025;902615337;-639862790;1140758539;1930778561;966877328;2101881505;-1230474510;-1702376829;-1736904775;1377741212;-1373048377;1475137936;1401702669;415514517;1686557859;-110454843;548460794;-256285057;1315032266;-2135199498;538060324;-1735503339;1286976501;1554617639;1807953890;198664564;-1991472982;-1125395409;-2033070935;872039520;-822846518;-1174025928;1972269006;-38738536;1827113749;508794067;-949771217;174019405;-565504941;799921539;-244491869;-1199899115;1092718601;-125166305;-1814726140;1873828951;1079539176;1063204840;1557411972;-644056202;1426150439;-1801942275;-1551216741;1129925214;2006986877;-1886814481;-1431901563;84789320;949390958;849416557;-1579534583;-942039968;1480634393;1617580931;288458326;1036519419;-2012382443;-170794718;1630502165;-1657270539;-1545529211;-1113592234;1525677368;1203858066;-1084442347;-498903254;-61516219;482378167;492772941;-841405572;862855735;1581510864;1315233171;-1889759559;-486316825;1402000405;-1238474234;282907063;-1017467305;-832717495;-95532456;321587982;-834151250;-600987798;746143639;-536942658;-608136003;-70885597;-1744066098;-284415061;-457038984;32625848;-1605933366;-1583048933;-2005204975;-1340721996;-1812843516;-259015019;1406040422;1430193884;-929760149;-1531756733;240697313;1390026498;-2017732243;-629001718;207851725;-1654597598;1404987106;-2090658606;770345044;-892813463;1669939480;212603428;-996905348;-1758817948;1835333000;-1292225960;-635565618;-508324562;921301519;-817919686;-1861245235;2132449532;1279836963;-1223675715;-860719953;59512369;-1518601045;-658497020;942943771;-1073764864;-238972124;1932521406;997183415;726066320;54083374;178752901;-646314791;867341923;-660254095;1266060125;-706922064;-603090684;-14157527;-1757230599;-716307089;-1633488379;1543519789;-1332603449;-1951660507;-918925616;-1007352147;117490453;	};
	mti=624;
       };
       RndSeed @[1] {
	name="RndSeed_2";
	seed{ 2124098717;106698125;-591923805;-1100576733;-1573626359;994704732;-1169477294;-700562281;693125740;-1591082843;-2005098259;-975936170;1482258325;1901486449;-615947970;765985312;2068575920;-1227617050;650844678;1027111537;1709557673;-2129089187;-182633071;-1585812303;-1235374665;819881346;-358703516;1009425854;57469458;-1581647049;-1874691833;-400528360;1197611463;-437706433;-1335412530;1941083295;-280022918;712892642;-1624200368;555776385;828176653;-2041497782;1469601682;2130524202;1243819043;-1620272233;573513463;-1058380126;1204659893;-515565259;1396365440;-1415875560;170702966;-980030269;-1457969162;888821627;670193343;1715564692;1294215171;-1195713787;-769644289;-1954347095;-2089186891;-509131662;364214741;-543224246;-2006666225;477167204;-713825864;1252139532;-1601477529;1249618208;473129805;-746233174;-737452553;1064281487;-1584473929;2017942710;1640399745;1748066767;494195862;1022764415;1638318701;-1513455377;1247720149;1490813433;2040692526;1098208482;-1276315417;938721202;-627121260;899455470;-1834280638;516175517;-554790577;-1460338853;1287544701;345573453;-1142129725;-2133975928;509418710;-519772461;1982095478;-348471718;-25576827;746736967;1538554989;-1145117945;-1963966875;-1963016688;-189358200;1211848006;-1996708749;1791252998;-1646902219;25909542;-1497791886;-552704347;-1943579148;2050986117;-486102900;297666532;426647918;1247350497;-432488740;2124522872;161679931;963222726;-50671458;-119319694;-848403177;1412535655;-565344318;1417926826;-140181763;562071741;2047744025;2065455617;878281354;1475500797;842187256;-442744987;-128149044;327251514;-1376866446;1730029505;-395612334;1747731592;1977834401;807126709;-1556135169;-742796440;-429806385;-208250603;1201138760;-832419224;864526291;1271855580;-1117070897;1515299712;926714757;506476826;1061908964;-1510804585;38262637;949769126;1341839140;1226616640;1759637069;-574771035;-605452248;-1708213086;2143423436;242900366;-1455822924;-556609155;-1648683674;519959845;1919255883;1399337189;813780648;1555296509;-975638494;-1543543108;1492203438;-2017419324;-1964376104;-13395011;-1209589582;1669207597;-439333862;-996776036;-165414533;-822434535;1190399492;401421756;712757232;-189760907;476280660;560335083;712263807;-1977249308;-1590647160;1729597245;-2104057992;-182766097;1292604138;-1080182138;-878232860;-405742348;2053659973;1643262119;-1658845102;474355813;-243749457;692162995;-574863497;565265821;1283226827;1835751053;176034328;974388309;1581189991;1136858653;-1919896084;-1393154617;464934043;913528074;-1085741098;1117776777;-1361332850;-1750430429;-474523667;-991555633;1271687270;-1705684850;-812141528;661788900;2106709730;985547646;-6221914;359496202;-1731821340;261484977;-1403579191;-838281204;1099318753;511603287;-2022396853;1664748230;1964753021;-1587982873;808339797;-1529582458;1568503058;1034640510;-1198723914;-1557022715;-95790395;-1923889375;-845919021;1380818709;-867338262;-1558511372;-1679489002;-1153768211;2034842197;308738095;-88468841;1902545265;-1626265026;1761855163;1525478002;-765447312;1738659953;-1430366909;-109155143;-2010746761;-1198785473;1524771368;1458148421;140239853;-1330265445;-620189576;-1947120477;1553753506;-947038867;461149061;-1480892007;-2090437048;549471828;768259143;1835278375;-1497430493;445388075;684023326;-267505410;1622915578;-1703627727;-706780086;2009899769;-608500475;1906520716;155936720;-1677834688;1656294203;-1063683820;570103366;-354074414;1306094762;782001069;-892999304;811921855;1298897044;674099459;1261417066;892971123;-100007524;539606009;903768956;-2002139860;-1849529753;291964955;-1648777494;82379468;-972994623;-1674173744;633085985;1565611853;-874308027;1471703272;1984239160;1236616905;1725822517;163575762;-216389335;-1048594206;-1417979114;-1728797642;-1311728169;-124239011;263316331;-1076888179;1051300290;1278563554;-1314063896;946001068;-2088635081;2129796165;478252081;343509427;1720262654;1244796923;879640835;-1151384943;-1120210846;1166292804;-845103970;-1985646505;-977940496;-2136402105;-15917918;1491432943;-2144999855;662391595;-1056199580;-1817238255;108383470;-1717094058;502502293;270989371;-405503046;-681248143;-168045969;552194578;1948877969;1816288840;-1700575930;-145245874;350310876;-558364344;1084346132;-1657015865;-714354376;-2095111993;1697930298;1554053065;-694957205;805431692;1771114945;-990133690;-567438400;1516480631;1639095831;-1129568712;334897261;1987060109;-1224398391;-1057742427;-1176691187;-809769861;1638751465;-1166683878;1963546635;-854386810;-524192242;-354711113;-650466917;-602979696;-760549224;-1871650367;-709923190;35450537;599890762;780328912;1108909743;-10241466;1424649178;1261552137;-105916725;-607598964;-362684656;-159174875;-939069019;1167666726;640882188;323493990;529883113;1369541017;-1970953563;290819217;-1561260060;-1041801874;-616418638;-48907641;1140800455;-1793487662;421519301;850835311;-1572223102;-144754888;-205758720;-717285143;1285558285;1678819960;-805405574;-1286414725;974096508;1133459116;-964810494;1589557287;-2099970367;-709632077;-260279755;1639053076;1711520272;-2138930307;-1202333212;-1463480440;-1344930499;1689035431;-1783561397;-1399365989;998716716;-603944916;-1570774180;1075053544;1700543936;1991747577;1461780141;-1895659598;-1133725113;-1166578671;1920520280;261674487;-7431346;-545620931;1166160979;547129400;-63981577;-972508;-1657004732;-1991506816;-789226707;-1529177846;-1789154803;-174776111;807687873;1007322381;1890940170;1787236929;-808553173;-1925274956;2042862011;1669739088;-1592380188;-363071826;1745217842;411454993;-616896600;2112154475;1429380295;-2075667948;-1503810907;-505891621;623833905;503459151;-1841026778;2128904496;-1918815406;1279201422;-1666772630;-1877833720;-1302132749;1139350807;-1625079375;-151603037;75790629;-1726244193;-1544747272;773164202;1198357275;449346892;1497046279;704949098;2071551199;-609848412;1512112626;-894053905;-1803083731;-1630413923;212647630;-1847228582;946110413;44442359;486734986;723091082;1401735307;27458188;-952776873;1127193152;-1625577790;560303070;-262475;-1732975122;-404880323;-1869685608;2090956005;-176348136;862893004;-2089214558;-16559545;1395776252;969395450;-883184948;1228680406;111002111;-351796536;-1154171067;1159559218;-682051249;-1841379027;-1598519107;2067082382;-1665393249;-1923369434;77865578;1410486281;-2008687264;-1934111773;1606802175;-801941903;312614710;-1088145269;592093515;-372258858;-1010969015;-442947725;-543719054;-2128442152;1106787910;-2009754808;-1476675464;2136937577;-1857636528;-1002489949;1192596586;-891432062;-197427919;-1244255993;-1802183097;2039586952;354199901;-2005100286;-1240899758;820276451;1184461539;1966294911;-890264308;659171394;563820130;654633219;-1464366199;1055159090;1344616214;-1093989008;1718375000;758980732;-1025233076;-1602161780;-434563224;-44334438;204302785;1808401546;1726951485;1053959699;1305359079;2011245863;285878376;595172211;-682630709;1053826645;-659917065;-443185997;	};
	mti=624;
       };
       RndSeed @[2] {
	name="RndSeed_3";
	seed{ 2124098718;1249030588;1485390995;-606589027;1662539610;-422106644;836596305;2059563772;1596703449;1802598209;1599425610;-58180446;513348753;-1168263614;-1455347890;-942658293;-663548872;814507608;915503306;-426851899;812607794;-1281473841;-557117449;-246227109;-895470128;717760344;829267410;309503477;-2017552699;-1605174368;-489359096;-358996874;1736834889;-395100279;1463741332;1694019308;-1338713947;760994056;1536813134;791932498;-2042304382;891042473;-165243433;1278447823;-2038931598;1419810653;1205859194;-1056644426;1395871385;-1904911831;-1665493463;-282639830;2013530977;1397677333;-1913066214;-708877649;50592276;-1745723875;1305917813;-1591591169;1529036557;-1694938119;-2048832187;1966046274;1326506415;-835639321;-285621962;-1788766420;-1280687254;-1206435763;683648625;-590994468;846691907;-1819563080;521620140;1440383527;1709551434;-1921365020;1596459020;-1418386832;1573099850;-2143183384;-1060403292;628483126;-467800158;2121511898;501426365;882325480;334247648;1169131193;-1134518542;-1614994165;229666281;516689482;-164807280;147977822;1010860406;-1661650449;-1170559005;-1670525656;-834442250;-988629746;849372039;2067497898;899577311;1102174308;-1631883965;1446044688;-1815210975;-368464580;-733933239;1089629345;-735675504;-1336578960;1473956716;1277859700;1477336733;-728707071;-461298880;2108081382;-1468248421;-1320557610;668948254;1250848081;1608577292;1209667486;-436387527;-2056731039;-449429361;1254515645;-1245121106;-1955202721;898180917;-209005202;871926151;962101706;-1041871046;-154025210;323133059;-642669254;-2062503671;-375276316;1496852145;-1901366273;-224253855;-196845253;1065964458;-1868956507;-779678345;1051157337;-1885088845;-842842516;863635811;-1545556056;1800226988;-1440923172;987548466;137882967;1567961841;1007651151;398816203;-630500680;-1027950743;2075662197;-396733080;2101802716;1663478487;-1014502123;-1508159402;-921721395;596224240;-1891100837;1264506825;-1000527211;-962194468;-549376342;-1991320995;1804730156;-2006728077;796995656;-1832479460;-369630325;-1874293410;1841955331;1372839298;-55148440;94825969;-1110910512;-376614250;-469347706;-1236616137;1806147240;-811005331;357039143;1147689765;-2081539593;2075392877;-1887240607;1904629973;-1923710869;-591930571;1062429463;93218781;2043625468;1944954013;975007321;1041836779;1213379206;-1612992749;-1747768442;-919220250;2042598188;-1869404523;-1948907160;-1335791192;-1880370455;-464061809;-1942370795;1550743277;1705850871;537115370;1961228591;1767304708;-1295018536;-1274164766;1872332353;-601212894;-375861528;-1133353317;-331785150;-691589237;29198735;894291283;1272475048;179418519;-43289474;1747376957;827038617;-1236777653;1217816508;-1291447423;-1368666464;-2138359588;1852718729;-1498581860;1848217931;-433263320;2060621294;349900611;611115368;-1385326846;856396795;1168094723;-1032330809;-1116080302;-1985453169;-1584350047;528656464;-1261487982;-2030673453;-230395527;-938405849;-1319460038;-1868341729;1285334905;1135954785;1266490858;-1295216190;16073164;2106401417;1642162358;1341734978;-158386561;-1207116803;382157741;1972390228;1987996829;809784993;-407283813;556263439;475502083;1810549576;-1788131865;-520281740;1493689359;2106226851;1184779016;1809476780;1712354913;-797436671;-307471124;1631949422;1893281263;1757773323;-1331423976;196951657;-387001963;-1216612521;1519915699;-1159814299;-887515185;166269097;1669137627;1105302833;187075872;1671155409;366340418;1342659133;1238677216;-487485190;-760056717;264757607;-817033765;-2034823311;228762777;2003817112;1157691545;-1433178827;1646102257;1936502255;-596181466;938939098;-913892540;-2099788986;494628632;-640766531;1907833660;1185482072;100318821;1553214498;-888592871;45478797;-1778742035;-271678824;379288437;-593734792;-558447657;2008266741;1594173590;266523622;2066592018;-397473580;-456487639;1033579753;-543135163;-2095880969;912323331;1063353482;-857604658;848746558;-1058111532;-211582926;1932709301;856456549;-590641349;1513181819;-1276193402;1410982521;-642739522;542903032;-218690240;-1301932072;-1543433108;1063120593;-124513567;750020247;-1338750463;-900608098;-2085818527;-821334400;389789217;99452280;-1184177716;1856263611;1758223832;-741791468;150701707;2013886800;-354404497;-1139627241;-1166099003;-1946066944;1895429192;-799575220;2053031595;643521683;-1835322751;-1965553102;-335563148;633974136;883861982;-1897737187;-1545910077;1757019822;-1518984299;768138014;861110882;-647568329;52682258;427573417;-1656818371;63863404;-387048914;86862420;-1323439944;-1217504009;1425853247;-2026742003;958892419;-1144693432;2026924492;-1821150084;1297507666;-2003540388;-1041845580;212431570;1762308218;-519670488;-1804779879;534226890;-949596586;1805346350;1028094257;1768229628;-1331053447;-1808649936;-998298524;1069589838;-1399195790;-2110156579;961970345;-1164298916;1123573190;-627212236;1061291621;322671756;-1730901776;-540964049;956986898;-322029359;-276640110;1360927214;-1505090555;951646078;1239290994;280272412;1654873802;-1816393002;-1496859804;-673151233;1421221678;-1865189810;-1714398784;2072657231;1299902348;1687026024;-1000629963;1973115415;1209684600;-707507064;-1249536093;759233874;661837096;-1200061801;-1283439719;-1291476744;-2093724044;-1361437599;1072902115;1925669220;1099660207;1257892733;335758788;1039952941;2075509915;1831009437;-2143213720;1135757487;-2097296252;-1606457155;-1723102149;-899164834;2108748947;-1850695299;-6967297;287329361;1288468187;-264531991;1323959098;1487592240;353154367;-1548010810;380441920;661169197;90168495;1219803642;1622258935;-89256705;-1232994978;1331901247;-146708630;-1392246942;-505535786;-853885696;-1446498521;54028434;-382376556;277865870;-1182756606;-195938563;214934068;-1960520573;-691543579;-368429121;-1543529682;1276560991;1236701978;863927980;157681634;-559476687;-923654206;1628895790;1161616789;1654890863;1307873394;435128940;-980850006;-1343584324;-933347834;1250043658;-1047835543;-1228938779;1793704247;1461264995;419366080;2003280343;1180197254;-1413432484;-1360970704;1165067221;807499968;873686493;-231377073;2130951963;1333088610;529275184;1544593938;-1412358494;155498308;554415097;1153254499;-1628279087;2126095975;-300597657;830546846;1163173249;-248797780;-575928520;-1688572043;-258626782;-1652019403;-2038427164;526723056;-589810717;-1070638700;1354836424;739315587;882719718;-1839154698;-1990659203;115346005;-1069641020;1286433215;439576627;913336669;-1069066000;-43703009;-309878195;-1535063800;-1985237707;552519671;1928926648;1291097411;757938001;-1264046531;517142564;151202942;-1602093567;441308283;-1161319980;2005109180;197557984;-682233680;194823152;356827138;1190057245;1879708256;74853274;690659352;-1910111281;61028153;1451314390;553869869;-2128948452;-1201513678;535473229;1608921535;-1969074091;1969832883;-1717569125;-1746969409;-1192509964;392469106;1651897183;1196971132;1987787960;1731000421;-1066957347;-1601330944;1645779509;94809328;1742646557;-1321055622;306813895;	};
	mti=624;
       };
       RndSeed @[3] {
	name="RndSeed_4";
	seed{ 2124098719;-563402665;-1557668570;-267484361;6068104;911708333;1035184455;308922378;-1878047238;-1941941535;-906940775;-62010163;-1360131246;1999128221;1324439450;374768438;2060692062;2017988236;-435014989;622735235;1558895043;595508127;146873553;-1034733684;209285763;1338460360;-384677785;-407891057;1002545752;-1011997483;-1354428788;1760214053;1481080404;1730368682;233630361;1043558272;494304676;-1468508711;-1704390003;-62137966;1079144285;1503800181;1181235438;-266379914;1872133205;1697907025;-1956096834;1990593115;-343785550;139450886;-2124924272;1898266061;1381469616;-483024886;-2096368445;922343772;661192068;1521723725;-1617987786;-321856577;-2044572312;484197647;2068137513;2146964999;1658054302;-966913028;-1144366371;-242208450;-1930948011;-37696616;1061373805;-423656632;-1042354209;710237717;-778413165;-1915342821;1911380777;1451581205;-1945356494;-1934985665;-1338881183;1105508704;1679363223;-2051523199;1295015939;-813370593;2068964962;-1940922266;1834290124;1954110778;1466129313;-1482963333;-151318759;769122207;-835694311;1680664993;1914621056;-2061584314;-1349052618;-1267532825;963505853;-1068673546;-147454193;-1284885469;-139249043;-1526928433;1620360523;419514525;-978801827;-1764562301;909938259;-1236037074;929445836;633614317;797425139;450493522;-1102680370;-626466063;-223147024;1772995158;-1292944437;232794054;220374936;1870952307;1062019702;-98975989;211527334;-601778691;343350198;1523340623;1768318536;-98407344;366094403;1900723700;1071124271;245835026;-700038494;-507022578;1906137515;867588765;-1279605379;-690363736;-1259278075;-549660846;-1317909371;951939284;1240135734;-435528378;-152847923;1122602203;880491672;1882472591;-418679138;-1001729654;40238247;-486339202;1289172973;-1790288711;521382245;103539320;-1127575048;1507877443;300553900;-2043609473;-621785867;-591920205;-396188394;-657039632;1644724615;1297469575;-1424163960;500307997;395708701;350035486;187494532;-1190295357;1775058389;-1260660395;-1486008571;-1432621706;801358712;-1809885427;-346201951;-788802911;1367395490;1908996104;88452423;254368958;-819640910;1071069330;-2127727528;1890128449;1832416256;-446607834;1362666075;-1028638651;797813346;-1816089745;314308551;-1238154934;2032159280;-993493218;-1528058821;-239831992;-1065679517;1812561837;-1027183702;1166338940;-1142829535;1583091616;-669625257;-230934025;1383232024;1894081970;-1714230411;880448970;-1626590326;270278017;-1586975297;795980140;-104739720;-1153400732;-269271268;-1516732646;-1965687464;813178723;132472305;442173944;67676092;525453841;-757149029;1388605151;1994820734;-1247910396;-1103005880;-1817138403;-1843389657;791970694;-624649524;370334618;-970191182;-703232570;-1082706773;299186336;818739220;707564761;489544595;312364278;-228719610;660685810;-1973792396;-311145847;747324270;1510570339;1096832680;67216044;2003253980;843415346;-1730481732;1039273721;1867655745;197585989;-1412487873;1683117848;-1832403227;2051600684;-602719029;680920051;-353264917;428885653;365205207;-1624665374;-1893674128;-382111989;692852538;503919861;-1783889219;-1047638672;649861749;127012416;-1979719592;2071572123;-1817686564;472156081;148783857;-233151694;97868915;-2033449602;-741243124;-1202040564;811891112;274131051;1939338843;-1572840281;-1719936193;-1864620744;1935457034;-453267584;416176857;1073150408;-1667984108;-1509844773;324825035;-841433274;-1950194583;240902760;-415105990;2123498672;-520776695;1902297895;-193964748;376245994;1449663882;1102056464;-1587487505;-2014511172;-1685088974;-1966306003;-359998519;317575665;650432085;509863370;-202849292;1534427318;-1338066825;-2136447890;790719458;-971406479;2139545410;-595201608;793932561;479363072;743211340;74756169;-765485285;-1517969977;998812937;684005086;-686762776;-771570422;-2050453791;-926098460;1372742265;804983471;-1579743389;208655262;833621168;1779380939;-1783421682;30739225;-1783839941;-466516004;1415181147;170798563;-1074030863;112171586;-1398591634;1287029505;-2061717402;-512549669;1992424096;1880034286;1792777653;-269054609;199792904;-1142838891;988461313;1453557716;1158190457;-1968688695;-1215411831;927688778;1033224358;-1128802061;1916309899;-1996863767;253673263;2042271236;386457203;1857048538;-1723288093;1210854466;-1762503955;1418043594;-447605609;1718703077;-1948836234;274143559;-1277888121;-617504770;622691671;-899535910;555839269;-1666275294;1640068650;2025694082;-605577413;-1323382107;1512723569;-923582017;-1840608068;-1645398393;-630804213;1450779067;1424808438;1809329928;1387618595;-1300724223;-682001465;-337266195;2141502080;156475264;-891719908;-2112262184;-136655712;1028323566;-2075290234;2117837493;444958374;-1572407519;-2043265677;1415493690;-409779219;1878404237;835354852;-1172643939;-6335899;1706957289;1966432820;-619635306;1101556343;-1180358595;1315674507;-261853405;553122130;528498957;1405395157;477161817;-1831095597;-1827248340;1062229214;-231847089;1906533046;743105262;696182690;-160098649;-1278495630;570302959;720718859;-255466216;-1922312087;-1857378566;1989581212;-789929546;-988894417;-694675933;683138152;1549115089;1467283930;1406781490;-1636546325;155481786;44196656;-411708481;2045781756;1837615266;560358689;-1452568360;1441452502;13753000;2070359582;1044171538;1009172978;-558692269;-1505420950;632532963;-1673928341;307634506;1959902736;-1276242028;1420334606;221920460;471280222;1264715513;70220220;-1291541231;-1531884187;1848683146;-767251009;-969529067;-1762329192;-1852474963;-1780438281;1708364182;344146305;-1940004140;457770590;-1396059385;246476779;799042730;1427626758;1204890296;2087837171;844174449;2030341005;239926325;415948771;1024446858;-2128181394;-694142055;106098624;1866881215;561033974;771113743;359955949;1003783556;-1394060520;-908610233;-1225266726;1625021503;223155326;919766463;-2032468635;-942466386;-2041897651;1333451064;373700235;2125523430;-2109085389;21707622;1833043792;-802275832;935288683;679340620;-735830510;80607180;-177016428;-1463541332;-550934080;1564808970;182713459;-1187961220;-1821401132;-1905420403;1346458763;667563667;1812018465;902305731;922598675;-1412446812;1766380196;-520590784;-558577257;-1874870899;-2004856171;2096391870;2057421447;-862619893;1424179286;-1854409854;1042453424;1316845217;-631541934;1272727080;110272865;1709020794;-950979651;-1444144595;-277709373;766992121;-805651593;1281952511;-783989134;1008616914;1812787224;-1438180068;-1334473450;-764649691;-1514741184;1208653901;1371718720;1185233130;-49137155;1462489469;-506919884;-116319492;-1138024475;-1536739474;760589288;1327758549;-716425742;361120612;1606753476;713869578;-664294076;-1919721898;-1125438088;443891063;275181897;-188988124;-1487263301;1995798870;1378447533;1012498999;2038485263;2132081379;-1850216568;-1316463151;-1714949729;-2089133486;-1849003022;1216032787;1842453374;1415729792;-1770481589;-586012620;1026576155;-1943950576;-1823268220;384849737;-628653255;-884551089;-376461718;-560342308;	};
	mti=624;
       };
       RndSeed @[4] {
	name="RndSeed_5";
	seed{ 2124098720;578929798;-150454560;1545423506;310122243;-1738887372;906298964;-1666550997;2030002229;-123156339;-775086576;1636436106;970244579;-1108870756;-1939011228;181816141;2146626161;593260097;-633386825;-439614697;1554967288;-1517226670;1520998566;-1631151878;-1157688848;-589654381;-88049942;2045811464;-400294999;1904624687;-373849020;-48091358;1604075813;1333655381;-111507386;-1450725284;-92478662;-345102686;-813144405;-1906808721;1337886761;102834161;-1329556673;-1921991620;1877570210;-68651652;-1810869687;176659142;2092828238;1753334876;1205026275;1805868125;979676288;-1584886091;-364823191;-1149176567;1414566031;1023870527;-1781125611;-1295286706;-185368520;1498294916;1446704055;61377805;-61432991;2130755563;2036724116;-359396084;1993289263;1790301803;-27110888;-1653090322;-1169589148;1096460935;2142305576;1349374584;1313196809;677929589;-619547273;1968139027;1310711914;681168264;1382276858;-258454438;257998961;-952146454;-1628707261;-1458462468;-1307676018;752098709;-560502493;954112507;-1441328285;-400519518;-745312541;-408904001;-25871220;496135116;151565278;-876428039;2048360710;981706536;-58893522;763039272;255327792;728693081;-475528825;1957969279;1450619170;1033150012;2012514842;1545596950;-1263073149;-414555050;-1436675333;538164656;-1474492700;342806323;-1962997099;1365966090;-269633329;-29158155;-1855394936;758630381;612021757;-977718706;-99152417;847721547;1549845783;-415201233;243877342;-1013031143;-2146013242;1225129177;227826110;1539315325;-332055692;-2112608900;1215641920;1319788592;-2079773471;-19320548;852687049;-1914783524;-538984922;-552938966;-723788865;-176599617;865683392;1495207765;-1547632454;-1987067601;2018724953;1126184785;-58744022;-1362407224;838400590;-1253015709;76819171;161310510;1100174278;-177828572;51417093;515800988;1622594864;-2138024454;-256138370;-1729075720;1061226058;621483483;-1995517167;-883723734;1260583897;1618736357;1227989666;-1491900930;1713314076;-629117406;-561898313;597534647;905255655;-1519764264;-1083134792;83472409;-227615851;1113188583;-1318717064;-636241955;1178556754;319859068;1655323306;-985945802;-1165353047;-2061630920;463334308;165985399;-1420096841;-90630354;1778924167;1580912037;1958471292;-1511664358;1717496642;-500257478;-5449399;-2004855553;-1761088097;-1886075712;2085319514;-167954760;-229790823;-760209771;2113165314;546657540;-930762902;-1082366396;1924780150;-1692406068;-1173916128;-166212027;11655290;-698764545;-955221430;2129678508;-524850655;253170251;1894865785;-646688965;-741328388;707352960;901107814;940298021;-1266251903;808293016;-2020200734;-1518969013;129018297;1133901802;-683371611;-1298393235;2015930043;811160147;613476017;-210321976;1844937995;-1272981529;-1638089905;-1242752168;1638200698;1741729152;-860520993;620324039;-1027325313;6723561;-2094751509;166669804;-1134269668;-1497148969;1789740811;-89693707;-315601646;-1262255686;496346782;-125351075;742918942;-63868449;-495671082;1077123604;73664597;1514129302;-434467167;1027406073;-1524990899;170021692;-189140034;1995984804;-1676035539;1175624864;-812583525;1321680399;1328741022;1972697300;-960288221;-2090156101;1137092121;-1226153835;-263590991;-433438631;630296226;-164628213;-60126902;645872624;718673620;-2005240119;1165001277;2058976979;-1077187582;2081266985;1720805874;-1296639734;-1417615020;1343559195;1943774064;1681257924;1043555561;430342686;1898276104;907128512;-1832996108;-1615052221;8515035;-1601565794;1475416516;1291940082;-1045914599;-540704387;-1381333518;-1350285075;-591286647;-1130907727;588203487;-24909508;-157893091;-804712167;1567664774;-966359160;2110381597;-1958371757;-1268264899;18866468;-653518722;-2108977252;1828534434;-743730020;2039724809;-2087185545;832326521;1398573326;2084838205;-2011833345;591737125;-442748434;-2033022761;1981610592;-535580003;2091780015;-259578112;-1907883894;241762052;-1996373519;-803106499;883588309;1239694953;-515225495;1442139444;-1467231156;166363690;-1336683017;-1538881521;-1023564920;-949753281;-630618347;-1635314920;1379497133;-254864056;220564228;-1001325054;703185108;1463191828;863196090;-966487084;-676502458;-1141604947;1115766400;-1997032613;203646100;-355081252;1819164532;-542660701;188335003;347414691;-1033757492;1338582569;182417223;401608579;-1701299408;739974716;226822959;-1430089201;-112749146;1540774047;89097693;-1945233735;1322650704;692139647;1046313126;-184848118;435186458;-891212592;-912745522;-214880655;-1587521909;1662023327;-884253719;-1001292058;626171630;-1322773636;128983117;-1478429447;901249952;144631738;1053423613;1599094125;-914683591;235974528;1191231263;1264875126;-213291628;-88142539;1340874225;-172146348;-1190963208;-1472429752;-2112512551;-1728152561;1831135178;-903342143;-1261030603;-1804884641;-343800738;-651395233;-902136581;549193608;518963801;-693940273;1387702575;1792827098;330408220;202411458;1454555457;649166840;1632319121;-523265910;-1035501368;330265811;-545061892;-70448039;1643645761;-1281248768;488394379;1811964313;-1685529925;-1592111679;122882740;-1888907574;1501978287;963672686;-1679348433;1906108811;1722351421;1005047928;72186149;342399591;-1263072398;-781814528;-383793408;-1340137215;1342677762;1649732867;-1855613537;225447367;-1727664038;1063185552;83650217;623113095;-2127342306;-1785687576;361090351;-1998513047;1676835606;1143660787;367674203;1056262089;-592517840;1913502211;1174632111;547549836;-974479581;2123950472;-166889994;-584931181;651268795;1599207603;1582064167;-877457172;2084476730;-1975697609;1735413466;1971278169;-685035093;1026916668;-1595336031;-1179795643;1809479674;-1555846401;153017546;1591424940;1057197628;-148292696;1507856244;635353127;-1636005790;1723674592;40521414;-2021454816;1159724397;-500053600;704760404;-2142779094;1729152719;-73093298;-1327210390;-2071350510;-1600702629;1471576361;1911305941;1263867826;1814439598;-125178853;1919614857;-1011967302;-339800560;-1485981037;219756106;1560676168;-330960156;-1092127173;1998923670;-1392939091;-1661552346;912740688;-1166612819;1428532265;1444304359;1276247006;-1711556580;648655864;-1643398405;-897644703;1790926287;-11189652;37330674;661207458;-943099629;2003512698;-1694710094;450794908;-1624931143;1660056309;-573050765;-387068320;-1845859776;1517764668;1572676;-1947263992;664628263;1225624729;180212271;1705514435;2135124419;92245444;-24324977;-1423783560;484559199;-814658631;55536801;-1277229371;1963929028;-1428259333;-117377408;-1025351949;-525474059;-839923884;-1196935526;2109531200;1534318830;-699039851;370974329;1801996553;-1905124747;812589633;-252424460;728127683;-1774820800;-438822820;300250830;62791578;237102103;-1492103575;-330091122;-1218996231;1103186784;1581295775;236000945;-54939855;-161357033;1018187074;1068814185;-583792691;1012290727;-974272699;1365120769;359535972;597489369;1492551427;-1869522895;-1091561081;-1593491230;-1662354742;531594067;-864021205;-1376599243;364934689;-1156757900;	};
	mti=624;
       };
       RndSeed @[5] {
	name="RndSeed_6";
	seed{ 2124098721;-1233503455;-908849199;601858013;1859278645;-1676461175;591454429;49937464;2049079840;-438511602;1142633003;-2085010275;304753095;-747701616;-1394178291;-1700573190;939672808;303912857;-895258513;211363503;-790042081;1206999329;2060077494;-347929526;-1732591131;-188473540;-187561227;326498601;-335462839;-1294389937;-2113399681;-342754704;1824807551;-1621679657;1196316203;556431541;2035121293;-888336543;-586120240;-1395331738;-792187748;-885804572;652922701;716111500;-2095621784;1626734847;378032740;1218184611;-1543509222;913283241;-1420252193;-50326684;-684013865;1046734297;-396767277;710233415;1794341947;1562447131;-1044179588;49377878;-942923222;1290824554;407086197;-1595572376;2141257490;-2138387008;1999503308;497393956;-309274760;97703628;280357570;901083345;-1951638595;1850894756;546306915;-1978980006;-1326487548;1296646315;774339936;1162663727;-1061518474;-836601222;745804559;-2123920322;-1651871744;631063327;-372239727;-1291487759;1256952887;1992056743;1292604120;655757560;1368484404;1135100998;-1881280671;-681546386;-1919581855;737085296;-1269244014;-1817951181;-1314643783;-1268646612;-278363764;1081713874;251130535;-1354818740;-1868266448;-788207067;-2025277590;766444661;715284375;140019202;749859130;-320719277;-1065337342;-1311899688;1529322358;-1659632280;-1917723320;1537140905;1825288896;1045286814;-1910474800;1370269781;-1451270752;-271998105;716831474;1464435705;57198936;226461753;1489387519;107490745;-1818162303;38250036;-1180539126;1466822319;1104955694;-1285814508;2092143160;1470640648;-1033793767;-943169585;-1142556662;1538204599;-1473282722;39236061;1785622979;214021149;-627403515;-1813577229;-1278952021;-1312996028;-693581002;-271939198;755321215;769914550;-1594770326;-469041755;-778180324;-1461219110;-1513636392;1969066403;-1270339700;-1165715031;-465951717;1156126237;1468970418;1718582086;1709548203;1112287163;2003056396;-1185239604;1349243122;-1476363380;-751714892;1428670690;627621183;-1873649268;-1718125640;-2079302891;215236551;1481615672;629949747;1237620950;842816651;1260643984;1434751215;224300193;-1544116927;2006257452;1495863935;-779371915;1411626830;-1504077332;842799528;-1895233525;1209793873;449495381;952616015;17283826;-1078574014;187641353;-1216414889;351053396;-492006416;1491626668;1535355919;778592341;-1458667687;1415377592;-1247820593;99965620;306388440;274423565;1866823159;339882213;1552603185;-104268855;898658700;-1718306537;441205541;-1576514698;1574099362;-1843586770;2015853372;-1556986638;1816765330;-1633930014;504151364;-1993600839;208907693;-1924130008;357184122;-190892789;-1989593838;-1219002309;-1229776791;-1146690012;-1391647764;-1309963307;-962249789;1852462001;9188706;227574429;2117373413;-68747287;-1199754680;1632924201;-1769966912;426056067;371141801;-305000280;-679929997;-1268699091;1382689417;-564293465;-238168652;-1718271692;138584400;332232083;-16773373;202173445;998951935;-320408670;-1528412019;-1684526988;-1276568168;-2096752435;-162033225;-109981423;-1572331736;826787489;889489301;-395625510;1145355951;1475107257;1078648492;-2123403178;912279098;1562820601;1556968944;1992589870;1752925349;590551503;1151465159;140530491;86534757;782567416;-1876435464;-1084531005;1745398855;-309891391;268600750;-1169498933;1697623411;1170174241;-1879981368;-1222249253;-806306873;-1328416385;-1345956739;1609584200;1672672507;1166701009;1664563264;-1481966634;-100282410;1263992124;-276656315;-803668525;710964294;204560085;1925333057;-54158727;720846172;-1058704761;-1234513072;-2105916777;-1779367161;1406590776;936022973;841445330;-1960541924;-1638793191;-1121616149;1964295218;798340197;1851603488;-238380723;-367314161;-1666467578;1960780767;692909538;-1943997065;-24152713;1520462867;664684138;-100236509;916315378;706981581;-63263435;1850883491;-1864629184;-622657183;955973378;-1634947293;-1927232929;-1032096500;1405302599;-1887222277;-720642661;-1771256233;-681525783;-1473042253;-2050176969;912415564;-1497517472;-2047093745;-382689401;304649339;-724211473;-1681083771;-654463059;-1797492975;-1074921749;1521435738;-717771691;-393542307;-230003322;-2036571158;1753388026;210941562;-287356522;-1685338562;-421571806;-880839044;1361885331;-1721174765;-1861891537;-743056836;1682166615;-365598613;-1228285306;-852501613;1364308304;-766095498;-1262094421;1430464560;1498944985;475609021;808592407;-1984328294;-1574750592;631117011;105391049;-602165032;-493946125;54751805;1030338719;-287576246;1188199005;-1123449891;1533829005;-1112039473;-124665227;734847011;-792974747;1035424213;-1930344543;1945927656;-1368315513;-1602187244;1483645002;494559796;-1086155742;-1553362369;-1282123599;769903424;-1855688222;-1162752253;-453691895;1089449367;-376519724;-1694346118;1449626880;-933811186;1632786379;352173661;-2088312483;1349239592;135524827;-582377450;-246782215;1280076883;-1906532340;76850489;-341855695;1673269615;-527908836;429745394;817649458;2136353395;-1697398092;-2085013111;1319901331;1728697687;124138156;-1893463141;-1600358883;1741304572;1224377491;331772253;1434484853;-207830135;-1841037000;-1710061655;-1919481025;-1136257574;-2109786110;-1075242549;-163397863;307253519;-1065745479;-835189711;-1950979190;255604345;-986234737;875259151;-442701889;890178305;-1260789189;798344020;-1293285892;628837647;894136261;-1879668844;-1209219574;278686469;1277093847;823983949;1546383425;1923615521;-132086398;1590539976;1232711729;765211861;-457582865;566892803;1865644823;298342295;1410031485;721029591;-1127550273;1998842750;1051451913;-1341783940;-736910938;885200138;41920740;469477351;-1032528105;-855000871;515414520;-1090357041;2017091545;1798990385;-1204840726;585151363;793571243;-2025188492;1423824268;-2052540512;1665410794;-685498440;-128411191;-775436107;-214591534;-182796166;1407038147;1987009169;-1957311272;1970306571;857413116;-1839756681;-1160429771;-1015586368;-239079683;-930006459;-110791250;-457440174;649334535;-28987690;1071708445;-1528967290;472679722;1291453865;860038496;-1373757191;-1671014367;-1501527318;-350629980;-1293922816;-1773413656;-1736795535;-2111079297;-1003355022;-147637321;-2078940121;-1396846147;207354240;-347147866;1291429184;-390791731;-2082643345;754920491;-1468239326;-1324603188;1631869299;2113097256;1425066332;474822881;-133243914;826664667;-1927525990;-223124692;1260604096;-13317797;-1862563345;-1853341255;101450752;-320760262;1442039736;-518074567;1889783327;1690329620;1056371080;-110684952;1179256312;-1909088641;-563908972;-1383435561;-1897509554;-850514622;2127996396;1861635529;390380081;-1189564257;1301067068;-1775490979;262129352;2061662006;598112770;1443313434;-1290587400;-911152908;-768009530;1463680781;-1572401647;1930803925;-1806029829;149593237;913212962;-1571741756;-630423175;1081041278;1167552632;-1623252197;526400572;-690494964;-846251700;-1537874547;1755716302;1032477967;852279376;-1612533258;861391787;-212934689;586092597;-2056207277;-2000433312;-1024834026;209839542;-2094528196;-1804610075;	};
	mti=624;
       };
       RndSeed @[6] {
	name="RndSeed_7";
	seed{ 2124098722;-91170992;1168465601;-1858919997;-24929751;-963490665;717187690;-295848487;574646538;317049595;-551131119;139899173;587444389;981466662;-1903453428;410036885;1976568281;893418057;-1478471713;-1320695996;1440748722;-513739340;-1161764791;-1406295890;1303408628;2117683394;-1243672567;887371634;-1680612842;2099308033;1125170718;-1305306790;-1284597800;417043235;441698289;1554307896;-789905759;2104043535;-1051833428;271418162;1804109026;-500242248;-1742019343;-1005101302;1146310585;1485827013;407890050;-1904063111;-147037001;-1918628043;1281322981;1942235431;-831286734;-131340662;-2123348669;1998724060;1080640361;1987199041;-1590322822;462341267;-1433716421;1729893562;709443845;-975875016;1759170183;-1534906081;-1328159309;807819288;216897980;-987282575;-1145856448;1499251281;-171607592;1578911408;-573334241;-548079529;-810095248;-631031380;-1429378727;-1779874762;-940327724;823758884;775234182;605705521;1448203689;-1858587747;-601524975;-1309945231;-1429302601;1324728002;627023433;174949416;906398756;-695169391;-2125307400;1103458817;-1159202208;322059019;-1246286151;-463174870;-940068719;-566965249;-807250222;-1334240804;-877591810;-396717254;924096231;1412573326;2137491415;-1436279333;711452683;1383690182;-1993631501;1302548614;792200373;412203228;-1955615936;1283646335;-1680593108;-1170719843;1165008179;233555763;-1576738151;527391394;-790793114;-1251215018;-1655483742;1802975647;1865501142;-136892076;-22083883;-1651492623;1795523427;472533039;-1969708527;-814146298;-1837948799;-1956188360;406350956;1195152167;-1817222006;1085764149;-1008082158;-683561148;-760732013;-420853919;-967861188;-1312859026;-1612102864;-631552689;-215219310;-1019412020;229801539;-1529697272;-1317717364;1098389665;1173313468;-812858578;-1992878497;1983813712;2087481749;-1432550395;1732990565;-1632593385;817170413;1277490726;23133449;703374900;-1430558932;-529968177;1106918438;184261390;547400498;-1587589785;1690801799;938875277;-157316527;238384395;235344137;-1809413568;-1291854146;-196510495;1996568544;227112316;1837020836;-1656791854;1012592330;959467629;-1709895491;427741976;-743890634;1223849896;458336109;164324290;1206857292;557808164;-1654360840;-2045644441;-1257878881;263484856;-1657148832;-956961933;-904604678;-1216945400;1856892350;-753728472;-1259820859;1938691666;1095121551;-672327465;815808630;2096272737;-1287303244;-939861597;-1748075274;-1073618661;165390160;-1016933527;2030511020;-2019317476;1625606066;-1559849604;369846676;554490947;902283855;-1024134900;-351460659;-1619985879;1486927579;-247935257;1784521946;-98025906;1800587849;-1914546351;-2108891223;-843857310;-1751606735;891232780;-1663771734;-1423994313;-1004139303;299482355;1068144593;-1136410776;2081439686;1459333496;-1387618637;1345607116;2066452441;-149792463;-732499020;750524206;1490994210;1741626828;407140319;-1841126662;1917387992;-665449570;-210461965;-260337229;1032301428;-2123122231;-1180503779;472627522;1815243282;-1792211576;1367345788;-1299445412;1272250658;-1264963876;-1275376476;-1632365427;-537549701;-264889239;963899620;2095320839;1127097458;-1243943564;783144612;-2131790901;-101826459;-432013481;-2110803650;189663687;1903582111;1141617779;592262168;-889297257;2035264900;1525588890;1928429641;2028348811;464104086;-1470852013;-420159973;1545500831;-1696324226;-1971968235;-1591100355;-1527907066;157808576;534413293;-81441105;-1014622453;-411934888;-2069605608;-2096909196;1665358273;-1462097420;1279341891;1208505920;-1455828516;439458766;211138431;-1363321515;-1995807858;1764963192;1544425722;864028485;608816248;114418840;1682737465;-399958950;-355282592;-185624493;-986060587;1934451636;-36227920;1174443751;390504455;1320280845;-2080112377;1564677445;-155924191;-320565832;-1977483498;444028980;-1464491563;-467277275;-1135757231;-258792173;1817391269;-967444982;-959192092;-2048882053;-788503530;1128905379;1936020805;-965211856;1319955836;-809723729;-1613739717;-1863621155;58493276;-1758957906;-589187265;1119905808;1376856346;327265293;1201067912;-1466279051;-736508324;-101901339;1237588265;-1679010252;567995067;-770068427;1021930685;-1468789503;802471584;1867699858;579359858;-65514386;-977099402;311027103;2007150642;-1730162537;-1493169854;683075514;-1069418531;-1765893614;1880447437;705600250;495513633;1819240325;-353010539;-1029673296;795769122;2102853102;-960489520;-514960699;-1717788763;1036803435;1905008576;328061359;737370774;-1864225606;204611109;283816743;-1601597710;475256384;-428095279;1124900460;-2051156076;-1990240830;-1883204011;-1747918615;-130842290;-2120271367;-743033696;1031995625;-1299509624;2037028878;1859585672;-954997077;1608640999;664231774;-464261193;2119231398;-344668794;-446096355;794175355;-1065654227;1018345933;680330377;1657740470;-820689699;-1622082751;1413414427;-578016273;792895946;-228265887;-1859827110;1625779817;-96716614;-1926470736;1169922286;-362529024;475691237;-2069413616;927813586;-134880877;1420300170;1735165586;-1814379333;-710565958;1457587899;1517761313;1631800672;1839034886;-1823163003;-1668479226;494987864;699240061;-198894057;1917424555;951270874;-205057333;-1710263630;1867018555;1019393966;-1696557197;465451619;469829086;1771905126;405137780;588263574;461206273;-1945048519;-1683816932;1008619948;-1117829453;1312988845;1843832757;1370193886;-1825518634;841015424;-2103634851;981000793;2135027708;-899869263;1463014171;-517917404;2140985670;773437927;2113141000;-590998669;-493052649;-211439924;-1923891052;540361496;731075171;216759803;1966147828;349611927;1635839874;1218485151;-2080967353;177451819;1096070378;833234347;-772382356;778164673;174732316;781028612;-1452554099;1438886245;1570003567;820940130;762657703;-1044518431;-817546711;563506834;1602470811;-2082498620;1574557985;201640868;274406841;317308163;-76337354;2133327601;-892991815;-1596968084;-1381225871;1422478443;-63577633;1411701210;1142761590;-915822589;-1718138351;-1713805679;-592501486;-77153591;2097401287;-2079774924;-669884315;-1079992234;1652045629;27322566;-1502097863;1379856995;456791239;1484370849;1921286207;-1063663466;-1592335894;-633058646;-8067120;1245995875;-170350129;-1511183454;340449351;-315206357;-568720655;-1200312924;-25142615;1271841086;1790310152;138234299;-188732426;-150309159;1219596339;-1114200084;1808834841;-1221760852;-693015333;-1054373010;707942712;-1474024112;-2017147501;1901301103;-1297568607;1029986699;55556372;2014034722;-2051304946;847056124;-2110980691;860602189;2103292068;167903325;1132915702;-2143073863;-2061620210;-288502012;-131174644;556390965;-826509772;-618720001;-127785543;83848880;-237838913;-1593894532;-474251513;1494106854;213845622;923579618;-822193793;1314227266;-1923478586;-147944788;207446116;-1406628402;-1871306793;-260665755;1036306075;2133348485;-1583715725;-101090827;1064027759;-205540563;264720777;-352027023;-1383143585;-2101539049;121385648;-1263521320;-383297685;1310991986;-1107576630;397078868;-622646127;-1099384312;259441249;	};
	mti=624;
       };
       RndSeed @[7] {
	name="RndSeed_8";
	seed{ 2124098723;-1903604245;607940079;2016757326;802030639;231591312;-198956586;-1384481264;155803426;-540427661;-1737720262;1172423715;418812790;-1637067877;1319689323;628731873;-1555510059;-1355227164;-1198756912;2144857069;15032368;-62348539;1695582068;-935981504;-1832223865;-1029707630;-461153713;-80131049;1272821760;167321986;80136808;-1382579417;-1007121735;-1771944573;1048474887;2075519718;164383815;1012733736;607554286;-1369428467;-620678381;826062201;-329229849;2002418463;-2006474494;-1391753939;-400903495;927206801;-1005391003;797285743;1660978173;1102704287;-1654672758;-1895548963;1235837489;-1532007129;1923210449;-1565036983;74557137;1322494384;-1356289007;-1750659396;-889290956;-151150606;943657813;1435377098;1133536345;-871190789;-339099620;1396859776;-2064102613;-1337091980;141446358;-1132669257;1729794739;14361221;-1450128443;-375462704;2045391501;-532226677;-683987208;-1017455528;490906425;-1221400880;1817801518;-1741186848;1424900992;1218947900;-814402455;-1188009941;485886343;1323041182;-117196009;-886930623;195697512;1117747303;-215804258;-1908608686;341771506;499152349;822920597;1926869294;2080247537;-1983228649;-739324239;682806947;697680313;-456102040;29964451;-1272474692;1944057956;-99742392;766861831;-1137284044;517707712;-686252237;-1539867036;-111971149;2016360934;-1175488614;-408778896;-1782514728;920717180;-1741860761;413779285;-689416186;-1528273033;-1623101784;-1750097006;264476753;988115319;1417638774;-413909641;-146058423;1599108792;-178857852;617917643;-1242706016;274636148;1438856015;-1684407214;1912036381;-1415162982;612586375;-332123181;1258471841;-585825102;1168413544;-525313535;1405916511;1228422316;-1604090408;719026586;-1478466469;-1683343177;1802779908;1621541013;317009665;-811985661;-267957857;1820886828;-1871746462;75651202;-866615827;-741339766;319989938;931254496;-1793111801;-1366393695;1264543736;-1357429017;358778372;-2085419968;-1196031817;-1490934505;367255288;1308733576;1306720190;-1957038579;764746654;820868106;-988929369;1905880938;504772846;-1178741602;2129681989;-81554034;-1293060516;-1868955182;1147865037;-1946533830;-2019471657;-643360823;690847091;-1992685023;1044888466;-1364450466;-799395823;1607244256;1798905740;944171113;-851909834;-75759181;-526132421;-276924956;-682744848;1119238829;33501867;-495353529;-1728486235;97719733;920153660;-905602432;830148996;-1937142294;-795990689;798423588;-1721109235;1113306821;-228982737;1489870392;1918561882;-1343504955;-1258135710;-895876672;-1442247216;-424290628;-924651202;156095221;1917606030;-1284736943;611640486;956632166;-1855292633;1424778115;-1827547851;-1717268833;-796309026;-4429281;1893915131;1576848018;-349595664;-1252065583;1620997426;-1549694701;-326357590;-480479837;-439547625;323766748;1168367813;38572622;-895256639;-1948052858;-417664239;-684422888;685149094;-957681794;2101699154;1111701185;-1676584253;-1011804119;1542652823;-1260015308;-353447595;2140773878;317031036;683988982;485874457;-1997614359;-1115292988;-595990740;1595497882;190243383;1540861892;-1819556149;1057357664;-1901583884;-130282205;-292073802;-1648104576;1608678754;992637992;486620386;490731589;-1409490603;213743472;-272953266;-1633573760;1851619946;240226392;1591020506;610460042;-1468279146;213704073;-204424909;885244183;-1892581829;2057457318;-659462131;789548209;1749302273;1258794285;31973258;736234657;-1923603019;737595748;1479221670;1033348886;1322889954;1154748356;779986671;-93207422;2089980189;1564425541;-23555826;-1960038308;-1998363566;815097037;1534950175;1161208341;1775675172;-819609638;-1199648033;-1460897932;1030965458;-2043535841;-760322121;976895819;-2082005793;-1096046214;1504908706;-1783577190;799297092;-1919859167;1204709405;1927942235;59678418;-1442771925;1124777599;-1868523767;-981632085;1397142173;1656616162;322181606;850677526;-250610937;901721582;763592257;859347457;566643906;1671306216;-105925300;-746401653;-2014507255;-1964977223;-903897814;1102246801;417474869;1438294095;-57868755;1927866254;-1565006892;508848856;811843747;-2115552069;-1261897878;-2088221322;-1474659277;-1874839099;-793555980;-1843058459;501072790;390295970;-1193703329;1314362151;-732535435;-1868812538;-1679576563;-1920448411;877965598;2013589586;-1798030020;557078772;2079174083;-1357881078;-593784407;-33918060;416049942;1670317874;-2001919068;-1779636220;-825441819;2144769862;1569697676;394115371;-1059122558;1718638449;757952701;-177364705;-1220768357;500809709;-1978036462;-753597726;-2047111848;1348071446;429459880;589543646;-1323778259;727488035;-2032863128;-1378042516;1333304321;705793436;-1392944087;1507942805;774878467;-138017073;-94905315;1984423800;-2054351520;516481870;-972526229;-2118659154;-410939261;-1611496408;948871227;-375272463;1855453733;-36768288;1634893628;-286336577;1524991195;1251743154;320232528;-982958782;1293153624;1486581457;-347076155;2016989908;1997679808;1499853533;1211403909;849141710;-229929983;-1312206714;-1004574255;-1396431976;296056705;868429989;-779255846;1898812255;-1167428647;318564907;1648781244;91624535;-1697016038;-883132864;916030776;-144406302;303131536;610238876;-783376295;38498128;293911647;751184459;-2099391384;-552105564;-729501770;72626493;-667151386;-1650694097;-1213189992;247175322;1491312795;1056360604;888972135;116365439;-1264835848;1026005120;2092674143;64704758;-493578001;-1461017858;-89183409;-463748384;1270112372;1694215439;709477997;-1824088087;1776213152;-43633041;-1184414073;1948189029;-1581903263;-2124333571;1535372938;-545095225;1112217669;-1317472058;1060571975;-1464765449;214163102;-1715772340;-1782689091;-979902893;252938121;-419705849;631350159;641077351;-387147360;2063981133;-1288319493;759399997;1713741074;-1117051519;1559095730;-472711005;1375002917;-1173022406;89779487;-868669885;868505929;-1119990569;-159035628;2005697823;-1451256605;606676947;1699849038;1958983483;1222333939;-1859818356;717083673;-871034639;1493119887;2643740;-666084317;944601784;-1471814479;-1881405511;-1676729886;406404988;1039362569;1728489643;-1970698447;2013373503;-549651305;239524998;497203457;1094420617;-1270503475;1358036433;553481527;272281563;37787280;1375631610;-1157558222;174396700;-1779346887;1892943477;407282163;1378742799;-1995702345;-679034469;-1863533781;1202571873;1367226901;-1167220710;-1198193745;-1484977543;743307200;-90668806;234825080;-1224801644;85478763;1173475445;-1541319677;1327607717;1019548149;1242510571;-2051597163;1001134295;101834264;663714238;-537675715;-93134658;717410778;-702515380;1909545846;-1513306305;789922398;1819901796;-388017624;-968789945;-20860635;172112976;-459760157;-1378669644;-1867602141;171940699;-1195835330;868300292;-79792659;776136512;1625718427;48652062;-1348692173;-469245517;-1699529521;433828929;552331526;603006912;1386901795;1136121550;1294305552;1906323227;-820149847;-995220358;-712497370;-911392509;270772075;714494627;1174198204;-1906293505;1339137856;	};
	mti=624;
       };
       RndSeed @[8] {
	name="RndSeed_9";
	seed{ 2124098724;-761271782;-1609712417;-444020684;1872587959;155404755;-1294791867;-1052937718;159633045;-861848110;-496419713;-1673053961;-1337485899;660471872;-671590066;165703792;1422412864;630972086;531121120;-455760013;1928724292;395092814;-318559268;2077468178;-1394233193;-768514078;557606111;1156064022;335423279;-863593304;664818325;-1937419800;-1093301390;-1578175663;1858235105;705038979;1570193619;1008399615;1790451649;-2115877145;-495352447;-520995213;1477218906;-607817454;-1579240223;-1042294596;-913851767;1999008417;937613648;603688129;366530903;334702214;-1808406254;1919845253;-1835563190;2484127;-1052673805;-685955351;1085904012;1704071388;-273552275;-1480907357;1197474243;1847559113;1248658984;745430894;-1667267416;-2120986283;1819059863;-1038221453;-543639690;1369505392;-37364771;-1395946273;817617019;-1873593390;-561452708;-2038371896;-1434495232;-1562679783;-655311881;2134621077;-1157679690;-1034320809;-1553061512;150906743;-1671970487;-1843567122;-1164410252;-1791582489;232275379;1664754426;461709411;-1064320404;214834473;1930130060;564963073;-1417384762;852479414;-1458794703;-654587261;-466262811;1717167396;1562064128;706769613;-1680342966;1985389778;-1809255766;-526670668;-1651577952;1860872536;-2069597812;1485294454;1572271460;876928587;841930506;-153800346;1867418190;237623457;-740843268;-197919725;-824769847;-153603028;1484963334;158840895;1804494936;192269467;-1942639450;-217259724;622610996;-1085596922;389205271;-1502791273;-1946454706;286192514;1002742993;2122309629;-952812811;2034755992;1150356200;1148125049;46793445;-444419609;-1962986621;1036409717;1650897594;-1891133607;1589340794;2034882075;812344023;-98300311;416705129;-1066849019;-171902473;9581022;2070903601;-96974196;906293768;-206453306;-866356136;-1388602489;-1688106726;1602285338;-1685010102;-1127288308;-1013907925;-1823494546;398171459;1426253591;-1318456745;768547123;462830794;710153822;-138993213;-1466953362;-1541559221;585566845;1865353474;-1938413087;-1874984382;661332980;-819018759;-1742070696;1346329145;-1479634736;1304266131;1463735636;-1119377340;675076698;1632784447;-870525132;219043954;1461446586;-2027782008;-2094231244;1522872593;1853746196;1268277774;1644279729;-607475401;-1142057396;1313737615;-505705008;2135547914;-2057811933;-1084940590;-1581090594;40594331;-969644041;100309013;2077507099;447638293;-1481540323;-1529547504;1252610800;46641900;1811801076;299634050;93972260;342259215;1879284679;-365728773;2128171446;-931582702;1482940821;-299092923;-1789651328;1606841389;-1163173312;-452913425;522606594;256363441;-1322510659;-1312149180;973989768;219947411;689302251;-2134216028;1371804268;-1389192464;-1098865558;1603569145;2064815050;771289866;982400486;-225934669;-1868840858;-635147157;1698328064;-1561137058;-1359081146;710292687;-1678860889;587497494;32264108;-158172197;788100408;-592562151;-847770300;-1603715834;-163039336;-1182997460;-1448827604;-157496787;592470830;302825519;120191637;12360404;-451900752;-2002418516;-2045741132;-1031167523;2097064870;-1075373836;-649953248;-1832629790;2014971508;-655611330;-613265369;569959243;1944178863;-1383697473;1344720811;-904402643;1333435970;-1847112564;1478177572;1394408376;993284637;-698291310;256150103;812917878;210733490;-1590716833;1741232343;-2038738027;193252027;184487920;-2051491110;-641249181;1212552972;592973390;1569154036;1922797016;-482928435;-1230698377;-136973221;362053611;-1619510293;836654370;1412745632;-400443716;861032851;-1943610568;-1925412580;-2045433839;1431305147;-799351905;-1532812854;-1914151641;2122878425;11571065;-1161863937;1563301396;-476908403;96238411;610584797;88900984;1357242784;131608270;-117918064;1440330826;-227719709;-2002685267;1155196761;-1013752057;1343857124;1526951338;-508049207;494686981;-1952616627;-1260965248;-1132691296;-631016639;1622723682;1761517416;1470305991;32633721;-200290023;1893362335;-74670156;301265810;1828404218;-99287448;-10705767;-874947547;1276883554;2115591540;1027112335;627315154;1656908610;888155608;-869093470;1768125680;-1402397311;1490600220;-1868056865;252865440;1060968336;161897793;-816737001;-142375337;638776472;-91760275;-453597220;4166514;1058746226;-700728461;-588258134;413313320;1154164292;58984374;154235468;1187038587;-233687902;-1681920506;1530203414;1871739542;1673276951;-1736313293;526212059;1023046126;-1689693586;1375556133;1491250622;-1264401178;-237915264;-849219780;-1889198999;-1710851386;1201493220;1640238314;-72360631;-1361778235;1133296663;1674050627;565434784;-20218441;-864424548;2141050964;-1738614749;-1275334752;-1156497786;1843285937;-1087725042;-1159832485;-879423043;-1132417129;-439417749;1927308971;-266371914;1528566286;-903468911;-524147391;1867974322;852521288;299121426;-774508091;1815435978;1580234436;1947290215;476901869;502155569;8723206;-1255939824;1779986381;235686192;1582535077;459619178;1403137161;1619549024;2052716542;-953200555;1644345769;335948036;24990801;583573171;-252090018;-1454090127;-524193248;358335633;358426616;-1278308;308940160;1670436166;-1825036854;-1982402128;486776579;-6596359;-507648403;1698613554;-1881756180;-867631436;-736268542;-452241867;-1844057313;121850179;613794882;-890519074;-1026702586;1773051855;1812745245;442041572;1526264781;-649831082;-1220652700;-420498150;-466889286;1589269723;1625433569;-929180864;-1490536880;-1943186884;-157900199;1321613670;784189064;-841605746;371531656;-683853168;1300613352;-122947881;1388042127;-145159438;898845698;-489156424;2035265206;2079383331;1063205979;39617753;-1618506608;-357394034;-612496490;973099199;-695266222;-225878291;880923615;280227829;-837104988;-1516874529;1438958126;1171572105;828356775;891697891;-842155888;1509261057;1473387779;-1166441010;1394603905;-1416616058;-1717486309;503217637;336214626;1375042740;2055869044;428664629;717592310;-2038941924;-1933652251;-1068350925;-181416191;-760037412;474811406;-1573174886;-1566360819;1986680321;-101060585;1638034940;802999274;1453502316;101420316;1020701224;1759022053;1133000466;263972766;-1050152586;-462626230;1611487727;-404301047;1049806614;-166898733;1070359350;188025973;-2100590255;1276091112;-462565097;197341967;-742445545;-1935547375;1601317037;1820465675;1569301026;-1039747840;1519978337;1458719507;-1656602034;1622332977;-159501530;-886309680;-1603490697;-2040682142;1144534298;-699045662;251251713;-1765734494;2090640478;-1872973126;322895064;1460755321;-1005301606;-78336096;199002259;1931317060;1127773567;446221053;-1949008615;-1316630288;1966797764;-1827038204;-1983658326;1847937685;-475290958;-878777564;1134274483;-1492816501;-1753118113;498228740;1842036200;313532482;1519259232;275027868;1108758244;-951537742;-7730129;-1758569545;1381043653;-357280591;-2091471208;-220639455;-1660719926;554235209;1422645551;-471314551;-1577173546;422632201;-558023181;408871447;1192133755;-453668725;317902866;-1281115259;-1817887313;1508764846;458295929;2061690156;	};
	mti=624;
       };
       RndSeed @[9] {
	name="RndSeed_10";
	seed{ 2124098725;1721262261;-1698006266;2060692631;-1124508366;-846171147;1539728916;142246736;1070309016;-1721964031;-453448135;-1991702803;1125032791;160003835;2026193941;-2083614733;656261925;1311754922;452819081;1665195808;-437800679;-2115647145;-1782977633;1052506632;-1892684480;2024729891;232308868;1764137007;-1259558846;-1591172771;-788758119;405834721;1160354021;-361277931;12631248;1522912819;1723931614;-1187817952;1028074896;1130826231;-910846922;711382546;899684164;662213119;-1431564089;-62977306;704043399;-1887563406;-836644512;-367356096;-28997471;-1678009827;2056742255;-1861950821;-1839183981;1732236652;-1218344647;814266240;1420027322;1186444802;1962371691;779466255;-1589126359;936409910;-1112898930;-1242141315;1028336221;-857834508;2078218167;-1330724589;-1380236037;-1315276924;-2003706330;879356029;1922997915;1772813581;758465032;-2070850187;-1638635711;-1184589634;2005982844;-2069648222;609532786;-438569395;179956506;534817687;882409961;923791940;-1848837844;1870261631;-509271792;1348351962;202194115;-1005431732;-863860087;-1922399535;1657637023;1569027255;1242985008;156124856;516054780;275273169;-741493541;-1210584673;-271951783;1184040427;1737592764;1820646140;-1568224451;1688987464;-711503557;397542279;-1446009933;1130122822;289399157;-2079420260;-2122998582;-1379540131;-1051096079;534165745;860287117;1100176666;-1414254815;960844874;947641262;-80754141;-1276780770;-405077365;528140328;2040946761;170034410;-752506155;1780673778;-1891989660;-1873346108;380676517;-1107346527;-233717032;-1169812495;234351210;1344812638;-1248900344;-1778977408;-497062183;1643079314;-1822612592;-1933169876;764192697;-531681903;-1247929041;221878359;-392123926;-1280329083;-52963620;926817685;-1268160156;-2134365222;1096279253;-2098283454;-1867610657;1602819537;1718741937;333655314;1060989629;2021999157;-1670581463;-817171555;910404605;262684793;120664422;-1952312344;385881597;1958220413;1609017241;-2076346458;-2034042781;947841013;-404315814;-540718641;-236434897;1468715024;-1349242774;-969489986;-1988913848;1652850922;1907466352;-116930993;-448534345;406791104;1430969213;107082922;1497006545;-801273904;-793017856;-2069698831;1451370914;-1323849453;1397149050;1094903117;-517069885;-2104108152;-261982149;1924622050;-56618150;1760642025;1071575893;109149783;102000674;-2102048710;783513321;63937471;1903864366;-440316833;-39559903;-341970624;1480723270;1829270235;-1514013989;-1665853065;-867849980;1914793887;-1589733325;-226802381;-956760881;-1189549732;1699307767;-1450121232;-504756899;734358778;1594608007;-651609916;1041688170;-985816390;1282749670;-908165363;405315441;1299276161;-446105491;-497098156;-84878270;1487712149;-1557956011;1708708933;-1241504825;-141194579;-403122789;-1499292178;-1507878125;-571783251;-722377057;-781518714;-975816076;-2146451217;921760638;1875935156;-1953677208;555295954;492693979;-1590659223;-269196998;671145345;-1184338454;-363035250;483665576;-688182960;1601812936;-1343103401;-893700716;1454044319;112005475;2118834205;-1712177125;-1383093267;-465912484;-1138913651;1121764990;-1999812561;-908554282;1379712287;-956453907;1587098622;1329462196;-1390728061;2047908096;-1519065215;1872327372;-980090625;137642123;-1695229193;-2072346422;-1195911158;-1956871093;-397786383;1337846943;971041148;-451708141;-352641416;-775955792;-341830455;1791905501;-2086872584;1264503503;-359644556;-1011029726;-1640913867;-1409795612;1295314672;-27771064;-239264565;-1115986915;-1692657551;1783640470;-347184949;-852543455;429480100;-966017553;-1298580648;246257087;1540902041;897290551;1727511283;1734755515;-550066012;1633872422;912671143;1863010088;380044659;-67849562;-643315359;-2086279437;-1247668385;1191116284;644979485;1889515710;-1977934935;-466784570;2039947785;672052857;-1228685297;-1721975948;170007778;1662539903;-1285007092;-147480099;1356508142;1943125412;-1145036685;1933592304;2062153585;-1211527027;-1463054135;576308342;-1094211090;1411995517;142926158;-1977507031;432301147;1722633292;-766553913;1356841659;1922260682;1298926208;314978127;380301974;1465777306;276864404;371089618;965383753;-971416259;1872361703;1144801840;-489390136;1489440651;849345767;-171481191;2069056313;-375019888;1719952504;391079479;-1350056914;-708840744;363791588;-1981353102;-394986321;-904676004;-1950707972;135420344;357097243;-488474069;-305030323;653329740;-1912552317;989696365;-287787382;-17934697;-295084561;-1807131736;-56285793;-443788262;-2113040276;-324609290;28606778;1173686132;1255968700;1008458789;1087416622;-1322915807;1243894374;1698603835;1705406843;-1078259524;1576356497;547191916;481027129;-1769829093;-1498215044;491700822;1315746703;-304359768;-2142620134;-287166180;-1218446880;-490370608;-143242010;-1491737343;709293784;-2013201182;-1713920501;1882084409;-85904443;1912104140;579632016;-260255360;-1410153120;-2145954980;-194825271;610306662;-722390541;-1267587738;2093434411;-2108609974;1637759009;945112666;-1061098179;-272250574;-1643472110;77250318;-1028792251;-2054622370;1892172045;-2128275586;-1047027281;-2113153376;-621387345;2033030818;386837270;-403552394;2064044018;1654527913;144719635;-427880629;-1169780427;1846459265;1856469839;-1875745386;323635509;-1175502661;907447248;-93881628;-68542984;1665542365;-1534075741;-566544803;-2113486097;997637723;-1707815230;-1061530724;496768664;-187415594;-421608984;-1122613609;1336055722;-1208132775;274055114;-872561002;-1804068946;230712514;-64908175;-1731291934;1766628937;1072102482;1365733445;985641152;-1736999507;1563442937;-293367353;793143364;-563115835;-1214452208;-2033217267;-1880210465;1650265382;1792086361;-1607732817;1298591801;-776814575;1020095252;1222964447;-1552847982;-549486131;-2061011388;1791435165;1825620108;1698852514;1256186705;1378517139;1167121822;471500992;115783110;-1330204891;-1176503445;1590190966;-1903497475;-1280326746;2105996736;-469090254;-507736477;1547013615;1402429174;-917788540;2008727125;-791409353;723913624;-748753651;-1800272228;-971428755;1068984190;1177568463;1333749088;1009445472;-1661216260;-721948333;254150318;-363478331;880529470;-788768617;1526868102;523976294;-1014090142;-1428398230;-740798930;1969745640;-985991915;1493531095;-1439262312;-1963719187;1727807607;725522107;-1854370571;-155136350;453816501;-1484417382;-747387862;163927904;1514003220;-1908887938;-2027866846;157816791;-978028277;1144064609;-293176806;-183202024;-9508125;244616349;1411809583;-1097558171;1299635427;-1907877525;-1242941009;-1375643516;1385276706;-859118572;1354583641;1845822207;1401298558;599064932;769921726;-734718655;-1910524074;2129349233;1186615422;1678687082;-1610008953;-1418546742;1104948794;-130493798;-1521616463;1246318836;502468607;-395458318;-1636810131;987799332;-104525938;-387147268;1304115959;1109781355;-1948803792;-208746215;-123059294;-20653594;1837663931;1846326213;-778906952;-389007060;-1391871759;192218438;-773354234;-1309322654;1065280074;1546576797;2140293880;-1213868118;-93388874;-1902788136;	};
	mti=624;
       };
       RndSeed @[10] {
	name="RndSeed_11";
	seed{ 2124098726;-1431372572;-290792256;-421366798;519747353;-225075742;61584075;-587649762;-12693127;-1081708757;-677000137;1411212431;-1840600558;317171805;1158295999;903237125;728790281;1363082654;-957536563;1559661913;-1672356916;1703867995;1202936728;1391920244;1745510209;869323865;-1921619913;1659795972;428200213;1111669350;1726327233;615758047;-890222821;-1199577959;-536271799;2114775893;-2074817464;1691235159;-835893484;948525882;-963049462;1139539126;861512541;-296404772;1160234791;206497835;-1836213211;1400928914;290326319;-1679164228;-859544280;-875762390;-622624159;87483103;-1238771407;-1205601194;1049067868;-1993063035;-175788675;1309139185;1728851692;1902532798;-2078786919;321458790;316070014;2081478647;-1510876592;1988035741;-1445442096;2092570143;236111900;-482087085;1343175384;-462464794;-1060921437;-1694852501;-966779719;-194977873;-274773206;590387324;1596622140;-1379977630;-584461262;493220008;-1684415844;1543753387;-1245740184;-2117561559;-1257172145;-1775512902;370580210;611623893;612671589;1626101046;1062800913;891332116;1766734404;485419674;-1476069084;-883580319;-715291890;1247914374;854729129;-450250476;-2128325253;-949847514;1346043395;54741301;-1473495211;1992002752;2073612691;-563097335;-2008951966;1136051537;-1411143422;1161997683;-666996626;-909660042;-1469432929;689670760;-1647885440;-1823722301;-1030547041;104199;-274442945;571915561;374510251;633233654;884598670;-2027595385;-582516997;-1460678565;999019681;257690890;-443449480;-805495026;-640272983;-1008654693;-207383934;376886896;-1833661764;1923902339;1276968152;11461420;-1564070676;-390260617;-1612924330;-1172801609;631904253;1188879462;-1578691527;-73691426;-1478581559;2004999600;1639395439;1362295297;652649116;138912809;1681700299;969069393;2799765;-709521302;-1177998577;-1648168508;-1246340670;-1153881755;176584009;483350388;-1480157844;-179121393;-235753370;-1008163452;1175424495;1083792787;-1231876792;1327945953;1921216784;-925584026;-1564369269;-168174144;395762083;-1066329852;372547449;1416211572;-298932255;-546427165;-441557222;341763736;1090540212;1884716838;-1975711199;1064745870;-1659306554;-83492075;-1633681808;1097360829;-993673232;962774692;516039546;2011843049;-1772859056;1074198563;511186996;-473865905;292622280;830816949;154742583;-1135275902;1189348176;1089644742;226498133;1473203548;-289715323;66683571;793205877;-1160439808;1073318818;-224671293;-1699849830;-404508205;-206735380;338180392;-359860826;1284847608;-1516087523;-1350240484;-779711048;1879834282;-1162740389;1648137730;-1941714155;-535859206;-992841947;1451962599;6250920;-1132695501;-1300660927;516704092;1011639354;-514026031;645037770;546054307;2100632641;-1747818957;-167146679;877956903;1141463641;1903279535;941880478;-1133899441;238422363;735077602;-379404250;-909337450;1100514503;-1448847075;1700905275;277825251;-374639727;-1300513891;-678289985;1588811825;4422646;1672515349;717629420;-1828778715;1287327853;1686849447;836049802;-1382631297;-325275809;-819106725;575592392;17640185;-1358940593;541041268;674704600;-1096005043;-907634367;416074273;-740398819;617777135;-1118336667;-1042131522;-1302791763;-1568527832;-1525604944;813890137;-1609210051;57373692;1448779662;1108179854;-77969521;2143037281;-1444025850;1932884155;-691393398;-212343754;-1539283181;1107805152;2081075697;-956193571;-1896686908;-531740851;1043128566;2060609599;276713384;672028283;-1152585029;-1034959566;1784088203;-325357655;1304103242;-1479487792;869137428;12003615;-2128752265;-66174618;2019678999;578041581;1169785281;1423962625;-220431550;-1715901720;-2067502698;-787882839;-2136929704;780746953;1632706965;721843373;-1699242357;1879563864;159865705;-30326086;-2060233397;652458012;237150300;1308524957;1409916894;-1049400498;-2112844875;827133832;2104420862;-772486670;121415277;-654770342;1649565815;1264137705;-782012956;1197210752;-1259165373;1293390084;436921689;-327672194;622849459;-1078815742;1051223396;-865172007;1848801896;575372756;-823453172;2115784788;-159633421;1144412955;1978195118;-4081288;-1978793483;945092322;-908961126;950575310;-432557896;1521077818;737735099;313619260;-850291678;-1571021956;1098860590;-1037982972;11866685;1776146572;-448469475;1176951123;14590168;30478007;861650611;388303136;-1285637342;342095139;26506067;1015934020;-45441958;-1366666844;634260998;435601383;-27437395;351818289;357279713;1725408850;-1956902067;-528040262;-196525683;1205722263;1705922240;-114205512;674671195;725150332;1012195458;892348129;-1124810403;-442162412;-1550899027;352957862;2123661850;1559546180;1227642583;1087425037;-455859108;-507366884;1900633821;1572481647;740924682;884691095;-198665159;-852054391;935376922;574918123;980140641;-198141200;448671371;1035846020;-485949758;-970404652;1368973699;76385275;1134464697;251054155;379202123;931255372;1055485874;-457353999;-70908110;760287502;-1568785856;415780805;1142613877;-2002360703;135761517;-1384216640;-1210031286;-1214204631;-1953988935;1942557834;2116059035;-1672363129;-494448065;1510575987;-1482187838;431633545;139660503;-930864738;-110540355;-348993597;1848545422;-1415278278;1647068392;-1699290434;1822560766;-1450470802;643863152;327661573;2049525967;803338525;-566046903;1414554635;1032246220;1209908567;-748111158;1539720234;1356917205;447395459;580591247;-730425524;-1058276595;735480937;1068013649;-1388416294;151054622;300878013;-131688071;968022283;218334785;486785680;-2020944708;-1093558557;-1159652941;-1855595068;2034857742;-1071906340;-383379987;1598359257;-691188436;-1919509376;-1782885568;1900293377;1727709944;873803574;-182876088;-1156584814;2076089548;-1715956770;1207374794;-861965290;412814153;-919304498;-1451760157;997858504;-99851028;-546260144;-1627499323;455537546;1870197114;844044944;-1470329638;-305452221;-1173532084;-1334888237;-620739197;1926032783;1557969174;-2050795740;-1178682864;139529517;4344277;1954357278;-530102959;1242905969;-2041434296;2093040715;-1143894708;57507809;1590288097;101372029;-1690163089;-1078506976;418018186;-1390775917;-1188271785;-1875440212;600606154;1943004375;2085998740;-1970402832;184184994;-947706861;-1585853318;448914819;-588797477;-432890779;913591404;1606153419;1152233442;-1629756992;1558111676;-250754364;-77168201;-2033810887;-610273667;645378029;98123705;1541351222;-242750995;-732845279;2126231718;-160285920;-1096019443;569780522;-95700526;-2029507914;-1073795258;1255476247;639601906;-545382465;-639491214;-1622772004;1954264542;909908548;-140459234;1285718460;2075547357;-1821375719;-1768444171;-1824835390;1425810960;-1370415098;-1069561882;241593516;121957936;-2064012475;-1239772071;-2074198722;-1533589756;1574649271;-746602200;1005861714;-1839707210;-12241823;-2046550264;629316433;484221525;-1036088598;862093647;-633778802;1576472581;1780971513;-393343170;-320951688;712120303;1230723764;-1417107245;-1728481824;1806661270;1423022848;1269609171;-1030557367;	};
	mti=624;
       };
       RndSeed @[11] {
	name="RndSeed_12";
	seed{ 2124098727;1051161471;291014685;764426356;-1555539512;-803305801;286095626;2002590457;1207065568;-2064602930;-354696058;-1065175676;-781722289;1350302473;1467568694;-480387390;1938107189;-166404203;-1493337024;-951101411;692572650;772934503;-1727422791;-1042631970;-1525950903;-211374416;1172682681;687535027;-1521356613;-1271530982;-221609066;-1620859160;2131367026;-1760519040;-1663217300;-169410935;-803191146;747935214;-1671592692;1216085165;1809234948;-1233528030;-1304980534;2021348883;2083952454;1332719152;-1969294717;-838617580;-225827261;-1430694031;1930496913;-1780899837;1636018585;-1310965459;-1492066623;1278426662;-1551145829;1795395990;-797753395;-1858114943;1805263083;-1915603313;1828453087;1555875797;-2076751132;-718298369;1592273326;-1481631410;655861568;-1483326331;542843017;941369172;-1217169300;-553426513;122590502;198979145;-1834855399;1774887412;-145685769;-231293293;-779862240;-320101344;-725385951;1392873661;13284992;-920354603;-1305257276;-851392907;-637701402;1673388466;-1483221255;634463330;782880006;1793071547;1145352384;-218626684;-1316983389;-1380095514;-22951082;1996010988;-17392667;-603744221;1655973126;1343511338;520026975;-1564998684;-805724120;694170722;-1783948010;-627167919;-1142504504;861428001;-445328523;-1669622785;-1495349181;-187249896;2100073755;1243069879;-404865212;427619962;596281498;-587706565;-622577262;1037062064;1269080300;1418547966;-702204391;-648527167;-1495652086;322926761;675023919;729740814;-1121545718;-1567234643;2027373969;-2011659689;1002301713;-1088549570;680809782;-2137422631;-358113805;-650723267;1764558596;-458722680;562992231;226274356;-1346124522;-264211081;1853188952;-432735310;-1150286229;1602205956;847948945;184987342;-1664010784;-1517407035;-792047073;-1266196055;2086341653;-1913751421;1427739781;53361845;78500107;952065274;-820545210;-1324628514;1602997362;-1649003258;-564261060;268286852;-384786498;-214553796;-1271085177;862184742;135577260;283985547;975845511;177835252;632238326;-1106511935;1822759843;1381734815;1588275724;-1788637992;144522426;-1398898661;-104535145;-842062305;-387775032;741862612;1234822242;1738872526;822069099;-829493000;2016962249;-860252757;233239564;-787696255;364130064;112599575;-1061502245;1876719617;1714641098;-564941854;488978833;712331266;-1876450408;-2023295343;1201206223;-1401721065;-1248849637;-1096015696;1413884174;1058028224;739765910;37316613;-1921796143;-959679976;1517713537;1656359771;-890264226;295043982;955803108;1640183763;698509498;-1405821885;-1400852601;-715756196;2100952671;227781115;-350854163;-556676147;-1451710674;-1874558651;287768813;-1503841428;1397565778;1305721260;312530735;585502074;-1202742254;1448944449;-514053838;129923656;-1248934052;630716171;-1921623219;-105361886;913145085;939570634;-1441344596;-2079612255;-1995086261;556625098;-1750464848;445114169;-1863664771;2137780508;-580278669;-1311728845;-1263438759;-742089748;-611488431;-477428639;-1579209294;-867158151;-2052313556;-1931028687;-2036190421;-1652678342;722605094;1072974349;2036149553;994149633;-2146565257;2039741244;-1014971099;2002329363;961013040;-1756095225;-1629871855;1397176472;278017655;2048273678;-1740255481;880237334;1483716300;679597312;1228278304;10791206;126227232;-1107186493;23294537;-1335613198;-1879271466;-1833673781;-1262106507;-644823268;-695785627;322052713;-1542404711;2140858964;-2082934345;367278744;-2138147032;-266305853;-1746484494;15555043;-1678511421;594481242;-720920904;1527821310;1575189459;-1027523309;-1420121974;447563491;-176065589;-1384073435;-874700127;271932713;-871910547;-300832345;876393206;-999144879;248515998;917565083;767301485;1404671048;848401173;-1128774254;-1193442534;808751555;1729355323;-665208785;-131516758;-1054735620;251569899;-432496888;515941289;-13302784;1864708483;-205972577;-921542174;-1010235364;545377427;-441097640;-961576383;-1212041371;-1570472961;-135638738;1763581215;172526645;320515913;1750350382;-1482220307;838029998;-1761559030;-1959443827;-1836397871;-1491996250;1340152604;-182634278;1910673415;-1516238391;-437354109;-454649619;1297331540;526649592;-905166008;-1041846008;1880079817;859695451;516670811;-58748580;-256298255;-1846371087;962263127;-836007220;-1004565467;528261753;-1670521799;1808824260;2075832119;1256523725;1679573244;551029330;1929377244;1318733492;-576207891;-24335253;1285271182;-1547737358;422186552;1924896161;1047833002;1853418397;-1928367592;31322063;1687053625;1155590311;-305749746;-18317134;795902055;-487929546;146915453;601806822;1472152916;-1142695648;1476779522;875901896;-601131134;-794742656;706953291;-480411084;-2112565167;737647966;-780507722;1235943178;809534457;937645024;2142435588;335736222;-1650241796;-408544803;-1519254466;-1209808555;-1459683331;-1215072186;1382471808;-470321774;-1048380189;-601774577;1970729068;-1919798862;-1290482654;-581850541;1837957956;-498779922;-616477641;2012669499;959701146;1893730427;541238236;-1358994553;-1951960523;145784944;-1519477266;1486592987;1992435906;599749040;-366015438;-1821570536;-1021122554;521353406;1092948668;-908948648;-2145275985;1577641482;-890525919;358097973;-258365515;-2057727333;435796267;399184582;462708718;1348614327;-1676425312;-149850435;966887626;611652487;-2041252583;-1905448834;119494340;-1540873939;-102743963;1656356889;-1642667180;504019147;1219267829;-835833309;-269686656;276486288;-364084558;-1594406216;1537476422;378331112;1220509806;-2041441102;-1136370856;1397831275;-1978715204;753015265;1446289585;-778987683;1677985796;-234563352;644635047;206225364;-1997396842;220701783;-1711839417;331525422;515765020;1036969987;-1193269721;-1948525678;-1758613046;1436757475;-1239609818;-117188047;1571281336;-959715076;-2128845413;1975646302;571135613;-730167724;-962817705;-1898492887;-874442243;-2007037635;2116706019;1672241971;1651959492;-439649596;-580062833;1410546249;1841203318;846497794;-724517670;1633264814;-1236753891;1279496014;2105660223;-319387765;-2138881346;363065923;707359111;-557053092;2083476885;444922239;108292151;-449605936;-259307939;70062901;-1484590327;1946667128;2024397535;624306617;-624854751;-2146042225;-1077812025;-934301472;1196377783;1175997943;-1828099528;1814426893;-1099883544;636895103;312149577;1166380540;-2070385663;436550240;686647826;-1309901491;-2105165473;1551886566;-999586727;-1632279623;1309437439;-1682549393;1419905851;-494503395;1429880338;-2118669636;1258818868;-1582197464;-1610000942;994782545;153107511;-1284361482;1040101512;-173248531;-1401910996;1779548013;610620388;286990141;-636093861;-972235005;527105356;-1546150583;-129289243;-1480879603;-527193797;-531055255;-431589596;1168237494;-1984116601;-160609330;1162518327;1746843813;-1049977076;194562628;-1889389778;357875383;796929935;-135312184;-1626410635;-1906379438;1911462640;-1935336330;-1869983706;1819337879;-1158121582;-1057800651;-943950924;88578202;-1977638614;-1278148815;1215036553;-1535677421;-328614367;1734752215;1309642716;1261177248;	};
	mti=624;
       };
       RndSeed @[12] {
	name="RndSeed_13";
	seed{ 2124098728;-2101473362;1225997022;-818900738;1856739541;474529705;-1595666765;-1733458724;1654798750;1647301316;873239747;-1712845830;-625184540;-1357567440;-1504942136;-1909060415;-1518574593;1400952802;-1869437023;-553165214;1880171865;-1993878579;-1950787647;-93586682;-1894599151;1951858840;97787255;-759869682;-835640003;-754720877;807093230;-711054587;-1583927426;1165170701;-1231361826;532650735;554370927;-128100880;-847842299;-324043643;982112006;1167985543;-466664952;-1018564222;-1527688943;1931290540;376913007;661339898;584688338;1136500491;-986572508;-1068840042;1367871229;-1281964639;-1246415739;223017082;-1595714982;-2128046863;1130221337;-1853977421;-1525728495;-417039940;-1631305831;-894170266;1055165465;2144577310;1489602173;-572626129;240047264;625181541;146203679;-1592420478;1075332552;-76867178;285529363;611597258;1885384958;2144816104;116368443;1561091734;-1633607453;-1571724778;-1239128522;309995223;1826316839;287182675;1179940629;-1533497541;2089919189;-110841347;1307387792;-374065776;533319259;-1836442300;252838652;-90699317;-542120888;1134441720;-694999137;1300569327;75614282;-311844969;-31577654;1455558068;-807909935;1047457347;-954541095;-399087763;-153965358;89196514;90050200;-99411353;-882577948;930315156;2126378454;375590214;-1139231982;318911941;1124639791;-142121827;-2053816114;1763949813;-1243340610;229213863;1065516895;1950291960;1418180283;1902813665;-1127039520;-806298453;-659228982;-487199024;-1281678141;1344784810;-1840507907;-1901044958;-1439165400;1880125211;61259724;-66988025;24141344;-963362003;-290185292;-1542819134;1925711440;-1400711290;-1450136666;862616647;-1619654761;615693150;-396674388;-315699550;846376733;1287691274;1137472497;-1790628277;-99658647;-484505489;28581690;1666997377;678493984;-419641279;-1162586964;-482834615;-793117994;-1737559122;-1109315710;-1195164121;-1337175487;-369668072;1026428497;1493958560;1995441201;-1136699491;-1539659415;-172221722;-169989623;1131147427;1238016668;1011035556;694797928;1052831677;1284881223;-13280939;-164280922;684509138;-1099417452;1339070953;889315652;-1004059503;-550621096;2073479078;1558586531;685057707;1618396473;-1561409573;337050209;-38424054;-13299885;1079040855;-324956234;462983218;-1850104188;-301569623;-222713122;129740542;1856239876;1377299656;1990655261;-384182051;1649630824;1229549888;-1134790535;-61711268;981879121;560875212;871963476;3390717;-1418201685;-597009016;349391795;-523982468;583325433;-75296228;-230572517;357750873;904264959;-686143362;-1516994763;2049679512;2086092355;1250616049;818805144;1862128097;-594235830;669832376;-280074876;418663984;-108361250;-1736791520;-866168230;1897668366;-635418403;-70414711;1999050598;96689048;1933540334;-1461203646;1292581688;313450358;-657567608;-900912430;1947385457;1214190381;-2064048806;-1268470601;555221353;1025032302;79743592;1966703627;-610241802;75856046;-352339028;-2011253742;-823551144;1238040304;1679593247;1504544225;1731900012;10468110;-1082045548;412096829;990288673;-58270186;-1130242981;-1657368272;1251544014;-61050688;1646647557;-1725054037;-1839029307;-117367396;-1180448811;242280430;-567549950;-1372132734;-2002188898;1442034603;-168698574;807566966;-1333589072;785637469;993282773;1065387054;-642595508;1212686418;67513575;-1832364212;1793405168;-701216448;-1028996197;-1456241627;1679623057;-548767489;-1845192548;-439433849;1759744582;520205878;-374748542;48426778;389234808;-134174577;-565613452;692353836;-601676394;-1945267708;178901914;-663492865;221970090;2033546321;1535489232;-952422218;-128051797;-833784693;1738785516;-681067066;-857780993;-1087357773;-1822839779;-396984188;1822029197;66702727;-751020401;250811017;1217438299;1885878481;1832237920;-484386922;-261698533;-1871749429;-114755679;1461544511;235046348;-1725106477;1787443917;-1382785067;901046317;428836892;1849405544;-1915499574;1058369350;-286564867;-233110378;-164655830;-1150508145;171834628;-772278280;912730732;1700497922;68030358;-721588842;-2102134222;-113940902;1044775816;-2110050796;-1751321061;391084619;-1227201530;1875614468;1785517930;1143357865;131256507;-2130874821;-1819803918;883295782;-774585227;-850482682;-618085774;1144664335;1318574593;999490428;-1774076567;-935657547;1478052429;1657863548;2122770642;2140653505;117936195;134530803;-1392539036;-760467004;-1794890742;1579319472;-883785634;482962235;-126426414;100685569;1505287666;-363094675;862387189;-1540716999;372869592;1952447434;-836043862;-2059289535;713302788;570095146;686135849;-2060139323;546382620;1255200678;-1587645058;-1115179128;-1534442225;1222390975;810319509;1342091113;-2026775127;972683545;27044224;470049060;1035114713;-1523486653;526062668;-1159745628;1154098215;1445108392;118126424;-999870620;1961153616;-1910628701;-223526860;1798882915;1950267483;1876748084;139826844;94497088;1064585205;-1760198049;-355781272;-72394769;430898645;-1800133693;2021352928;1197186177;1969569853;-1846119062;-1863779385;-653606023;875653859;-1176000431;-272706174;-116177239;1007803607;1847705;148468772;971905020;1034507317;-1689151565;-1019898976;2107276315;-1760370161;1606886895;-832547147;560176542;1928904487;-1132936752;-535045203;-1118844038;-1801027539;361937761;349296668;1010122980;922263501;-1741241669;-1159801384;-883815714;-1489399794;-937409894;-1769133764;963999062;75256527;-452561779;-405931031;1266327350;-183090792;-903817459;460150893;-1116653079;253206176;1855272714;-1600086974;-1732516052;-1961110253;-965203293;1184396047;2098848886;-1447308316;1321906608;384226760;-906862116;605681136;476805542;369809013;-1203881183;1613238728;-1445816505;-236151500;-1828882513;-456733122;108594447;-925038614;198103533;275491202;-1833012148;-410803511;1955812790;1660994104;-758373501;1644790663;-439510042;-1848700830;1226102762;137557186;174351510;-611715269;-716995802;1993641128;-977210947;179310599;-734325803;734419841;1489052921;63197165;-1229693033;358839520;1541996152;-194369322;932125475;49312234;-1422316178;-187582023;1597559424;664344580;-446914636;-1593510828;605056528;-942539149;1813206100;638895278;-332089140;-916671790;486238109;183363610;-238518676;-120829194;-446058027;934850971;304547669;463823800;-995765816;-1287755192;1049070436;885949607;1862842135;-1039858717;-701666922;-1937873152;-1140017150;125606457;-431989833;-1167883201;615699277;1891407006;-1974944775;-2094497978;-1779327980;24403183;925733773;-1379095068;-468012030;-1595633750;-1733978226;205699203;-626661129;1540062861;-1546265722;-965394081;-1514076264;-546345969;-870576374;-1067662884;-378415541;1099830457;388802282;1381439141;-436882168;-819965268;449398881;801929628;1812232420;-323403342;18196015;1656928742;-1247741569;1550931374;1264220009;1215284839;-636494178;-659563694;-990453161;1959936391;-290549182;48987914;-550798504;346579022;-870727890;-2085452758;-79720910;-1300081472;1444234486;1863149280;-1199635917;2107578564;	};
	mti=624;
       };
       RndSeed @[13] {
	name="RndSeed_14";
	seed{ 2124098729;381060681;467602383;49967022;-1470878294;-1791169715;1042226481;-1589854884;-203422690;1918903418;1993422737;473365467;-713650061;-568136643;-236559740;1615863378;-1206165041;1925139186;892968177;-884022232;-815265781;412054333;1475288103;1953526037;-1536405252;889578063;-1785229243;116583198;-746860302;356608050;1424940504;-203053124;1251566971;-1003924669;-929359774;-1142716568;1344415478;689213080;999528990;1569184765;-281565548;1799129276;758781883;2025549810;-2071906805;-1289477446;-1763824954;1172685699;-1177242502;-1261999223;-1610100471;-1388225398;1023822300;1174790145;-449748938;-697675232;-2133056761;-1229291982;-1737787094;-699058941;-1678055108;1501705139;2145822584;-2047945732;-1700884106;-963479803;-2103104608;2029119789;493718176;-2050535067;537148649;-593249996;-281574917;1128005409;471058410;-651159139;-922637918;-1059711534;1792701635;435806937;-1175740179;-1382062692;1016505768;-307346533;18154316;-752748207;-468566096;19852534;-687004826;1944257586;-684395655;1585863037;-213341624;718951156;-214741342;2058956516;1768623545;-509877767;340062724;852729847;-505787433;1887461129;246990478;118117485;-1724078999;-1948835424;-1873938604;-1283876007;-2036662701;762752866;-1755536360;-1072387919;-1957965654;472595129;-427152273;-1388489969;-335627883;-940933469;1403491734;2068632586;857115599;1600122916;627084307;1116892922;-1912136573;177621090;-323682008;1832286582;-1010853005;1154958257;1979114738;1905483618;216374675;1257232004;-468725761;1886317299;1008481282;319002451;-1817501879;1431272482;1522513243;1394980623;-432425196;1835109282;-257207585;-1225560739;-2060780019;-766164098;825001445;2138792174;-854186527;623961281;-2080601667;-1869443084;815231656;984884451;1459947819;-16115665;1059001850;-1680050623;-115768305;-1693481635;890795549;-2136531180;1395395154;-1372881308;2056746212;965913600;-387326808;940086048;939404362;-1962863651;170405543;1029883792;1236585598;20817354;999392098;1332103259;42513972;350074679;419870823;-148447144;-689686627;387940365;-145786151;1863328443;-553042404;-1212343818;1445646848;323904546;-1502497752;694980433;-2017598283;-1571673100;-5505328;-436243198;309179177;742891762;1275200064;-1949913748;-1640740050;84948261;-1143421597;1875757328;-398365311;2079901463;-984919428;-78216214;1561902269;1894191869;154622526;-506214071;676136198;-918736333;-1001357882;326306960;1443693992;1590275462;102741533;-1715249332;-1154000734;1738774525;-406531254;1488481708;-1355818207;2082222256;235204535;-298024170;-778504915;-1462740469;1554077555;1603371745;-1483570360;1410754331;-205940692;2012426870;238393567;-1945262104;-542803392;1720457310;753497451;31364904;-573699142;614441456;-1909173084;1954298995;813358064;599537319;-988680229;139868465;-1426666929;-1984166308;-886517230;-369296718;969843155;-739982274;535892497;1195260598;939137589;19248364;606514720;961663909;-854667745;1172852243;-1595117534;-1775673943;354384001;-462514960;-470036501;1140076437;970521202;-507522551;-1369753342;712932881;332781255;381631638;1090072130;-2082071420;2125920244;211087808;1214456280;354974902;883989224;1760249507;-1811050234;1393646513;-776315506;-2056102208;1243821482;-1287016296;-137685020;-1908666810;1429210616;-2064409246;-1594525690;-701595973;2033219520;1920764238;-439978923;1374154009;168453028;1860703457;115088782;931833909;321633049;-1592773874;-1408659218;-2067236273;-2136574315;-918251064;-152350387;2054935293;-1415112028;-390440265;-151249346;-313420724;-1414083737;-1111864042;424418850;-501868887;1534979154;-160716544;-1191097743;998173602;781888046;928629611;1542151549;390545203;-1907147929;-312312542;-1262942129;143424684;-2032583384;-644440865;-1939759078;567870151;-2071226157;1502749894;-2117598507;89075494;-897388206;-1106997430;-1284370242;-1676068989;86896701;-295997846;1225245127;-886281607;1322732926;98798456;-2001649738;1995536227;-1042969334;1761179374;-6630227;-324466679;1145276246;2037577144;870970467;566978422;-875038474;723736338;-402129532;-1266334034;169537352;1369829589;170227986;-166631543;1913435362;-2113545728;1007162940;-289742049;956929920;-950253835;-1038375292;-491260998;-1710216587;-866422420;2110859589;1668721999;1706237762;440087020;-192544870;-1210730020;-1529076714;1186263397;-2075278858;220535495;-1167519481;1488086398;-785644639;-2051202447;1882399719;-1515372217;-97800509;-620711093;238044404;1084082641;871428254;-1423606299;2071743667;1844676043;-1808604092;2049410865;1262552964;-833542642;1505491383;-1681527707;1265263931;-306447493;-452628494;-6019920;944457531;1433317092;1418104567;206704301;687169761;198091622;-1111355680;2008339149;-759539680;161776244;1491307882;-631107618;1312327897;-76441887;1975352020;307262644;1763598512;194109570;-1656674568;1902521425;1630948672;-225753770;-94381765;-1550340917;1003339265;1356955930;-2100534179;-822906318;-1182840819;-1724877148;-1507350728;-793180771;743622418;-760271401;-1888515486;-1867581025;-941063759;-268341509;498827674;-1769239163;-428009721;835140185;1715644387;-212717583;1655926338;1050762552;1024770274;-761852683;239191258;742479311;425436025;-1879948916;579525846;1121036351;1366462536;795410336;1654225908;-912849282;1148810791;1194325205;-507703940;776489972;-153645794;-715508916;758417159;-1758656864;1136546248;-1671833812;232490246;485864255;1687515325;225318927;867731151;731576464;-1357307210;1802045163;2106127930;1919662640;-1904496577;-171430148;-166067321;-859764479;755540408;1861961607;-1089212466;-1396323987;1490936253;1232842015;-1857921846;-1135762211;1844864241;1086997671;-1223430794;1394328765;1465990182;-1684104098;1573187144;-1305078326;964076006;-1648625731;754382683;256658408;-787407734;935630096;130310484;1104960553;1314506190;-1326459982;817346168;644429665;-439565233;-1393942521;2141475077;843783329;-1101302125;1988125252;1092662345;-2141607303;754522009;1024864880;-1680877500;631753651;-1122293067;-2070623414;-562709120;963895752;990125570;649915109;1786788725;882150113;-183224861;2062427007;291795158;-86176625;-1396645538;1513564015;-1747030390;1503684045;190207906;1801733905;-1173906568;797614923;237146561;2078985296;1295054625;-361651763;-1559357836;1137575101;1911848028;1854789602;833857985;-771668904;-896422629;-1128061779;-1134026175;1128292774;473557019;-590608416;1206688201;-1826834909;1320322625;1107769725;-855569366;302694252;-1432202276;603907799;-1594153963;-1710846378;-1693639320;-1227860201;-597714289;1698752387;-619844974;1962681982;-1181865627;-552634642;-2076589363;-1145854728;738190064;-1057555713;2057692092;545128674;-1638052484;-1346764023;-1722738517;-607113726;-808996421;1408014319;1227379006;1025230644;1543269854;1987883606;251915695;1518890856;324151243;1363302518;801478739;-977369568;1760078129;-962235821;-912069644;1699695064;-138656253;1757257831;946921638;-649365017;-1539433122;-1480862793;-682007083;-560024101;-589932378;-561756024;	};
	mti=624;
       };
       RndSeed @[14] {
	name="RndSeed_15";
	seed{ 2124098730;1523393144;-1750050113;1884156308;2082213069;1669216385;1485359750;-1609882038;-2015714704;592386307;900495673;-696626040;156155363;-991664740;-1009307959;-344617023;-1784772198;-1034510071;-1482562812;-2105096335;-1743897741;-410784598;-1252929597;1807499324;-1118765783;412935440;-1343492246;386669603;466277611;2036646868;140591143;-1899745662;-1781999456;-660985333;2072567114;-1401327174;-976398916;-652276864;-620911147;-190057579;2118934614;168923516;-1439841770;1601586703;-947314254;-1275526142;1617073198;-1451582022;1808773576;1469363582;-1387949491;-337117090;2034559461;1318538025;-419361026;-648327416;1805652623;-1980280769;-1238479541;-1868591352;-1815754450;904194713;-1156878437;-2090145636;335303830;-2081708689;-1451583165;371802088;1892769484;-1578034138;-517251462;-1392900348;-980354138;107058530;723476980;1819883919;646099794;-1564106329;50140007;-1727281422;1605102848;-1481569610;578784598;72337729;1391800313;-516971219;1131661692;-772971608;-1163143729;-271511750;-181435689;747508223;-1381527305;-2107486714;-559617038;954994548;630402340;37032853;-1417775317;-456592240;-2110772893;818691242;-307173000;-1172573970;-2023204476;1052641351;-1588051091;-1879965130;1293202160;226792066;558063544;1809202183;1573840078;1354501404;352367075;1236118018;-342577501;-914586219;280492708;406038315;-419170449;-1746048491;-1726862707;-1696968218;1529959280;1412719890;172493821;-1396563888;-2044681510;-168962119;-1386305820;-1510805695;1236812019;-1894702593;1188941399;-1790415243;-504216453;1249983457;-1322811414;1734385427;1874683046;-1524165264;-1056737144;-240258458;-1390694551;213481672;-196628614;-1786839984;1851748078;2056104928;-905496229;1139914831;471954782;-560685905;825089142;-1051909847;710119470;-1000177469;-1224504226;-1056465685;1699811368;398479822;1867089128;780214672;517492340;41879657;2122154771;1076320449;-884685720;-2111061536;1798533332;-998211148;203365599;1288879016;-2093974693;-1617802292;971712246;-1973811777;-1497274045;-1737928616;-1476207050;-713588935;500251800;-2061352785;-1680139783;1479906240;-277048097;164919175;-847550465;1144644393;-75561082;-2067323592;1913895586;1864293904;-1703168393;-2136565268;-2019747414;659425293;-126672153;-950744901;551922016;65024937;951636855;1180114366;-1014827993;340629249;359865651;1634717934;-763996645;-680865719;279037956;1274678887;942032146;495837935;-1611304927;1238170022;386522811;1513354144;-112768929;1230817575;558543578;-131777825;1060369834;765322993;2088376053;52405029;1003301755;2022964074;-941918949;-1629025443;-1177136031;393037558;1909499382;1306765916;1971911835;-1905257555;-1970705417;-2102348394;-2014324654;-1500305281;1344593729;1959089457;1086409954;-593636990;-1511476775;1022975836;-303113150;618835868;2058208644;-404350094;244272527;-504094362;1358117589;641575585;-1391756413;925287396;207375860;1473140293;476999126;-1724720015;875529571;1859558420;-1262103985;1806839400;1761706357;-1240782899;895319221;-627961484;356160511;1497947048;-2064966725;279376396;-1749423156;-1238546601;-363027813;-1682473205;-408948575;-431054081;-1222432126;1008616855;-2041559893;520652998;351923512;588615731;-686673861;-2021458123;-1077665583;-2018058402;1412586604;-1370501854;-1776152894;-594242845;223859588;-1133242311;140649325;-945270744;763077919;-1258373788;-240758680;-1366032798;-2010858228;1930237363;346280552;1897114679;-1587160962;1768736285;145958462;-2116598359;2044985515;-671793593;-705694198;1486218180;-2140517647;481336856;1223768242;-278385958;-352974375;-1689416129;1717748815;-2044251643;963476739;-282202512;-86007903;1544924717;1106724000;649018826;-205882376;1019821646;1239372814;1233203764;-548786893;1187153211;547396398;2024462451;207251528;2071047607;298446878;1325255463;-1847427760;-928361299;189171706;1634627831;1774205028;-1111011792;-1009214190;-1476718066;822774806;448465929;-981757463;-1069757265;-1975988934;717484151;-2109829293;-191371946;-352651029;-1299161877;-1962124719;-193261788;767154889;1206379444;223065297;-531025698;-798913125;1785411171;823453718;772626459;472332053;1971714488;-259094419;1379971799;1058346464;1160151763;267518030;-1228546501;529280755;1142133334;157961419;1469444240;-1948482641;-969766468;-1780444969;552477318;-401123748;2131160058;702639751;600300484;-992896554;-489181300;217369583;-2059379248;760768352;-2032981401;-138229663;-809270733;1746800250;1928891154;805374731;1889484772;55100391;199027378;1788861386;1144937384;424057919;-1674420882;-1311659728;329352271;548436929;639770044;1837324484;146175058;-629553164;164631822;-1245786590;-210340803;-945615852;225252786;1552143066;869688584;1390355914;-909079110;657386657;-158562774;1885069523;1028527745;56683405;539387210;945852892;-1188279945;536582613;1416212406;-558087199;-741819431;363841714;899641835;-1119111575;1416314090;-2141860501;1990606114;910351237;1283312176;-1305739251;734858916;-1690792850;-412535721;2010028768;-41122430;1315550883;-656424535;1385259986;546131712;-1610142526;856123779;1073266035;212486948;1600252666;1497303502;-1966626957;-646477218;-910140037;-1187898845;-2086209071;626490636;147047306;-911802047;-815934758;1439257198;-1433145699;292109710;-950515494;1858068594;133569077;-342772288;655823559;1016588636;1700089638;1075125054;-425625417;-1539771167;-1145365907;-1090529622;57121320;-529056855;-1214347788;-1191869967;1829523907;-1309993617;-1842230553;2071763776;302386061;627836298;-245691556;1436177766;661181071;-1158505640;-833587600;910641230;1911768758;1221842724;-1749438325;-612697856;2044451619;300984415;-1935260047;-361605034;-155887487;-1518895293;570818463;-1283263818;2037913344;1035443810;1239543976;-259168852;788317963;-443782056;283145449;1165873904;824063001;-2089094942;-1064768922;1077381344;-1202689075;135614900;-988900850;88315436;-365179544;745754692;558829794;1114152249;468779304;-406069543;-1649960940;1411172545;336197076;1699246777;2114043054;-1586357726;-119574344;-1130852640;1289048900;-593704620;654049391;347116776;-1682773594;-1071975469;-1580432592;-163346725;464899418;-820694875;1726941602;-1880356236;720586932;282068267;1023610655;858099812;1792245150;-687626010;68628869;2101983398;1652046609;-1904550017;-796978303;-1541323141;-1993961233;-1304361804;136725506;1703667967;1993661548;-823374280;548762239;-1219156652;854377256;32598275;411437931;-588528012;-142868943;173149689;1772668541;-1087197907;502627533;390001700;-1183213448;-488082329;1253798330;-873597938;-187219863;1162552859;-1866468212;1836940369;-2143756836;-1103275805;1022065683;1993547982;394509051;-957998504;-1184883911;874140570;-430544874;-765636706;1471574087;-688274443;-1641875354;360023501;-2137816773;1055424216;-712792684;-340843024;1158547005;998413323;202067383;554539668;-64802106;-814647524;-430139233;1819784177;102068246;940245269;-478237519;1547921059;-1628294572;-86514599;-1227406354;-1044702583;-2117380896;-1345097319;	};
	mti=624;
       };
       RndSeed @[15] {
	name="RndSeed_16";
	seed{ 2124098731;-289040109;-498142382;1553160184;-737872319;-510887409;-1877962046;-1202543161;-1749756991;-1375738120;1634200236;1901144908;-800241043;-61523085;176120638;789599621;-1042748791;836657795;-1526073151;-2073788414;-2077851628;-2041164093;-1015456965;792327471;777839267;-161241752;851674705;-2109974768;-1511719882;-742697823;1906382344;1872200364;-1435491487;-52235984;1426224193;133045603;543200051;-12231100;1573073193;-1419195153;1283370665;-1609904015;620152969;-294817992;-1873775245;-525414718;1155783507;-1249744503;-306444537;1275848901;1839184262;-1057066634;-984784803;-1968483509;2015948035;-1576430591;1578238055;-904216969;832911358;-1323825807;1669968283;-929793025;1288881834;-1373182794;-1230467260;-1206453025;342820979;981000354;1045778990;-404354453;-1037319346;-639417688;-1945907009;-1184792614;-271972222;1623811120;1600766113;19832685;-1028572337;1471942987;-210146174;1837094966;-1146700539;1663193878;1956845415;-139996781;-11813338;279368176;-709213176;-2127316048;-491171948;2144679406;-695980377;-711447791;2039718008;1735266588;1767917009;-1056449679;1957140060;237049876;1635595336;-1319128526;1349320022;-1342930246;2020870912;1488117966;847935765;922813108;1086612848;433880834;-2063323592;1928939345;1991439104;-1448318762;-2098540522;1888144471;-1938381726;-412730795;-521729436;478755354;1089590970;-831468736;-1575219991;1986518066;-717870181;1826327413;812325186;-208451191;641523186;-764931333;-637651878;96290976;199968676;-1029306311;1467894120;1744513012;-500440783;-147743933;1365737674;-1420856414;-996589908;499802776;-507232634;-377169912;-984342553;-293758587;157304944;1959822531;647901982;-208193173;2050641566;-1486021550;-127730648;19759248;347130218;-9490067;173301506;-1422946713;2109356919;-1400529875;-1433090517;-1579343922;550877214;78361209;-1483789471;-1385621068;624135028;52631915;-614446369;-250526347;137793080;-215345981;99938412;-1858033847;521544773;923286760;-1456459720;1399329171;-1401679540;-2010148231;361078331;922878204;490029090;507674657;-206227779;-939767889;1855411094;-1701787058;259423416;-1954173611;115471121;1940914036;743991017;-363705426;-1968017149;-1176035544;-1711094186;461845481;-293720909;377606711;1312317307;464254443;-824194687;-1146154219;-152381473;-818944359;-1501272688;-342542999;-111555166;-85964202;-426258085;307605643;-1894380885;-704272766;1876736699;-719768007;-2071105606;-1432449935;-2065959623;-1180609502;1602965884;922618926;1677815044;1326100696;1238034301;1465037005;-1714360994;-872947153;-536229824;1574755924;728905071;-1934590798;-1658101160;-499779477;-871192078;-773454336;1460468507;540408879;1384818297;-250485177;-1406779964;-1701882353;-2047547117;1976634792;124310945;-904498566;-345183309;-571855513;1298820460;2038923770;-387802111;1123196869;1335160144;-1040647438;1310522131;-917917415;-1450194366;1622608961;1938167362;900047986;1719198718;-273781856;-1663061163;916214106;1688945546;-612103712;1301766809;1923432195;989327062;-1032076933;-542864026;-983968024;-186478905;1931819109;328778886;1679507441;327658180;-1438301079;1105085005;-834743021;-1841323928;-623311637;2107054242;-650054550;1951113097;384678341;1956100311;-2019527795;-586276981;36321737;-736862609;-1216016961;-1207725643;-1302041256;362434472;672814703;464421363;1628000520;1212795575;1435656441;1600977668;-243812570;-213839929;-394846845;1145578672;955266054;-154813040;1635546930;-666217645;588820421;-114243857;1797703763;431942546;1566708691;1997223188;1181167492;1741090229;-694346431;1702026824;1598407948;-866798495;-1039753749;1215657418;1324227930;-1021032149;1217349133;1196888066;1895820662;1028546619;-1492612208;-502385692;-1464722834;660355560;1471676885;-1856033294;-877489921;871239868;-1459275907;-1841635987;331531550;321311786;-620613657;314174026;-2118055287;1838845231;935940735;-1794341771;1410659150;1570915975;1047366203;-338813531;767134173;1443211921;1651727409;1495863378;-1657479902;-602841340;-1410974168;1950417400;-1048376924;812527435;30723328;900325994;-15265987;-1913441566;189592525;-898636209;477661547;-1559921753;1037571722;-535379996;1224562326;1902836231;1563155411;-709943984;-703791562;-1231181471;-779169656;1925163857;1199335435;-670537874;-1968888706;1662108266;200931510;347244366;1341792583;-630745056;-2009152942;1726970644;-18035250;1781196903;1008093125;-1282031807;2084852216;-526280249;-9990177;-287539368;480441204;415179346;-1794871831;1325343303;736754991;1276644381;146523295;1655089999;-1265609381;1544375987;-1355067439;316893911;-943245460;-968079515;169329369;-1835728327;-2036828700;-225928356;514073882;-363622686;-23803546;775783291;-1510034390;-1728152212;1669946379;-2085049448;1961303913;-1965683280;-878335261;753814538;-1929684067;-1198768537;763079814;1623771276;-1704618416;-71028214;2104332350;-1541103219;466765342;340638090;-440725721;1474510570;633378670;-2113429986;-2090705211;100197693;-1903487028;994026498;-1024538489;-585121326;-1258859980;-938715378;1691307746;-1556702127;-394716798;-1527506263;-1790899652;550910524;-2125260941;-848643491;-378939681;1791066774;-212052386;103864701;1142207774;-118354423;1531504065;1324770960;-32435706;-108803381;-470021445;-1087064980;-77852869;2046753518;1181477154;-1404323929;547996402;686517588;-1884284929;1362812333;747537081;2000524763;292801249;1382577573;-777572459;-997782000;911587938;-1052836722;1457265286;-1128679383;100773342;-1379440514;1912248021;-1570703474;-913336281;-1223799776;1280326999;30751452;1101264571;-607132846;1558317542;1439402261;-181089577;-97813608;-1114982116;-1130489652;-1689777859;-1525195053;1739408238;1283130309;-873962929;-1889700360;1171806111;1653612884;-905534072;1845736663;-1659445137;1461445123;1342258893;44889216;1284831365;1801499162;1597225390;630188819;1209658248;-1912258537;1945143124;94692245;-1930721066;-755863118;-1068132892;1011729715;1369184816;535924839;1197873590;-1223944633;1737668686;-1079115711;60749702;-858234890;-1737819454;1034268634;-999289571;2064399602;1192696060;-748207377;251770171;-1371138713;1960607738;2136527657;1831057643;-210554762;1620294990;-1413351087;1731840742;-1481396661;-500705802;-1058371373;493833275;642885747;-259915124;-594375783;1002209265;-1653770939;-656193996;1371481317;-1117547481;-1416347187;694075360;-969894506;608879360;-1462111944;1353332763;1810108028;-1104830836;1687391810;-852623956;1404092233;907084199;-299300829;-1536600351;1631831249;-977274797;1255131604;399548494;1429929740;-1474324632;409237786;-1406618741;1759651927;-886443463;-1312580306;-1384279895;-1113417531;-161888302;-535711547;1006548591;-869768419;-2033439959;-1009513141;2059192253;964848514;1149959841;-478537864;-1642522400;-731527804;-1651691618;-730708248;225886228;-1926201790;460460447;1858604315;396760995;-1599958863;-663231486;945323977;-506724942;-602549701;-509351297;2005655892;186213874;-634274588;1376266382;718637527;-1511754944;-1281503880;1720606097;	};
	mti=624;
       };
       RndSeed @[16] {
	name="RndSeed_17";
	seed{ 2124098732;853292354;909071628;411302335;-1259225249;978601142;-989953580;751192282;-1121097718;667833137;289606495;337793926;552053226;1387938655;-786701788;253237362;-1665882358;1910582841;1394291754;-372008950;1897319585;-371172555;-1664228764;1143793749;-1202152132;-1680984177;-722378821;1836858291;1741934422;-1343792016;-706839784;845481158;-1697458114;613116877;1984773379;-2060639251;-2104290193;-990878682;-1317908545;418421432;1958838976;-1634148530;-1931229914;240716639;-1278192729;1400327494;-681739215;2092351977;792176824;-1488451383;1840061257;131943323;-50215077;1489616365;-1079035310;-1098460729;701902833;482337614;662400000;-1803707333;532161465;349378874;1482620448;-1839141820;-1667715618;239817741;-1139925405;-2139429496;-199661130;663458222;-1362585620;-571191507;-502998162;-1051531446;-1032171241;-684609233;-425758040;-1745698620;-1453718420;-2082169419;-442881917;821983953;198659527;-117297450;-1933609123;1443164112;1325430475;-498665463;1090729546;2120191728;-1815519633;-1560963492;2096013682;-323928644;-2144234567;163273766;-1471827618;1491940781;251869502;1587135449;392223900;-410352143;1022581472;1136966343;-1476680058;805394045;-1053096773;-1831381757;-361164079;1754582855;411843852;2001961515;197186818;-2145379269;-1923832849;-2053537292;836168834;-34938433;1553771426;-685837626;780416305;989279694;-269125440;-1697775510;878039428;-40415855;-1137525480;-1964145215;-660594321;-1560019939;1800933309;944624047;1806918031;266107787;1155998045;-1718721069;-1100872451;1213296676;-903345117;86632747;-75628157;-1308354547;1759937913;111665383;300440243;1746572336;86094055;1481075382;726272455;-337487080;348939581;394041000;-278964000;-1453028056;945630252;-560334345;-13684256;277228076;146026490;-1533429695;-2112451057;-1018822462;-229861945;1555626743;939698610;1102788063;1069682492;-1134878893;451720349;2018920346;-6736943;-689253243;-838103158;857666234;-701411824;180418862;-1145180714;-1493087915;1226997509;2041659719;801584978;-1854818801;-1297823529;72366528;919505272;-1990888175;568548409;-1667439560;1973360030;900636536;-1652284650;1098091427;-776091222;543883630;2147315496;1972948208;1905054937;476025341;281018007;85934426;-2134641846;-1317501903;-1531939863;-1223458942;644664908;392696009;780742939;-2094738570;719094164;-446475211;-1111810016;938729533;1944264165;1154863049;-1559952706;1653911811;644999330;-723682621;-581816678;512443448;301720308;159457057;-1618939421;2021119908;724722169;-1155667682;72414446;562430153;-1043799759;891460511;-783778399;608388049;1418435421;549226549;-457631021;-938416901;-604303676;-2140777360;-760327192;-652419162;-711554551;-762720029;122112338;-1634021299;1924626207;1525878219;-1932817496;62002441;566435461;-1359792014;-96914134;371452712;1125920708;-99465546;-1140866201;-12835624;1215348327;657044799;1311521245;-412249905;-162837120;-624578380;613525561;101507204;450312476;608011541;-1206861997;-63646464;-571759045;-713781979;2056193804;-1836138960;-2122855222;710071289;-571677873;-1691526641;1886420277;-338806119;-135296552;725915518;328479694;1540599647;-152076496;-1779139782;-34761164;-1549749296;291525880;1531068151;-175210962;-1845961246;1460431490;712712658;745257726;1921299803;551466920;230645359;1058187763;150280456;-1034933934;-588011744;-427315973;-371198203;1773710476;-1106343472;540787466;1077562915;96405148;2099976383;1198551594;-1616703700;280403036;1748823427;296896386;807979395;-1702650647;-749490958;-1910033071;-1975093764;-1528595340;-90881587;1908159878;43474564;1290334038;1063058838;-92318862;-335911462;1866092771;-1518805903;-2117237337;1981679714;-1425323175;-96112846;-1673717599;-960564068;1587059465;-1704692873;798894969;-1426462450;-1583063282;1711992079;2123236826;2082964412;2000822247;1467133205;174718524;411265797;155314003;1125167130;-1735332093;-1239624254;537138718;340052277;-1421623223;-1179647496;-111832316;597869094;-2144931742;2023765829;-2019216582;-216125825;-1490242476;394210647;1171354557;481707671;-2116965889;-845449410;1339076991;784627237;1841261321;168067993;-2090611249;1545463892;-1888147459;-140951536;2001040373;1428182203;-1406207782;-6568271;-1129797708;239374921;525715785;-1836090294;1645646310;944582818;837346154;1115386963;305317852;-1576954033;1672734693;609190521;2105556035;-1583015535;-673725561;-1470248803;766918469;1738925252;155430981;-823363130;-1596360377;1150666440;1912078301;2110304093;-1584829218;276672607;-1416466929;-1945804362;-1152065126;-1604363633;1122971705;1521745841;1521029642;1638466290;-1830340997;984498266;564498208;1237948735;1480434966;88896180;326604454;-732477663;-982629362;1061605318;311095492;-251272453;311510400;-134091479;349441340;1600280151;-430303334;1230713354;-1055939835;-2037151475;536288155;-8333096;333431577;2019515280;848739049;131952802;135406496;1570287575;-1171200218;586774253;-1987329477;1789076280;1657104441;372250581;9266631;-1615747006;-1377721600;-1487969397;55941071;-1716802194;-830588576;1513595092;-1630047537;-1760886360;1054974938;44781771;-1788836639;-60364198;-1670178839;480392324;968187362;-1124467207;761891031;-692122204;-885013579;1910415009;-434620684;1907941448;-1141469277;-192228004;-1332803757;-1836106290;992579414;-931883831;-1020997746;-646751874;-1278134993;1463423392;-457236635;1795095327;818815672;619719803;904683883;-1806584804;-764272708;-1942175934;286307880;-2010429519;1549211273;119713171;580331499;-982743900;190756561;1475017572;-335462967;-1357611869;1580095095;432489601;449712601;-473354862;-222784213;2126332607;1150616814;-990389436;1293124605;-969346969;1876450672;611670162;850400664;-231809289;-1434809276;894750623;787153597;375012244;747091816;378144269;1745639975;673704197;-1365926399;-2001996744;387999468;-682563289;-810794688;716676220;-1265427718;1413504487;1223631822;254536124;814535998;-2107616887;-630157077;1112364445;-1298709342;-909658825;1613714332;-877263862;-1355322713;1332896308;-1709040123;-675767840;-547081299;-1812823099;-1247510877;336666790;29669792;-1923883453;600734409;-945093518;384842683;584820206;1039587086;1423661231;-1312744240;-614808827;-94951030;1482470970;1505131125;1437754867;697220266;-1460835517;249043927;-116781818;420598317;683475702;367121220;-217858037;-2106127008;-456147997;346030490;-953020931;-366054030;591712466;195348248;1479960247;-2123895282;1052334333;447382291;1592779714;1407007027;574706943;1631322593;114139047;-1960747477;-1632822922;-552197874;1053163884;1423269352;-2066825158;-336080794;101599016;-640778984;1059574008;-1873662934;-14363109;1522749900;242285878;-561000796;-555423430;-575764779;-740443449;180983214;-1570492927;876266635;304803892;-1494705438;281476287;-1728253765;1504509022;-286823715;-1383073287;1081210219;-684617929;1184650730;51751710;636588862;1858947039;830810880;-91424405;-51441548;1633824864;910688691;-2093582066;	};
	mti=624;
       };
       RndSeed @[17] {
	name="RndSeed_18";
	seed{ 2124098733;-959140899;-1661756264;-1960758587;-4814969;-165340391;-1378182328;190832185;-363975291;232696807;-903253715;1882015025;-1607271428;-1997907645;1258291123;-1397480631;620892071;-1782477836;1157422624;-1987425256;1392504918;-50765464;292729421;-1614377608;-1587406022;-1966230223;1367722041;-613026253;-1315319540;32635043;-755281043;1825556613;1273282612;-108056054;1099206319;409561289;-1272387471;-676446076;267957353;-1601544556;1095735126;868566140;769548566;172692441;1412232649;1572667413;-1859666926;1824637567;318319078;17014255;2071672445;1965611807;-1137475318;-1214828451;-1105072975;670248406;1867684774;-696989668;-1476097163;-1129401042;1947600536;1348959130;-550062235;1686499709;1098359340;1161302274;189682033;1167235800;-1348192031;-2140082988;-584714572;-2080160390;1539285152;267880654;1786853264;-592542336;1625475067;-2041335825;-1817887281;-622913744;-472681873;-1147408147;-486607459;1599763881;524243868;1358854369;-248147786;629535936;789860376;-1031245359;2038188596;-718101436;-1462382753;-270625522;1341113215;1504218901;-308402364;1767603812;-1736447173;434654944;855441092;696477625;-1788285597;-2095738708;-1632554226;-443641819;-714263192;1067013794;-582361002;-712638730;1208071191;-2035952867;-1220484437;-2071667170;1175231870;1169955470;995492319;-1861741456;842994544;1549376423;-1389347082;-832214339;-950744208;427413466;-465523842;364154318;-121556796;-792478206;-1141932059;1145116068;-171583589;-594122885;-117568804;-1876647552;-1150268720;-1357519007;-466795113;-1759205395;-1428281131;526527582;-905195614;-1574104046;1744141022;-759967350;-489489251;-155174681;-159091066;2136141836;-1433752907;1561479624;1379053027;-1506112319;130212999;-1881052964;-350278096;980125114;-1223537410;1884240905;-1164249146;68658419;1262428031;2083773271;137400208;-454249357;755179732;-996579255;-1151615016;1003772841;225745749;-780876238;947481343;-1021137338;1809100517;1421673633;913077198;-1788547339;-1317701853;234858934;-1012245632;566507106;674359134;-1944873269;-1427435773;248214812;-1145753404;-486525737;-1926869922;360537351;275739519;-582973224;-173002203;-1604051011;1320599067;76212995;-743943183;-101473987;-1894069190;40143581;-939127049;-2129626357;-426288043;-931433289;1259691982;39687286;-627525286;-1763655190;-70669994;-1082045352;-833271214;1084402630;881608021;-1916479396;-653939734;-1482980158;-72998762;-267544416;-327060441;-214558963;1880069984;-1647271136;-1198813370;429320881;-218476109;1313434447;75895974;578616415;2029480285;-763179473;1092936768;461100938;989520984;-409522273;1684292980;-2031221486;-2146594758;1494212355;-1834414410;-1401085455;1982755021;-1606177429;2086640733;1391062333;-1293699682;927671167;-1826817777;-686737386;1969315391;646667629;1408643577;-559452207;430211284;480528543;1208401591;95593675;-13064171;-471328851;754939558;-1110268289;-392194733;51231123;-1547771133;1657936234;1114327869;-29635661;526945656;-700642975;-909629772;-72337858;-784921571;-49948957;1399564142;-300124454;-121371219;-1675469641;-501321349;990117227;2099134283;2144572231;926126516;1279119643;-654284198;1250072374;-1628235571;-807890490;-19468075;1871285131;-1514739568;933094585;-1111408867;366903132;-25920402;495349028;-1033022376;-373031924;1419737617;-777143945;-1275772948;1719310351;438271152;-789159269;505429796;243215969;-123324813;-909808801;14391420;1453426205;423814718;944637353;1802415585;-556303723;-575167388;-1287652134;7756400;1042784105;1641027239;-1715353927;-1343587325;-1276741982;231239262;1605753429;2095192164;-1962627558;1017874618;-252805979;525731010;1590277071;695152524;908308355;-2053743881;61997298;-698752316;-750520114;59891501;-1892211954;131481866;-1080294335;2024442559;-759534521;-1923539930;1764974471;604858162;1340176911;1822992092;-337568888;-329629137;-331765579;1929574184;76510600;691480580;-1891045647;-1672785347;-864801990;260411357;-994441070;-1812857961;-1691484116;1082175882;-795447236;1931804993;1141161895;-1510378522;1437318749;-1171957834;-1030295697;-1482603768;2093338207;1645001348;-1267088152;2027023298;-1202560928;-926778852;-1293039954;-707432624;-1525852108;1945285828;-1360936912;675911474;-2125436365;-1595596849;1929724508;1042412845;1607848254;-1995487655;-1876265370;114834164;-142092347;-914679648;-835390254;-1885376263;-130357364;504488945;1470228636;-794309511;771159979;916929281;395629040;-274709188;-939324824;-156016443;-2131155539;322930331;-1453977672;-1015758860;193719558;1932966642;1598606964;-1888939329;245795624;-1773842336;-334812605;1103359194;-1442142462;1519576220;-728287090;-725105089;-1752476853;1820913261;781311549;1059476659;1113077570;691382803;-1531623900;-250018652;384644746;-1282645990;-1233730783;-1522681479;804913714;-533880474;-484263034;1873881639;259913901;1333965553;1961036385;1723890066;-503012430;-851095671;2024750375;417757108;1592299451;1287733274;-666255520;-868647223;118432109;-942242115;2096158899;869974520;1961115799;1354220270;1482346764;-1458605853;-123276408;-1090487653;-2097463006;1792725862;2135459946;-410249473;1131802421;888550734;80463761;-1826007295;-738922244;-543912599;1261405857;1194049264;1644711910;-1017436427;-1282799903;-1487326109;501257498;85704472;920534607;-1657807357;532160830;505498960;-1833741717;1689826889;-228297659;432363388;2064703947;-83611502;-962870250;-269051093;-1016356693;-150451156;-799787152;1259040069;1708622267;-2037859766;-1214642095;478066089;1356078744;-901843639;1763795487;-1367358012;699006733;-555051247;920927755;596467529;365144768;-137158732;-733645784;1002363373;-1503211144;-553586406;-1609268778;509456030;-1950714799;454382011;943936452;884994642;-1062830503;-2017196670;-1647858303;506958257;1354446296;245129633;190361482;-189522568;-1590462834;1905439556;1404283202;273392761;1949017800;-1929813927;426817780;1528794706;-1092447282;-1424982644;-1483437801;914969691;-1261437702;792168428;-1608913359;303646517;-108562688;1983353159;-510342985;201819422;285644017;-68895183;375770583;-1506588943;2010647294;-954740805;-1734971975;-1741725719;678599898;-1927377370;438000217;-191674301;1233503079;-148787354;-286637566;-641362545;-825233817;-1822911584;-362679529;-112812782;-1704914204;1739820270;-1362394244;-1608822552;-1216731003;-762102153;-2052081159;-1028082371;-930106963;1250507230;-2127221196;2066752392;566319176;-1820434780;1879846843;-2140184416;1125504041;-750903800;199409560;1713762618;397263242;-689555530;-560539218;2075949191;-2121972443;-1012454997;-1445570159;780534857;-47594472;-64367629;-360968195;2138259332;-837206328;773679975;1407615220;1470562299;1807075829;1031291800;-1782119091;310731137;-967539908;-1538424525;-2129775698;2113237302;1475157006;-1392960697;1757589910;351986161;1669078900;-452917111;1522547411;-519071428;-387764418;2090093173;2072344105;1123747886;-776707086;-1388418691;915249284;672649854;2055044129;1607408396;-611671154;-1005322737;288074027;	};
	mti=624;
       };
       RndSeed @[18] {
	name="RndSeed_19";
	seed{ 2124098734;183191564;1085659326;1509276254;726163071;-141017312;-1496341547;494580442;655702538;-1783283717;-611484089;2067870943;-1609127518;1830259757;159504746;-411402015;-1065628870;-886591858;-1528016205;2018793704;1463469313;1084012821;-596854534;1085356884;-637540959;-1824044285;-1152704385;-1200507284;75487106;-313354137;803185554;-1564300615;-213356825;-148388843;1866080976;508073368;31022364;1767487537;-582526186;-696767376;-1470622585;962479522;1424173844;423705716;2000874992;206887234;244058424;-1900635321;1644572521;665279545;-957291601;815062799;1132726303;742474251;-731647603;-896185539;148692398;696751071;263761461;680138788;-1100821904;-1670454985;-1833486553;214863576;-1613237384;-1042982557;-1751080158;-1081312285;266291465;-1939037742;-1239144618;-1197770645;-1616530763;-1073450628;-789135771;-1173900151;410361379;-1359143140;22435108;1050401667;1619768831;-42615929;-781672602;-1823018964;-1592303494;1411467181;-2043653326;1407550023;70114294;-58167705;-643624498;444054332;-216794360;428338868;1212907874;1002243950;1452264646;-1463596572;618806816;-748575997;448810852;-736635175;1196977768;-908541740;-1684528069;-671626266;2358979;-1931551142;223531300;2073348001;1441227406;-1108252198;650861224;2086055097;-911696630;-489765376;-777995613;1386824085;1810568154;1348208862;1193793395;1629618803;-1361577612;703566345;-1964347639;-248007980;-1852858799;-1582767554;-1470669268;656459431;-590430363;97065409;124154537;761703986;-1206289344;-2091165551;628465031;-77240884;-1893338571;-1676083394;1092079416;584663818;299748736;1576768527;-1428232170;2091926645;1431901782;-1451532314;-1288054392;-704401913;-642790358;-675512892;1629363995;1094528987;-1028289636;-558813866;-964927451;-2020588133;609834747;1806214310;-1372105341;454935942;-1877105536;273250797;280490021;890801214;326009628;881309363;-583671737;-316547203;-211182752;-1870181958;266047044;1419609473;1427581998;34772538;1464881042;-1639313232;-1559897876;-924322663;228584310;760482883;1988997669;-1455911701;756500901;-535012398;1191842607;1501507553;787268636;1696619465;425344678;179015229;-1535589423;-482988544;689226481;1377493720;-2014273183;-1778210860;2042084916;-373593936;-488826265;-1122570691;-146491739;1516561993;1426285364;1826652598;-637592319;725255321;-1959054803;-813763492;-1871298227;1690569726;-1816317073;-299524138;1379142879;1266541165;-406183564;-1125588020;1282219808;1386017248;511956897;1775254626;-1708273939;-732328918;-730513907;718862951;1382869637;-401265929;16942888;1382792109;-576448574;1421519116;1836558345;827954193;-1593080673;-1882302500;947943810;910459703;-574540639;-1429047591;-1432283049;233248634;1142066708;-2014426052;1703101290;1204477228;-341747529;-1408478213;-778280139;-498791609;924899022;445316673;984488353;-238139774;597940963;2147342222;-1872063637;1456364142;-86501939;462281033;-2059547695;976901700;1024093658;-1562574327;966177375;1384265604;-575072893;486997131;-1128986909;1883316434;235396941;1454788464;-1635266139;1784223476;-1625150277;1467590416;1524499401;605390589;782673895;-1561600454;880977200;1715592457;41778498;1750646309;197151056;1263058349;1625809402;1699249190;-1726293117;865575942;-2050691712;-2141567123;-1142843665;-163552858;-483732417;-1457661741;-880450403;382419327;582405957;1307489380;142227973;1936232998;-242644591;1088448969;-174209768;494352344;332636522;902195717;1747419693;1534322833;941609478;1914508181;-1912672612;-1583828081;-567259941;-1139414413;70449361;-386202446;224564243;430413758;495291702;-1027826289;596514174;-822023687;107551462;-1960397821;-190804309;910700943;-1142286925;-1395832546;-656288426;496412884;1519784176;786213218;-1922939144;-929575951;195426762;2007934979;534731804;1882084447;67082346;1062067495;623059129;1684925268;-1113499935;1281082344;-479527609;-1751428817;586358045;-330693938;1682821439;408927445;-542736791;-2093180109;541947063;-1761215338;563338184;-1033126067;-2130364116;-1427427699;-459479341;958161273;1856714535;-736487063;265011774;-1106718237;1525889075;-1402605783;1063411815;-1103615724;-2118189792;-1447095843;-905222801;632934673;917018155;135086958;-2041349666;-802565819;-1033369576;-65099998;1567595137;-801737219;-1399620428;887593805;-1936229407;-1337631472;-844473444;-459850178;-1884998507;963874840;-1822641410;-197166349;-228199880;-1267259952;-1761783964;1429727945;1462545012;1359666870;360369857;1163910324;283243001;1030863310;384798168;1079218123;1064359494;-837156557;-2093667962;164431531;-383638001;1529442389;-1497217346;27559367;1307658271;-2137291917;986273331;-806007106;907425585;1755578614;1207538197;1664046983;1680752514;1188113236;-334915793;-203214333;744799144;1841492721;-2038674854;-1153798557;331773681;-276109374;-1709524525;1521691172;1832939337;15823129;947323279;1437738526;1149805295;94087067;2086147293;-1813120893;-295234147;2022643471;-1389586368;836855237;835097973;1535612390;956810465;-158066812;565545219;1980148464;2058578903;-1470557391;550494179;336122196;-926118934;-823007820;-1788898821;497146374;-860734424;-307117630;-1608991759;234632108;1977315498;663484486;-738170002;-912082734;-607009465;288373159;-1636687945;-806264514;-1678769177;-1358292944;927747986;1823377523;452909268;1717633407;-2138831214;1233758381;-616064582;345155804;138304684;-1192845891;1101034813;1202675343;-1616097814;906225261;-1361756185;1956037696;2018064525;1073364261;1886776963;-658985675;-636993990;773590890;1496830144;855877396;375824596;-1738872427;-637470331;-493540911;-185015346;-1900701994;187168666;-2021909575;-2064972353;452356746;-1543379860;1593835361;-162913572;-536732936;572652037;-1739107592;-1833858910;512264481;-920140537;-1204035433;-1159570995;-1509541968;1914715456;1615263148;-1456241591;-1792256352;1263067636;1046496436;-240422640;866896268;-461999542;1910712796;-518927551;-1197898469;746251759;1863491678;1086660239;-922677733;1620928910;-1837027710;878303896;-677996527;1716101940;-1781021948;1923623290;1088959140;-583448009;-407102301;1625877824;-878418490;917870043;1070814346;-832293226;1758611438;-1359066511;-1387271034;1303836220;178310458;1406862348;-487681972;2038577239;1927299611;479199344;-1742987681;534954465;660531446;2044170560;-745596456;625502363;-1245103524;-1456318644;-55102979;1140435310;-483048956;-427176451;2106406257;-799078548;411129864;-1420032666;804038323;-1602711073;246141810;-1643089860;1648326841;-1481827620;784230875;-1597835091;1691010642;-1201165305;202935618;-1642721452;-532474567;1835625518;1590024152;-1216328725;1838982716;1534016865;-933521103;1501377804;1059382644;-561668840;-75009796;1658916337;349172231;281099803;490141184;-1437265830;1270254867;67259510;-1358081301;-1040225973;2048136135;-85277314;-994389582;-3967433;-1379174169;1597784509;-300446319;17563392;-835543705;-303128868;-29161628;-684126963;-1260345615;-1432425653;-1751390406;835138438;785648717;	};
	mti=624;
       };
       RndSeed @[19] {
	name="RndSeed_20";
	seed{ 2124098735;-1629241689;1667466267;212535365;-590729155;-918014341;736867678;362798109;1437097081;204518241;-1294160305;-361563796;-1394487337;-1742537706;322971634;491668617;508386077;336754562;-372524964;1638110350;1945314175;-44208437;1570618622;408487858;-1910748334;78087849;2009567687;-1825998535;1977247587;-1943258169;-1210908201;1527625256;-1979461811;2090537292;445319299;1610446546;-950285213;-566820347;-1309474172;-622611195;-1293901434;-475308739;1010038688;-714780085;167378580;518694033;1889240675;-1393264935;-1274341481;2031225594;-1663326151;-313658758;64121585;-1244255670;-501795170;1504547112;-2008533403;1517000156;-1800379029;565982120;1350388100;-328651082;846285479;104256290;-393445718;-1311413778;-732555682;-1334208524;-1576691118;-470109739;1072541620;700032587;4832991;-531192508;1502819405;-1675342265;1209585285;233447009;-2008619629;667560836;-995569820;224981748;152596118;-135534719;998566046;-1606527829;814012419;1746392198;-1781262181;-704211530;1789521347;1570086885;-1915414192;1222500279;1648077100;1263391776;354507365;1145812794;1569381801;671112107;-1629508133;-1355302910;-93087642;1928080704;1680647181;-172284635;633405032;35784563;-980517941;-202580395;1539948124;-1643978720;1510121434;-1382923048;-1685859212;2129656065;1341013364;303357086;-56780596;-2103635678;-1912479208;796139195;-1738591423;-1160571670;500131844;1234841105;-1897218866;993634555;-1140130169;607033338;-712196060;1215147750;-2110742361;1672130206;-2078081983;77750774;808930454;-35160649;1854270606;307747830;219836058;1322519887;-638976428;-623974430;1356850517;1868263093;-734199402;1224564060;746036037;-399822898;-2143710857;-1144979264;970661666;1225423619;-1576756636;-1556381479;678169091;1309707980;210701439;1838736826;1012971111;76944964;1828531574;-277307498;1091613549;328177217;383127883;-1362954690;1414873684;-1837782734;-1605996390;573818019;1461506043;-243214257;900334250;-232388671;-243932614;-1792949714;-965793778;1520747220;521657277;-953362618;-1832395793;-586769864;-675189505;-309928923;-284216904;-1296518526;1004858684;-253053591;1435848080;-178179084;1944694835;-1277475205;1200131967;1646070649;820035356;-1732943151;154659077;166042816;297375880;-594413967;-141083196;1126948686;1777951223;-1165341477;1100968811;412238753;-1119037355;1836640804;-385536405;-642189349;-914071284;1419006656;1846865915;-1434093447;-478192545;1076931877;1272484878;873951686;-1114842630;-1090537547;1848994577;-1093743057;-1826067039;1964277040;1080794679;496652849;792045369;-180913310;-1148086485;1484035348;962203441;-385861570;1356453371;-884328819;1364952306;971407308;-1058498454;204690268;1600135228;-1344774654;-1129638158;-547979869;1438265620;-1437820098;-1108321374;-1841510633;-2045261503;1726759784;791202407;1815739038;-1470629705;-1480524442;-1803911822;-813404625;1365836892;-1404076366;1022962802;-1238004739;-217795681;507337105;1645867067;-1621044759;-1829333569;-980010598;2017893223;-2066815415;250347427;-262203556;1889472649;1649561271;-980257570;-1050844862;1470769335;-1964673311;-1654889565;741046426;-186187816;-1593039490;1614685956;1753879314;-1405898087;-516461758;-569763135;-1784913497;-25766857;-1176662621;-1332016475;1685033988;2120160283;1106958693;1745504664;480308098;-1307345552;904954145;1894030381;-1225184635;-1514076307;-1171564810;-179444880;848840844;-2135192470;-554037705;497905588;-2078251211;2122721509;84682535;80761495;1485071816;1530116739;-1681512319;-529459225;-375164371;752397152;-724435429;1786517684;1965137318;-147680479;-174112855;-1769203374;-805188143;1083807516;205661364;749260872;134788525;-932953209;1078741083;591836874;-96585477;902902562;-304848971;-503567846;-843907542;817969275;315759830;-265427010;1699451874;942331105;-755407080;-363847173;-510451667;75911548;889029443;1847109063;-1327866249;-1813585277;-2032834752;289542246;-1532948581;504564155;903146278;-1528685218;-1401957715;1990641517;343505663;129564415;-1720970496;-1159883984;1804523041;986815496;90888337;1761872799;-1843256127;846847323;-1828255404;1327478364;1755691296;-178539403;-1745135105;-1422006461;1861551896;-1524158639;1879971892;-973673633;2112035011;-1205430270;1989278073;1482728914;597973178;-395801378;-1163077202;-1436357030;-822271433;9982980;-1121236203;-1897598827;758430742;2064645170;-2069181276;1601279236;-1615693440;-1359051822;-1717284199;877038513;-563226784;827258523;-664977484;904139713;1205147060;1403154169;-1790934679;362959817;2120261856;-463543463;277929495;-693964887;640715177;443597381;844534738;-738085516;-1190508402;-1917481768;-487113313;1523043370;1984139670;-2135736013;687010550;-1734770000;106943453;-751117099;675391507;-1587643355;331930634;-2008667238;-1574204255;-437864199;-1277508019;-912685609;-889437615;2101480968;-221160388;-256893557;1677815897;1813539946;-761984278;1879244961;1357177045;-60151462;326234836;-1162591396;-1598168113;-1066494309;1482736563;415594742;-1973526325;-1970879989;-549429172;2115586027;-153380077;-401621230;1626176632;-929177983;-1880466161;983411943;-1341270038;-1520871344;247577635;1762850457;2023400387;-1460441258;1777000945;-366701186;-958799584;-110719073;93660765;1307240835;-1355631587;1111402767;848507483;2122486461;489587203;956426247;-820163684;-1990201707;-1012338066;945748957;827172110;1817747044;477990072;-421593480;1166490472;-1190878385;1834198084;2127281693;300089073;764710907;1351033582;-544493261;205494745;-1621371513;-148738972;1466492303;-836923149;1523228830;-1170245718;-1750393032;-1127260717;867950183;2079645590;-1000011897;1904057609;-1429193186;1479114499;1315254210;-1496304408;1725701196;-1575526052;-941180398;-1710128206;36841070;693897573;1880736729;2128666169;422290970;-858622907;623597474;-1720891665;-275983737;1356051483;329120330;1481333563;539167212;1133918247;-1621459190;635922485;8616951;687348098;2048304218;727747832;1129338858;422343882;579874758;-1562521293;1523434347;10999017;830911237;-1592438766;-441374614;-731634552;115199987;-1653532676;1936156500;-1922350168;-1003639246;1200944246;-673635307;-1584069423;-1524312989;-1747536534;-1532871634;-76985469;-1703785560;-482617797;667385410;-1072421835;1422733690;-2100536652;975516156;-2041538917;-929935987;1947965751;-1940170112;-1794619011;-770508721;-495934415;867011568;1458284519;119363062;-1555197369;214213747;1220243098;1784715363;743871207;1259771489;1392686623;-698750442;-229533302;1142613583;2013175049;1152728684;-890963898;2065031807;-1622553603;2118251747;641765747;594866089;1795358968;-427580023;609037247;1695841193;416920471;-333403165;-671174223;2020761484;-753063436;1069006791;-1416549672;-2077584296;-190401575;-1627741862;1654768145;-1994644822;-113404253;-381153412;-1707993480;-1189074304;1107188137;2062305704;1111720718;791592525;1365461956;1847350301;-1225511567;-1664255035;717248234;-456423750;-361485722;1866975555;-1428898955;-1836996769;-12398818;1543323103;706164997;	};
	mti=624;
       };
       RndSeed @[20] {
	name="RndSeed_21";
	seed{ 2124098736;-486909226;-550186229;2046724651;-662504298;1223451598;1431709617;470472823;-44034565;-1670225183;1749122713;-994162173;2058170892;-260525010;1631988431;20521301;-743201895;430110163;262006609;692952072;2018957116;-1843556314;-1731648950;984288895;-1447579853;-1198499986;61819318;244611817;-558223607;65464591;-801375735;1321140241;148084336;336349777;-1328174313;-1502757780;-232508022;732852274;-1086650912;-1986182063;1457610727;-1970869273;-356802941;1498941611;1359242558;-1448892152;1515064096;-1633284812;-1727062914;-1869047523;-100728723;-2082993767;1218231643;-1398677833;788445855;179812338;-1417014094;1666996649;-217954430;2024881952;513642817;-877848606;-1875323645;-1888447836;-529616450;1626686674;1750995585;109300931;-135715789;-794233035;1232039572;2100780560;-962185731;-194364545;941806646;1590206361;1068977988;395946529;512936019;459437070;-1839904810;-975058187;1013758304;-1749449933;1706884009;131346845;1016043591;-619310246;1400849269;-730156771;-50139344;1922017914;-1572399645;-1779954910;543196158;816382357;-1952883415;-695548584;-1311076279;-1199566598;1784900156;-792817802;-1641597297;1535441672;-284304395;-2031587721;-33345133;129539643;270598323;-1890971124;-1840996876;-2024474499;1023082891;296222536;970801114;-227812491;624540674;-1854783681;-57304953;-1858088821;-192571515;-1552581033;-1370925821;-1066200352;-893980917;-917530971;714032636;-1327597333;1893295469;855625757;-233332493;-821891277;142151284;1974126665;-1417179922;-1588009565;1851572749;-1933247675;-954129779;628269201;-1373769023;-1609555332;-498791868;1940786578;737412751;1890721276;1446853219;-1156285635;-1212000401;-529476714;-1831782561;-1565090488;1899931850;2006596528;128075375;-1681903258;-687996656;-867264484;-414999591;-1492506719;799858415;1057676268;1114509502;630969086;659959002;-722051929;-1790815910;-1172688801;-20850087;818630699;1665836193;518820811;2096820931;372873527;-63380895;2084946777;-730322328;1862860776;-354441057;-943914433;1399324256;1875920378;1618735037;1112879587;2021433570;1702491464;-832514169;-735663153;667284536;-296529195;705574188;910395163;-1582382745;892623514;1952065924;1718456124;-1316214571;-536335208;1599442157;-811670045;-1143631320;497100123;1460564145;1741727291;-1579376722;-617477207;1285723360;1006118548;-208114380;-568949116;1318212373;62684087;-309149945;742031721;-1741340605;-1171512452;853176206;-356318753;-671975258;-574822668;400707407;132354568;1143399942;-224165726;-1430328987;1577792900;-1397535909;-1317118976;36003758;-558571893;506107022;-1473340691;1540753459;389152419;-1569476039;-979114702;-1616402879;-2064419748;-1813694460;345264461;857819473;697648870;1126174640;-1109202232;-38617946;-2097431794;-1849804622;422743655;1475890843;-1254265413;1828932599;-1582457079;-1326865581;2009778418;-886025251;-100342379;-773465298;-868905278;-1915904985;-609130340;-1907073345;-1591245162;-643216022;-468206476;209324795;1826859280;-1765618241;387994012;1991290776;-1159911062;373423894;1529244349;-1066747588;-1409888788;-166355464;-571496422;-181292047;1501987215;-1069016036;1280880722;1805581527;-1126021241;-1372625517;151301200;-2059481940;772923331;539075597;-1502892224;-334202838;-1384097202;-1408611042;1326999855;-1926422966;200899469;426194119;-1503178070;345474416;473994841;1583346503;-1007324727;-29294626;1402812510;-1093986903;-1335553882;1380144612;1925935498;-388747255;-239972571;-104951502;674857610;1867668392;-869622812;294593115;-614972896;1479267337;1778053219;89344486;-1179500805;1809128059;-946553503;-592041238;154443822;-1799499416;-1243915755;1298258775;760647731;-1414057883;-1895941910;-451371824;-597177464;-1246907871;1154548762;-2107239693;1124037474;255689309;-1164757760;-1367343846;1654174665;-387123398;-2074473520;1385696558;626285536;-493674314;1635763648;-1400615043;-1623763596;-1949638936;-2000998995;823438951;-1487999232;-1592107224;-25491727;-2048966438;816852633;1352746175;647745113;-850064511;-1371267665;8145831;991377738;-2032650854;2133032545;474103114;2113194397;79431672;1446698565;1242043970;1760535774;1004561515;-1741561176;-1465816956;1279784017;139605252;1776947209;-601580386;-158543768;2013560495;-1605166561;-1399991317;297487720;959067012;1003747473;43887539;-1627616738;1984920204;197906466;-1028042516;167106254;1167326922;1112222364;-943663497;-821776053;1756461808;1365736350;-195764667;1817782569;1984669268;-1875960298;1547408242;-779175698;415288337;-1313039034;208630118;-1385081647;1776313299;766559599;-630239903;872479553;1436543805;463400005;-2079906349;516277776;628471276;1329599417;-1193459402;261852963;367932783;1805417836;-1646800221;1950696488;434951889;85826330;308616424;146051375;-583503821;-862063463;-361894804;-1678856074;80065392;-686375715;-652389564;-1793860686;-1288249824;2087966491;-242824972;511343142;-256210766;899000458;251877928;246020991;891302355;-1860004616;1328845404;-1633909396;1697285154;192011916;-1713784070;-188908137;-704462556;-1534782172;-1126387776;1131293517;-826883392;-206949452;-707504135;-542015127;-2127574374;896419777;2066717167;-1331029327;-95726229;1178950613;-900878222;-483780764;1039293555;792528432;-1229774142;-444237933;-7062108;1309389752;64678611;483299862;809986694;-1244086601;1334123587;963738085;1430496821;1393453153;-718630978;-1964909456;-919405350;542958718;-497052264;-234685686;-1128014479;-588387516;-541600791;659871545;-634033051;-1394582489;1725376899;-1297615819;1064684191;-1321137752;-1199911936;-340946759;1258530130;355378864;560723298;60244893;1931981797;-919929111;281529928;-1875841953;-1000994903;1840316939;1194535404;-1709547140;-1123621198;-738380435;41940068;1426125171;-1129101830;-319531815;-2017188348;451295329;1202137417;990040941;-1891778297;-221522432;-33027017;-853498227;-588925424;328598154;1263590526;-1738541272;-213385312;1152063582;1713665675;1167630467;1588258652;1590234820;-2120400179;1937056960;-1423324357;2144186516;800680417;-554225442;-759722421;-1584943997;2036275713;2104443933;-1256399574;-757749017;1660711444;557400426;1098812148;-1208159796;2027202154;702672220;-1146297486;150777175;903148667;-952677968;-1222254391;1355502914;1236172955;-253679377;909079370;611391585;2102495605;-974761739;1407949120;-843169320;776679579;954868316;-2126066558;2078224567;1830395910;368108540;502255782;-489674311;2123039390;2006458872;-1828541829;580322556;-366750292;960952140;1718304574;467774750;696278298;-1792170105;-95664449;-787052941;2028272760;818110214;-333924952;2057646530;1797455675;1912258095;-1024087948;827598914;1905079898;1061824312;1506177898;-352530806;1912852321;823866165;-1332374721;2038021736;-1798483259;-843109924;-1293099435;584141230;683815426;930008871;1235524545;1737176351;1965753654;-1740341228;-2077470448;-1403215747;-1981265025;-2055819338;-372856726;1918870740;-1396373647;1390247368;1983001527;-1317744839;345593779;441673484;-429844950;-1068977764;	};
	mti=624;
       };
       RndSeed @[21] {
	name="RndSeed_22";
	seed{ 2124098737;1995624817;-638480078;-413630120;-1868448789;213767154;-2131812224;-1840552623;-633510713;1719772509;673741142;440460537;1693620041;698562421;-1505395145;-1721227272;-749563982;676293094;1414192592;-1896522616;1964596358;1094107224;-705133517;1192875783;1248725878;-976341748;740881925;771013908;-1236644608;-1584106521;-119912841;-620896285;-501730432;-743281200;116408161;-161813912;1715388251;513714343;225110281;-1390231116;-61156618;1265457106;-1326935703;1602265698;-1185149893;-982887510;1599566555;-2048067023;63504719;1831455580;987562211;1222628546;-1635759069;843231802;-582526184;1587897566;-1336597709;-1010623602;-493661221;-1494832013;-1369341487;-1950932100;1102147316;1142219752;-1852531667;276809164;1540830654;1944349598;-66089729;-277251151;-134344832;2115910134;-1196225093;487287622;148097256;812280787;74806667;2030813988;-15349017;157880387;-1510193729;570730722;-530214020;-2139412370;1143783152;-1133687190;-621963426;-448234232;1339111599;1772255999;635335824;-317387477;158374180;1532800913;846550062;1738069125;681737332;1407266341;210008214;1759893905;386721332;984917737;-1292399789;275730524;275771572;-387560595;-1724145456;1532286277;-210401216;-249586212;1913561193;376762743;1067250531;-2099183232;-282973508;1620317390;1060633887;-412781392;1264571925;1357654619;1884086266;1980674432;-1219423905;1792122668;-1457659331;2056714840;-1913035109;-713270308;1582536315;-2015909725;-1984253689;847676540;-614686352;202849764;377909114;1493714345;1428317136;-458016002;2117249883;-1893284595;-248920457;-572825519;676782824;2114825751;405370174;348876807;392688213;1493506332;-985764347;-995320077;-1850137274;1205409899;-375563158;879273734;-942269448;340745634;1675207558;1242678240;33337699;-1588267090;1959052156;1923745266;-404200319;1946630637;-900913472;1837344404;321484399;-792321678;-64509123;-1929593313;1346340635;1376991213;-1040819000;-1956102204;279715788;-1618954197;628464093;667417058;-473069348;-1334880338;663528336;385128581;1002592815;-516309950;1397559133;1445153797;-1548279218;-1733348169;-850941659;-19590469;-1273177258;-267485981;1621828896;-1437904954;1539464470;1998653910;-1490161257;41684366;-1525393460;1386603277;-1488453500;324660135;-1490593619;1103406294;1689065631;-1362541277;2068705235;-2116747095;1595000647;9573743;-786178915;1686673705;-739060324;2121883536;-1560392181;1414962020;2065128625;-643710391;-170835444;441587654;2139510778;-2131555868;1031339676;-951979925;1501790696;-1966673202;-335480994;-1605542508;2092249874;-1789439388;-279570140;-1535194038;-1219419824;1058342979;-1567809959;-546787886;369651041;495128882;1497861032;-1600746596;1701749830;-1400778764;-12864768;-831570910;-1980275975;1802461436;1623435719;259453461;1007534145;-1156144226;918620550;-1293190951;1284563555;1191035815;828114812;1035227371;836677815;-496064460;1529793973;-1787265785;-90963715;1071534907;1474193997;-1447650045;1712880493;1370062501;-1826571330;42315319;-2139477057;-3774562;671409919;1317444266;1653442951;-350619409;99189294;1124924217;-451406292;-1247221600;-997164288;2146051142;-1229238245;309525494;2079199016;19393864;-1347148156;1348135419;954931904;22171359;-842566117;1217163417;-70138598;-1947458304;1862708462;-289987984;-1529535611;80430186;1119140090;-81244368;1471056713;794721427;-1393110485;1593302106;-2026658795;718343490;-111112646;-20734290;-2049757069;-799697208;-1023139253;1995575197;-1256282686;1678452215;1097900358;1957667132;725566283;1711648978;631549819;-1405153340;-1430507428;213083221;-1647635511;490959704;-339830022;1274111616;1604287273;1357643789;1232499202;-1059874954;-809803919;-283202749;1870582154;972623906;-237793098;-237242954;909692599;-1509261694;-1789498928;-1502141653;-1326395009;629771428;1946436104;-1488723998;-273271626;-502617664;-882682297;1933012525;-1308097354;-1734725537;1195498253;1753798937;-1982627882;2124801027;-762968022;1314794126;-841592115;327215785;1712326417;-913679691;-786747084;-1718494438;-1032631840;859546360;897975618;-746690955;-1427270662;1068702277;-828683353;-532964061;712711952;1067635393;1833791639;-320359775;-1334825634;-1307827519;-189197467;674250421;-1081435167;-967770872;615234001;-1628952080;766054390;-1258818677;-1947834485;537799564;2075728828;1577785362;-1228428287;-269911630;-1726759591;-2036569748;438532076;580885923;667577815;-1132042660;-1033850208;372553434;-258158706;30103854;1614139060;-1010013192;2102193815;1763862719;-372047224;-496409238;-860277503;763231583;1625673489;-1612037401;-444861711;-1685562093;236048975;717046214;2034756282;-1524977564;1186475996;55781584;-1370068048;295223515;1517701897;1812653003;-424084906;-1186643410;-2014271230;191082151;291260555;-603454592;1973387097;1585141603;68873558;-855856485;-517822554;-1880722744;1960797538;857341120;-87852686;-1993120696;-1745343258;791395241;1900903523;-372210079;-606242718;2054383870;-2051938987;-330560498;-1127303203;957211576;-882880170;-572943032;-1328936105;186251082;1100688372;2087810668;169807813;672442238;-1707441028;-244337283;665127550;1747751807;620142720;-189672373;-491042252;-367216512;195553405;-1944805344;113467706;1521706931;-1188811508;-1966848423;429094587;617933980;-1025190046;724755484;1407909092;1666143538;2068441593;942082227;-873251973;-502157259;1103195436;1828202912;-610887835;1698255647;-1964320072;-255076539;-2121636222;-101387675;1546009124;53854080;1144000360;1460946774;-594627011;-2021190047;603705851;-1751765772;789144828;-1465666213;-1508757747;-574318116;-33419795;432398041;-1287516527;2095148276;1056054175;1000734386;1822998578;-220978920;-1624931167;1111331146;-1307019373;-862271694;-1409232557;831385588;34947396;-1423170091;-443810091;-1149889935;714724451;-1274099692;-1283278668;-1671018539;464349403;-91974800;1432074601;-1254043629;241316289;27585586;1976955848;1935589724;-1083699007;-295962112;1563050049;533568339;-679299885;-1425758171;65288313;1116867284;-1824701151;-1994325016;-1736128660;387878529;-891796479;2009458919;-1862141220;-920991307;-109183762;-1047879518;-603026777;-1804961577;-1300321491;-1210142032;-1285831584;-1778716975;26486375;1758545868;-862385397;1283499091;485406854;-1097300725;1084051387;1406206097;-1364047104;998878203;-1036570823;-358502891;579696354;-291710113;-456472190;-1201763556;-879627506;-1929258150;-1081760782;-804970517;-1888436028;-1139800485;2116494427;-1369734207;-1577887441;-1946794494;-308305854;-92011288;-1021004293;1017480477;1632963511;63702805;-1126430063;-1837246136;1307924092;645858972;686496216;-897725307;1438607660;537433616;371312288;-1124139151;-2022419023;-1901617934;-2052236028;-1755845709;-525813717;-701099489;-1043717276;226695420;2080094662;-1456681762;575836456;-1839616219;-97584191;-1819138071;-1418492649;-161562454;2031842831;-1671097367;2062983451;-549815385;-273052134;1341092676;-250910303;1886806355;-100185660;-2083742482;1512585096;1750416506;1381741045;1578421171;	};
	mti=624;
       };
       RndSeed @[22] {
	name="RndSeed_23";
	seed{ 2124098738;-1157010016;768733932;-1555487969;-1049600139;-660222061;-1569786922;-1861310805;-325635659;1698366167;-525949832;857847698;-729248090;1891210278;1251037809;-1316784577;1523534625;1356645297;-1516084094;5908115;1950016275;742275119;501633441;888429980;163932836;-1687103795;-366836027;287908409;-1004928615;1280576479;311721140;608012067;-1349710865;226658722;1268121356;-1928948412;-966436158;1792350026;1989563325;-700275373;2012416184;-1415810522;-1127592866;-1523491721;2049382229;808724561;878592291;-1509921282;183189660;-928515651;186529320;-385956357;1312674572;900806998;-537615068;1073219482;639789562;-736060965;2014923378;2012670618;1177846371;-1255415065;-956296809;2004558755;1528086826;1992112440;-1193929537;-893758508;-1321065705;628167822;-1048634804;1751296114;439812263;1067295020;1822761638;-1555887314;681702568;1147891349;-224668494;-1725652188;-2066893746;2025377357;996413518;1431711001;617194188;-280992047;1127019312;-516412500;-263003293;-469625543;516188732;2013005319;-405694790;-899123110;-1710351237;672988444;312989804;-1442959619;-177733123;-1324632167;-2011274357;2080413298;-572266811;1490289285;1117364860;-1409482566;-449068798;501460688;722552956;-1996491431;549879893;-2024726792;493552402;-1923426165;444055423;1462928526;1674040287;-1052089077;899884190;541589709;-965671335;-344740869;527602002;1228290005;-586122464;727404620;991124090;-1687946079;2098915279;5026503;23070725;1129371516;1923213781;-1261456087;-1777107587;-1504544094;-1668677208;1627169435;-521760436;1810078646;-719167809;1650851001;-276615898;-1980981976;245070882;-1246483461;1533844175;1414746585;949215948;-1169447151;-1849223659;1560217258;2111579407;1662065951;-1306031248;1532495509;-1018442496;2092137932;767448959;-513508166;678639261;1475973522;1130568353;-642178621;-447082140;-1649803960;1369671896;61873988;1075034748;-1409255174;196375170;688308213;1746327893;-1398951215;1722775789;1231356363;1196740450;-148451904;717326753;543782456;359111884;1046350129;-631514613;-1541190177;61079017;1878253222;938424221;-680593748;-208405817;-705637359;-1375777320;1599693249;533942656;-545478591;1409791180;-1268315484;-1545336254;-97235963;1333474596;1527760224;-1350514419;-53388620;1998961149;-1739702985;-32341067;-2017174117;-1044459733;389817239;115792483;11019488;-1070437070;2024492584;-1215772671;1477805316;63973583;1486872962;-178776953;777436397;-640786597;450475667;480162779;-2015745724;34783100;1715661003;-1132465518;960086961;-2091192649;1603406668;-1480217787;-1667853592;409809208;183723007;-494736509;-567383447;539539132;-922831593;-17750576;-1356408788;893774100;1037871571;666233903;1333024380;-1264974525;1046142104;1645109484;67507062;654955652;691502347;68958543;-1627986908;478829048;1652766675;895641814;-540548245;1516724486;-1729689662;747360192;328644545;-720123609;1466867767;-606331822;2067105274;-827445235;-86870899;-1387660530;-488802107;-596861656;-2027747838;956784396;454683849;-697238181;529534151;-669218157;324647905;-1223063081;-2002165988;-796158486;1605031682;1351381061;-1319587861;-1988093691;1881120732;-1005430709;-160211581;-2029165412;-613203597;1284358734;-1257049782;-1936672120;984839059;1588282657;1701865155;-744202834;28674918;-1409051036;-307171995;-73187226;60913154;-387407372;70653598;-507282558;2076099602;1236699053;156406795;-1894036345;1163615914;-43852375;-1471713467;-1649613001;1801819678;-347876751;-159446479;-1678653198;-1451444247;-938585103;-63856203;1125725194;102263956;-506852446;1918288068;-356090887;-1266830109;1502332679;449952929;-417819191;-1520290825;-1790992913;991438024;-1649570768;48042755;964303993;-642187768;2084380323;-403715785;1152595666;-2033152626;-1160002164;-1538265001;159010779;-990202438;-432491439;-1289943121;1699388823;2078241669;1284913260;577870170;-1957123108;-922247695;-853158954;-719548058;-203986121;1523065059;683404426;1400909267;1658156860;968012148;782440488;928903469;-1302577881;52424192;-738793624;976130464;1538135434;-1878858686;-1693823316;1039018515;234866157;-867177232;1610319951;475039287;588866597;-929083124;-190512289;-1150644031;836270437;1898050384;-1596827283;1256370500;-785326413;105123051;1647303987;2124417079;-1694358324;925680837;928649273;-2033850114;-995637010;-617341948;381669191;1049282440;-968850898;1213755976;-871552683;-173386121;1638150478;290700470;-1761551526;673227589;-551331641;281996003;-1920260065;-1524016638;-1065712750;1169523400;51981281;-795821478;1631725491;-197792559;1187041906;1607963640;1175233495;696527625;359386409;208790474;1314650704;662051988;-17794044;-1619939484;-1836987680;653655757;2013543813;-46929223;-1859180792;-859520359;1610297962;-788322080;156606009;-536678616;-1588371293;-721270222;-151879677;-1272151633;1857011697;949889889;390399991;-1958718170;-504505112;-1669403284;-1859810276;-660711539;-2143974722;1468160485;-305890130;1509476092;-829495155;1018675139;-864877395;-1079773083;-1703861917;1327896070;704737669;-1896548292;1899044922;-1203876852;61440332;-1054494525;884309384;-1165995919;-153990615;-1446134179;1638265927;-1944266901;-427348165;908237543;-1864516109;-1346835738;-437997114;247435660;1632393744;-506879094;1104205795;-98885631;-387795806;276983390;-48768272;523923130;375733054;-917074093;1829264494;-657661782;-1649535603;1243679308;-1314437309;-85465208;288669371;519984300;911963586;1952991601;-25040104;-1043319152;1717515497;-1455945357;-1371523967;-821832548;-1650132055;-2106405018;-1006348188;-2015952492;-87627744;2141803202;-2106784797;-750980422;-1543518733;-1435626740;-1828584322;-2087312667;-1422236131;-1383472330;1751742848;1646918370;-771196787;-1715630075;-32599101;319950017;-197569753;2115506999;-264143790;1737778938;-41552371;1491702669;754000964;1969730781;-1816651562;-357088849;136705768;678728597;1040971991;1690648034;-987437153;-1396318563;948760013;-1216902924;-517033694;-1742893798;-808287090;-1025981768;383248607;15153428;407976702;-711969199;-2093657482;2119540193;2053385086;-1455087046;1461615160;301841310;-1412131464;489899333;-164674723;-347806661;-1915222978;-31340077;-1660620488;-1465829365;584511159;2139955038;-938460761;1622901729;-1632769650;527241835;1775274343;580373871;1423799805;-1989711201;-1272572123;-1954806888;1997592568;-251103116;537933867;27405872;-217846998;-1283212696;580995086;-644682301;-126644482;-2113416944;-881450918;-346462626;-1164432909;-569276584;366418987;-1524751812;1558753980;-828331048;-1738997073;-867719798;1117364823;920065081;1446804937;900049461;-706378185;-741619501;-611480480;-106012576;974521441;-1112627816;-876821994;-1880567394;-364171038;-285625316;-356406893;-1525286871;-794366383;-1012667723;457245226;1374967535;-529683388;-429393566;1226919589;62246165;957163691;-845049638;422660353;-1148561206;-728755890;-348910904;-1797527681;2047818682;-719935951;-734112219;2075940202;351336612;882761506;-1331675943;	};
	mti=624;
       };
       RndSeed @[23] {
	name="RndSeed_24";
	seed{ 2124098739;1325524027;-461892380;1826676262;-760511385;-1237270663;-1369350515;-772942478;-1675252067;-1616249916;1614236456;-416769992;-99048877;180672925;-949362689;-980993413;-2048112280;57192675;-114539359;933217789;-1729592859;-1030693064;1228645725;629832035;5037863;-808392324;-1059449291;795322729;460195721;-1255126486;987015654;-1306714659;-1080942565;881003262;1300710488;1684052032;-513942839;1470327767;1124667796;-1542476560;-262488670;2125396398;1181755701;-524741201;-581789432;1489650820;1109079463;603717805;260299121;1283015366;-670771275;2136178945;1929045300;1108921118;-95110543;1280479537;-2070546392;304046795;1238211921;880730315;1709724499;1753072023;424715884;1121285339;-1011497918;1183069926;-2015606683;-344412186;-402525539;-571652453;-1752419778;-2133463565;2119424349;2011889045;1886797742;948225878;376023866;-1964468177;1819221775;14139093;-569292967;-948547373;-123915678;-2103326312;-1712458730;789315641;157915091;1672335766;-941719573;1284742881;241405626;1405016509;1895138184;1493186154;-618546283;-355710835;-649159066;-1081373894;-1374231174;-702693189;1256685820;-1270331082;-1071794710;-143559084;1215905723;-1324962101;-22313289;-475104913;348435464;-1037348971;1036496028;-1016424965;-585702584;1421332488;1192813823;-900708695;1847778182;267180984;-1408227314;-1339934413;175294925;-1914481830;162658866;24803381;-988231067;-1746767685;1001945723;-2035210746;-1420286956;162530095;-294754035;-282463991;-1664060554;-2077056695;1297597981;-1217780333;1576168381;242228661;-569076237;-68380613;-883554652;-451870864;-124890131;-292324491;897309726;259778151;721421877;-2117611396;-35999670;-845308318;-1181194789;479219764;-1589151460;-657074321;1889192502;-20302002;-1132787971;-129942984;1434619109;-1541170541;901420245;-99240534;-1939399345;-596130556;1793227623;-953268765;-1043959290;-529356384;1366960375;1809305527;-2142807688;-1252091955;-1472680873;1156086582;740953185;803064820;408095732;1305824245;-562525194;2015909212;-1893502107;227518296;-308076946;-576825672;1862224767;-1567541393;1508848571;1612968733;-1592990008;-115398545;-1595883686;444175991;-725676877;-973458895;2012254332;-1096358124;589165170;-1699894849;1451564375;1955699125;211744972;-344894139;1732451176;-1291582920;1297869742;-64117800;-911288011;-592209635;127825830;488049487;1917697533;893112639;1347241391;1485347963;-923203848;-1546054434;852686756;-381781875;-1475637536;-1137421819;1924865183;-696985293;1420058830;1448212874;1672468407;483033519;454349293;-1928746908;1924663074;-1268675404;-3937612;1609075226;1935929487;2114709231;-775324976;-151166678;-15382759;-265816017;2093512266;1651625862;1604788275;646477483;-1643817623;-1396836566;1917774780;-2089408634;-580961270;-1108180604;-894971690;1422549506;-1268693207;1336154098;1748205275;455718655;-1621316967;-2061941978;232899124;-1972669563;971560005;1549249852;-755499243;888433331;544007333;-304774368;1918859479;-852544649;-1907072562;204784263;1385955151;-162629421;961346334;1402216933;1557160964;-69131254;-1537537633;257609988;265001896;1396265565;-1825260702;-340505097;-1920575908;-1094032849;1067307483;-1349582974;-962179428;-1710678824;1744768288;-846342108;1588864899;-1295636117;37128335;511797390;233062186;318793399;-1188989351;-1828231666;-774131740;-1608513972;1680096240;905355328;-1479574932;-27120493;-561732098;219472640;-1950838736;-296114453;1946747578;-1860098054;-1203732980;-1891026245;1600138547;1837078513;-482975000;-1747858704;-805399372;-1844994962;-2035645480;-187977665;-1219451670;-580306745;-415217004;1651064276;-1301322933;-2062336496;390930526;38933595;-909919187;-416293523;1231305646;239416404;-2003133842;1788262887;-734171382;1911005402;-1351308619;-2023470462;535815632;72481889;1729068183;-1562218879;-1173441021;-1388619590;669809134;185498173;801890409;1701231558;309761501;336029324;-1163894120;541151775;26279577;-1197255492;-1174659498;-1862341499;215519653;-1897544580;-566233830;689247554;-360728976;1579911110;491196907;923653664;2062326794;120091842;-2101353482;1918796977;-1793291554;-1231649221;1321629421;442841229;-1660041709;-337297624;-1637027733;-1400763422;2060030166;-102091446;820648005;1497072050;482867225;-1285995432;1581392638;499861272;-1679366666;1288982211;-315169270;235049998;-593368824;-1260071462;-845088836;-1622149408;-1109828944;-886567999;-1083869422;-785413415;-1123650676;407148177;-1852177983;755568252;1387730042;260958486;-1135362754;-1712142787;-1466372243;-1132339362;-884384544;-992206300;-600745479;913656633;1545023509;2121051517;404475782;-1716414599;-1249994717;1866641314;650282989;418936608;-1817763520;1921675947;581056692;-146492249;1933773400;778811330;-735816912;-314564666;-441452703;-444723885;487264826;1505049741;431739112;1077777717;1368437554;140640206;-1489949706;1788341493;-966061578;1854747740;-649695387;2117176051;830821680;2021739943;-451184074;-877619806;-534432961;230446183;-146182817;-1459461367;1312749589;-903440989;-22304288;-1059486896;408763521;-1783567960;-679597098;-1727051314;-1508226238;-1453002233;-1803867455;-305185864;1071031697;-1052709632;-1131864325;-1468302582;1254544374;-408825534;546986357;1157097978;736339161;838282352;1952217604;-672410930;-1552621129;-1847989440;1890460898;1822886504;-682078649;194332335;931236839;-2125737216;870601640;-747508953;12847892;-187558715;493496832;-1856203805;-607075671;2083506423;-668995340;659505754;-1254270614;-1478168591;-715081783;805936797;-1409770787;873427688;-756121738;-1300174824;-1178108366;-1047758111;1046310684;1964430335;1567003434;-395897620;1097345857;-1140960713;-523776543;-1792004573;-744956417;-1409322393;1287860437;-2081441375;794917453;-1341950112;-403731030;-537831762;-598423229;-840521661;1170907972;-1925883586;57758386;1540678721;1726238536;-1115661610;1611353006;-708934378;-923418539;1463609851;-501933136;-1005864274;-1237172911;205037264;923007522;73130877;-647387291;-317807789;-1822670682;1987659467;-868152886;1952739174;722408637;1547130284;1382638685;2026755689;-1916059354;-1358366381;-651315179;1999071439;-549152408;571984986;-1103770714;-1766842919;-395117427;241673261;-1627726615;664792544;965065610;-1679435363;-1971456793;1510157702;1766799217;-1258565281;535781601;1181787126;-1041178203;-1605050703;1200531923;-790076401;-1785862414;-2111664409;1516105617;959682057;316933319;-1879743554;676591464;2086618693;-1441980654;-1237527665;-1206850079;-214870064;-985885823;476366477;199150821;550528414;-403986532;1174813442;-685841033;-1641571059;941031477;-844991436;1925860095;-1058830717;-1975610674;450042059;-551916185;1471393477;969333158;829929169;-1060635703;791376647;-169598183;125879705;-759441227;1611655207;-896733352;1160717378;-942265397;124080197;1892719255;-1490991731;-113050933;1796864841;1739697610;1671968378;-1209904149;1116851794;-214576091;-1748038811;1973068043;-982129317;1688704546;1147926842;2073487795;24672167;-970942895;1334522569;	};
	mti=624;
       };
       RndSeed @[24] {
	name="RndSeed_25";
	seed{ 2124098740;-1827110806;-2009444086;-1953021909;287392049;39383386;397828744;124233647;-831860973;40059225;1687185703;-582430199;1013463038;1258751299;1482908952;1610630124;-605052527;100655275;-1780734327;-1572300822;-414771556;-58719280;1062366549;-245719136;-643549593;1805711757;2128765014;-1958768274;2128292792;-1796390630;-1592228202;-859943805;-1249595744;-1120167925;-2128687953;23745892;-60672872;-182274996;-1957139887;923622886;2026906086;1838350156;1555689099;-741804387;-2137662846;-426920787;609969876;-2115828269;291841189;-1710833078;312159898;-1587557131;-1103295321;-1369617842;-811271118;-932923252;1449809827;-1102559965;-1888948417;51972172;-396037576;957490308;-380695470;-604097228;2118544883;-1673665861;30307391;-194866146;1962079413;-910500023;-348212616;580730318;1723768974;1158340532;-1997201485;-1065207264;-9262309;-210413371;-818414484;1916206874;-604694281;-1866896235;6661861;-1162975828;721042426;-89623561;640635802;-1516280295;-733692929;-73660731;2073600632;-277226728;319939843;-1598884468;-890904732;-1592769790;340094816;-1281404607;-1658000687;2083033250;1776110515;1538203551;1767180220;31142648;243913792;1287060905;25754546;-476344411;29983466;-671752001;1047152282;1709983025;-879887264;-171274624;-2000464607;-1785376190;749581236;1872706169;2036615630;-390470110;-2073660291;-734204524;-1974432755;-719042202;542835285;1685743878;-105828543;2013263753;2016178472;-1774807378;685735518;-681629287;17093702;1382757923;-1221423632;1317438209;-1943228536;1012407291;-1650893423;-744843638;541832601;-985889046;829614971;1454947094;-459137117;1413683889;579975170;2131012445;470800352;-202961931;-79143260;-389695622;-1249893291;-513677844;1832230629;1349235855;905984674;1608897671;739413884;-1904215925;1279090605;438160253;-1944965645;-346482248;554252907;-1244377124;848515388;1396451667;-1038667774;-1210222066;1996854118;1827030862;2049731031;620972059;-1197545899;-531206142;1074903573;1243553429;732972310;-1122105247;-1374991677;750569434;476349368;942501967;-516909341;2030659353;-1165392590;349715627;-1099664589;1206758418;1247809341;2058428267;-979951726;-579138058;-105406613;93883595;1444229083;-1813148729;1793561215;1144273533;-984911948;2005730044;1915130779;-1351899507;-1283178953;-1477842762;-1178786862;981037535;1089684683;-380617085;-1281676974;-964485789;-904726604;-636638456;-1455792339;1866511714;1062112231;1244451324;-1174782293;1306667656;-1195566615;-286851692;-2114397071;5080382;1737867350;-127634892;339836821;1680937900;1352620325;-1248956391;1340976781;-1862088157;657221869;321338218;-450090052;-737183162;1718430501;858016289;-1947997965;858448132;-109974652;-978441164;-1662918235;1718707926;-1633180985;-576608850;1982526263;160684869;43020337;207453518;1041444544;148255419;1690638275;-1178127737;1665342583;-1561370227;1653605739;-744628781;-911420398;119784632;-160754276;841654208;-124860474;195051200;252543688;516530673;651025951;-1578091962;-1160683040;-953446089;-850321774;1817422148;1065006665;2130050270;-1183245299;355801598;-1496436662;-651717251;437283276;95152787;-1419692009;150036066;-1620398140;1402097721;388996916;-328686431;500279048;-414044345;966003444;770762597;-73180933;-1059663109;1886385404;-1255010826;-1746725270;-261259217;-2046878076;-1029258745;129675454;-227579359;-2068901226;-66090607;499018184;-416037609;-1083148780;959077855;-552836819;-1339689383;-263330277;-377053011;-86211620;-1431609550;-438485208;-180031440;-1104998311;-1642911710;921171420;1427815689;1844305254;740653538;640747882;1229484563;1696506972;93822708;-1584510072;743876791;-1350860679;-1160215346;1209110980;-296488702;-165765201;1799097383;-834985398;-1095984870;-408010810;-2109565176;1616900674;1112895680;1716766327;1769763809;-482568012;1973629064;-568690589;-1786978505;1143631425;-1652703079;384627073;-549432768;70996171;1127253108;1949950087;2141670461;1248932108;-985444222;2032848199;-626559999;-449587154;291463206;-1910552988;-1009951323;-1095906842;-254301091;-823701376;-487727078;-2122986423;1473953284;119580263;1237305106;800569071;-118876996;-1632802867;-1851736802;1969396096;-1298949542;-901972434;1565613624;-65687819;-1612075385;121243891;-1420520358;170500148;-1701574143;-1076326483;1461606538;-1406643369;-1546363126;1121765290;564284154;-1543675866;476459961;1544514179;1403164881;-258106472;-340698960;-699086039;911450909;-485170947;311866307;704465021;-735871008;-190385889;1151933853;919940126;-1819773079;-1532206645;-1328142622;-278185994;-1175309760;826353570;-1168615805;-1800656001;-1214378260;-673496190;-987190142;-1327228541;-97838460;1910814691;-1261273141;1206779119;264382857;244561329;1884907898;-216632787;1916251085;-1652886236;-1430384729;484342467;315476890;375177070;420177427;-911969747;373140437;1444727225;-2057892023;1100295497;1376675611;-560883466;1157592926;1195700529;-610936409;-149707924;1228858244;-499846605;1942961835;133346510;-551185149;965790398;-439243595;1646300046;1181718572;-1481498493;-869081688;-60884677;-715174691;-254925988;1574620482;55351;-1853112708;-1836738688;1230461461;-1791541328;1170236679;-970845396;-1040270758;2141726701;36244973;807490899;756356754;1214516078;1033890720;-695166986;-1945038208;-1087250142;-939003015;1288002300;544820396;1654083000;173583578;997383648;2116971327;-1234796714;-1142935035;1818918309;1656510359;1816647186;141337188;377460570;1137435241;-328074000;-1208231736;-2098814052;870325569;-1613081199;1140092908;-1429143697;891362544;-1189290848;-622608421;-1670559190;451259323;463525307;-1259182148;458857964;-1588421613;1267969453;686330581;2049502467;1812567493;-1991639984;1081503831;724720108;40945691;777152423;-1450424860;-418796608;1242636530;-838267677;-74058139;1204866628;-744009664;-2134145161;-872607694;98082399;-1546627962;503840288;-1828297555;36725273;-62581012;-183437989;-1738218039;190139945;-1902458560;1905507102;272985168;1217039782;403260410;-992043590;709573910;-419831352;-1426539982;-418044148;-492277240;1405739893;1099682531;-869062838;-818703634;1500827299;-870827507;-83728470;1930123474;-406325147;1218287717;1467393436;-1011130854;-1661566201;-1971167196;334382890;188583871;-479203447;1730174369;289378896;-1819178047;848068897;-1771004616;1663570966;-768524728;-1613711155;568898274;616007522;-1081483805;1447621887;-254371727;526199094;591997579;-512807403;-81725715;-525808602;685464026;-292151484;1189632070;-1361455801;2146833278;1224583777;-1260283353;-343760927;-1991833485;329371615;439245894;831905770;-1671720033;-143965121;846858747;1666860375;-1357749441;1544015459;2033508605;-1792564800;1384228319;536625388;-206050445;1151260040;-1246784922;-732411954;2010909500;377427565;2082418782;264892121;1600937724;-108928719;840932635;1632203017;648995467;-1341602245;-1659258910;1168928198;-1204301590;589927920;2050333209;1027909090;-905353579;-743063142;-1568717622;2038246742;-586713918;	};
	mti=624;
       };
      };
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=500;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=Network::TrainMode;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="epoch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[4] {
      name="n_under_thr";
      var_type=T_Int;
      int_val=2;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of times network needs to be under stopcrit threshold to actually stop";
     };
     ProgVar @[5] {
      name="n_under_cnt";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="current under threshold counter";
     };
     ProgVar @[6] {
      name="rnd_seeds";
      var_type=T_Object;
      object_type=RndSeed_List;
      object_val=.projects[0].programs.gp[0][1].objs[0]$6$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[7] {
      name="train_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].train_time$7$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].args[0]$8$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[7]$9$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     NetCounterInit @[2] {
      desc="initialize epoch counter ";
      flags=;
      network_var=$8$;
      local_ctr_var=.projects[0].programs.gp[0][1].vars[2]$10$;
      counter=Network::epoch;
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[5]$11$;
      expr {
       expr="0";
       flags=;
       var_expr="0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].vars[6]$12$;
      method=RndSeed_List::UseSeed;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="idx";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$8$;
      method=Network::Init_Weights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=$9$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$9$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     NetCounterInit @[2] {
      desc="initialize epoch counter ";
      flags=;
      network_var=$8$;
      local_ctr_var=$10$;
      counter=Network::epoch;
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=$11$;
      expr {
       expr="0";
       flags=;
       var_expr="0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     UserScript @[4] {
      desc="update network's train mode to be same as ours";
      flags=;
      script {
       expr="network.train_mode = train_mode;";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$.train_mode = $#1#$;";
       vars {
       };
       var_names{ network;train_mode;       };
       bad_vars{        };
      };
     };
     MethodCall @[5] {
      desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
      flags=;
      result_var=NULL;
      obj=$12$;
      method=RndSeed_List::UseSeed;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="idx";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$8$;
      method=Network::Init_Weights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WhileLoop @[7] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][2]$13$;
	targ_ld_init="*LeabraEpoch*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the epoch counter";
	flags=;
	network_var=$8$;
	local_ctr_var=$10$;
	counter=Network::epoch;
       };
       IfElse @[2] {
	desc=;
	flags=;
	cond {
	 expr="network.cnt_err <= err_stopcrit";
	 flags=;
	 var_expr="$#0#$.cnt_err <= $#1#$";
	 vars {
	 };
	 var_names{ network;err_stopcrit;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=;
	  result_var=$11$;
	  expr {
	   expr="n_under_cnt+1";
	   flags=;
	   var_expr="$#0#$+1";
	   vars {
	   };
	   var_names{ n_under_cnt;	   };
	   bad_vars{ 	   };
	  };
	 };
	 IfBreak @[1] {
	  desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here too)";
	  flags=;
	  cond {
	   expr="n_under_cnt >=  n_under_thr";
	   flags=;
	   var_expr="$#0#$ >=  $#1#$";
	   vars {
	   };
	   var_names{ n_under_cnt;n_under_thr;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=;
	  result_var=$11$;
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
      test {
       expr="epoch < max_epoch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ epoch;max_epoch;       };
       bad_vars{        };
      };
     };
     MethodCall @[8] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$9$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[2] {
    name="LeabraEpochGpData";
    desc="iterates over all of the items in a data table and calls LeabraTrial process on them";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="group_order";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=NetGroupedDataLoop::Order;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="item_order";
      var_type=T_HardEnum;
      int_val=0;
      hard_enum_type=NetGroupedDataLoop::Order;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="trial";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[1][0]$14$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="trial-level output data -- if we want to reset it every epoch";
     };
     ProgVar @[4] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].epoch_time$15$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[5] {
      name="group_index";
      var_type=T_Int;
      int_val=16;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[6] {
      name="item_index";
      var_type=T_Int;
      int_val=2;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter: note also needs to do this in regular running program";
      flags=;
      network_var=.projects[0].programs.gp[0][2].args[0]$16$;
      local_ctr_var=.projects[0].programs.gp[0][2].vars[2]$17$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][2].vars[4]$18$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter";
      flags=;
      network_var=$16$;
      local_ctr_var=$17$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc=;
      flags=;
      result_var=$18$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[2] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$18$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     ProgramCall @[3] {
      desc=;
      flags=;
      target=.projects[0].programs.gp[1][0]$19$;
      targ_ld_init="*CPT12axEpoch*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_per_epc";
	required=1;
	def_val=;
	expr {
	 expr="25";
	 flags=;
	 var_expr="25";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[4] {
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn OFF if not wanted)";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][2].vars[3]$20$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetGroupedDataLoop @[5] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc="call the trial process";
	flags=;
	target=$0$;
	targ_ld_init="*LeabraTrial*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       IfElse @[1] {
	desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
	flags=;
	cond {
	 expr="network.Compute_Weights_Test(trial+1)";
	 flags=;
	 var_expr="$#0#$.Compute_Weights_Test($#1#$+1)";
	 vars {
	 };
	 var_names{ network;trial;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=MethodCall;
	 el_def=0;
	 MethodCall @[0] {
	  desc=;
	  flags=;
	  result_var=NULL;
	  obj=$16$;
	  method=Network::Compute_Weights;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	};
       };
      };
      data_var=.projects[0].programs.gp[0][2].args[1]$21$;
      group_index_var=.projects[0].programs.gp[0][2].vars[5]$22$;
      item_index_var=.projects[0].programs.gp[0][2].vars[6]$23$;
      group_order_var=.projects[0].programs.gp[0][2].vars[0]$24$;
      item_order_var=.projects[0].programs.gp[0][2].vars[1]$25$;
      group_order=PERMUTED;
      item_order=SEQUENTIAL;
      group_col=0;
      group_idx_list{ 93;32;52;47;62;15;103;69;12;76;25;7;113;83;125;86;18;0;110;39;44;96;120;128;57;      };
      item_idx_list{ 18;19;20;21;22;23;24;      };
     };
     IfElse @[6] {
      desc="if full batch mode, update only at end of epoch";
      flags=;
      cond {
       expr="network.wt_update == Network::BATCH";
       flags=;
       var_expr="$#0#$.wt_update == Network::BATCH";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$16$;
	method=Network::Compute_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MethodCall @[7] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$16$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[8] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$18$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[9] {
      desc=;
      flags=;
      target=.projects[0].programs.gp[2][0]$26$;
      targ_ld_init="*TrialAnal*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable;
	type="DataTable*";
	name="trial_mon_data";
	required=1;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     ProgramCall @[10] {
      desc="call the epoch monitor";
      flags=;
      target=.projects[0].programs.gp[0][8]$27$;
      targ_ld_init="*LeabraEpochMonitor*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[3] {
    name="LeabraTrial";
    desc="Leabra processing of a single input/toutput event or external information: typically runs a minus and a plus phase, then learns (unless testing)";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="phase_no";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=.projects[0].programs.gp[0][3].args[0]$28$;
      local_ctr_var=.projects[0].programs.gp[0][3].vars[0]$29$;
      counter=LeabraNetwork::phase_no;
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=$28$;
      local_ctr_var=$29$;
      counter=LeabraNetwork::phase_no;
     };
     MethodCall @[1] {
      desc="initializes various counters at start of trial";
      flags=;
      result_var=NULL;
      obj=$28$;
      method=LeabraNetwork::Trial_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WhileLoop @[2] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][4]$30$;
	targ_ld_init="*LeabraSettle*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=;
	network_var=$28$;
	local_ctr_var=$29$;
	counter=LeabraNetwork::phase_no;
       };
       MethodCall @[2] {
	desc="increments phase_no and other phase state";
	flags=;
	result_var=NULL;
	obj=$28$;
	method=LeabraNetwork::Trial_UpdatePhase;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      test {
       expr="phase_no < network.phase_max";
       flags=;
       var_expr="$#0#$ < $#1#$.phase_max";
       vars {
       };
       var_names{ phase_no;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[3] {
      desc="does Compute_dWt etc";
      flags=;
      result_var=NULL;
      obj=$28$;
      method=LeabraNetwork::Trial_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[4] {
      desc="monitor data on a trial level";
      flags=;
      target=.projects[0].programs.gp[0][7]$31$;
      targ_ld_init="*LeabraTrialMonitor*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     NetUpdateView @[5] {
      desc=;
      flags=;
      network_var=$28$;
      update_var=.projects[0].programs.gp[0][3].vars[1]$32$;
     };
    };
   };
   Program @[4] {
    name="LeabraSettle";
    desc="iterates over cycles of updating until network has settled into a stable state, or output activations have exceeded a threshold";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="min_cycles";
      var_type=T_Int;
      int_val=35;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=.projects[0].programs.gp[0][4].args[0]$33$;
      local_ctr_var=.projects[0].programs.gp[0][4].vars[0]$34$;
      counter=Network::cycle;
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc=;
      flags=;
      network_var=$33$;
      local_ctr_var=$34$;
      counter=Network::cycle;
     };
     MethodCall @[1] {
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=;
      result_var=NULL;
      obj=$33$;
      method=Network::Init_InputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[2] {
      desc="this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=;
      target=.projects[0].programs.gp[0][6]$35$;
      targ_ld_init="*ApplyInputs*";
      call_init=0;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="initializes various counters at start of settling";
      flags=;
      result_var=NULL;
      obj=$33$;
      method=LeabraNetwork::Settle_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     UserScript @[4] {
      desc="get min cycles";
      flags=;
      script {
       expr="if(network.phase_no <= 1) min_cycles = network.min_cycles;
else min_cycles = network.min_cycles_phase2;

";
       flags=NO_VAR_ERRS;
       var_expr="if($#0#$.phase_no <= 1) $#1#$ = $#0#$.min_cycles;
else $#1#$ = $#0#$.min_cycles_phase2;


";
       vars {
       };
       var_names{ network;min_cycles;       };
       bad_vars{ if;else;       };
      };
     };
     WhileLoop @[5] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=.projects[0].programs.gp[0][5]$36$;
	targ_ld_init="*LeabraCycle*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc=;
	flags=;
	network_var=$33$;
	local_ctr_var=$34$;
	counter=Network::cycle;
       };
       IfContinue @[2] {
	desc="avoid subsequent stopping criteria";
	flags=;
	cond {
	 expr="cycle < min_cycles";
	 flags=;
	 var_expr="$#0#$ < $#1#$";
	 vars {
	 };
	 var_names{ cycle;min_cycles;	 };
	 bad_vars{ 	 };
	};
       };
       IfBreak @[3] {
	desc="stopping criterion for settling";
	flags=;
	cond {
	 expr="(network.maxda < network.maxda_stopcrit) ||
 (network.trg_max_act > network.trg_max_act_stopcrit)";
	 flags=;
	 var_expr="($#0#$.maxda < $#0#$.maxda_stopcrit) ||
 ($#0#$.trg_max_act > $#0#$.trg_max_act_stopcrit)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      test {
       expr="cycle < network.cycle_max";
       flags=;
       var_expr="$#0#$ < $#1#$.cycle_max";
       vars {
       };
       var_names{ cycle;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$33$;
      method=LeabraNetwork::Settle_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     IfElse @[7] {
      desc="only run sse in minus phase";
      flags=;
      cond {
       expr="network.phase == LeabraNetwork::MINUS_PHASE";
       flags=;
       var_expr="$#0#$.phase == LeabraNetwork::MINUS_PHASE";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=MethodCall;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$33$;
	method=LeabraNetwork::Compute_TrialStats;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     IfElse @[8] {
      desc="this stat must be called in plus phase when reward information is avail";
      flags=;
      cond {
       expr="network.phase_no == 1";
       flags=;
       var_expr="$#0#$.phase_no == 1";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=;
	result_var=NULL;
	obj=$33$;
	method=LeabraNetwork::Compute_ExtRew;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     NetUpdateView @[9] {
      desc=;
      flags=;
      network_var=$33$;
      update_var=.projects[0].programs.gp[0][4].vars[2]$37$;
     };
    };
   };
   Program @[5] {
    name="LeabraCycle";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="this does all the standard leabra processing for one cycle of activation updating";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][5].args[0]$38$;
      method=LeabraNetwork::Cycle_Run;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetUpdateView @[1] {
      desc=;
      flags=;
      network_var=$38$;
      update_var=.projects[0].programs.gp[0][5].vars[0]$39$;
     };
    };
   };
   Program @[6] {
    name="ApplyInputs";
    desc="apply the current input data to the network as external input and target values";
    flags=NO_USER_RUN;
    objs {
     name=;
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$2$;
      network=$1$;
      layer_data {
       name=;
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	chan_name="RewTarg";
	net_target=LAYER;
	layer_name="RewTarg";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[1] {
	chan_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[2] {
	chan_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=TARG;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[3] {
	chan_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
       LayerWriterEl @[4] {
	chan_name="Group";
	net_target=GROUP_NAME;
	layer_name="Group";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=;
	noise {type=NONE: mean=0: var=0.5: par=1: };
	value_names{ 	};
       };
      };
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="LayerWriter_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.projects[0].programs.gp[0][6].objs[0]$40$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][6].vars[0]$41$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataBlock_ptr;
	type="DataBlock*";
	name="db";
	required=0;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$41$;
      method=taList_impl::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=;
      result_var=NULL;
      obj=$41$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MemberAssign @[1] {
      desc="get rid of output from trial_name";
      flags=;
      obj=.projects[0].programs.gp[0][6].args[0]$42$;
      path="trial_name";
      expr {
       expr="network.trial_name.before(\"_\")";
       flags=;
       var_expr="$#0#$.trial_name.before(\"_\")";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      update_after=0;
     };
    };
   };
   Program @[7] {
    name="LeabraTrialMonitorPVLV";
    desc="monitor trial-level data from the network";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="phase_no";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="phase_no";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="cycle";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="minus_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[9] {
	name="DA";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[10] {
	name="PVe";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[11] {
	name="PVi";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[12] {
	name="LVe";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[13] {
	name="LVi";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[14] {
	name="absDA";
	computed=1;
	object_type=LeabraLayer;
	object=NULL;
	variable="dav";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=$14$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$14$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][7].objs[0]$43$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[1]$44$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$44$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$44$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[0]$45$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=;
      result_var=NULL;
      obj=$44$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[2] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$45$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="fabs(network.layers.DA.units[0].act_p2)";
	 flags=;
	 var_expr="fabs($#0#$.layers.DA.units[0].act_p2)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"DA\"";
	 flags=;
	 var_expr="\"DA\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$45$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.PVe.units[0].act_p2";
	 flags=;
	 var_expr="$#0#$.layers.PVe.units[0].act_p2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"PVe\"";
	 flags=;
	 var_expr="\"PVe\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$45$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.PVi.units[0].act_m";
	 flags=;
	 var_expr="$#0#$.layers.PVi.units[0].act_m";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"PVi\"";
	 flags=;
	 var_expr="\"PVi\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$45$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.LVe.units[0].act_p2";
	 flags=;
	 var_expr="$#0#$.layers.LVe.units[0].act_p2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"LVe\"";
	 flags=;
	 var_expr="\"LVe\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$45$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="network.layers.LVi.units[0].act_p2";
	 flags=;
	 var_expr="$#0#$.layers.LVi.units[0].act_p2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"LVi\"";
	 flags=;
	 var_expr="\"LVi\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[7] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$45$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="fabs(network.layers.DA.units[0].act_p2)";
	 flags=;
	 var_expr="fabs($#0#$.layers.DA.units[0].act_p2)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"absDA\"";
	 flags=;
	 var_expr="\"absDA\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[8] {
      desc="update after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$45$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[9] {
      desc="only functional for dmem projects: synchronizes trial data across processes";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].args[0]$46$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	expr {
	 expr="1";
	 flags=;
	 var_expr="1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[8] {
    name="LeabraEpochMonitorPVLV";
    desc="monitor epoch-level data from the network";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="Leabra_cur_lrate";
	computed=0;
	object_type=LeabraConSpec;
	object=.projects[0].networks[0].specs[3]$47$;
	variable="cur_lrate";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[9] {
	name="A_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[10] {
	name="B_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[11] {
	name="C_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[12] {
	name="one_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[13] {
	name="two_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[14] {
	name="X_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[15] {
	name="Y_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[16] {
	name="Z_da";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=.projects[0].data.gp[1][1]$48$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$48$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][8].objs[0]$49$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[2] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$15$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[3] {
      name="grouped_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].programs.gp[2][0].objs[0]$50$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=AssignExpr;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][8].vars[2]$51$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[1]$52$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="epoch_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ epoch_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$52$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="update the monitor items and data schema";
      flags=;
      result_var=NULL;
      obj=$52$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[0]$53$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data.";
      flags=;
      result_var=NULL;
      obj=$52$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     AssignExpr @[2] {
      desc=;
      flags=;
      result_var=$51$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     UserScript @[3] {
      desc="set the timing information from the epoch timer";
      flags=;
      script {
       expr="epoch_mon_data.SetDataByName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\");
epoch_mon_data.SetDataByName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\");

";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$.SetDataByName($#1#$.used.GetTotSecs(), \"epoch_time_tot\");
epoch_mon_data.SetDataByName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\");

";
       vars {
       };
       var_names{ epoch_mon_data;epoch_timer;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 0)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 0)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"A_da\"";
	 flags=;
	 var_expr="\"A_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 1)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 1)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"B_da\"";
	 flags=;
	 var_expr="\"B_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[6] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 2)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 2)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"C_da\"";
	 flags=;
	 var_expr="\"C_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[7] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 3)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 3)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"one_da\"";
	 flags=;
	 var_expr="\"one_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[8] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 4)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 4)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"two_da\"";
	 flags=;
	 var_expr="\"two_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[9] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 5)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 5)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"X_da\"";
	 flags=;
	 var_expr="\"X_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[10] {
      desc=;
      flags=NON_STD;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::SetDataByName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="data";
	required=0;
	def_val=;
	expr {
	 expr="grouped_data.GetValColName(\"DA_mean\", 6)";
	 flags=;
	 var_expr="$#0#$.GetValColName(\"DA_mean\", 6)";
	 vars {
	 };
	 var_names{ grouped_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ch_nm";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"Y_da\"";
	 flags=;
	 var_expr="\"Y_da\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     IfElse @[11] {
      desc=;
      flags=NON_STD;
      cond {
       expr="grouped_data.data.size > 6";
       flags=;
       var_expr="$#0#$.data.size > 6";
       vars {
       };
       var_names{ grouped_data;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=NON_STD;
	result_var=NULL;
	obj=$53$;
	method=DataBlock::SetDataByName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="data";
	  required=0;
	  def_val=;
	  expr {
	   expr="grouped_data.GetValColName(\"DA_mean\", 7)";
	   flags=;
	   var_expr="$#0#$.GetValColName(\"DA_mean\", 7)";
	   vars {
	   };
	   var_names{ grouped_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="ch_nm";
	  required=0;
	  def_val="\"\"";
	  expr {
	   expr="\"Z_da\"";
	   flags=;
	   var_expr="\"Z_da\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=NON_STD;
	result_var=NULL;
	obj=$53$;
	method=DataBlock::SetDataByName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="data";
	  required=0;
	  def_val=;
	  expr {
	   expr="0";
	   flags=;
	   var_expr="0";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="ch_nm";
	  required=0;
	  def_val="\"\"";
	  expr {
	   expr="\"Z_da\"";
	   flags=;
	   var_expr="\"Z_da\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
     };
     MethodCall @[12] {
      desc="update after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$53$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[9] {
    name="SaveWeights";
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="tag";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided tag (startup script will set this!)";
     };
     ProgVar @[1] {
      name="wts_subdir";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided subdirectory to save weights in";
     };
     ProgVar @[2] {
      name="fname";
      var_type=T_String;
      string_val="/Users/oreilly/pdp4.0/trunk/test/leabra_ra.03_0036.wts.gz";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="final generated file name -- do not edit!";
     };
     ProgVar @[3] {
      name="epoch_str";
      var_type=T_String;
      string_val="0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of epoch with leading zeros";
     };
     ProgVar @[4] {
      name="batch_str";
      var_type=T_String;
      string_val="03";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of batch with leading zeros";
     };
     ProgVar @[5] {
      name="final_tag";
      var_type=T_String;
      string_val=".03_0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="batch + epoch";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     IfElse @[0] {
      desc="don't save if not first dmem process";
      flags=;
      cond {
       expr="taMisc::dmem_proc > 0";
       flags=;
       var_expr="taMisc::dmem_proc > 0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       UserScript @[0] {
	desc=;
	flags=;
	script {
	 expr="return;";
	 flags=NO_VAR_ERRS;
	 var_expr="return;";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ return;	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MiscCall @[1] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[4]$54$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="2";
	 flags=;
	 var_expr="2";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MiscCall @[2] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[3]$55$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.epoch";
	 flags=;
	 var_expr="$#0#$.epoch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="4";
	 flags=;
	 var_expr="4";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[5]$56$;
      expr {
       expr="tag + \".\" + batch_str + \"_\" + epoch_str";
       flags=;
       var_expr="$#0#$ + \".\" + batch_str + \"_\" + epoch_str";
       vars {
       };
       var_names{ tag;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[2]$57$;
      obj=.projects[0].programs.gp[0][9].args[0]$58$;
      method=taBase::GetFileNameFmProject;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ext";
	required=1;
	def_val=;
	expr {
	 expr="\".wts.gz\"";
	 flags=;
	 var_expr="\".wts.gz\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="tag";
	required=0;
	def_val="\"\"";
	expr {
	 expr="final_tag";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ final_tag;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="subdir";
	required=0;
	def_val="\"\"";
	expr {
	 expr="wts_subdir";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ wts_subdir;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="dmem_proc_no";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc=;
      flags=;
      result_var=NULL;
      obj=$58$;
      method=Network::SaveWeights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	expr {
	 expr="fname";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ fname;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network::WtSaveFormat;
	type="Network::WtSaveFormat";
	name="fmt";
	required=0;
	def_val="Network::NET_FMT";
	expr {
	 expr="Network::NET_FMT";
	 flags=;
	 var_expr="Network::NET_FMT";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
  };
  Program_Group @.gp[1] {
   name="CPT12axAll";
   el_typ=Program;
   el_def=0;
   step_prog=.projects[0].programs.gp[1][1]$59$;
   desc="Generate InputData for 12-AX CPT task: Epoch + Trial";
   Program @[0] {
    name="CPT12axEpoch";
    desc="Generate a full epoch's worth of trials for the 12-AX CPT task";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="n_per_epc";
      var_type=T_Int;
      int_val=25;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of trials (cue-probe pairs) per epoch";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_no";
      var_type=T_Int;
      int_val=25;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     MethodCall @[0] {
      desc=;
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[1][0].args[0]$60$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ForLoop @[1] {
      desc=;
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=;
	target=$59$;
	targ_ld_init="*12axTrial*";
	call_init=0;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=int;
	  type="int";
	  name="trial_no";
	  required=1;
	  def_val=;
	  expr {
	   expr="trial_no";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ trial_no;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
      };
      init {
       expr="trial_no = 0";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$ = 0";
       vars {
       };
       var_names{ trial_no;       };
       bad_vars{        };
      };
      test {
       expr="trial_no < n_per_epc";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ trial_no;n_per_epc;       };
       bad_vars{        };
      };
      iter {
       expr="trial_no++";
       flags=NO_VAR_ERRS;
       var_expr="$#0#$++";
       vars {
       };
       var_names{ trial_no;       };
       bad_vars{        };
      };
     };
    };
   };
   Program @[1] {
    name="CPT12axTrial";
    desc="Generate one trial (outer loop with multiple inner loops) of the 12-AX CPT Task";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @[0] {
      name="Input";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="I_A";
	value=0;
	desc=;
       };
       DynEnumItem @[1] {
	name="I_B";
	value=1;
	desc=;
       };
       DynEnumItem @[2] {
	name="I_C";
	value=2;
	desc=;
       };
       DynEnumItem @[3] {
	name="I_X";
	value=3;
	desc=;
       };
       DynEnumItem @[4] {
	name="I_Y";
	value=4;
	desc=;
       };
       DynEnumItem @[5] {
	name="I_Z";
	value=5;
	desc=;
       };
       DynEnumItem @[6] {
	name="I_ONE";
	value=6;
	desc=;
       };
       DynEnumItem @[7] {
	name="I_TWO";
	value=7;
	desc=;
       };
       DynEnumItem @[8] {
	name="I_THREE";
	value=8;
	desc=;
       };
      };
      bits=0;
     };
     DynEnumType @[1] {
      name="Output";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="O_L";
	value=0;
	desc=;
       };
       DynEnumItem @[1] {
	name="O_R";
	value=1;
	desc=;
       };
      };
      bits=0;
     };
     DynEnumType @[2] {
      name="RewTarg";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="R_rew_targ";
	value=0;
	desc=;
       };
      };
      bits=0;
     };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="trial_no";
      var_type=T_Int;
      int_val=25;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="trial number, for making group names unique";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_maint";
      var_type=T_Int;
      int_val=4;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="maximum maintenance duration for outer loop";
     };
     ProgVar @[1] {
      name="targ_pct";
      var_type=T_Real;
      real_val=0.5;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="percent (proportion) of trials that are targets";
     };
     ProgVar @[2] {
      name="n_stims";
      var_type=T_Int;
      int_val=3;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of different stimulus types (cues, probes, tasks) -- must match current input config!";
     };
     ProgVar @[3] {
      name="n_inner_trials";
      var_type=T_Int;
      int_val=2;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="number of inner-loop trials";
     };
     ProgVar @[4] {
      name="task";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects[0].programs.gp[1][1].types[0]$61$;
       value=7;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="outer-loop task stimulus";
     };
     ProgVar @[5] {
      name="cue";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=$61$;
       value=1;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="first stimulus in cue-probe pair";
     };
     ProgVar @[6] {
      name="probe";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=$61$;
       value=5;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="second stimulus in cue-probe pair";
     };
     ProgVar @[7] {
      name="output";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects[0].programs.gp[1][1].types[1]$62$;
       value=0;
      };
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="output responses";
     };
     ProgVar @[8] {
      name="group_name";
      var_type=T_String;
      string_val="24_I_TWO";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="name of current group of trials";
     };
     ProgVar @[9] {
      name="unit_names";
      var_type=T_Object;
      object_type=taOBase;
      object_val=.projects[0].data.gp[0][1]$63$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
     ProgVar @[10] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
     Function @[0] {
      desc=;
      flags=;
      return_val {
       name="rval";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=CTRL_PANEL|NULL_CHECK;
       desc=;
      };
      name="MakeEvent";
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="group";
	var_type=T_String;
	string_val=;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="name for the group column";
       };
       ProgVar @[1] {
	name="in_idx";
	var_type=T_DynEnum;
	dyn_enum_val {
	 enum_type=$61$;
	 value=-1;
	};
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="Index of input unit to turn on";
       };
       ProgVar @[2] {
	name="out_idx";
	var_type=T_DynEnum;
	dyn_enum_val {
	 enum_type=$62$;
	 value=0;
	};
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="Index of output unit to turn on";
       };
       ProgVar @[3] {
	name="rew_targ";
	var_type=T_Bool;
	bool_val=0;
	objs_ptr=0;
	flags=CTRL_PANEL|NULL_CHECK;
	desc="is this a reward target trial?";
       };
      };
      fun_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AddNewDataRow @[0] {
	desc=;
	flags=;
	data_var=.projects[0].programs.gp[1][1].args[0]$64$;
       };
       MethodCall @[1] {
	desc="set the task name ";
	flags=;
	result_var=NULL;
	obj=$64$;
	method=DataTable::SetValColName;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=const_Variant_ref;
	  type="const Variant&";
	  name="val";
	  required=0;
	  def_val=;
	  expr {
	   expr="group";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ group;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=const_taString_ref;
	  type="const taString&";
	  name="col_name";
	  required=0;
	  def_val="\"\"";
	  expr {
	   expr="\"Group\"";
	   flags=;
	   var_expr="\"Group\"";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=int;
	  type="int";
	  name="row";
	  required=0;
	  def_val=;
	  expr {
	   expr="-1";
	   flags=;
	   var_expr="-1";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       SetUnitsVar @[2] {
	desc=;
	flags=;
	input_data_var=$64$;
	set_nm=1;
	offset=NULL;
	unit_1=.projects[0].programs.gp[1][1].functions[0].args[1]$65$;
	unit_2=NULL;
	unit_3=NULL;
	unit_4=NULL;
       };
       SetUnitsVar @[3] {
	desc=;
	flags=;
	input_data_var=$64$;
	set_nm=1;
	offset=NULL;
	unit_1=.projects[0].programs.gp[1][1].functions[0].args[2]$66$;
	unit_2=NULL;
	unit_3=NULL;
	unit_4=NULL;
       };
       IfElse @[4] {
	desc=;
	flags=;
	cond {
	 expr="rew_targ";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ rew_targ;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 SetUnitsLit @[0] {
	  desc=;
	  flags=;
	  input_data_var=$64$;
	  set_nm=0;
	  offset=0;
	  unit_1 {
	   enum_type=.projects[0].programs.gp[1][1].types[2]$67$;
	   value=0;
	  };
	  unit_2 {
	   enum_type=NULL;
	   value=-1;
	  };
	  unit_3 {
	   enum_type=NULL;
	   value=-1;
	  };
	  unit_4 {
	   enum_type=NULL;
	   value=-1;
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	};
       };
      };
     };
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     InitNamedUnits @[0] {
      desc=;
      flags=;
      input_data_var=$64$;
      unit_names_var=.projects[0].programs.gp[1][1].vars[9]$68$;
      network_var=.projects[0].programs.gp[1][1].vars[10]$69$;
      init_label_net=1;
      n_lay_name_chars=1;
     };
    };
    prog_code {
     name=;
     el_typ=UserScript;
     el_def=0;
     RandomCall @[0] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[1][1].vars[4]$70$;
      object_type=Random;
      method=Random::IntZeroN;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="n";
	required=0;
	def_val=;
	expr {
	 expr="2";
	 flags=;
	 var_expr="2";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     VarIncr @[1] {
      desc="add starting task offset";
      flags=;
      var=$70$;
      expr {
       expr="I_ONE";
       flags=;
       var_expr="I_ONE";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     RandomCall @[2] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[1][1].vars[3]$71$;
      object_type=Random;
      method=Random::IntMinMax;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="min";
	required=0;
	def_val=;
	expr {
	 expr="1";
	 flags=;
	 var_expr="1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="max";
	required=0;
	def_val=;
	expr {
	 expr="max_maint";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ max_maint;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[3] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[1][1].vars[8]$72$;
      expr {
       expr="(String)trial_no + \"_\" + (String)task";
       flags=;
       var_expr="(String)$#0#$ + \"_\" + (String)task";
       vars {
       };
       var_names{ trial_no;       };
       bad_vars{        };
      };
     };
     FunctionCall @[4] {
      desc="Create the Task Event";
      flags=;
      result_var=NULL;
      fun=.projects[0].programs.gp[1][1].functions[0]$73$;
      fun_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=taString;
	type="String";
	name="group";
	required=1;
	def_val=;
	expr {
	 expr="group_name";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ group_name;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=DynEnum;
	type="Input";
	name="in_idx";
	required=1;
	def_val=;
	expr {
	 expr="task";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ task;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=DynEnum;
	type="Output";
	name="out_idx";
	required=1;
	def_val=;
	expr {
	 expr="O_L";
	 flags=;
	 var_expr="O_L";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="rew_targ";
	required=1;
	def_val=;
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     ForLoop @[5] {
      desc="generate the cue-probe trials";
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgVars @[0] {
	desc=;
	flags=;
	local_vars {
	 name=;
	 el_typ=ProgVar;
	 el_def=0;
	 ProgVar @[0] {
	  name="trg_rnd_prob";
	  var_type=T_Real;
	  real_val=0;
	  objs_ptr=0;
	  flags=CTRL_PANEL|NULL_CHECK;
	  desc="random probability value for generating a target";
	 };
	 ProgVar @[1] {
	  name="a_or_b";
	  var_type=T_Int;
	  int_val=0;
	  objs_ptr=0;
	  flags=CTRL_PANEL|NULL_CHECK;
	  desc="random A or B cue/probe value";
	 };
	 ProgVar @[2] {
	  name="probe_output";
	  var_type=T_DynEnum;
	  dyn_enum_val {
	   enum_type=$62$;
	   value=-1;
	  };
	  objs_ptr=0;
	  flags=CTRL_PANEL|NULL_CHECK;
	  desc="output value for the probe trial: depends on whether this is a target cue-probe sequence for given task";
	 };
	};
       };
       RandomCall @[1] {
	desc=;
	flags=;
	result_var=.projects[0].programs.gp[1][1].prog_code[5].loop_code[0].local_vars[0]$74$;
	object_type=Random;
	method=Random::ZeroOne;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       IfElse @[2] {
	desc=;
	flags=;
	cond {
	 expr="trg_rnd_prob < targ_pct";
	 flags=;
	 var_expr="$#0#$ < $#1#$";
	 vars {
	 };
	 var_names{ trg_rnd_prob;targ_pct;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 RandomCall @[0] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].prog_code[5].loop_code[0].local_vars[1]$75$;
	  object_type=Random;
	  method=Random::IntZeroN;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="n";
	    required=0;
	    def_val=;
	    expr {
	     expr="2";
	     flags=;
	     var_expr="2";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 AssignExpr @[1] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].vars[5]$76$;
	  expr {
	   expr="I_A + a_or_b";
	   flags=;
	   var_expr="I_A + $#0#$";
	   vars {
	   };
	   var_names{ a_or_b;	   };
	   bad_vars{ 	   };
	  };
	 };
	 AssignExpr @[2] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].vars[6]$77$;
	  expr {
	   expr="I_X + a_or_b";
	   flags=;
	   var_expr="I_X + $#0#$";
	   vars {
	   };
	   var_names{ a_or_b;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 RandomCall @[0] {
	  desc=;
	  flags=;
	  result_var=$76$;
	  object_type=Random;
	  method=Random::IntMinMax;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="min";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_A";
	     flags=;
	     var_expr="I_A";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="max";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_C+1";
	     flags=;
	     var_expr="I_C+1";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	 RandomCall @[1] {
	  desc=;
	  flags=;
	  result_var=$77$;
	  object_type=Random;
	  method=Random::IntMinMax;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=int;
	    type="int";
	    name="min";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_X";
	     flags=;
	     var_expr="I_X";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="max";
	    required=0;
	    def_val=;
	    expr {
	     expr="I_Z+1";
	     flags=;
	     var_expr="I_Z+1";
	     vars {
	     };
	     var_names{ 	     };
	     bad_vars{ 	     };
	    };
	   };
	  };
	 };
	};
       };
       IfElse @[3] {
	desc="check for targets";
	flags=;
	cond {
	 expr="((task == I_ONE) && (cue == I_A) && (probe == I_X)) 
  || ((task == I_TWO) && (cue == I_B) && (probe == I_Y))";
	 flags=;
	 var_expr="(($#0#$ == I_ONE) && ($#1#$ == I_A) && ($#2#$ == I_X)) 
  || (($#0#$ == I_TWO) && ($#1#$ == I_B) && ($#2#$ == I_Y))";
	 vars {
	 };
	 var_names{ task;cue;probe;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=;
	  result_var=.projects[0].programs.gp[1][1].prog_code[5].loop_code[0].local_vars[2]$78$;
	  expr {
	   expr="O_R";
	   flags=;
	   var_expr="O_R";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=;
	  result_var=$78$;
	  expr {
	   expr="O_L";
	   flags=;
	   var_expr="O_L";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       FunctionCall @[4] {
	desc="Create the Cue Event";
	flags=;
	result_var=NULL;
	fun=$73$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taString;
	  type="String";
	  name="group";
	  required=1;
	  def_val=;
	  expr {
	   expr="group_name";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ group_name;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DynEnum;
	  type="Input";
	  name="in_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="cue";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ cue;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=DynEnum;
	  type="Output";
	  name="out_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="O_L";
	   flags=;
	   var_expr="O_L";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="rew_targ";
	  required=1;
	  def_val=;
	  expr {
	   expr="false";
	   flags=;
	   var_expr="false";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       FunctionCall @[5] {
	desc="Create the Probe Event";
	flags=;
	result_var=NULL;
	fun=$73$;
	fun_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=taString;
	  type="String";
	  name="group";
	  required=1;
	  def_val=;
	  expr {
	   expr="group_name";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ group_name;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DynEnum;
	  type="Input";
	  name="in_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="probe";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ probe;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=DynEnum;
	  type="Output";
	  name="out_idx";
	  required=1;
	  def_val=;
	  expr {
	   expr="probe_output";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ probe_output;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[3] {
	  arg_type=bool;
	  type="bool";
	  name="rew_targ";
	  required=1;
	  def_val=;
	  expr {
	   expr="true";
	   flags=;
	   var_expr="true";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       DoneWritingDataRow @[6] {
	desc=;
	flags=;
	data_var=$64$;
       };
      };
      init {
       expr="int i = 0";
       flags=NO_VAR_ERRS;
       var_expr="int i = 0";
       vars {
       };
       var_names{        };
       bad_vars{ i;       };
      };
      test {
       expr="i < n_inner_trials";
       flags=NO_VAR_ERRS;
       var_expr="i < $#0#$";
       vars {
       };
       var_names{ n_inner_trials;       };
       bad_vars{ i;       };
      };
      iter {
       expr="i++";
       flags=NO_VAR_ERRS;
       var_expr="i++";
       vars {
       };
       var_names{        };
       bad_vars{ i;       };
      };
     };
    };
   };
  };
  Program_Group @.gp[2] {
   name="Analysis";
   el_typ=Program;
   el_def=0;
   step_prog=NULL;
   desc=;
   Program @[0] {
    name="TrialAnal";
    desc=;
    flags=;
    objs {
     name=;
     el_typ=DataTable;
     el_def=0;
     DataTable @[0] {
      name="grouped_data";
      desc=;
      data {
       name="data";
       el_typ=DataColTp;
       el_def=0;
       String_Data @[0] {
	name="trial_name_group";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] "A";"B";"C";"ONE";"TWO";"X";"Y";"Z";	};
       };
       float_Data @[1] {
	name="DA_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.2433694;0.15870079;0.14101502;0.19219495;0.094058335;0.98863119;1.0060269;0.7598986;	};
       };
       float_Data @[2] {
	name="LVe_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.63330567;0.47146541;0.5915817;0.55196983;0.53038347;0.58777434;0.39511535;0.71990031;	};
       };
       float_Data @[3] {
	name="LVi_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.50612181;0.50243479;0.50431466;0.50356078;0.50376767;0.51323932;0.49921614;0.51013297;	};
       };
       float_Data @[4] {
	name="PVe_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.5;0.5;0.5;0.5;0.5;0.65217394;0.42105263;1;	};
       };
       float_Data @[5] {
	name="PVi_mean";
	col_flags=SAVE_ROWS|SAVE_DATA;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	ar {
	 name="taNBase";
		[8] 0.50468022;0.50598133;0.50417703;0.50203985;0.50172085;0.59820384;0.47741339;0.62544715;	};
       };
      };
      data_flags=SAVE_ROWS|AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file=;
      keygen 4 0=0;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$14$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="grouped_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$50$;
      objs_ptr=1;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     DataGroupProg @[0] {
      desc=;
      flags=;
      src_data_var=.projects[0].programs.gp[2][0].args[0]$79$;
      dest_data_var=.projects[0].programs.gp[2][0].vars[0]$80$;
      group_spec {
       name="DataGroupSpec_2";
       ops {
	name=;
	el_typ=DataGroupEl;
	el_def=0;
	DataGroupEl @[0] {
	 col_name="trial_name";
	 agg {op=GROUP: rel={rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[1] {
	 col_name="DA";
	 agg {op=MEAN: rel={rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[2] {
	 col_name="LVe_dav";
	 agg {op=MEAN: rel={rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[3] {
	 col_name="LVe";
	 agg {op=MEAN: rel={rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[4] {
	 col_name="LVi";
	 agg {op=MEAN: rel={rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[5] {
	 col_name="PVe";
	 agg {op=MEAN: rel={rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
	DataGroupEl @[6] {
	 col_name="PVi";
	 agg {op=MEAN: rel={rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	};
       };
      };
     };
    };
   };
  };
 };
 viewers {
  name=;
  el_typ=TopLevelViewer;
  el_def=0;
  MainWindowViewer @[0] {
   m_data=.projects[0]$81$;
   name="DefaultProjectBrowser";
   visible=1;
   m_is_root=0;
   m_is_proj_viewer=1;
   toolbars {
    name=;
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     m_data=NULL;
     name="Application";
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name=;
    el_typ=FrameViewer;
    el_def=0;
    tabBrowseViewer @[0] {
     m_data=NULL;
     name="Tree";
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$81$;
    };
    PanelViewer @[1] {
     m_data=NULL;
     name="Panels";
     visible=1;
    };
    T3DataViewer @[2] {
     m_data=NULL;
     name="DefaultViewer";
     visible=1;
     frames {
      name=;
      el_typ=T3DataViewFrame;
      el_def=0;
      T3DataViewFrame @[0] {
       m_data=NULL;
       name="DefaultFrame";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 NetView @[0] {
	  m_data=$1$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=T3DataView;
	   el_def=0;
	   LayerView @[0] {
	    m_data=.projects[0].networks[0].layers[0]$82$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1785714: y=0.8333333: z=-0.5714286: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[1] {
	    m_data=.projects[0].networks[0].layers[1]$83$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.1666667: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[2] {
	    m_data=.projects[0].networks[0].layers[2]$84$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.2142857: y=0.1666667: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[3] {
	    m_data=.projects[0].networks[0].layers[3]$85$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.4285714: y=0.1666667: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[4] {
	    m_data=.projects[0].networks[0].layers[4]$86$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.4285714: y=0.1666667: z=-0.2857143: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[5] {
	    m_data=.projects[0].networks[0].layers[5]$87$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.1666667: z=-0.2857143: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[6] {
	    m_data=.projects[0].networks[0].layers[6]$88$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.5: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[7] {
	    m_data=.projects[0].networks[0].layers[7]$89$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0.8333333: z=0: }: };
	    disp_mode=DISP_OUTPUT_NAME;
	   };
	   LayerView @[8] {
	    m_data=.projects[0].networks[0].layers[8]$90$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1785714: y=0.8333333: z=-0.1428571: }: };
	    disp_mode=DISP_OUTPUT_NAME;
	   };
	   LayerView @[9] {
	    m_data=.projects[0].networks[0].layers[9]$91$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1428571: y=0.1666667: z=-0.2857143: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[10] {
	    m_data=.projects[0].networks[0].layers[10]$92$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3214286: y=0.5: z=0: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[11] {
	    m_data=.projects[0].networks[0].layers[11]$93$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1071429: y=0.1666667: z=-0.5714286: }: };
	    disp_mode=DISP_UNITS;
	   };
	   LayerView @[12] {
	    m_data=.projects[0].networks[0].layers[12]$94$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3214286: y=0.8333333: z=0: }: };
	    disp_mode=DISP_OUTPUT_NAME;
	   };
	   PrjnView @[13] {
	    m_data=.projects[0].networks[0].layers[1].projections[0]$95$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1964286: y=0.8315476: z=-0.7321429: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[14] {
	    m_data=.projects[0].networks[0].layers[1].projections[1]$96$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1964286: y=0.8315476: z=-0.3035714: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[15] {
	    m_data=.projects[0].networks[0].layers[2].projections[0]$97$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.1684524: z=-0.1607143: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[16] {
	    m_data=.projects[0].networks[0].layers[2].projections[1]$98$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.1684524: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[17] {
	    m_data=.projects[0].networks[0].layers[2].projections[2]$99$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[18] {
	    m_data=.projects[0].networks[0].layers[2].projections[3]$100$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3392857: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[19] {
	    m_data=.projects[0].networks[0].layers[3].projections[0]$101$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.2321429: y=0.1684524: z=-0.1607143: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[20] {
	    m_data=.projects[0].networks[0].layers[3].projections[1]$102$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.1684524: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[21] {
	    m_data=.projects[0].networks[0].layers[3].projections[2]$103$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[22] {
	    m_data=.projects[0].networks[0].layers[3].projections[3]$104$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3392857: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[23] {
	    m_data=.projects[0].networks[0].layers[4].projections[0]$105$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.2321429: y=0.1684524: z=-0.1607143: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[24] {
	    m_data=.projects[0].networks[0].layers[4].projections[1]$106$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.1684524: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[25] {
	    m_data=.projects[0].networks[0].layers[4].projections[2]$107$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[26] {
	    m_data=.projects[0].networks[0].layers[4].projections[3]$108$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3392857: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[27] {
	    m_data=.projects[0].networks[0].layers[5].projections[0]$109$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.2321429: y=0.1684524: z=-0.1607143: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[28] {
	    m_data=.projects[0].networks[0].layers[5].projections[1]$110$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.4464286: y=0.1684524: z=-0.1607143: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[29] {
	    m_data=.projects[0].networks[0].layers[5].projections[2]$111$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.4464286: y=0.1684524: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[30] {
	    m_data=.projects[0].networks[0].layers[6].projections[0]$112$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[31] {
	    m_data=.projects[0].networks[0].layers[6].projections[1]$113$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1964286: y=0.8315476: z=-0.3035714: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[32] {
	    m_data=.projects[0].networks[0].layers[6].projections[2]$114$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3392857: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[33] {
	    m_data=.projects[0].networks[0].layers[8].projections[0]$115$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.5017857: z=-1.017857: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[34] {
	    m_data=.projects[0].networks[0].layers[8].projections[1]$116$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.835119: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[35] {
	    m_data=.projects[0].networks[0].layers[9].projections[0]$117$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.2321429: y=0.1684524: z=-0.1607143: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[36] {
	    m_data=.projects[0].networks[0].layers[9].projections[1]$118$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.4464286: y=0.1684524: z=-0.1607143: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[37] {
	    m_data=.projects[0].networks[0].layers[9].projections[2]$119$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.4464286: y=0.1684524: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[38] {
	    m_data=.projects[0].networks[0].layers[10].projections[0]$120$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.1607143: y=0.1684524: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[39] {
	    m_data=.projects[0].networks[0].layers[10].projections[1]$121$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.125: y=0.1684524: z=-0.7321429: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[40] {
	    m_data=.projects[0].networks[0].layers[10].projections[2]$122$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3392857: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[41] {
	    m_data=.projects[0].networks[0].layers[10].projections[3]$123$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.8315476: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[42] {
	    m_data=.projects[0].networks[0].layers[11].projections[0]$124$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3392857: y=0.4982143: z=-1.017857: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[43] {
	    m_data=.projects[0].networks[0].layers[12].projections[0]$125$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.125: y=0.1684524: z=-0.7321429: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[44] {
	    m_data=.projects[0].networks[0].layers[12].projections[1]$126$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.3392857: y=0.835119: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	   PrjnView @[45] {
	    m_data=.projects[0].networks[0].layers[12].projections[2]$127$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.01785714: y=0.835119: z=-0.4464286: }: };
	    children {
	     name=;
	     el_typ=T3DataView;
	     el_def=0;
	    };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  lay_disp_modes{ RewTarg=0;PVe=0;PVi=0;LVe=0;LVi=0;DA=0;Hidden=0;Input=1;Output=1;SNc=0;Striatum=0;SNrThal=0;PFC=1;	  };
	  scale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs[0]$128$;
	   auto_scale=0;
	  };
	  scale_ranges {
	   name=;
	   el_typ=ScaleRange;
	   el_def=0;
	   ScaleRange @[0] {
	    name="act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[1] {
	    name="r_wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[2] {
	    name="r_effwt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[3] {
	    name="r_wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[4] {
	    name="r_wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[5] {
	    name="r.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	  };
	  display=1;
	  ordered_uvg_list{ 10;	  };
	  unit_disp_mode=UDM_BLOCK;
	  unit_text_disp=UTD_NAMES;
	  max_size {x=28: y=7: z=3: };
	  font_sizes {
	   net_name=0.05;
	   net_vals=0.05;
	   layer=0.04;
	   layer_vals=0.03;
	   prjn=0.01;
	   unit=0.02;
	   un_nm_len=3;
	  };
	  view_params {
	   xy_square=0;
	   unit_spacing=0.05;
	   prjn_disp=L_R_B;
	   prjn_name=0;
	   prjn_width=0.002;
	   prjn_trans=0.5;
	   lay_trans=0.5;
	   unit_trans=0.6;
	  };
	 };
	 GraphTableView @[1] {
	  m_data=$48$;
FloatTransform @*(.m_transform) {scale={x=0.3925664: y=0.3925664: z=0.3925673: }: rotate={x=-0.2682432: y=-0.93387: z=0.2365169: rot=0.3240047: }: translate={x=0.9459667: y=0.4937758: z=-0.09619626: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=.projects[0].data.gp[1][1].data[0]$129$;
	    m_transform=NULL;
	    name="batch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=.projects[0].data.gp[1][1].data[1]$130$;
	    m_transform=NULL;
	    name="epoch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=.projects[0].data.gp[1][1].data[2]$131$;
	    m_transform=NULL;
	    name="avg_sse";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=.projects[0].data.gp[1][1].data[3]$132$;
	    m_transform=NULL;
	    name="cnt_err";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    m_data=.projects[0].data.gp[1][1].data[4]$133$;
	    m_transform=NULL;
	    name="avg_ext_rew";
	    visible=1;
	    fixed_range {fix_min=0: min=0.6666667: fix_max=0: max=0.8679245: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    m_data=.projects[0].data.gp[1][1].data[5]$134$;
	    m_transform=NULL;
	    name="avg_cycles";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    m_data=.projects[0].data.gp[1][1].data[6]$135$;
	    m_transform=NULL;
	    name="Leabra_cur_lrate";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    m_data=.projects[0].data.gp[1][1].data[7]$136$;
	    m_transform=NULL;
	    name="epoch_time_tot";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    m_data=.projects[0].data.gp[1][1].data[8]$137$;
	    m_transform=NULL;
	    name="epoch_time_usr";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    m_data=.projects[0].data.gp[1][1].data[9]$138$;
	    m_transform=NULL;
	    name="A_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    m_data=.projects[0].data.gp[1][1].data[10]$139$;
	    m_transform=NULL;
	    name="B_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    m_data=.projects[0].data.gp[1][1].data[11]$140$;
	    m_transform=NULL;
	    name="C_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    m_data=.projects[0].data.gp[1][1].data[12]$141$;
	    m_transform=NULL;
	    name="one_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    m_data=.projects[0].data.gp[1][1].data[13]$142$;
	    m_transform=NULL;
	    name="two_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[14] {
	    m_data=.projects[0].data.gp[1][1].data[14]$143$;
	    m_transform=NULL;
	    name="X_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[15] {
	    m_data=.projects[0].data.gp[1][1].data[15]$144$;
	    m_transform=NULL;
	    name="Y_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[16] {
	    m_data=.projects[0].data.gp[1][1].data[16]$145$;
	    m_transform=NULL;
	    name="Z_da";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=0.3925664: y=0.3925664: z=0.3925673: }: rotate={x=-0.2682432: y=-0.93387: z=0.2365169: rot=0.3240047: }: translate={x=0.9459667: y=0.4937758: z=-0.09619626: }: };
	  view_rows=10000;
	  view_range {min=0: max=-1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="epoch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=-1: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-1: max=0: };
	   range {min=-1: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="batch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-07: max=6e-07: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="cnt_err";
	   fixed_range {fix_min=1: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.2: max=0.2: };
	   range {min=0: max=0.25: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="one_da";
	   fixed_range {fix_min=1: min=-0.2: fix_max=1: max=0.2: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.2: max=0.2: };
	   range {min=-0.2: max=0.2: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=LINE;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=VALUE_COLOR;
	  negative_draw=0;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$128$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=0.5947207: y=1.178612: z=1.567097: };
       camera_orient {x=-0.9979199: y=-0.06215869: z=0.01709492: rot=0.4894839: };
       camera_focdist=2.281613;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[1] {
       m_data=NULL;
       name="grouped_data";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GraphTableView @[0] {
	  m_data=$50$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[0]$146$;
	    m_transform=NULL;
	    name="trial_name_group";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[1]$147$;
	    m_transform=NULL;
	    name="DA_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[2]$148$;
	    m_transform=NULL;
	    name="LVe_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[3]$149$;
	    m_transform=NULL;
	    name="LVi_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[4]$150$;
	    m_transform=NULL;
	    name="PVe_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    m_data=.projects[0].programs.gp[2][0].objs[0].data[5]$151$;
	    m_transform=NULL;
	    name="PVi_mean";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=7: };
	  display_on=1;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="trial_name_group";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=7: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=7: };
	   range {min=0: max=7: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="DA_mean";
	   fixed_range {fix_min=1: min=-0.5: fix_max=0: max=1.006027: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.5: max=1.006027: };
	   range {min=-0.5: max=1.006027: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="trial_name_group";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="trial_name_group";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-07: max=6e-07: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=LINE;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=VALUE_COLOR;
	  negative_draw=0;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=-1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$128$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=1.472: y=0.4689445: z=1.732879: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=1.732879;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[2] {
       m_data=NULL;
       name="TrainEnv_0";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GridTableView @[0] {
	  m_data=$2$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].data.gp[0][0].data[0]$152$;
	    m_transform=NULL;
	    name="Group";
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].data.gp[0][0].data[1]$153$;
	    m_transform=NULL;
	    name="Name";
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].data.gp[0][0].data[2]$154$;
	    m_transform=NULL;
	    name="Input";
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[3] {
	    m_data=.projects[0].data.gp[0][0].data[3]$155$;
	    m_transform=NULL;
	    name="Output";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[4] {
	    m_data=.projects[0].data.gp[0][0].data[4]$156$;
	    m_transform=NULL;
	    name="RewTarg";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=5;
	  view_range {min=50: max=54: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=5;
	  col_range {min=0: max=4: };
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$128$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	 };
	 GridTableView @[1] {
	  m_data=$63$;
FloatTransform @*(.m_transform) {scale={x=0.33: y=0.33: z=0.33: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.997542: y=1.13: z=1.47522e-08: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].data.gp[0][1].data[0]$157$;
	    m_transform=NULL;
	    name="Input";
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].data.gp[0][1].data[1]$158$;
	    m_transform=NULL;
	    name="Output";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].data.gp[0][1].data[2]$159$;
	    m_transform=NULL;
	    name="RewTarg";
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=0.33: y=0.33: z=0.33: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0.997542: y=1.13: z=1.47522e-08: }: };
	  view_rows=1;
	  view_range {min=0: max=0: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=2;
	  col_range {min=0: max=1: };
	  width=3.3;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=1;
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$128$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	 };
	};
       };
       camera_pos {x=1.538475: y=0.699: z=1.79147: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=1.71397;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
     };
    };
   };
   docks {
    name=;
    el_typ=DockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     m_data=NULL;
     name="Tools";
     visible=1;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 use_sim_log=0;
 networks {
  name=;
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   name="net_lv_delta";
   desc=;
   specs {
    name=;
    el_typ=LeabraUnitSpec;
    el_def=0;
    DaModUnitSpec @[0] {
     name="DaModUnitSpec_0";
     desc=;
     unique{ opt_thresh;     };
     children {
      name=;
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs[3].children[0]$160$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
     spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
     depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
     opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=1: range=1: scale=1: };
     v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
     dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
     g_bar {e=1: l=0.1: i=1: h=0.1: a=0.5: };
     e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
     hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=1: };
     acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=1: };
     act_reg {on=0: min=0.001: max=0.35: wt_dt=0.2: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     noise_type=NO_NOISE;
     noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
     noise_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=1;
      cur_val=0;
     };
     da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
    };
    LeabraLayerSpec @[1] {
     name="Hidden";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraLayerSpec;
      el_def=0;
      LeabraLayerSpec @[0] {
       name="Input";
       desc=;
       unique{ kwta;inhib_group;compute_i;i_kwta_pt;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       inhib_group=ENTIRE_LAYER;
       kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       compute_i=KWTA_INHIB;
       i_kwta_pt=0.25;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
       net_rescale {on=0: max_net=0.8: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
      LeabraLayerSpec @[1] {
       name="Output";
       desc=;
       unique{ kwta;inhib_group;compute_i;i_kwta_pt;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       inhib_group=ENTIRE_LAYER;
       kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       compute_i=KWTA_INHIB;
       i_kwta_pt=0.25;
       gp_i_pt=0.2;
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
       net_rescale {on=0: max_net=0.8: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
     };
     inhib_group=ENTIRE_LAYER;
     kwta {k_from=USE_PCT: k=12: pct=0.15: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     compute_i=KWTA_AVG_INHIB;
     i_kwta_pt=0.6;
     gp_i_pt=0.2;
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.05: p_dt=0: mx_d=0.2: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: d_gain=0: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=1: };
     net_rescale {on=0: max_net=0.8: net_extra=0.2: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.05;
     };
    };
    FullPrjnSpec @[2] {
     name="FullPrjnSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
    };
    LeabraConSpec @[3] {
     name="LeabraConSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraConSpec;
      el_def=0;
      LeabraBiasSpec @[0] {
       name="LeabraBiasSpec_0";
       desc=;
       unique{ rnd;wt_limits;wt_scale;dwt_thresh;       };
       children {
	name=;
	el_typ=LeabraBiasSpec;
	el_def=0;
       };
       rnd {type=UNIFORM: mean=0: var=0: par=1: };
       wt_limits {type=NONE: min=-1: max=5: sym=0: };
       inhib=0;
       wt_scale {abs=1: rel=1: };
       wt_sig {gain=6: off=1.25: };
       lrate=0.01;
       cur_lrate=0.01;
       lrs_value=EXT_REW_STAT;
       lrate_sched {
	name=;
	el_typ=SchedItem;
	el_def=0;
	last_ctr=-1;
	default_val=1;
	interpolate=0;
	cur_val=1;
	SchedItem @[0] {
	 start_ctr=0;
	 start_val=1;
	 duration=90;
	 step=-0.01;
	};
	SchedItem @[1] {
	 start_ctr=90;
	 start_val=0.1;
	 duration=1;
	 step=1;
	};
       };
       lmix {hebb=0.001: err=0.999: err_sb=1: };
       savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.05;
       };
       dwt_thresh=0.1;
      };
     };
     rnd {type=UNIFORM: mean=0.5: var=0.25: par=1: };
     wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
     inhib=0;
     wt_scale {abs=1: rel=1: };
     wt_sig {gain=6: off=1.25: };
     lrate=0.01;
     cur_lrate=0.01;
     lrs_value=EXT_REW_STAT;
     lrate_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=0;
      cur_val=1;
      SchedItem @[0] {
       start_ctr=0;
       start_val=1;
       duration=90;
       step=-0.01;
      };
      SchedItem @[1] {
       start_ctr=90;
       start_val=0.1;
       duration=1;
       step=1;
      };
     };
     lmix {hebb=0.001: err=0.999: err_sb=1: };
     savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.05;
     };
    };
    BaseSpec_Group @.gp[0] {
     name="PFC_BG_Units";
     el_typ=DaModUnitSpec;
     el_def=0;
     DaModUnitSpec @[0] {
      name="PVUnits";
      desc=;
      unique{ act_fun;act;opt_thresh;dt;g_bar;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
       DaModUnitSpec @[0] {
	name="LVUnits";
	desc=;
	unique{ 	};
	children {
	 name=;
	 el_typ=DaModUnitSpec;
	 el_def=0;
	};
	act_range {min=0: max=1: range=1: scale=1: };
	bias_con_type=LeabraCon;
	bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1]$161$: };
	sse_tol=0.5;
	act_fun=NOISY_LINEAR;
	act {thr=0.17: gain=220: nvar=0.01: avg_dt=0: send_delta=1: i_thr=STD: };
	spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
	depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
	opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
	clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
	vm_range {min=0: max=1: range=1: scale=1: };
	v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
	dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=100: vm_eq_dt=1: };
	g_bar {e=1: l=0.1: i=1: h=0.03: a=0.09: };
	e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
	hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
	acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
	act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
	maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
	noise_type=NO_NOISE;
	noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
	noise_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=1;
	 cur_val=0;
	};
	da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
       };
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=$161$: };
      sse_tol=0.5;
      act_fun=NOISY_LINEAR;
      act {thr=0.17: gain=220: nvar=0.01: avg_dt=0: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=100: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.03: a=0.09: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
      acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
     DaModUnitSpec @[1] {
      name="DaUnits";
      desc=;
      unique{ act_range;act;clamp_range;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
      };
      act_range {min=-2: max=2: range=4: scale=0.25: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1].children[0]$162$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=600: nvar=0.005: avg_dt=0: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
      clamp_range {min=-2: max=2: range=4: scale=0.25: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
      acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
     DaModUnitSpec @[2] {
      name="PFCUnits";
      desc=;
      unique{ g_bar;act_reg;      };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[2].children[1]$163$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.1: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=1: a=2: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
      acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
     MatrixUnitSpec @[3] {
      name="MatrixUnits";
      desc=;
      unique{ bias_spec;opt_thresh;g_bar;      };
      children {
       name=;
       el_typ=MatrixUnitSpec;
       el_def=0;
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=MatrixBiasSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[1].children[1]$164$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=-1: updt_wts=0: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
      acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
      freeze_net=1;
     };
     DaModUnitSpec @[4] {
      name="SNrThalUnits";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=DaModUnitSpec;
       el_def=0;
      };
      act_range {min=0: max=1: range=1: scale=1: };
      bias_con_type=LeabraCon;
      bias_spec {type=LeabraBiasSpec: spec=$160$: };
      sse_tol=0.5;
      act_fun=NOISY_XX1;
      act {thr=0.25: gain=20: nvar=0.005: avg_dt=0.005: send_delta=1: i_thr=STD: };
      spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
      depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
      opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
      clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
      vm_range {min=0: max=1: range=1: scale=1: };
      v_m_init {type=UNIFORM: mean=0.15: var=0: par=1: };
      dt {vm=0.1: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
      g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
      e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
      hyst {on=0: b_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: };
      acc {on=0: b_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: };
      act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
      maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
      noise_type=NO_NOISE;
      noise {type=GAUSSIAN: mean=0: var=0.001: par=1: };
      noise_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=1;
       cur_val=0;
      };
      da_mod {on=0: mod=PLUS_CONT: gain=1: neg_rec=0.2: p_dwt=0: };
     };
    };
    BaseSpec_Group @.gp[1] {
     name="PFC_BG_Cons";
     el_typ=LeabraConSpec;
     el_def=0;
     LeabraConSpec @[0] {
      name="LearnCons";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=PVConSpec;
       el_def=0;
       PVConSpec @[0] {
	name="PVi";
	desc=;
	unique{ rnd;wt_limits;wt_sig;lrate;lrs_value;lrate_sched;lmix;	};
	children {
	 name=;
	 el_typ=PVConSpec;
	 el_def=0;
	 PVConSpec @[0] {
	  name="LVeD";
	  desc=;
	  unique{ lmix;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	  };
	  children {
	   name=;
	   el_typ=PVConSpec;
	   el_def=0;
	   PVConSpec @[0] {
	    name="LViD";
	    desc=;
	    unique{ lmix;rnd;wt_limits;wt_sig;lrate;lrate_sched;lrs_value;	    };
	    children {
	     name=;
	     el_typ=PVConSpec;
	     el_def=0;
	    };
	    rnd {type=UNIFORM: mean=0.1: var=0: par=1: };
	    wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	    inhib=0;
	    wt_scale {abs=1: rel=1: };
	    wt_sig {gain=1: off=1: };
	    lrate=0.001;
	    cur_lrate=0.001;
	    lrs_value=NO_LRS;
	    lrate_sched {
	     name=;
	     el_typ=SchedItem;
	     el_def=0;
	     last_ctr=-1;
	     default_val=1;
	     interpolate=0;
	     cur_val=0;
	    };
	    lmix {hebb=0: err=1: err_sb=0: };
	    savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	    rel_net_adapt {
	     on=0;
	     trg_fm_input=0.85;
	     trg_fm_output=0.15;
	     trg_lateral=0;
	     trg_sum=1;
	     tol_lg=0.05;
	     tol_sm=0.2;
	     rel_lrate=0.05;
	    };
	   };
	  };
	  rnd {type=UNIFORM: mean=0.1: var=0: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_sig {gain=1: off=1: };
	  lrate=0.05;
	  cur_lrate=0.05;
	  lrs_value=NO_LRS;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=0;
	  };
	  lmix {hebb=0: err=1: err_sb=0: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	 };
	};
	rnd {type=UNIFORM: mean=0.1: var=0: par=1: };
	wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_sig {gain=1: off=1: };
	lrate=0.01;
	cur_lrate=0.01;
	lrs_value=NO_LRS;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=0;
	};
	lmix {hebb=0: err=1: err_sb=0: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
       };
       LeabraBiasSpec @[1] {
	name="BgBias";
	desc=;
	unique{ rnd;wt_limits;wt_scale;lrate;	};
	children {
	 name=;
	 el_typ=LeabraBiasSpec;
	 el_def=0;
	 LeabraBiasSpec @[0] {
	  name="FixedBias";
	  desc=;
	  unique{ rnd;wt_limits;wt_scale;lrate;	  };
	  children {
	   name=;
	   el_typ=LeabraBiasSpec;
	   el_def=0;
	  };
	  rnd {type=UNIFORM: mean=0: var=0: par=1: };
	  wt_limits {type=NONE: min=-1: max=5: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  dwt_thresh=0.1;
	 };
	 MatrixBiasSpec @[1] {
	  name="MatrixBias";
	  desc=;
	  unique{ rnd;wt_limits;wt_scale;	  };
	  children {
	   name=;
	   el_typ=MatrixBiasSpec;
	   el_def=0;
	  };
	  rnd {type=UNIFORM: mean=0: var=0: par=1: };
	  wt_limits {type=NONE: min=-1: max=5: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  dwt_thresh=0.1;
	  learn_rule=MAINT;
	 };
	};
	rnd {type=UNIFORM: mean=0: var=0: par=1: };
	wt_limits {type=NONE: min=-1: max=5: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_sig {gain=6: off=1.25: };
	lrate=0;
	cur_lrate=0;
	lrs_value=EXT_REW_STAT;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=1;
	 SchedItem @[0] {
	  start_ctr=0;
	  start_val=1;
	  duration=90;
	  step=-0.01;
	 };
	 SchedItem @[1] {
	  start_ctr=90;
	  start_val=0.1;
	  duration=1;
	  step=1;
	 };
	};
	lmix {hebb=0.001: err=0.999: err_sb=1: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
	dwt_thresh=0.1;
       };
       LeabraConSpec @[2] {
	name="ToPFC";
	desc=;
	unique{ rnd;lrate;lmix;	};
	children {
	 name=;
	 el_typ=LeabraConSpec;
	 el_def=0;
	 LeabraConSpec @[0] {
	  name="IntraPFC";
	  desc=;
	  unique{ wt_scale;	  };
	  children {
	   name=;
	   el_typ=LeabraConSpec;
	   el_def=0;
	  };
	  rnd {type=UNIFORM: mean=0.5: var=0: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
	  inhib=0;
	  wt_scale {abs=1: rel=0.1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0.01;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=0;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	 };
	 LeabraBiasSpec @[1] {
	  name="PFCBias";
	  desc=;
	  unique{ rnd;wt_limits;wt_scale;	  };
	  children {
	   name=;
	   el_typ=LeabraBiasSpec;
	   el_def=0;
	  };
	  rnd {type=UNIFORM: mean=0: var=0: par=1: };
	  wt_limits {type=NONE: min=-1: max=5: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=1: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0;
	  cur_lrate=0;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0.001: err=0.999: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  dwt_thresh=0.1;
	 };
	};
	rnd {type=UNIFORM: mean=0.5: var=0: par=1: };
	wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_sig {gain=6: off=1.25: };
	lrate=0;
	cur_lrate=0;
	lrs_value=EXT_REW_STAT;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=1;
	 SchedItem @[0] {
	  start_ctr=0;
	  start_val=1;
	  duration=90;
	  step=-0.01;
	 };
	 SchedItem @[1] {
	  start_ctr=90;
	  start_val=0.1;
	  duration=1;
	  step=1;
	 };
	};
	lmix {hebb=0.001: err=0.999: err_sb=1: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
       };
       MatrixConSpec @[3] {
	name="MatrixCons";
	desc=;
	unique{ wt_limits;lrate;lmix;	};
	children {
	 name=;
	 el_typ=MatrixConSpec;
	 el_def=0;
	 MatrixConSpec @[0] {
	  name="MatrixFmPFC";
	  desc=;
	  unique{ wt_limits;wt_scale;	  };
	  children {
	   name=;
	   el_typ=MatrixConSpec;
	   el_def=0;
	  };
	  rnd {type=UNIFORM: mean=0.5: var=0.25: par=1: };
	  wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	  inhib=0;
	  wt_scale {abs=1: rel=0.2: };
	  wt_sig {gain=6: off=1.25: };
	  lrate=0.01;
	  cur_lrate=0.01;
	  lrs_value=EXT_REW_STAT;
	  lrate_sched {
	   name=;
	   el_typ=SchedItem;
	   el_def=0;
	   last_ctr=-1;
	   default_val=1;
	   interpolate=0;
	   cur_val=1;
	   SchedItem @[0] {
	    start_ctr=0;
	    start_val=1;
	    duration=90;
	    step=-0.01;
	   };
	   SchedItem @[1] {
	    start_ctr=90;
	    start_val=0.1;
	    duration=1;
	    step=1;
	   };
	  };
	  lmix {hebb=0: err=1: err_sb=1: };
	  savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	  rel_net_adapt {
	   on=0;
	   trg_fm_input=0.85;
	   trg_fm_output=0.15;
	   trg_lateral=0;
	   trg_sum=1;
	   tol_lg=0.05;
	   tol_sm=0.2;
	   rel_lrate=0.05;
	  };
	  learn_rule=MAINT;
	 };
	};
	rnd {type=UNIFORM: mean=0.5: var=0.25: par=1: };
	wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
	inhib=0;
	wt_scale {abs=1: rel=1: };
	wt_sig {gain=6: off=1.25: };
	lrate=0.01;
	cur_lrate=0.01;
	lrs_value=EXT_REW_STAT;
	lrate_sched {
	 name=;
	 el_typ=SchedItem;
	 el_def=0;
	 last_ctr=-1;
	 default_val=1;
	 interpolate=0;
	 cur_val=1;
	 SchedItem @[0] {
	  start_ctr=0;
	  start_val=1;
	  duration=90;
	  step=-0.01;
	 };
	 SchedItem @[1] {
	  start_ctr=90;
	  start_val=0.1;
	  duration=1;
	  step=1;
	 };
	};
	lmix {hebb=0: err=1: err_sb=1: };
	savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
	rel_net_adapt {
	 on=0;
	 trg_fm_input=0.85;
	 trg_fm_output=0.15;
	 trg_lateral=0;
	 trg_sum=1;
	 tol_lg=0.05;
	 tol_sm=0.2;
	 rel_lrate=0.05;
	};
	learn_rule=MAINT;
       };
      };
      rnd {type=UNIFORM: mean=0.5: var=0.25: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
      inhib=0;
      wt_scale {abs=1: rel=1: };
      wt_sig {gain=6: off=1.25: };
      lrate=0.01;
      cur_lrate=0.01;
      lrs_value=EXT_REW_STAT;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=1;
       SchedItem @[0] {
	start_ctr=0;
	start_val=1;
	duration=90;
	step=-0.01;
       };
       SchedItem @[1] {
	start_ctr=90;
	start_val=0.1;
	duration=1;
	step=1;
       };
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.05;
      };
     };
     MarkerConSpec @[1] {
      name="MarkerCons";
      desc=;
      unique{ rnd;wt_limits;wt_scale;lrate;      };
      children {
       name=;
       el_typ=MarkerConSpec;
       el_def=0;
      };
      rnd {type=UNIFORM: mean=0: var=0: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=0: };
      inhib=0;
      wt_scale {abs=1: rel=0: };
      wt_sig {gain=6: off=1.25: };
      lrate=0;
      cur_lrate=0;
      lrs_value=EPOCH;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=1;
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.05;
      };
     };
     LeabraConSpec @[2] {
      name="PFCSelfCon";
      desc=;
      unique{ rnd;wt_scale;lrate;      };
      children {
       name=;
       el_typ=LeabraConSpec;
       el_def=0;
      };
      rnd {type=UNIFORM: mean=0.9: var=0: par=1: };
      wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
      inhib=0;
      wt_scale {abs=1: rel=0.1: };
      wt_sig {gain=6: off=1.25: };
      lrate=0;
      cur_lrate=0;
      lrs_value=EPOCH;
      lrate_sched {
       name=;
       el_typ=SchedItem;
       el_def=0;
       last_ctr=-1;
       default_val=1;
       interpolate=0;
       cur_val=1;
      };
      lmix {hebb=0.001: err=0.999: err_sb=1: };
      savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
      rel_net_adapt {
       on=0;
       trg_fm_input=0.85;
       trg_fm_output=0.15;
       trg_lateral=0;
       trg_sum=1;
       tol_lg=0.05;
       tol_sm=0.2;
       rel_lrate=0.05;
      };
     };
    };
    BaseSpec_Group @.gp[2] {
     name="PFC_BG_Layers";
     el_typ=ExtRewLayerSpec;
     el_def=0;
     ExtRewLayerSpec @[0] {
      name="PVeLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=ExtRewLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=1: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      scalar {rep=LOCALIST: un_width=0.3: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=NO_UN: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0: };
      val_range {min=0: max=1: range=1: scale=1: };
      rew_type=OUT_ERR_REW;
      avg_rew {sub_avg=0: avg_dt=0.005: };
      out_err {err_tol=0.5: graded=0: no_off_err=0: seq_all_cor=0: };
      rew {err_val=0: norew_val=0.5: rew_val=1: };
     };
     PViLayerSpec @[1] {
      name="PViLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=PViLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      scalar {rep=LOCALIST: un_width=0.3: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
      val_range {min=0: max=1: range=1: scale=1: };
      pv_detect {thr_min=0.2: thr_max=0.8: };
     };
     LVeLayerSpec @[2] {
      name="LVeLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=LViLayerSpec;
       el_def=0;
       LViLayerSpec @[0] {
	name="LViLayer";
	desc=;
	unique{ decay;decay;compute_i;i_kwta_pt;decay;	};
	children {
	 name=;
	 el_typ=LViLayerSpec;
	 el_def=0;
	};
	inhib_group=ENTIRE_LAYER;
	kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	compute_i=KWTA_AVG_INHIB;
	i_kwta_pt=0.9;
	gp_i_pt=0.2;
	tie_brk {on=0: k_thr=1: diff_thr=0.2: };
	adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
	clamp {hard=1: gain=0.5: d_gain=0: };
	decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
	net_rescale {on=0: max_net=0.8: net_extra=0.2: };
	abs_net_adapt {
	 on=0;
	 trg_net=0.5;
	 tol=0.1;
	 abs_lrate=0.05;
	};
	scalar {rep=LOCALIST: un_width=0.3: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
	unit_range {min=0: max=1: range=1: scale=1: };
	bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
	val_range {min=0: max=1: range=1: scale=1: };
	lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
       };
       PatchLayerSpec @[1] {
	name="PatchLayer";
	desc=;
	unique{ kwta;gp_kwta;inhib_group;compute_i;i_kwta_pt;decay;	};
	children {
	 name=;
	 el_typ=PatchLayerSpec;
	 el_def=0;
	};
	inhib_group=UNIT_GROUPS;
	kwta {k_from=USE_K: k=8: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	gp_kwta {k_from=USE_K: k=8: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	compute_i=KWTA_INHIB;
	i_kwta_pt=0.25;
	gp_i_pt=0.2;
	tie_brk {on=0: k_thr=1: diff_thr=0.2: };
	adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
	clamp {hard=1: gain=0.5: d_gain=0: };
	decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
	net_rescale {on=0: max_net=0.8: net_extra=0.2: };
	abs_net_adapt {
	 on=0;
	 trg_net=0.5;
	 tol=0.1;
	 abs_lrate=0.05;
	};
	scalar {rep=LOCALIST: un_width=0.3: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
	unit_range {min=0: max=1: range=1: scale=1: };
	bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
	val_range {min=0: max=1: range=1: scale=1: };
	lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
       };
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.9;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      scalar {rep=LOCALIST: un_width=0.3: clamp_pat=0: min_sum_act=0.2: val_mult_lrn=0: clip_val=1: send_thr=0: };
      unit_range {min=0: max=1: range=1: scale=1: };
      bias_val {un=GC: un_shp=VAL: un_gain=1: wt=NO_WT: wt_gain=1: val=0.5: };
      val_range {min=0: max=1: range=1: scale=1: };
      lv {delta_on_sum=0: use_actual_er=0: syn_dep=0: };
     };
     PVLVDaLayerSpec @[3] {
      name="DALayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=SNcLayerSpec;
       el_def=0;
       SNcLayerSpec @[0] {
	name="SNcLayer";
	desc=;
	unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;	};
	children {
	 name=;
	 el_typ=SNcLayerSpec;
	 el_def=0;
	};
	inhib_group=ENTIRE_LAYER;
	kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
	compute_i=KWTA_INHIB;
	i_kwta_pt=0.25;
	gp_i_pt=0.2;
	tie_brk {on=0: k_thr=1: diff_thr=0.2: };
	adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
	clamp {hard=1: gain=0.5: d_gain=0: };
	decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
	net_rescale {on=0: max_net=0.8: net_extra=0.2: };
	abs_net_adapt {
	 on=0;
	 trg_net=0.5;
	 tol=0.1;
	 abs_lrate=0.05;
	};
	da {da_gain=2: tonic_da=0: use_actual_er=0: syn_dep=0: min_lvi=0.1: };
	snc {patch_mode=NO_PATCH: patch_gain=0.5: };
       };
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_K: k=1: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_INHIB;
      i_kwta_pt=0.25;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      da {da_gain=2: tonic_da=0: use_actual_er=0: syn_dep=0: min_lvi=0.1: };
     };
     PFCLayerSpec @[4] {
      name="PFCLayer";
      desc=;
      unique{ gp_kwta;inhib_group;compute_i;i_kwta_pt;decay;      };
      children {
       name=;
       el_typ=PFCLayerSpec;
       el_def=0;
      };
      inhib_group=UNIT_GROUPS;
      kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.15: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.6;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=0: phase=0: phase2=0.1: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      gate {off_accom=0: updt_reset_sd=1: allow_clamp=1: };
     };
     MatrixLayerSpec @[5] {
      name="MatrixLayer";
      desc=;
      unique{ decay;      };
      children {
       name=;
       el_typ=MatrixLayerSpec;
       el_def=0;
      };
      inhib_group=UNIT_GROUPS;
      kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_INHIB;
      i_kwta_pt=0.25;
      gp_i_pt=0.2;
      tie_brk {on=0: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=0: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      bg_type=MAINT;
      matrix {neg_da_bl=0.0002: neg_gain=1.5: perf_gain=0: no_snr_mod=0: };
      contrast {gain=1: go_p=0.5: go_n=0.5: nogo_p=0.5: nogo_n=0.5: };
      rnd_go {avgrew=0.9: ucond_p=0.0001: ucond_da=1: nogo_thr=50: nogo_p=0.1: nogo_da=10: };
      err_rnd_go {on=1: min_cor=5: min_errs=1: err_p=1: gain=0.2: if_go_p=0: err_da=10: };
      avgda_rnd_go {on=1: avgda_p=0.1: gain=0.5: avgda_thr=0.1: nogo_thr=10: avgda_da=10: avgda_dt=0.005: };
     };
     SNrThalLayerSpec @[6] {
      name="SNrThalLayer";
      desc=;
      unique{ kwta;inhib_group;compute_i;i_kwta_pt;decay;i_kwta_pt;      };
      children {
       name=;
       el_typ=SNrThalLayerSpec;
       el_def=0;
      };
      inhib_group=ENTIRE_LAYER;
      kwta {k_from=USE_PCT: k=12: pct=0.75: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
      compute_i=KWTA_AVG_INHIB;
      i_kwta_pt=0.6;
      gp_i_pt=0.2;
      tie_brk {on=1: k_thr=1: diff_thr=0.2: };
      adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
      clamp {hard=1: gain=0.5: d_gain=0: };
      decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
      net_rescale {on=0: max_net=0.8: net_extra=0.2: };
      abs_net_adapt {
       on=0;
       trg_net=0.5;
       tol=0.1;
       abs_lrate=0.05;
      };
      snrthal {avg_net_dt=0.005: go_thr=0.1: rnd_go_inc=0.2: };
     };
    };
    BaseSpec_Group @.gp[3] {
     name="PFC_BG_Prjns";
     el_typ=FullPrjnSpec;
     el_def=0;
     FullPrjnSpec @[0] {
      name="FullPrjn";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=FullPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
     };
     OneToOnePrjnSpec @[1] {
      name="OneToOne";
      desc=;
      unique{ self_con;      };
      children {
       name=;
       el_typ=OneToOnePrjnSpec;
       el_def=0;
      };
      self_con=1;
      init_wts=0;
      n_conns=-1;
      recv_start=0;
      send_start=0;
     };
     GpOneToOnePrjnSpec @[2] {
      name="GpOneToOne";
      desc=;
      unique{ self_con;      };
      children {
       name=;
       el_typ=GpOneToOnePrjnSpec;
       el_def=0;
      };
      self_con=1;
      init_wts=0;
      n_conns=-1;
      recv_start=0;
      send_start=0;
     };
     UniformRndPrjnSpec @[3] {
      name="ToPFC";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=UniformRndPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
      p_con=0.4;
      sym_self=1;
      same_seed=0;
      rndm_seed {
       name="RndSeed_4";
       seed{ 885402758;1315620791;1637893117;-142360587;457049189;-949155705;-2119715791;1821634666;888633017;397826378;984142622;-1074167121;1036428394;-1381320248;1752011675;1529218375;-1131000192;-1522030209;-1393552964;2139702820;1019806629;-1184447572;-1585579695;123258498;-1522706487;1023928230;626473883;-1448815323;-172643033;1442780322;2111065344;1548524186;-504720386;1031235045;814009278;43386094;-492668993;-876738712;-2005731362;1960525735;-458365107;492375078;-945027143;-1908953603;-2013516956;155478480;-1050386872;1704926481;1639824811;-2132922976;-1625708434;1939777701;1309934451;692864251;1690009697;1591314605;1126898637;284050550;120433724;1867173150;560847959;412331950;-298636539;100042092;-1846908131;-1401027892;1684985836;-805635604;1756446928;798076746;-1237541288;1024753688;1789758096;1854846137;-1518629114;1074060139;1107480025;-1722146726;-860045098;-165005386;-1224595429;-1792485353;-928651830;94076534;943359845;-1457534236;-1135040532;1811731895;20361060;-559818243;1955782769;70810217;-1330832004;537451179;-319528342;1617859882;-793025727;1048097394;-1484899599;1805247206;-17093041;-587942733;-385724423;1410832489;-405204260;1190395221;958821196;-157638853;-1884385967;-985823543;-273808190;-1384582868;134732019;1971309846;1839849440;-1702426788;-1188944151;1014600399;-1112318444;-1459318456;-1201720541;-1917014972;-212548703;171773730;1390473889;903724315;-2011851422;-254642779;1518462968;1930794769;514830736;684053131;-1785556216;786032567;-204462105;1636468199;483093768;1213006940;-1892611296;1806820713;-1617681672;1931393864;-690514700;1567345602;-849847275;439084704;-1444252019;-439396062;-2086932024;2020970018;1017897725;-425172214;1356908721;-1072284374;-810877278;647004185;1389807241;1380598265;513532697;-2105427045;-1001985287;1476595147;1335594408;1706329405;-1546066349;1429822962;1357575058;-1682354622;682985457;-838943061;-563386337;1101456274;-61604448;978716742;-1440955677;134158304;2145593764;688644071;-1727206975;-255212497;-87988718;1772333636;-2008697867;-338093747;1225585232;-2074860203;-1734385207;-512766631;-62479349;-2116670091;-173733459;1277960047;-1811505950;-192882636;-973093953;-1303836093;1591816739;1180895058;-1826522795;295642907;580825252;-885871136;13506601;87435697;-174916171;-1177420856;1982141048;-382837330;-605241033;108777595;-22763134;-912198130;-336631634;576903110;4147249;-877209080;-1148558086;374052293;-1875906169;-118654505;1351688196;-1790168208;2112840757;494676344;-2051082622;-671813990;719098125;393197416;1880349590;1778886283;-356069389;672945784;163222125;1911708468;1470748963;-311176700;-1360803164;465373585;305699409;408702933;367950155;-34981069;486731282;-475404682;1897859764;-960455540;-1237282659;-1784404281;-2063731206;-1830133936;-1360142603;261232926;2097284352;-2038873605;-336259949;-1334202238;-1330033442;644944606;-1650406375;-717724366;-582512957;-1235918723;534507224;724142473;2008410121;-992070916;-432866573;-2049015703;-1957940982;-2061199116;1448064363;2103814819;-252503836;26227140;-1154458132;1034480807;-537577475;1856840632;-40703309;1560050771;-976462003;42522096;898102424;1863558053;-290467840;1627564789;1927992772;-916850675;-1306817337;1625749905;-1038971111;405944691;-930177154;-367288807;-1868751697;1789722230;-577486335;-1023533686;-1356437031;1824241568;-31292338;408785572;23331987;1848193508;-911336451;471769902;322523054;-2117197671;1010382273;694396149;1908008566;745405268;690946779;1413281524;1215825353;1351503624;-237526659;1320974460;1932508674;-605907511;-1988241086;717593207;82463018;1469665153;2070380217;-190432245;1795880255;-1125694591;243108625;672223252;343663578;974953000;-1405349541;1320418229;-1583664452;681649706;-102041128;-581221618;1235651110;-1440329902;-546748213;1603699779;1962674265;-802618431;500966361;293421214;1229506224;-196100751;1049209521;58386684;2079866356;1259489979;-1419842735;1479880890;-270345394;-163292018;-2067119657;-2053879448;-1382614775;813698589;-1561580204;-2010366670;-1627944842;951498499;-1745312614;-1696180549;-1305034350;-321531847;1611304189;-1286918423;-531308067;-1457130195;1147334990;754026774;2123409559;1062935955;-257654575;1426253833;-125823872;-711385769;1847088536;-61529461;1871275616;2007020484;-539135576;-819621011;1412229112;-1477408204;1768661158;-303244687;1781825790;-469217156;2000564454;1644704112;2001584723;-1241895789;204483849;679862855;1641187228;1333163104;1139936411;-2065071748;-914877829;106727481;1691371596;-120122392;-695005980;1391957759;-399406433;-586797406;847282128;-2065965089;-1067563894;1786404444;-1514263189;-599734577;-818769884;-643251257;-1954040457;-458775027;904681844;-27431427;673502816;10015618;-114654091;2137818149;942691666;1512086693;-1436839383;1636367918;-954239552;1642854735;-1129211564;1051125611;-1758219275;-1650808760;1426761838;627458188;-585396403;-1562115089;-865064076;270288279;-1156619547;-1494512725;1862520895;-2043159607;623444622;1713088293;2113063061;-1232546325;63166253;-337237754;-509015735;-598487907;-486211169;1509803597;969889961;-250091202;1518646851;-1660240856;-467218753;-1537698378;142880777;-531491997;-1324969657;-817913673;1706599783;182937754;-56204023;-1633364230;1376559566;477372943;-1522808520;-303317090;-1294064282;1852133865;637870260;-739806493;-1205220797;-1391753824;267284345;-1219536797;1905016003;1276413726;-1632023025;432353777;2112489863;1531760844;-286443981;462912789;-1622608453;-2100913729;1226246506;1700270145;-668088655;1845376953;516878192;1129892862;436072534;1571016897;82239815;-1891794131;167842440;1856594916;506465942;-807315817;-327683568;1086627419;-815249853;1414404074;26186836;1744912342;-1667484625;1078511087;-693563693;-1526335147;2126111082;429530445;-537241670;-1348541913;1514445288;428684941;227915052;-1749878378;1606230703;-1153583672;1987231810;1913623049;651371459;1036591070;2111944925;-222616144;1830438959;775833666;991869660;2085870847;914031696;-315635637;-985250127;-1954285072;1357181;789924057;-1548630835;1563411232;-1130219288;408146827;1379214177;-138164670;-650923813;-1288355500;-1576934048;-515530518;-1085111934;2099718746;-1901497266;-278333674;-411007837;-1963688845;1900515465;188603902;1325313198;1484910750;-2124057912;2092643696;-1404748250;-1462759324;-1986477346;1845709457;904955377;1954665063;2075678718;126065550;-1027969583;906895202;854476947;1386665516;1512021316;883673216;1748520589;981286678;-1798759544;798232186;-85282458;1517126586;70784321;774527890;1161267620;-44310646;2036323068;644372263;-1816920144;587849853;-786807677;1703504128;-171095219;-488743509;758110291;1760579968;-991061015;2051785196;-395884370;-305941615;-63732247;-716655108;937564867;-517364389;-1742670083;2014349513;292314880;132629681;856784730;-422245195;1273717171;-833569684;-1501973511;1674809649;122170642;-1895727007;-678544680;-194107400;1825204276;-613782729;-291589988;1448295242;       };
       mti=186;
      };
     };
     OneToOnePrjnSpec @[4] {
      name="PFCSelf";
      desc=;
      unique{ self_con;      };
      children {
       name=;
       el_typ=OneToOnePrjnSpec;
       el_def=0;
      };
      self_con=1;
      init_wts=0;
      n_conns=-1;
      recv_start=0;
      send_start=0;
     };
     GpRndTesselPrjnSpec @[5] {
      name="IntraPFC";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=GpRndTesselPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
      recv_gp_off {x=0: y=0: };
      recv_gp_n {x=-1: y=1: };
      recv_gp_skip {x=1: y=1: };
      recv_gp_group {x=2: y=1: };
      send_gp_scale {x=1: y=1: };
      send_gp_border {x=0: y=0: };
      send_gp_offs {
       name=;
       el_typ=GpTessEl;
       el_def=0;
       GpTessEl @[0] {
	send_gp_off {x=0: y=1: };
	p_con=0.4;
       };
       GpTessEl @[1] {
	send_gp_off {x=1: y=1: };
	p_con=0.4;
       };
      };
      wrap=0;
      def_p_con=0.4;
      sym_self=1;
      same_seed=0;
      rndm_seed {
       name="RndSeed_5";
       seed{ 885402758;1315620791;1637893117;-142360587;457049189;-949155705;-2119715791;1821634666;888633017;397826378;984142622;-1074167121;1036428394;-1381320248;1752011675;1529218375;-1131000192;-1522030209;-1393552964;2139702820;1019806629;-1184447572;-1585579695;123258498;-1522706487;1023928230;626473883;-1448815323;-172643033;1442780322;2111065344;1548524186;-504720386;1031235045;814009278;43386094;-492668993;-876738712;-2005731362;1960525735;-458365107;492375078;-945027143;-1908953603;-2013516956;155478480;-1050386872;1704926481;1639824811;-2132922976;-1625708434;1939777701;1309934451;692864251;1690009697;1591314605;1126898637;284050550;120433724;1867173150;560847959;412331950;-298636539;100042092;-1846908131;-1401027892;1684985836;-805635604;1756446928;798076746;-1237541288;1024753688;1789758096;1854846137;-1518629114;1074060139;1107480025;-1722146726;-860045098;-165005386;-1224595429;-1792485353;-928651830;94076534;943359845;-1457534236;-1135040532;1811731895;20361060;-559818243;1955782769;70810217;-1330832004;537451179;-319528342;1617859882;-793025727;1048097394;-1484899599;1805247206;-17093041;-587942733;-385724423;1410832489;-405204260;1190395221;958821196;-157638853;-1884385967;-985823543;-273808190;-1384582868;134732019;1971309846;1839849440;-1702426788;-1188944151;1014600399;-1112318444;-1459318456;-1201720541;-1917014972;-212548703;171773730;1390473889;903724315;-2011851422;-254642779;1518462968;1930794769;514830736;684053131;-1785556216;786032567;-204462105;1636468199;483093768;1213006940;-1892611296;1806820713;-1617681672;1931393864;-690514700;1567345602;-849847275;439084704;-1444252019;-439396062;-2086932024;2020970018;1017897725;-425172214;1356908721;-1072284374;-810877278;647004185;1389807241;1380598265;513532697;-2105427045;-1001985287;1476595147;1335594408;1706329405;-1546066349;1429822962;1357575058;-1682354622;682985457;-838943061;-563386337;1101456274;-61604448;978716742;-1440955677;134158304;2145593764;688644071;-1727206975;-255212497;-87988718;1772333636;-2008697867;-338093747;1225585232;-2074860203;-1734385207;-512766631;-62479349;-2116670091;-173733459;1277960047;-1811505950;-192882636;-973093953;-1303836093;1591816739;1180895058;-1826522795;295642907;580825252;-885871136;13506601;87435697;-174916171;-1177420856;1982141048;-382837330;-605241033;108777595;-22763134;-912198130;-336631634;576903110;4147249;-877209080;-1148558086;374052293;-1875906169;-118654505;1351688196;-1790168208;2112840757;494676344;-2051082622;-671813990;719098125;393197416;1880349590;1778886283;-356069389;672945784;163222125;1911708468;1470748963;-311176700;-1360803164;465373585;305699409;408702933;367950155;-34981069;486731282;-475404682;1897859764;-960455540;-1237282659;-1784404281;-2063731206;-1830133936;-1360142603;261232926;2097284352;-2038873605;-336259949;-1334202238;-1330033442;644944606;-1650406375;-717724366;-582512957;-1235918723;534507224;724142473;2008410121;-992070916;-432866573;-2049015703;-1957940982;-2061199116;1448064363;2103814819;-252503836;26227140;-1154458132;1034480807;-537577475;1856840632;-40703309;1560050771;-976462003;42522096;898102424;1863558053;-290467840;1627564789;1927992772;-916850675;-1306817337;1625749905;-1038971111;405944691;-930177154;-367288807;-1868751697;1789722230;-577486335;-1023533686;-1356437031;1824241568;-31292338;408785572;23331987;1848193508;-911336451;471769902;322523054;-2117197671;1010382273;694396149;1908008566;745405268;690946779;1413281524;1215825353;1351503624;-237526659;1320974460;1932508674;-605907511;-1988241086;717593207;82463018;1469665153;2070380217;-190432245;1795880255;-1125694591;243108625;672223252;343663578;974953000;-1405349541;1320418229;-1583664452;681649706;-102041128;-581221618;1235651110;-1440329902;-546748213;1603699779;1962674265;-802618431;500966361;293421214;1229506224;-196100751;1049209521;58386684;2079866356;1259489979;-1419842735;1479880890;-270345394;-163292018;-2067119657;-2053879448;-1382614775;813698589;-1561580204;-2010366670;-1627944842;951498499;-1745312614;-1696180549;-1305034350;-321531847;1611304189;-1286918423;-531308067;-1457130195;1147334990;754026774;2123409559;1062935955;-257654575;1426253833;-125823872;-711385769;1847088536;-61529461;1871275616;2007020484;-539135576;-819621011;1412229112;-1477408204;1768661158;-303244687;1781825790;-469217156;2000564454;1644704112;2001584723;-1241895789;204483849;679862855;1641187228;1333163104;1139936411;-2065071748;-914877829;106727481;1691371596;-120122392;-695005980;1391957759;-399406433;-586797406;847282128;-2065965089;-1067563894;1786404444;-1514263189;-599734577;-818769884;-643251257;-1954040457;-458775027;904681844;-27431427;673502816;10015618;-114654091;2137818149;942691666;1512086693;-1436839383;1636367918;-954239552;1642854735;-1129211564;1051125611;-1758219275;-1650808760;1426761838;627458188;-585396403;-1562115089;-865064076;270288279;-1156619547;-1494512725;1862520895;-2043159607;623444622;1713088293;2113063061;-1232546325;63166253;-337237754;-509015735;-598487907;-486211169;1509803597;969889961;-250091202;1518646851;-1660240856;-467218753;-1537698378;142880777;-531491997;-1324969657;-817913673;1706599783;182937754;-56204023;-1633364230;1376559566;477372943;-1522808520;-303317090;-1294064282;1852133865;637870260;-739806493;-1205220797;-1391753824;267284345;-1219536797;1905016003;1276413726;-1632023025;432353777;2112489863;1531760844;-286443981;462912789;-1622608453;-2100913729;1226246506;1700270145;-668088655;1845376953;516878192;1129892862;436072534;1571016897;82239815;-1891794131;167842440;1856594916;506465942;-807315817;-327683568;1086627419;-815249853;1414404074;26186836;1744912342;-1667484625;1078511087;-693563693;-1526335147;2126111082;429530445;-537241670;-1348541913;1514445288;428684941;227915052;-1749878378;1606230703;-1153583672;1987231810;1913623049;651371459;1036591070;2111944925;-222616144;1830438959;775833666;991869660;2085870847;914031696;-315635637;-985250127;-1954285072;1357181;789924057;-1548630835;1563411232;-1130219288;408146827;1379214177;-138164670;-650923813;-1288355500;-1576934048;-515530518;-1085111934;2099718746;-1901497266;-278333674;-411007837;-1963688845;1900515465;188603902;1325313198;1484910750;-2124057912;2092643696;-1404748250;-1462759324;-1986477346;1845709457;904955377;1954665063;2075678718;126065550;-1027969583;906895202;854476947;1386665516;1512021316;883673216;1748520589;981286678;-1798759544;798232186;-85282458;1517126586;70784321;774527890;1161267620;-44310646;2036323068;644372263;-1816920144;587849853;-786807677;1703504128;-171095219;-488743509;758110291;1760579968;-991061015;2051785196;-395884370;-305941615;-63732247;-716655108;937564867;-517364389;-1742670083;2014349513;292314880;132629681;856784730;-422245195;1273717171;-833569684;-1501973511;1674809649;122170642;-1895727007;-678544680;-194107400;1825204276;-613782729;-291589988;1448295242;       };
       mti=186;
      };
     };
     TesselPrjnSpec @[6] {
      name="Input_PFC";
      desc=;
      unique{       };
      children {
       name=;
       el_typ=TesselPrjnSpec;
       el_def=0;
      };
      self_con=0;
      init_wts=0;
      recv_off {x=0: y=0: };
      recv_n {x=-1: y=-1: };
      recv_skip {x=1: y=1: };
      recv_group {x=1: y=1: };
      wrap=1;
      send_scale {x=1: y=1: };
      send_border {x=0: y=0: };
      send_offs {
       name=;
       el_typ=TessEl;
       el_def=0;
       TessEl @[0] {
	send_off {x=0: y=0: };
	wt_val=1;
       };
       TessEl @[1] {
	send_off {x=0: y=0: };
	wt_val=1;
       };
       TessEl @[2] {
	send_off {x=0: y=0: };
	wt_val=1;
       };
      };
     };
    };
   };
   layers {
    name=;
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    LeabraLayer @[0] {
     name="RewTarg";
     flags=;
     layer_type=INPUT;
     pos {x=5: y=4: z=2: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=1: y=1: n_not_xy=0: n=1: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs[0]$165$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="rew_targ";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.95: max=0.95: max_i=0: };
     acts_m {avg=0.95: max=0.95: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=1: pct=1: pct_c=0: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=1: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1]$166$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[1] {
     name="PVe";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_RewTarg";
       from_type=CUSTOM;
       from=$82$;
       spec {type=OneToOnePrjnSpec: spec=.projects[0].networks[0].specs.gp[3][1]$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=.projects[0].networks[0].specs.gp[1][1]$168$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Output";
       from_type=CUSTOM;
       from=$90$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][0]$169$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3166667: max=0.95: max_i=3: };
     acts_m {avg=0.3166667: max=0.95: max_i=2: };
     phase_dif_ratio=1;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=ExtRewLayerSpec: spec=.projects[0].networks[0].specs.gp[2][0]$170$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[2] {
     name="PVi";
     flags=;
     layer_type=HIDDEN;
     pos {x=6: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVe";
       from_type=CUSTOM;
       from=$83$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$87$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=1;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$89$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs.gp[3][0]$171$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0]$172$: };
       recv_idx=2;
       send_idx=6;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$94$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$172$: };
       recv_idx=3;
       send_idx=5;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[3].projections[0];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[4].projections[0];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[5].projections[0];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[9].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=$169$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="R";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.4650029: max=0.571941: max_i=1: };
     acts_m {avg=0.4545885: max=0.5966409: max_i=1: };
     phase_dif_ratio=0.9776037;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.875871: k1_ithr=3.51629: ithr_r=0.09736391: ithr_diff=0.09277419: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PViLayerSpec: spec=.projects[0].networks[0].specs.gp[2][1]$173$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[3] {
     name="LVe";
     flags=;
     layer_type=HIDDEN;
     pos {x=12: y=0: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$84$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$87$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$89$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0].children[0]$174$: };
       recv_idx=2;
       send_idx=5;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$94$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$174$: };
       recv_idx=3;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[5].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[9].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][0].children[0]$175$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="R";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3144452: max=0.6980616: max_i=1: };
     acts_m {avg=0.3131673: max=0.7070452: max_i=1: };
     phase_dif_ratio=0.995936;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.612927: k1_ithr=3.036193: ithr_r=0.4182582: ithr_diff=0.3418077: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LVeLayerSpec: spec=.projects[0].networks[0].specs.gp[2][2]$176$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[4] {
     name="LVi";
     flags=;
     layer_type=HIDDEN;
     pos {x=12: y=2: z=0: };
     un_geom {x=4: y=1: n_not_xy=0: n=4: };
     unit_groups=0;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=4: y=1: n_not_xy=0: n=4: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$84$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_DA";
       from_type=CUSTOM;
       from=$87$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$89$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[0].children[0].children[0]$177$: };
       recv_idx=2;
       send_idx=4;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$94$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=TrialSynDepCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=PVConSpec: spec=$177$: };
       recv_idx=3;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[5].projections[2];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[9].projections[2];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[5].projections[2];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=4: y=1: n_not_xy=0: n=4: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=$175$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.4408947: max=0.6621948: max_i=2: };
     acts_m {avg=0.4450752: max=0.6610277: max_i=2: };
     phase_dif_ratio=1.009482;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=4.837867: k1_ithr=3.927142: ithr_r=0.2085619: ithr_diff=0.1882492: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.9: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LViLayerSpec: spec=.projects[0].networks[0].specs.gp[2][2].children[0]$178$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[5] {
     name="DA";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=2: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$84$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_LVe";
       from_type=CUSTOM;
       from=$85$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_LVi";
       from_type=CUSTOM;
       from=$86$;
       spec {type=OneToOnePrjnSpec: spec=$167$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=2;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[1];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=1: y=1: n_not_xy=0: n=1: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][1]$179$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=1.180683: max=1.180683: max_i=0: };
     acts_m {avg=-0.3658906: max=-0.3658906: max_i=0: };
     phase_dif_ratio=-0.3098972;
     kwta {k=1: pct=1: pct_c=0: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=1: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PVLVDaLayerSpec: spec=.projects[0].networks[0].specs.gp[2][3]$180$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=1.180683;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[6] {
     name="Hidden";
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=0: z=1: };
     un_geom {x=7: y=7: n_not_xy=0: n=49: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=7: y=7: n_not_xy=0: n=49: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$89$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs[2]$181$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$47$: };
       recv_idx=0;
       send_idx=3;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Output";
       from_type=CUSTOM;
       from=$90$;
       spec {type=FullPrjnSpec: spec=$181$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$47$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$94$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs.gp[1][0]$182$: };
       recv_idx=2;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[8].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=7: y=7: n_not_xy=0: n=49: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=$165$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.1657084: max=0.8821121: max_i=35: };
     acts_m {avg=0.1638971: max=0.8847809: max_i=35: };
     phase_dif_ratio=0.9890694;
     kwta {k=7: pct=0.1428571: pct_c=0.8571429: adth_k=1: k_ithr=4.359276: k1_ithr=3.268132: ithr_r=0.2880874: ithr_diff=0.250304: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.1428571: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=$166$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[7] {
     name="Input";
     flags=;
     layer_type=INPUT;
     pos {x=0: y=0: z=2: };
     un_geom {x=3: y=3: n_not_xy=0: n=9: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=3: y=3: n_not_xy=0: n=9: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[2];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[2];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[2];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[6].projections[0];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[8].projections[1];
	    Projection_Group @. = [5] = LeabraPrjn .projects[0].networks[0].layers[10].projections[3];
	    Projection_Group @. = [6] = LeabraPrjn .projects[0].networks[0].layers[12].projections[2];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=3: y=3: n_not_xy=0: n=9: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=$165$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="Y";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.1055556: max=0.95: max_i=4: };
     acts_m {avg=0.1055556: max=0.95: max_i=4: };
     phase_dif_ratio=1;
     kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.1111111: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1].children[0]$183$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[8] {
     name="Output";
     flags=;
     layer_type=TARGET;
     pos {x=5: y=1: z=2: };
     un_geom {x=2: y=1: n_not_xy=0: n=2: };
     unit_groups=0;
     gp_geom {x=0: y=0: n_not_xy=0: n=0: };
     gp_spc {x=0: y=0: };
     act_geom {x=2: y=1: n_not_xy=0: n=2: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$88$;
       spec {type=FullPrjnSpec: spec=$181$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$47$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$89$;
       spec {type=FullPrjnSpec: spec=$181$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$47$: };
       recv_idx=1;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[6].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=2: y=1: n_not_xy=0: n=2: };
      units_lesioned=0;
     };
     unit_spec {type=DaModUnitSpec: spec=$165$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="L";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.475: max=0.95: max_i=0: };
     acts_m {avg=0.4634533: max=0.9114183: max_i=0: };
     phase_dif_ratio=0.9756911;
     kwta {k=1: pct=0.5: pct_c=0.5: adth_k=1: k_ithr=4.171553: k1_ithr=3.193177: ithr_r=0.267272: ithr_diff=0.2345352: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.5: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1].children[1]$184$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[9] {
     name="SNc";
     flags=;
     layer_type=HIDDEN;
     pos {x=4: y=2: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_PVi";
       from_type=CUSTOM;
       from=$84$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_LVe";
       from_type=CUSTOM;
       from=$85$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_LVi";
       from_type=CUSTOM;
       from=$86$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=2;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[10].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=1.180683: max=1.180683: max_i=0: };
       acts_m {avg=-0.3658906: max=-0.3658906: max_i=0: };
       phase_dif_ratio=-0.3098972;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=1: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=1.180683: max=1.180683: max_i=0: };
       acts_m {avg=-0.3658906: max=-0.3658906: max_i=0: };
       phase_dif_ratio=-0.3098972;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=2: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=1.180683: max=1.180683: max_i=0: };
       acts_m {avg=-0.3658906: max=-0.3658906: max_i=0: };
       phase_dif_ratio=-0.3098972;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=3: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=1.180683: max=1.180683: max_i=0: };
       acts_m {avg=-0.3658906: max=-0.3658906: max_i=0: };
       phase_dif_ratio=-0.3098972;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=$179$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=1.180683: max=1.180683: max_i=0: };
     acts_m {avg=-0.3658906: max=-0.3658906: max_i=0: };
     phase_dif_ratio=-0.3098972;
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=nan: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=SNcLayerSpec: spec=.projects[0].networks[0].specs.gp[2][3].children[0]$185$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=1.180683;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[10] {
     name="Striatum";
     flags=;
     layer_type=HIDDEN;
     pos {x=9: y=0: z=1: };
     un_geom {x=4: y=7: n_not_xy=0: n=28: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=19: y=7: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_SNc";
       from_type=CUSTOM;
       from=$91$;
       spec {type=GpOneToOnePrjnSpec: spec=.projects[0].networks[0].specs.gp[3][2]$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_SNrThal";
       from_type=CUSTOM;
       from=$93$;
       spec {type=GpOneToOnePrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=1;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_PFC";
       from_type=CUSTOM;
       from=$94$;
       spec {type=GpOneToOnePrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MatrixConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[3].children[0]$187$: };
       recv_idx=2;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[3] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$89$;
       spec {type=FullPrjnSpec: spec=$171$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MatrixConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[3]$188$: };
       recv_idx=3;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[11].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1913112: max=0.8832864: max_i=8: };
       acts_m {avg=0.1912313: max=0.8832719: max_i=8: };
       phase_dif_ratio=0.9995824;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.914408: k1_ithr=3.895965: ithr_r=0.004722632: ithr_diff=0.004711474: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=5: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.2229113: max=0.9369093: max_i=8: };
       acts_m {avg=0.2028902: max=0.9312832: max_i=8: };
       phase_dif_ratio=0.9101833;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.45377: k1_ithr=3.43278: ithr_r=0.006096221: ithr_diff=0.006077662: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=10: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.2138765: max=0.929809: max_i=6: };
       acts_m {avg=0.2092044: max=0.9268408: max_i=6: };
       phase_dif_ratio=0.9781551;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.578352: k1_ithr=3.456177: ithr_r=0.03473927: ithr_diff=0.0341428: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=15: y=0: z=0: };
       unique_geom=0;
       geom {x=4: y=7: n_not_xy=0: n=28: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1624955: max=0.8474371: max_i=7: };
       acts_m {avg=0.1625149: max=0.8473764: max_i=7: };
       phase_dif_ratio=1.000119;
       kwta {k=7: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=3.812688: k1_ithr=3.794633: ithr_r=0.004746717: ithr_diff=0.004735432: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=MatrixUnitSpec: spec=.projects[0].networks[0].specs.gp[0][3]$189$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.1976486: max=0.9369093: max_i=1: };
     acts_m {avg=0.1914602: max=0.9312832: max_i=1: };
     phase_dif_ratio=0.9686896;
     kwta {k=28: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.25: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=MatrixLayerSpec: spec=.projects[0].networks[0].specs.gp[2][5]$190$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[11] {
     name="SNrThal";
     flags=;
     layer_type=HIDDEN;
     pos {x=3: y=4: z=0: };
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=0: y=0: };
     act_geom {x=4: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Striatum";
       from_type=CUSTOM;
       from=$92$;
       spec {type=GpOneToOnePrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[10].projections[1];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[12].projections[0];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=6.910052e-11: max=6.910052e-11: max_i=0: };
       acts_m {avg=1.128337e-09: max=1.128337e-09: max_i=0: };
       phase_dif_ratio=16.32893;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=1: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.5903664: max=0.5903664: max_i=0: };
       acts_m {avg=0.5358729: max=0.5358729: max_i=0: };
       phase_dif_ratio=0.9076955;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=2: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.6378932: max=0.6378932: max_i=0: };
       acts_m {avg=0.6467618: max=0.6467618: max_i=0: };
       phase_dif_ratio=1.013903;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=3: y=0: z=0: };
       unique_geom=0;
       geom {x=1: y=1: n_not_xy=0: n=1: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0: max=0: max_i=0: };
       acts_m {avg=0: max=0: max_i=0: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.25: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][4]$191$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.3070649: max=0.6378932: max_i=2: };
     acts_m {avg=0.2956587: max=0.6467618: max_i=2: };
     phase_dif_ratio=0.9628541;
     kwta {k=3: pct=0.75: pct_c=0.25: adth_k=1: k_ithr=3.011303: k1_ithr=0.07796241: ithr_r=3.653901: ithr_diff=0.9741101: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.75: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=SNrThalLayerSpec: spec=.projects[0].networks[0].specs.gp[2][6]$192$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[12] {
     name="PFC";
     flags=;
     layer_type=HIDDEN;
     pos {x=9: y=0: z=2: };
     un_geom {x=3: y=3: n_not_xy=0: n=9: };
     unit_groups=1;
     gp_geom {x=4: y=1: n_not_xy=0: n=4: };
     gp_spc {x=1: y=1: };
     act_geom {x=15: y=3: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_SNrThal";
       from_type=CUSTOM;
       from=$93$;
       spec {type=GpOneToOnePrjnSpec: spec=$186$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=MarkerConSpec: spec=$168$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_PFC";
       from_type=SELF;
       from=$94$;
       spec {type=OneToOnePrjnSpec: spec=.projects[0].networks[0].specs.gp[3][4]$193$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs.gp[1][2]$194$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[2] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=$89$;
       spec {type=TesselPrjnSpec: spec=.projects[0].networks[0].specs.gp[3][6]$195$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs.gp[1][0].children[2]$196$: };
       recv_idx=2;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[3];
	    Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[3];
	    Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[3];
	    Projection_Group @. = [3] = LeabraPrjn .projects[0].networks[0].layers[6].projections[2];
	    Projection_Group @. = [4] = LeabraPrjn .projects[0].networks[0].layers[10].projections[2];
	    Projection_Group @. = [5] = LeabraPrjn .projects[0].networks[0].layers[12].projections[1];
     };
     units {
      name=;
      el_typ=DaModUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=0: y=0: n_not_xy=0: n=1: };
      units_lesioned=0;
      LeabraUnit_Group @.gp[0] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=0: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1075155: max=0.9676394: max_i=2: };
       acts_m {avg=0.1075155: max=0.9676399: max_i=2: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=7.324434: k1_ithr=0.3048296: ithr_r=3.179218: ithr_diff=0.9583818: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.1111111: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[1] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=4: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.107803: max=0.9702269: max_i=4: };
       acts_m {avg=0.1075155: max=0.9676399: max_i=2: };
       phase_dif_ratio=0.9973335;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=3.287331: k1_ithr=-0.1: ithr_r=0: ithr_diff=1.03042: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.1111111: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[2] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=8: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.107803: max=0.9702269: max_i=4: };
       acts_m {avg=0.1075155: max=0.9676397: max_i=3: };
       phase_dif_ratio=0.9973333;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=3.287331: k1_ithr=-0.1: ithr_r=0: ithr_diff=1.03042: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.1111111: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
      LeabraUnit_Group @.gp[3] {
       name=;
       el_typ=DaModUnit;
       el_def=0;
       pos {x=12: y=0: z=0: };
       unique_geom=0;
       geom {x=3: y=3: n_not_xy=0: n=9: };
       units_lesioned=0;
       netin {avg=0: max=0: max_i=-1: };
       i_thrs {avg=0: max=0: max_i=-1: };
       acts {avg=0: max=0: max_i=-1: };
       acts_p {avg=0.1075155: max=0.9676394: max_i=7: };
       acts_m {avg=0.1075155: max=0.9676397: max_i=7: };
       phase_dif_ratio=1;
       kwta {k=1: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=7.324419: k1_ithr=0.3048296: ithr_r=3.179216: ithr_diff=0.9583817: tie_brk=0: };
       i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
       un_g_i {avg=0: max=0: max_i=-1: };
       adapt_i {avg_avg=0.1111111: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
       misc_state=0;
       misc_state1=0;
       misc_state2=0;
      };
     };
     unit_spec {type=DaModUnitSpec: spec=.projects[0].networks[0].specs.gp[0][2]$197$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name="B";
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0: max=0: max_i=-1: };
     acts_p {avg=0.1076593: max=0.9702269: max_i=1: };
     acts_m {avg=0.1075155: max=0.9676399: max_i=0: };
     phase_dif_ratio=0.9986651;
     kwta {k=4: pct=0.1111111: pct_c=0.8888889: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.1111111: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=PFCLayerSpec: spec=.projects[0].networks[0].specs.gp[2][4]$198$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
   };
   flags=;
   auto_build=AUTO_BUILD;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   batch=0;
   epoch=0;
   trial=0;
   cycle=0;
   time=0;
   group_name="4_I_ONE";
   trial_name="Y";
   output_name=;
   sse_unit_avg=0;
   sse_sqrt=0;
   sse=0;
   sum_sse=0;
   avg_sse=0;
   cnt_err_tol=0;
   cnt_err=0;
   cur_sum_sse=0;
   avg_sse_n=0;
   cur_cnt_err=0;
   train_time {name="train_time": start={usr=1426: sys=219: tot=2018351354: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   epoch_time {name="epoch_time": start={usr=1431: sys=221: tot=2018351363: }: end={usr=1824: sys=229: tot=2018247411: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   trial_time {name="trial_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   settle_time {name="settle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   cycle_time {name="cycle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   wt_sync_time {name="wt_sync_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   misc_time {name="misc_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   dmem_sync_level=DMEM_SYNC_NETWORK;
   dmem_nprocs=1;
   usr1_save_fmt=JUST_WEIGHTS;
   wt_save_fmt=TEXT;
   lay_layout=THREE_D;
   n_units=234;
   n_cons=5488;
   max_size {x=28: y=7: z=3: };
   font_sizes {
    net_name=0.05;
    net_vals=0.05;
    layer=0.04;
    layer_vals=0.03;
    prjn=0.01;
    unit=0.02;
    un_nm_len=3;
   };
   view_params {
    xy_square=0;
    unit_spacing=0.05;
    prjn_disp=L_R_F;
    prjn_name=0;
    prjn_width=0.001;
    prjn_trans=0.5;
    lay_trans=0.5;
    unit_trans=0;
   };
   phase_order=MINUS_PLUS_PLUS;
   no_plus_test=0;
   trial_init=DECAY_STATE;
   sequence_init=DO_NOTHING;
   first_plus_dwt=ONLY_FIRST_DWT;
   phase=MINUS_PHASE;
   phase_no=0;
   phase_max=3;
   cycle_max=60;
   min_cycles=15;
   min_cycles_phase2=35;
   minus_cycles=0;
   avg_cycles=0;
   avg_cycles_sum=0;
   avg_cycles_n=0;
   netin_mod=1;
   send_delta=1;
   maxda_stopcrit=0.005;
   maxda=0;
   trg_max_act_stopcrit=1;
   trg_max_act=0;
   ext_rew=0;
   avg_ext_rew=0;
   avg_ext_rew_sum=0;
   avg_ext_rew_n=0;
  };
 };
};
