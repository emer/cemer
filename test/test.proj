// ta_Dump File v2.0
LeabraProject .projects[0] { 
 UserDataItem_List @*(.user_data_) { 
    UserData_DocLink @[0] { };
 };

  Doc_Group @.docs = [3] {
    taDoc @[0] { };
    taDoc @[1] { };
    taDoc @[2] { };
  };

  Wizard_Group @.wizards = [1] {
    LeabraWizard @[0] { 
   UserDataItem_List @*(.user_data_) { 
	UserDataItem @[0] { };
   };

      LayerWizElList @.layer_cfg = [3] {
	LayerWizEl @[0] { };
	LayerWizEl @[1] { };
	LayerWizEl @[2] { };
      };
    };
  };

  SelectEdit_Group @.edits = [1] {
    SelectEdit @[0] { };
  };

  DataTable_Group @.data = [0] {
    DataTable_Group @.gp[0] = [1] { 
      DataTable @[0] { 
	DataTableCols @.data = [3] {
	  String_Data @[0] { };
	  float_Data @[1] { };
	  float_Data @[2] { };
	};
      };
    };
    DataTable_Group @.gp[1] = [2] { 
      DataTable @[0] { 
	DataTableCols @.data = [10] {
	  int_Data @[0] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[1] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  int_Data @[2] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  String_Data @[3] { };
	  String_Data @[4] { };
	  int_Data @[5] { 
      UserDataItem_List @*(.user_data_) { 
	      UserDataItem @[0] { };
      };
};
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	  float_Data @[9] { };
	};
      };
      DataTable @[1] { 
	DataTableCols @.data = [9] {
	  int_Data @[0] { };
	  int_Data @[1] { };
	  float_Data @[2] { };
	  float_Data @[3] { };
	  float_Data @[4] { };
	  float_Data @[5] { };
	  float_Data @[6] { };
	  float_Data @[7] { };
	  float_Data @[8] { };
	};
      };
    };
    DataTable_Group @.gp[2] { };
  };

  taBase_Group @.data_proc = [4] {
    taDataProc @[0] { 
   UserDataItem_List @*(.user_data_) { 
	UserDataItem @[0] { };
   };
};
    taDataAnal @[1] { 
   UserDataItem_List @*(.user_data_) { 
	UserDataItem @[0] { };
   };
};
    taDataGen @[2] { 
   UserDataItem_List @*(.user_data_) { 
	UserDataItem @[0] { };
   };
};
    taImageProc @[3] { 
   UserDataItem_List @*(.user_data_) { 
	UserDataItem @[0] { };
   };
};
  };

  Program_Group @.programs = [2] {
    Program @[0] { 
      ProgVar_List @.args = [2] {
	ProgVar @[0] { };
	ProgVar @[1] { };
      };

      ProgVar_List @.vars = [7] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
      };

      ProgEl_List @.prog_code = [24] {
	IfReturn @[0] { };
	Comment @[1] { };
	MiscCall @[2] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	MiscCall @[3] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	MiscCall @[4] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	MiscCall @[5] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	MiscCall @[6] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	MiscCall @[7] { };
	Comment @[8] { };
	PrintExpr @[9] { };
	MethodCall @[10] { };
	MiscCall @[11] { 
	  ProgArg_List @.meth_args = [1] {
	    ProgArg @[0] { };
	  };
	};
	MiscCall @[12] { 
	  ProgArg_List @.meth_args = [1] {
	    ProgArg @[0] { };
	  };
	};
	MethodCall @[13] { 
	  ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	  };
	};
	MethodCall @[14] { 
	  ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	  };
	};
	Comment @[15] { };
	MethodCall @[16] { 
	  ProgArg_List @.meth_args = [4] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	    ProgArg @[3] { };
	  };
	};
	MethodCall @[17] { 
	  ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	  };
	};
	MethodCall @[18] { 
	  ProgArg_List @.meth_args = [4] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	    ProgArg @[3] { };
	  };
	};
	MethodCall @[19] { 
	  ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	  };
	};
	MemberFmArg @[20] { };
	OtherProgramVar @[21] { };
	PrintExpr @[22] { };
	ProgramCall @[23] { 
	  ProgArg_List @.prog_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
      };
    };
    Program @[1] { 
      ProgObjList @.objs = [2] {
	ActBasedRF @[0] { };
	DataTable @[1] { 
	  DataTableCols @.data = [3] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	  };
	};
      };

      ProgVar_List @.args = [2] {
	ProgVar @[0] { };
	ProgVar @[1] { };
      };

      ProgVar_List @.vars = [4] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
      };

      ProgEl_List @.init_code = [2] {
	MethodCall @[0] { 
	  ProgArg_List @.meth_args = [1] {
	    ProgArg @[0] { };
	  };
	};
	MethodCall @[1] { 
	  ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	  };
	};
      };

      ProgEl_List @.prog_code = [1] {
	IfElse @[0] { 
	  ProgEl_List @.true_code = [1] {
	    MethodCall @[0] { };
	  };

	  ProgEl_List @.false_code = [1] {
	    MethodCall @[0] { };
	  };
	};
      };
    };
    Program_Group @.gp[0] = [10] { 
      Program @[0] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  NetCounterInit @[0] { };
	  WhileLoop @[1] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [3] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		  ProgArg @[2] { };
		};
	      };
	      NetCounterIncr @[1] { };
	    };
	  };
	};
      };
      Program @[1] { 
	ProgObjList @.objs = [1] {
	  RndSeed @[0] { };
	};

	ProgType_List @.types = [1] {
	  DynEnumType @[0] { 
	    DynEnumItem_List @.enums = [2] {
	      DynEnumItem @[0] { };
	      DynEnumItem @[1] { };
	    };
	  };
	};

	ProgVar_List @.args = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgVar_List @.vars = [7] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	  ProgVar @[6] { };
	};

	ProgEl_List @.init_code = [5] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  AssignExpr @[2] { };
	  IfElse @[3] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };

	    ProgEl_List @.false_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  IfGuiPrompt @[4] { 
	    ProgEl_List @.yes_code = [2] {
	      MethodCall @[0] { };
	      PrintExpr @[1] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [8] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MemberAssign @[2] { };
	  IfElse @[3] { 
	    ProgEl_List @.true_code = [2] {
	      MethodCall @[0] { };
	      PrintExpr @[1] { };
	    };
	  };
	  AssignExpr @[4] { };
	  WhileLoop @[5] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfBreak @[2] { };
	    };
	  };
	  MethodCall @[6] { };
	  ProgramCall @[7] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
      Program @[2] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [5] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	};

	ProgEl_List @.init_code = [2] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	};

	ProgEl_List @.prog_code = [9] {
	  NetCounterInit @[0] { };
	  AssignExpr @[1] { };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[3] { };
	  NetDataLoop @[4] { 
	    ProgEl_List @.loop_code = [2] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      IfElse @[1] { 
		ProgEl_List @.true_code = [1] {
		  MethodCall @[0] { };
		};
	      };
	    };
	  };
	  IfElse @[5] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  MethodCall @[6] { };
	  ProgramCall @[7] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[8] { };
	};
      };
      Program @[3] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [6] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  WhileLoop @[2] { 
	    ProgEl_List @.loop_code = [3] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [2] {
		  ProgArg @[0] { };
		  ProgArg @[1] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      MethodCall @[2] { };
	    };
	  };
	  MethodCall @[3] { };
	  ProgramCall @[4] { 
	    ProgArg_List @.prog_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  NetUpdateView @[5] { };
	};
      };
      Program @[4] { 
	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [1] {
	  NetCounterInit @[0] { };
	};

	ProgEl_List @.prog_code = [10] {
	  NetCounterInit @[0] { };
	  MethodCall @[1] { };
	  ProgramCall @[2] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[3] { };
	  IfElse @[4] { 
	    ProgEl_List @.true_code = [1] {
	      AssignExpr @[0] { };
	    };

	    ProgEl_List @.false_code = [1] {
	      AssignExpr @[0] { };
	    };
	  };
	  WhileLoop @[5] { 
	    ProgEl_List @.loop_code = [4] {
	      ProgramCall @[0] { 
		ProgArg_List @.prog_args = [1] {
		  ProgArg @[0] { };
		};
	      };
	      NetCounterIncr @[1] { };
	      IfContinue @[2] { };
	      IfBreak @[3] { };
	    };
	  };
	  MethodCall @[6] { };
	  IfElse @[7] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  IfElse @[8] { 
	    ProgEl_List @.true_code = [1] {
	      MethodCall @[0] { };
	    };
	  };
	  NetUpdateView @[9] { };
	};
      };
      Program @[5] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.prog_code = [2] {
	  MethodCall @[0] { };
	  NetUpdateView @[1] { };
	};
      };
      Program @[6] { 
	ProgObjList @.objs = [1] {
	  LayerWriter @[0] { 
	    LayerDataEl_List @.layer_data = [3] {
	      LayerWriterEl @[0] { };
	      LayerWriterEl @[1] { };
	      LayerWriterEl @[2] { };
	    };
	  };
	};

	ProgVar_List @.args = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgVar_List @.vars = [1] {
	  ProgVar @[0] { };
	};

	ProgEl_List @.init_code = [2] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [1] {
	  MethodCall @[0] { };
	};
      };
      Program @[7] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [10] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	      NetMonItem @[9] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [2] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	};

	ProgEl_List @.init_code = [3] {
	  MethodCall @[0] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [5] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  MethodCall @[2] { };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  ProgramCall @[4] { 
	    ProgArg_List @.prog_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
      Program @[8] { 
	ProgObjList @.objs = [1] {
	  NetMonitor @[0] { 
	    NetMonItem_List @.items = [9] {
	      NetMonItem @[0] { };
	      NetMonItem @[1] { };
	      NetMonItem @[2] { };
	      NetMonItem @[3] { };
	      NetMonItem @[4] { };
	      NetMonItem @[5] { };
	      NetMonItem @[6] { };
	      NetMonItem @[7] { };
	      NetMonItem @[8] { };
	    };
	  };
	};

	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [3] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	};

	ProgEl_List @.init_code = [4] {
	  AssignExpr @[0] { };
	  MethodCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MethodCall @[2] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [1] {
	      ProgArg @[0] { };
	    };
	  };
	};

	ProgEl_List @.prog_code = [6] {
	  MethodCall @[0] { };
	  MethodCall @[1] { };
	  AssignExpr @[2] { };
	  MethodCall @[3] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [3] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	    };
	  };
	  MethodCall @[5] { };
	};
      };
      Program @[9] { 
	ProgVar_List @.args = [1] {
	  ProgVar @[0] { };
	};

	ProgVar_List @.vars = [6] {
	  ProgVar @[0] { };
	  ProgVar @[1] { };
	  ProgVar @[2] { };
	  ProgVar @[3] { };
	  ProgVar @[4] { };
	  ProgVar @[5] { };
	};

	ProgEl_List @.prog_code = [6] {
	  IfReturn @[0] { };
	  MiscCall @[1] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  MiscCall @[2] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	  AssignExpr @[3] { };
	  MethodCall @[4] { 
	    ProgArg_List @.meth_args = [4] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	      ProgArg @[2] { };
	      ProgArg @[3] { };
	    };
	  };
	  MethodCall @[5] { 
	    ProgArg_List @.meth_args = [2] {
	      ProgArg @[0] { };
	      ProgArg @[1] { };
	    };
	  };
	};
      };
    };
  };

  DataViewer_List @.viewers = [1] {
    MainWindowViewer @[0] { 
      ToolBar_List @.toolbars = [1] {
	ToolBar @[0] { };
      };

      FrameViewer_List @.frames = [3] {
	tabBrowseViewer @[0] { };
	PanelViewer @[1] { };
	T3DataViewer @[2] { 
	  T3DataViewFrame_List @.frames = [4] {
	    T3DataViewFrame @[0] { 
	      T3DataView_List @.children = [4] {
		NetView @[0] { 
		  ScaleRange_List @.scale_ranges = [9] {
		    ScaleRange @[0] { };
		    ScaleRange @[1] { };
		    ScaleRange @[2] { };
		    ScaleRange @[3] { };
		    ScaleRange @[4] { };
		    ScaleRange @[5] { };
		    ScaleRange @[6] { };
		    ScaleRange @[7] { };
		    ScaleRange @[8] { };
		  };
		};
		GridTableView @[1] { 
		  T3DataView_List @.children = [10] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		    GridColView @[3] { };
		    GridColView @[4] { };
		    GridColView @[5] { };
		    GridColView @[6] { };
		    GridColView @[7] { };
		    GridColView @[8] { };
		    GridColView @[9] { };
		  };
		};
		GridTableView @[2] { 
		  T3DataView_List @.children = [9] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		    GridColView @[3] { };
		    GridColView @[4] { };
		    GridColView @[5] { };
		    GridColView @[6] { };
		    GridColView @[7] { };
		    GridColView @[8] { };
		  };
		};
		GraphTableView @[3] { 
		  T3DataView_List @.children = [9] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[1] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [8] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[2] { 
	      T3DataView_List @.children = [1] {
		GridTableView @[0] { 
		  T3DataView_List @.children = [3] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		  };
		};
	      };
	    };
	    T3DataViewFrame @[3] { 
	      T3DataView_List @.children = [1] {
		GridTableView @[0] { 
		  T3DataView_List @.children = [3] {
		    GridColView @[0] { };
		    GridColView @[1] { };
		    GridColView @[2] { };
		  };
		};
	      };
	    };
	  };
	};
      };

      DockViewer_List @.docks = [1] {
	ToolBoxDockViewer @[0] { };
      };
    };
  };

  Network_Group @.networks = [1] {
    LeabraNetwork @[0] { 
   UserDataItem_List @*(.user_data_) { 
	UserData_DocLink @[0] { };
   };

      BaseSpec_Group @.specs = [4] {
	LeabraUnitSpec @[0] { };
	LeabraLayerSpec @[1] { 
	  BaseSpec_Group @.children = [1] {
	    LeabraLayerSpec @[0] { };
	  };
	};
	FullPrjnSpec @[2] { };
	LeabraConSpec @[3] { 
	  BaseSpec_Group @.children = [1] {
	    LeabraBiasSpec @[0] { };
	  };
	};
      };

      Layer_Group @.layers = [3] {
	LeabraLayer @[0] { 
	  Unit_Group @.units = [25] {
	  };
	};
	LeabraLayer @[1] { 
	  Projection_Group @.projections = [2] {
	    LeabraPrjn @[0] { };
	    LeabraPrjn @[1] { };
	  };

	  Unit_Group @.units = [25] {
	  };
	};
	LeabraLayer @[2] { 
	  Projection_Group @.projections = [1] {
	    LeabraPrjn @[0] { };
	  };

	  Unit_Group @.units = [25] {
	  };
	};
      };
    };
  };
};
LeabraProject .projects[0] {
 UserDataItem_List @*(.user_data_) {
  name=;
  el_typ=UserData_DocLink;
  el_def=0;
  UserData_DocLink @[0] {
   name="DocLink";
   doc=.projects[0].docs[0]$0$;
  };
 };
 name="LeabraProject_0";
 desc=;
 templates {
  name=;
  el_typ=taBase;
  el_def=0;
 };
 docs {
  name=;
  el_typ=taDoc;
  el_def=0;
  taDoc @[0] {
   name="ProjectDocs";
   auto_open=1;
   text="<html>
<head>
<title>Project Docs</title>
</head>
<body>

= Project Documentation =

== Overview ==
This is an overview of the project.

* It has many features
* including some good stuff
* and some test stuff
** this doc is a test
** it does urls
* and other things

The [[.wizards.LeabraWizard_0]] is important for doing various ''configuration'' things.
The [[.edits.ControlPanel]] has all the main '''parameters''' and buttons at bottom for running the sim.

# Explicit [[ta:.docs.ChangeLog]] syntax
# Function calling! [[.networks[0].Init_Weights()]]
# Tab viewing! [[.T3Tab.EpochOutputData]]
# Back to [[.T3Tab.DefaultFrame]]
# Panel viewing! [[.PanelTab.ControlPanel]]

The [[http://grey.colorado.edu/pdp/index.php/Main_Page|PDP++ Wiki]] has lots of info.

=== Some Details ===
This is the details.

</body>
";
  };
  taDoc @[1] {
   name="NetworkDocs";
   auto_open=0;
   text="<html>
<head></head>
<body>
<h2>Overview</h2>
This is an overview of the network.
<h2>Details</h2>
This is the details.
</body>
</html>";
  };
  taDoc @[2] {
   name="ChangeLog";
   auto_open=0;
   text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>

<li>Tue Jul 10 02:59:02 2007 oreilly <code>leabra_ra.proj</code><br>
  Added test stuff to ProjectDocs, including Wiki formatting, some ta: links, and some external links.  very nice.  we need to figure out a syntax for downloaded wiki links..


<li>Sun Jul  8 01:03:06 2007 oreilly <code>leabra_ra.proj</code><br>
  Set the Doc link for Network, added this change log!
</ul>
</body>
</html>
";
  };
 };
 wizards {
  name=;
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
    };
   };
   name="LeabraWizard_0";
   auto_open=1;
   n_layers=3;
   layer_cfg {
    name=;
    el_typ=LayerWizEl;
    el_def=0;
    LayerWizEl @[0] {
     name="Input";
     n_units=25;
     io_type=INPUT;
    };
    LayerWizEl @[1] {
     name="Hidden";
     n_units=25;
     io_type=HIDDEN;
    };
    LayerWizEl @[2] {
     name="Output";
     n_units=25;
     io_type=OUTPUT;
    };
   };
   connectivity=BIDIRECTIONAL;
  };
 };
 edits {
  name=;
  el_typ=SelectEdit;
  el_def=0;
  SelectEdit @[0] {
   name="ControlPanel";
   desc="control panel for main parameters and functions in model";
   config {
    auto_edit=1;
    mbr_labels{ LeabraConSpec_0;HiddenLayer;    };
    meth_labels{ Train;Train;Train;Train;    };
   };
   mbr_bases {
    name=;
    el_typ=taBase;
    el_def=0;
	taBase_List @. = [0] = LeabraConSpec .projects[0].networks[0].specs[3];
	taBase_List @. = [1] = LeabraLayerSpec .projects[0].networks[0].specs[1];
   };
   mbr_strs{ lrate;kwta;   };
   meth_bases {
    name=;
    el_typ=taBase;
    el_def=0;
	taBase_List @. = [0] = Program .projects[0].programs.gp[0][1];
	taBase_List @. = [1] = Program .projects[0].programs.gp[0][1];
	taBase_List @. = [2] = Program .projects[0].programs.gp[0][1];
	taBase_List @. = [3] = Program .projects[0].programs.gp[0][1];
   };
   meth_strs{ Init;Run;Step;Stop;   };
  };
 };
 data {
  name=;
  el_typ=DataTable;
  el_def=0;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="SimpleLines5x5";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] "checks";"mitvert";"midhoriz";"rdiag";"ldiag";"random";      };
     };
     float_Data @[1] {
      name="Input";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 5;5;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [5 5 6] 1;0;0;0;1;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;1;0;0;0;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;1;0;0;0;1;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;1;1;0;0;0;0;0;0;0;1;0;0;1;0;0;0;1;0;0;0;1;0;0;0;0;0;      };
     };
     float_Data @[2] {
      name="Output";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 5;5;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [5 5 6] 1;0;0;0;1;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;1;0;0;0;1;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;1;0;0;0;1;0;0;0;1;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;1;1;0;0;0;0;0;0;0;1;0;0;1;0;0;1;1;0;0;0;0;0;0;0;0;0;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] 0;0;0;0;0;0;      };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] 21;21;21;21;21;21;      };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="trial";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] 0;1;2;3;4;5;      };
     };
     String_Data @[3] {
      name="trial_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] "midhoriz";"checks";"mitvert";"ldiag";"rdiag";"random";      };
     };
     String_Data @[4] {
      name="group_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] ;;;;;;      };
     };
     int_Data @[5] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItemBase;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
       };
      };
      name="phase_no";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] 2;2;2;2;2;2;      };
     };
     float_Data @[6] {
      name="minus_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] 15;16;16;18;15;15;      };
     };
     float_Data @[7] {
      name="sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] 0;0;0;0;0;0;      };
     };
     float_Data @[8] {
      name="ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [6] 0;0;0;0;0;0;      };
     };
     float_Data @[9] {
      name="Output_act";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 5;5;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [5 5 6] 0;0;0;0;0;0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0;0;0;0;0;0;0;0;0;0;0.94999999;0;0;0;0.94999999;0;0;0;0;0;0;0;0.94999999;0;0;0;0;0;0;0;0.94999999;0;0;0;0.94999999;0;0;0.94999999;0;0;0;0;0.94999999;0;0;0;0;0.94999999;0;0;0;0;0.94999999;0;0;0;0;0.94999999;0;0;0.94999999;0;0;0;0;0;0.94999999;0;0;0;0;0;0.94999999;0;0;0;0;0;0.94999999;0;0;0;0;0;0.94999999;0;0;0;0;0.94999999;0;0;0;0.94999999;0;0;0;0.94999999;0;0;0;0.94999999;0;0;0;0.94999999;0;0;0;0;0.94999999;0;0;0;0;0;0;0;0.94999999;0;0;0.94999999;0;0;0.94999999;0.94999999;0;0;0;0;0;0;0;0;0;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
     int_Data @[1] {
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 0;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;      };
     };
     float_Data @[2] {
      name="avg_sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 5.8227048;4.7361417;3.5132391;1.0772396;0.85938996;0;0;0;0.13589349;0;0;0.12565894;0;0;0.055976409;0;0;0;0;0;0;0;      };
     };
     float_Data @[3] {
      name="cnt_err";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 6;6;5;3;2;0;0;0;1;0;0;1;0;0;1;0;0;0;0;0;0;0;      };
     };
     float_Data @[4] {
      name="avg_ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
     float_Data @[5] {
      name="avg_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 25.833334;24.666666;23.666666;21.166666;15.333333;15;15;15;15;15.5;15;15.333333;15;15;15.166667;15;15;15.166667;22.5;15.166667;15.833333;15.833333;      };
     };
     float_Data @[6] {
      name="epoch_time_tot";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
     float_Data @[7] {
      name="epoch_time_usr";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [22] 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;      };
     };
     float_Data @[8] {
      name="Hidden_Fm_Input_r_wt";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 5;5;5;5;      };
      calc_expr {
       expr=;
      };
      ar {
       name=;
	    [5 5 5 5 22] 0.36631578;0.4948121;0.6646347;0.34036472;0.38635555;0.51531684;0.31225321;0.60313344;0.38526461;0.38671762;0.32570133;0.63352424;0.36416832;0.31268242;0.3856532;0.34366855;0.38490835;0.47656903;0.54239231;0.7659182;0.2704393;0.35036939;0.56249464;0.67088223;0.68268734;0.7545594;0.2145122;0.43377039;0.43196538;0.60993028;0.23645331;0.60297418;0.64668727;0.4337447;0.22486249;0.27396122;0.56473744;0.5308972;0.40218839;0.2847434;0.31944442;0.19759925;0.54116917;0.4651328;0.19546039;0.67638588;0.44018012;0.56532711;0.21861899;0.8301571;0.34882426;0.58678573;0.63197178;0.52564728;0.26256078;0.65553391;0.44176298;0.33399707;0.72061104;0.50211763;0.4393895;0.74141437;0.57370669;0.72781783;0.46904689;0.51232743;0.37202209;0.64024043;0.35275832;0.67584401;0.3577621;0.36246008;0.45686617;0.29548326;0.22773272;0.45734838;0.41678065;0.28078428;0.41077906;0.24642698;0.49448794;0.66409719;0.27174255;0.26536852;0.49365088;0.7012611;0.39909181;0.58239126;0.54037529;0.54029971;0.59135008;0.52462596;0.59379905;0.57241964;0.55040598;0.25340414;0.601062;0.57729506;0.44397086;0.31941858;0.80172825;0.40319654;0.52844858;0.47563455;0.47399595;0.41490126;0.26646662;0.45771185;0.49308425;0.56806326;0.28711414;0.40697634;0.54427421;0.40642318;0.49193138;0.70402914;0.44106632;0.39403942;0.27720773;0.48746753;0.69271582;0.61131817;0.55634034;0.27087331;0.34370536;0.26875117;0.51743329;0.3828004;0.67685229;0.31933835;0.60823554;0.6925087;0.392961;0.32793084;0.29896688;0.45259678;0.39755526;0.58436799;0.44154677;0.79398763;0.26626715;0.39121193;0.56714594;0.65222085;0.30847082;0.47129247;0.38074169;0.46192071;0.65243852;0.31375295;0.45292157;0.44878519;0.21039288;0.61815763;0.62917572;0.26041347;0.5419746;0.61726916;0.65923077;0.42905927;0.41991606;0.51837999;0.71076643;0.46117941;0.56001174;0.19079594;0.76920104;0.57667041;0.65778911;0.21326096;0.5191862;0.51468647;0.49443734;0.45551717;0.54674321;0.50354987;0.5998348;0.66521072;0.29388157;0.37619099;0.23207727;0.57325435;0.30521968;0.10740869;0.50523454;0.71899551;0.68854034;0.34842539;0.46770123;0.52777368;0.6069777;0.45681232;0.29559088;0.83202064;0.61981016;0.50931954;0.52451622;0.63864052;0.27855685;0.81062776;0.48516324;0.59976643;0.63327122;0.45540702;0.21636213;0.58276403;0.40036115;0.48824394;0.39574406;0.39129519;0.35532185;0.47320053;0.30399629;0.52084583;0.68790859;0.613208;0.49111241;0.7655592;0.66861057;0.53129613;0.50137836;0.38510337;0.72398764;0.53909492;0.60577452;0.36464396;0.61863828;0.39992154;0.6359098;0.59997767;0.66780776;0.32725126;0.17824474;0.64693272;0.71171409;0.79385895;0.60996282;0.55299705;0.73510498;0.49016282;0.69313717;0.34683505;0.41690433;0.67293221;0.55756295;0.65866357;0.43622321;0.39867532;0.49200127;0.29020858;0.31863269;0.42411569;0.3460612;0.52724606;0.36922517;0.40683275;0.61791819;0.74386024;0.50016236;0.49675098;0.44568416;0.59320217;0.60473734;0.38997063;0.35802385;0.40878484;0.21731465;0.77450293;0.19623594;0.57116282;0.27175787;0.37807727;0.7851941;0.57745153;0.49624124;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.24648476;0.40692598;0.51716834;0.46917382;0.86145979;0.55833787;0.3468121;0.56471151;0.59261596;0.2912578;0.25937858;0.5830487;0.90367907;0.38575241;0.54855293;0.3616676;0.53774601;0.27484551;0.30312636;0.55622661;0.6303919;0.30400956;0.65061212;0.41091704;0.3101193;0.62036145;0.31602556;0.52172869;0.50291395;0.28716576;0.44744924;0.45652023;0.31114775;0.31544349;0.72736216;0.53437024;0.31872886;0.2760824;0.5241856;0.74795884;0.62872243;0.6734212;0.65920067;0.6198405;0.29453492;0.58366722;0.52254164;0.55916202;0.62608987;0.50504071;0.4133274;0.46428138;0.56246102;0.32428074;0.43826497;0.26950407;0.27584288;0.33651665;0.74993068;0.32005233;0.61172998;0.60872608;0.20075919;0.60017914;0.19808875;0.63260472;0.60447133;0.22970335;0.70014447;0.5560624;0.27545473;0.39403462;0.24304332;0.6085332;0.46315044;0.73731834;0.35675329;0.23144662;0.31980175;0.59021068;0.44320676;0.51954156;0.64026576;0.50078964;0.60500598;0.65632987;0.25365448;0.77694303;0.21874684;0.3594172;0.59809273;0.27657694;0.35133916;0.72561216;0.38209459;0.37859678;0.33251369;0.40745813;0.42794085;0.6590389;0.62778097;0.48385969;0.60407913;0.57477069;0.41540322;0.3537285;0.66057724;0.66531062;0.46559051;0.45185694;0.40098974;0.56096977;0.37618589;0.43138009;0.65848774;0.39339247;0.38377389;0.30882922;0.69717252;0.6962682;0.21716355;0.40285054;0.47516009;0.5336718;0.6062566;0.34212795;0.60455626;0.61008132;0.33021373;0.68775195;0.3748374;0.47506762;0.60570818;0.45686439;0.54357362;0.52382284;0.34778395;0.2711955;0.3845818;0.35628995;0.77419132;0.67847663;0.27486286;0.30693924;0.72386807;0.44605371;0.32987973;0.57637626;0.70128912;0.37809369;0.21218061;0.33380044;0.63854021;0.71694845;0.72171205;0.24740663;0.49790898;0.54187238;0.41233945;0.64433867;0.45660865;0.30846652;0.33474889;0.22979286;0.64707798;0.26759684;0.30270243;0.29530239;0.56982607;0.71174258;0.5913825;0.27398807;0.44636735;0.28452146;0.37944683;0.36084652;0.63986462;0.29906559;0.6478017;0.60386419;0.39310378;0.66737425;0.72389811;0.67328233;0.23886575;0.31040549;0.4719421;0.49788836;0.22607335;0.48527104;0.28048417;0.79321492;0.23693421;0.68346322;0.28035042;0.79045099;0.71084815;0.38703591;0.29985368;0.55197614;0.53742456;0.29510367;0.69826996;0.69403154;0.5374698;0.23546138;0.54339534;0.33007762;0.78921026;0.6223582;0.51093823;0.4279564;0.4660244;0.57663935;0.52397448;0.63196403;0.69371921;0.45607519;0.39574474;0.21676473;0.36101556;0.24077655;0.49736875;0.58991802;0.23554565;0.2757788;0.4475809;0.62913442;0.49253047;0.52838391;0.38130757;0.15302952;0.46843293;0.26072496;0.33729303;0.30256808;0.31133687;0.5092203;0.46247306;0.61129731;0.28647372;0.39930207;0.70373136;0.30097058;0.27638677;0.48924938;0.30615947;0.60918754;0.64550567;0.17558467;0.52339327;0.3303144;0.27146271;0.38460451;0.24685448;0.33808115;0.29906109;0.25772518;0.45309699;0.25616944;0.54711759;0.59959;0.59304422;0.53998601;0.57475358;0.55483556;0.70954829;0.45306474;0.56010383;0.31104958;0.33768114;0.24618229;0.50260395;0.46887311;0.3277705;0.52533495;0.49956229;0.52410871;0.46836269;0.24995774;0.37879649;0.44904631;0.3604753;0.502527;0.48200634;0.30950356;0.58994704;0.23736745;0.4609794;0.41995296;0.67430621;0.54548657;0.40547803;0.41684651;0.72374469;0.16901617;0.55925888;0.62626386;0.51227236;0.48817667;0.58032346;0.41142926;0.34944105;0.41970634;0.21253817;0.6218105;0.24425885;0.55463535;0.5354315;0.50262713;0.77035958;0.63606274;0.53716832;0.52326262;0.7028445;0.61287123;0.54164803;0.4483842;0.27679056;0.75992447;0.41868255;0.62948763;0.66307306;0.63507026;0.54481047;0.44135979;0.47386754;0.69396377;0.32281515;0.36743146;0.49419442;0.29941911;0.63592207;0.45655227;0.3677839;0.27516988;0.65197951;0.36558571;0.26362169;0.32915273;0.41356733;0.36602306;0.51356941;0.52537876;0.8084439;0.25552502;0.33249682;0.59708357;0.65074199;0.66649199;0.87903064;0.16949978;0.18247902;0.35627708;0.59947771;0.18747838;0.74002916;0.32659143;0.36172467;0.17796007;0.21861678;0.48176393;0.53422534;0.32944992;0.2276672;0.25711453;0.16007739;0.24719085;0.62965548;0.1540221;0.66413641;0.36375597;0.26374021;0.17285238;0.91834199;0.35173306;0.52219266;0.71619254;0.46175739;0.2202138;0.59249514;0.38170931;0.44140166;0.71699637;0.43898201;0.32128778;0.67251682;0.59753841;0.59989339;0.34639224;0.51226801;0.31743488;0.72300935;0.30001634;0.67284471;0.30452761;0.30877107;0.56258214;0.24902008;0.1901135;0.4583607;0.41436437;0.28406093;0.40837833;0.24470586;0.49192849;0.66469294;0.27497539;0.26354572;0.49109298;0.66383702;0.36312312;0.55132324;0.50014579;0.50007164;0.58878142;0.52204305;0.59698063;0.57322967;0.54781765;0.25164464;0.59850264;0.58055115;0.44149131;0.32051778;0.80165964;0.32947594;0.35220623;0.39547729;0.47194389;0.33995587;0.23977537;0.29455698;0.4302901;0.48399395;0.22899319;0.33423701;0.47611773;0.3323575;0.41071749;0.62235403;0.38137132;0.24658529;0.24944898;0.40702742;0.68406332;0.5272786;0.37639105;0.21539596;0.36330485;0.18213175;0.46956986;0.30920747;0.63071525;0.28425586;0.56010097;0.54590988;0.3181335;0.28855842;0.26331016;0.65320176;0.604173;0.63364172;0.64369082;0.88891;0.23364289;0.34715047;0.47989047;0.50334895;0.27198508;0.4272576;0.33878666;0.38010567;0.60535967;0.21487956;0.40470871;0.39904249;0.17291021;0.56575853;0.59394348;0.22559042;0.53469229;0.5483135;0.67214876;0.38033837;0.37171587;0.46616632;0.6983102;0.41086513;0.50721574;0.16407405;0.77791721;0.50735891;0.64802545;0.18379287;0.48721725;0.46255809;0.42712793;0.40545788;0.4923417;0.50509793;0.55409348;0.6210416;0.2604157;0.33661738;0.20434226;0.59621322;0.27080578;0.087743141;0.46006975;0.70734811;0.65443689;0.40619618;0.45789465;0.51697332;0.53753942;0.41313466;0.26197943;0.8427043;0.5505802;0.46406484;0.47897655;0.59362644;0.24642538;0.82263613;0.54644907;0.55963486;0.76784599;0.41701525;0.19326831;0.54249787;0.46339247;0.65320081;0.35984299;0.35561827;0.3317973;0.44532624;0.58441168;0.49198896;0.65979344;0.57325077;0.45170501;0.85856593;0.71567029;0.49119276;0.46174696;0.34974614;0.83122623;0.49891278;0.65912235;0.23652776;0.57625329;0.36161551;0.59388673;0.59581655;0.62674719;0.17001815;0.15761419;0.69908667;0.67263293;0.80903298;0.69357288;0.4221935;0.75388128;0.51772922;0.70926988;0.34851283;0.37775677;0.43601355;0.58052695;0.65338248;0.39621758;0.36043426;0.45013738;0.14841017;0.3337782;0.38997063;0.40520528;0.4905315;0.33755198;0.37338746;0.62730235;0.78437161;0.46384698;0.4605003;0.4180249;0.56353587;0.70625156;0.3642582;0.33369124;0.37525684;0.19599558;0.81104785;0.20990062;0.53424299;0.24617538;0.34595665;0.82028544;0.54054844;0.50910509;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.2291818;0.32758972;0.47252989;0.38375899;0.87281048;0.46823266;0.27528411;0.51870233;0.57083887;0.22847112;0.20221068;0.49257052;0.92448157;0.30895972;0.45871222;0.28804356;0.51701492;0.2471485;0.23835628;0.46617353;0.66052091;0.23909396;0.60424429;0.33112752;0.28812572;0.63340098;0.31456909;0.51990992;0.50110495;0.28580323;0.44569668;0.47102162;0.30970657;0.3139891;0.72578394;0.52823478;0.31381673;0.28540334;0.51805991;0.74283129;0.62694675;0.67171592;0.65746963;0.63288969;0.29314739;0.58185267;0.52072245;0.55733919;0.62431151;0.51941448;0.4399761;0.43737951;0.53455675;0.30210358;0.41196078;0.25012088;0.25611132;0.31378466;0.76805824;0.29807314;0.55838418;0.60774016;0.17270312;0.54668474;0.1703655;0.65610963;0.57678169;0.21265019;0.67451417;0.58174688;0.25574431;0.369048;0.22518268;0.58088583;0.43627146;0.84905946;0.29117659;0.091670811;0.25910053;0.58354616;0.36865407;0.63528275;0.33434775;0.42839545;0.52436799;0.57720345;0.20307168;0.72194022;0.17416248;0.2935122;0.5173896;0.22871611;0.14701913;0.80140221;0.31352228;0.37968901;0.27007017;0.17625819;0.35471079;0.79786754;0.84703648;0.44169;0.5609324;0.53141004;0.37584588;0.31767654;0.77791721;0.62363291;0.58036536;0.41073385;0.18588366;0.41961047;0.32835478;0.20374566;0.37269714;0.5105896;0.34588429;0.27596584;0.80429143;0.77748269;0.19232452;0.36392173;0.43324378;0.4905113;0.7371223;0.29292798;0.59064537;0.5962044;0.31877738;0.67474163;0.36248273;0.46135163;0.5918045;0.39774489;0.52952391;0.50981718;0.29798496;0.26124832;0.3720516;0.34429464;0.71964037;0.66532373;0.2648142;0.29605365;0.66463566;0.43262845;0.31845078;0.5623486;0.68850708;0.36567912;0.2146976;0.32942623;0.66666675;0.71226704;0.72051829;0.24388008;0.49601737;0.57334268;0.40742064;0.63923067;0.45148394;0.30431423;0.37315863;0.22646944;0.64198208;0.26384968;0.29860395;0.32477888;0.56778228;0.70702195;0.59036225;0.27017385;0.478973;0.28059998;0.38227639;0.22026837;0.60572076;0.27298346;0.61384314;0.4927679;0.36197403;0.63395381;0.69272625;0.71190679;0.21697058;0.2836152;0.43813032;0.39467439;0.2051558;0.45115557;0.25561935;0.82038969;0.21518469;0.65057641;0.25549456;0.69144362;0.67906278;0.35617295;0.27372205;0.36927471;0.45419613;0.27340475;0.64547932;0.66696721;0.58898681;0.21726473;0.51421809;0.28575587;0.84879166;0.59358418;0.48201498;0.4007206;0.49559328;0.54745132;0.49492136;0.60334229;0.77511358;0.40266386;0.36954445;0.19978318;0.42133042;0.22224475;0.44224942;0.56079698;0.18740988;0.2554065;0.42016628;0.80369973;0.46421877;0.49966535;0.35595956;0.14072561;0.68807834;0.2412186;0.31377912;0.28074786;0.28906888;0.72010314;0.43471459;0.58274734;0.26550886;0.37330788;0.8492862;0.27923295;0.25598061;0.46098873;0.28415424;0.79075092;0.61750394;0.16163588;0.28703737;0.30321693;0.24796484;0.3548156;0.22505891;0.31056011;0.14467831;0.23516348;0.42084244;0.23371628;0.75036371;0.78630638;0.57341248;0.74526453;0.769629;0.52100629;0.67874748;0.42081115;0.31536788;0.28505468;0.31018183;0.22443458;0.46925727;0.43620583;0.1605854;0.54755467;0.47220525;0.49649242;0.4415144;0.2317785;0.35447058;0.42261058;0.33684969;0.52507252;0.45491132;0.25525236;0.56530678;0.19350044;0.39166433;0.35372257;0.69235754;0.51774901;0.38024127;0.39126238;0.73970008;0.15602602;0.53149676;0.59898698;0.48476586;0.46098229;0.38213885;0.35479432;0.29817608;0.36246675;0.17785054;0.5591746;0.1133391;0.49165246;0.5381031;0.44089866;0.76270777;0.68883944;0.33900982;0.51873821;0.69550139;0.61399418;0.47885928;0.38926366;0.13002224;0.75836182;0.36151609;0.5670411;0.6018424;0.57278234;0.29830727;0.51652992;0.44490466;0.6667096;0.29920024;0.34176984;0.46487132;0.28104356;0.60719573;0.52687711;0.34210861;0.25413924;0.71037489;0.34490776;0.24327631;0.30522448;0.48390427;0.3404209;0.48449081;0.50042367;0.84539223;0.23567341;0.30840674;0.56785715;0.62186044;0.6422444;0.90015948;0.13526042;0.14584018;0.29305097;0.49712461;0.14992839;0.72853953;0.26709136;0.23377231;0.14215112;0.1755683;0.40720221;0.502747;0.26957554;0.18307851;0.20771034;0.098521881;0.19937594;0.61880046;0.12270669;0.56172138;0.29964995;0.21329458;0.13798878;0.93277633;0.31766006;0.45441133;0.71015495;0.39673579;0.18152562;0.5238232;0.32289743;0.44000059;0.67376918;0.3754431;0.37052384;0.72221947;0.69470751;0.63824087;0.3959049;0.46875641;0.26550913;0.71691567;0.25022429;0.6281088;0.25417235;0.257893;0.55874687;0.2060826;0.15613352;0.4583607;0.41436437;0.28406093;0.40837833;0.24470586;0.49192849;0.66469294;0.27497539;0.26354572;0.49109298;0.66383702;0.36312312;0.55132324;0.50014579;0.50007164;0.58878142;0.52204305;0.59698063;0.57322967;0.54781765;0.25164464;0.59850264;0.58055115;0.44149131;0.32051778;0.77675372;0.29492822;0.31609306;0.35676384;0.5046829;0.30466911;0.1920051;0.26267222;0.4321118;0.44162783;0.20289768;0.3086569;0.47282714;0.29760385;0.37121233;0.58932352;0.37377101;0.21883978;0.20006245;0.37780705;0.70889163;0.48400223;0.33876139;0.19062179;0.33380234;0.17067394;0.43853405;0.28460422;0.59920365;0.2611202;0.52798724;0.52114892;0.29303375;0.2651616;0.24149534;0.68329126;0.63646924;0.67099106;0.67425376;0.90094483;0.21383154;0.32054362;0.44863206;0.47904983;0.2496134;0.39738443;0.31259739;0.35199234;0.57347894;0.20149443;0.35406834;0.34795198;0.14635912;0.50805861;0.72227561;0.19199131;0.34631899;0.49076211;0.68028009;0.33066013;0.2825228;0.36428264;0.63724524;0.31574667;0.40163204;0.1387721;0.78282166;0.45067948;0.45006415;0.15572912;0.63224858;0.40763479;0.37415496;0.3539122;0.42985618;0.5025245;0.52707714;0.59442502;0.24212408;0.20039611;0.18937105;0.72799438;0.25194988;0.080976941;0.43409503;0.59865165;0.54162818;0.34480935;0.35273141;0.4062027;0.51057434;0.38833186;0.24360135;0.90242642;0.52357012;0.29223669;0.45264921;0.56672615;0.22891897;0.7953676;0.55793726;0.49639994;0.7695967;0.35979441;0.15561046;0.47949567;0.48954105;0.65771598;0.30741742;0.30359572;0.26822239;0.36885673;0.64218432;0.41209024;0.5784421;0.5099327;0.39220479;0.85841143;0.7311272;0.42971581;0.39015755;0.29829586;0.83158851;0.43712965;0.66620672;0.12039799;0.54471785;0.33478156;0.56245202;0.56439739;0.59571713;0.15524374;0.14382841;0.46729133;0.64266074;0.81374818;0.50135016;0.43570653;0.76036775;0.53014189;0.47837213;0.32228959;0.35021806;0.40638041;0.35342515;0.62289482;0.36793756;0.33365393;0.42010662;0.13537133;0.35388598;0.35408306;0.43577659;0.45082521;0.30472374;0.33839181;0.64055687;0.80247658;0.42487726;0.42163756;0.35034949;0.48809794;0.74299932;0.30204859;0.27513912;0.34015754;0.17463781;0.82722247;0.22808702;0.49378684;0.22025508;0.31259122;0.83576459;0.50003314;0.52653968;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.19592389;0.25900546;0.45086566;0.3073051;0.93966973;0.38299415;0.10039503;0.49562353;0.55154943;0.17719603;0.15616794;0.40554804;0.89934701;0.24331141;0.37426561;0.22587346;0.49894789;0.23616086;0.085613906;0.38110173;0.82717371;0.18577415;0.57955182;0.26200375;0.23971844;0.67394477;0.30988285;0.51402283;0.49525264;0.29505852;0.44003707;0.50203115;0.30507049;0.30930838;0.72064328;0.51637411;0.30445305;0.32279736;0.50622869;0.7327562;0.62118179;0.66617006;0.65184289;0.65986538;0.28868517;0.59108704;0.51483446;0.55143255;0.61853677;0.56525874;0.48113611;0.40752453;0.5029009;0.27816892;0.38292894;0.2294043;0.23499906;0.28919527;0.79473144;0.2743701;0.53514087;0.65308756;0.16274294;0.52351242;0.16053915;0.69113994;0.54505157;0.1945444;0.6444093;0.62045163;0.23465644;0.34171787;0.20617773;0.5491724;0.40644813;0.87288547;0.23738688;0.073007636;0.21010277;0.4783906;0.3049452;0.6219812;0.27472988;0.28259936;0.44894719;0.50071216;0.16330773;0.67865914;0.13955578;0.23938873;0.44222915;0.14155114;0.11747326;0.78859174;0.25662386;0.29702827;0.21939099;0.14126928;0.29260466;0.82893902;0.86654574;0.40392905;0.52078825;0.49145943;0.19306053;0.28654522;0.87333214;0.58400899;0.6449526;0.37425482;0.16573399;0.49281415;0.34379035;0.18189868;0.3381412;0.58050561;0.31290469;0.24790689;0.88923007;0.81649631;0.091836594;0.32986233;0.39580733;0.45126894;0.70477176;0.35582554;0.58225179;0.58782709;0.31203222;0.66682762;0.35517189;0.45316964;0.58341396;0.46587831;0.52109355;0.50142717;0.36129454;0.25540596;0.36463094;0.33720607;0.7680369;0.65733033;0.25891098;0.28964415;0.7196371;0.42463925;0.31171009;0.55390638;0.68072128;0.35833105;0.23209861;0.32453573;0.66252321;0.70694327;0.72891432;0.23994939;0.49010393;0.5690124;0.39384058;0.63344425;0.44572744;0.29967707;0.38885033;0.22276694;0.63620788;0.25967041;0.28749162;0.32138193;0.56180823;0.70165575;0.60217214;0.26591843;0.47476801;0.27622387;0.40449926;0.15608476;0.58700418;0.25960386;0.59519446;0.63565618;0.34574562;0.51337278;0.67528945;0.81110632;0.2058429;0.26984701;0.42024049;0.44219363;0.19454552;0.43305892;0.24290214;0.88622302;0.20413449;0.5305928;0.24278194;0.79618639;0.66134113;0.34010145;0.26031542;0.27182341;0.43073219;0.2519086;0.61566269;0.63767284;0.66123408;0.19942065;0.4838044;0.26352862;0.8800751;0.5630151;0.45208853;0.37303934;0.5739072;0.51678747;0.46477109;0.57286114;0.81922579;0.37491181;0.34308964;0.18318053;0.50090277;0.2040561;0.41324386;0.53010607;0.17542242;0.23394075;0.39028716;0.82665551;0.43305537;0.46779281;0.32871106;0.12801103;0.72037107;0.22071984;0.28872046;0.25764519;0.26545411;0.75014848;0.40436298;0.55041826;0.24337679;0.34526277;0.86766458;0.25622472;0.23447658;0.4299044;0.26084015;0.8149175;0.58551478;0.14717571;0.1818464;0.27924788;0.22741662;0.32816571;0.20608547;0.28617802;0.13188525;0.2154846;0.28017262;0.21413761;0.77834255;0.70244718;0.61192936;0.77366292;0.79596132;0.36295992;0.64881122;0.39151233;0.29072165;0.18047632;0.28582123;0.20550512;0.43860862;0.40642214;0.14649379;0.59902;0.44229245;0.46613321;0.41235343;0.21282858;0.3285228;0.39401403;0.31173718;0.5773403;0.4253968;0.23475835;0.6160022;0.17725956;0.36415365;0.32780907;0.73421741;0.48710975;0.35318142;0.36376724;0.77686751;0.14265029;0.50073284;0.56827432;0.45460552;0.4313204;0.38253543;0.3068766;0.25578922;0.31388152;0.1504066;0.50105387;0.095403954;0.43505308;0.5353269;0.38669163;0.83456022;0.81567591;0.46874967;0.64067745;0.78457928;0.60982454;0.42276633;0.33850756;0.10954471;0.75249231;0.31301236;0.50887394;0.54381478;0.51459962;0.25590608;0.55431694;0.41444933;0.63627267;0.2751343;0.31538957;0.43389553;0.25807032;0.57561499;0.56447357;0.31571084;0.23289452;0.73973465;0.31874567;0.22276619;0.28080973;0.52209121;0.31410864;0.45346957;0.46874788;0.86330789;0.21568957;0.28381053;0.53604496;0.59014928;0.61090899;0.92232871;0.11224561;0.12112088;0.24768327;0.50112844;0.12455738;0.73123735;0.22490036;0.19596881;0.11802335;0.1462;0.35063788;0.57641894;0.22707097;0.15257002;0.17356816;0.081605323;0.16644487;0.62415558;0.10174565;0.56442195;0.25350916;0.1783516;0.11453217;0.94800115;0.29513782;0.39656898;0.71308541;0.34274504;0.15216559;0.46316871;0.27565911;0.44841653;0.64301467;0.32319701;0.40826717;0.764979;0.76927376;0.6651324;0.43346334;0.43934083;0.22480321;0.71968806;0.21143258;0.59669906;0.21487956;0.21813209;0.56509411;0.17320225;0.13057283;0.45794696;0.41396666;0.28374416;0.40798301;0.24442296;0.4915072;0.66429049;0.27466616;0.26324612;0.49067137;0.45787036;0.21018101;0.35251811;0.31026086;0.310202;0.58835769;0.52161729;0.59655851;0.57280403;0.54739112;0.2513555;0.59808075;0.58012635;0.44108331;0.32017344;0.8708365;0.25225744;0.27117527;0.30794156;0.73896533;0.26094651;0.16216591;0.22369394;0.44399002;0.3865405;0.17156184;0.26451212;0.71519405;0.25464118;0.32113895;0.53025126;0.38608813;0.1853694;0.16911338;0.32718676;0.86577797;0.42681837;0.29159918;0.16097516;0.52454841;0.15546799;0.40804458;0.26124611;0.56697172;0.23926012;0.49574208;0.48896977;0.26916292;0.2430367;0.22096275;0.71522051;0.67109519;0.70368451;0.70674819;0.91325724;0.19528292;0.2950924;0.41785121;0.44753122;0.22852382;0.36831784;0.28758785;0.32491553;0.54109031;0.18387139;0.39029396;0.31503326;0.13025956;0.4686816;0.79618543;0.17137061;0.31350094;0.45174143;0.70655465;0.29883638;0.25411645;0.33039725;0.72675145;0.28492421;0.36578646;0.12345847;0.80232936;0.41281587;0.41222104;0.13867208;0.72254264;0.37150741;0.33971697;0.32063317;0.46589166;0.42179143;0.4886789;0.55591875;0.21775837;0.13099028;0.16962427;0.74835378;0.2267841;0.072193488;0.3980166;0.56018603;0.50308985;0.28224841;0.32055989;0.37127537;0.47241038;0.35424688;0.21911408;0.91056496;0.48521507;0.19513154;0.41591784;0.52809614;0.20565926;0.72200602;0.34153152;0.43363526;0.77046591;0.30648446;0.065239184;0.41747314;0.49331218;0.66111284;0.2596595;0.25628075;0.22523978;0.3146883;0.48035994;0.35425732;0.51398855;0.44666728;0.33596638;0.85764325;0.73024267;0.37060261;0.17957453;0.25160351;0.83124977;0.3775163;0.43927827;0.11386932;0.5257991;0.31930229;0.54352552;0.54547292;0.57690597;0.14695409;0.13610455;0.44894329;0.62430876;0.85341972;0.578632;0.51459455;0.80947012;0.6059376;0.45989037;0.30719495;0.33428964;0.38906842;0.33740702;0.60430646;0.35152975;0.31820881;0.40251762;0.12807378;0.3320474;0.32556018;0.47385025;0.41843998;0.27895415;0.31068978;0.61430639;0.82426918;0.39331865;0.3901931;0.3220171;0.45480686;0.77493024;0.27644247;0.2512548;0.31236002;0.15835789;0.8467133;0.21267761;0.460388;0.20030567;0.28634956;0.85442954;0.4665255;0.50008821;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.34192425;0.20560366;0.42649835;0.24613802;0.97100145;0.31165349;0.078184463;0.46972287;0.53786665;0.13891838;0.12213106;0.33168876;0.96157587;0.19262759;0.30396512;0.17831615;0.48651633;0.2230923;0.06665539;0.30998346;0.91631007;0.14580512;0.5518201;0.20809345;0.396671;0.76523066;0.29669777;0.4971804;0.47853604;0.4074682;0.42394805;0.48335874;0.29202813;0.29211852;0.70563686;0.4841916;0.27990934;0.42158175;0.47418049;0.70423567;0.60452336;0.64479542;0.63553452;0.64178348;0.27614969;0.69403279;0.49798778;0.53447747;0.6018554;0.67535818;0.52055728;0.37860453;0.47153905;0.25562045;0.35496196;0.21007192;0.21527693;0.26597762;0.81821424;0.25205705;0.50343031;0.68705106;0.1484388;0.49189875;0.14641263;0.72279084;0.5132851;0.1777558;0.61347407;0.65609086;0.21495816;0.31562677;0.18851875;0.51738924;0.37756762;0.89947778;0.19951941;0.060600899;0.17599988;0.4803296;0.25872394;0.62765497;0.2320668;0.23898107;0.39022085;0.43950501;0.13613416;0.73571813;0.11610699;0.20125327;0.3839083;0.11778449;0.097598635;0.79019958;0.21623248;0.30187032;0.18398266;0.1175475;0.24780074;0.8636325;0.76509094;0.3524048;0.46364611;0.43521452;0.091476351;0.24566364;0.87530011;0.52620333;0.63583016;0.3249802;0.14015552;0.48577228;0.21214257;0.15405202;0.29201746;0.57205665;0.26923954;0.21148375;0.89074135;0.8078475;0.043052256;0.28452232;0.34486738;0.39682391;0.51888084;0.38275057;0.55957419;0.56517684;0.29436138;0.64520574;0.33593306;0.43140477;0.56074166;0.49415746;0.49848747;0.47898379;0.38835323;0.24018437;0.34508431;0.3185879;0.78676802;0.63551992;0.2435258;0.27289;0.74110663;0.40345579;0.2940518;0.53117824;0.65940839;0.33898798;0.29974955;0.31059274;0.64703453;0.69123024;0.75880408;0.22881247;0.47301361;0.55280924;0.35321355;0.61649233;0.42915338;0.28648105;0.44186711;0.21228833;0.61928797;0.24781351;0.25494266;0.30855468;0.54442942;0.68582559;0.64425474;0.25384101;0.45900473;0.26379299;0.48456517;0.14318186;0.55734634;0.23958077;0.56559485;0.66044718;0.32112986;0.48391154;0.6471501;0.8262037;0.18931751;0.24921037;0.39276186;0.47088233;0.17881155;0.40519899;0.22391658;0.89569932;0.18772765;0.50097269;0.22380386;0.81230557;0.63282675;0.31574637;0.24024965;0.25107068;0.41368681;0.22997096;0.58253449;0.60492873;0.7050578;0.18138932;0.45113304;0.24079227;0.89409208;0.52951813;0.4201842;0.34406048;0.62332481;0.48357812;0.43253136;0.53937525;0.83930421;0.34584773;0.31557694;0.16645153;0.55286437;0.18566068;0.38260153;0.49675715;0.16804576;0.213819;0.36133018;0.84748572;0.40255105;0.43633267;0.3026641;0.11631025;0.75057298;0.20155278;0.26497003;0.23588701;0.24317887;0.7780081;0.37485284;0.51783836;0.22259209;0.31835756;0.88415509;0.23456194;0.21431696;0.39949986;0.23886913;0.836918;0.55297911;0.13382934;0.16592182;0.25647449;0.20809044;0.30258679;0.18831022;0.26297978;0.12004728;0.19701663;0.25734198;0.19576828;0.80303651;0.73304212;0.64763892;0.79876149;0.81908548;0.33566731;0.61774796;0.36299789;0.26724982;0.16465917;0.26264471;0.18777321;0.40845609;0.37733737;0.13342525;0.63566571;0.4121792;0.43540046;0.38319671;0.1946419;0.3030476;0.36553875;0.28716809;0.61481047;0.3957994;0.21500999;0.65191007;0.16176899;0.33693856;0.30237174;0.76284659;0.45593917;0.32647508;0.33656934;0.80199105;0.12996307;0.46933296;0.53639895;0.42415655;0.40153456;0.39112303;0.26032889;0.21541147;0.26655474;0.12518239;0.43968534;0.079159178;0.37704659;0.54157484;0.33228603;0.83549595;0.856296;0.4782007;0.64650834;0.7867136;0.61450249;0.3655864;0.28857422;0.090935037;0.75393647;0.26578125;0.44723269;0.4812986;0.4527764;0.21551347;0.59238857;0.38532552;0.60521489;0.25280476;0.29070807;0.40413982;0.2368269;0.5438748;0.60224319;0.2910119;0.21334559;0.76784307;0.29388157;0.20392929;0.25813067;0.56092376;0.28949744;0.42316118;0.43806773;0.87993735;0.19736008;0.26094899;0.50437331;0.55848408;0.57944626;0.94133097;0.092918605;0.10031168;0.20779186;0.50939488;0.10317853;0.73459429;0.1881243;0.16336454;0.097729623;0.12129109;0.29874593;0.65130645;0.18999146;0.12664227;0.14435032;0.067503445;0.13833095;0.63027412;0.084191345;0.57139909;0.21284644;0.14839944;0.094821706;0.96094722;0.26669025;0.33168653;0.70664269;0.28367928;0.12241977;0.39287889;0.22547877;0.44693872;0.60158521;0.26654074;0.39838004;0.77503186;0.80483294;0.65037334;0.42283034;0.40146574;0.18245105;0.71318024;0.17128198;0.55488622;0.1741557;0.17687134;0.56103832;0.13964796;0.10485546;0.45794696;0.41396666;0.28374416;0.40798301;0.24442296;0.4915072;0.66429049;0.27466616;0.26324612;0.49067137;0.45787036;0.21018101;0.35251811;0.31026086;0.310202;0.58835769;0.52161729;0.59655851;0.57280403;0.54739112;0.2513555;0.59808075;0.58012635;0.44108331;0.32017344;0.87542927;0.21092372;0.22734821;0.25960553;0.79170924;0.2184529;0.14100535;0.18633465;0.45003358;0.33017054;0.14206457;0.22154985;0.7801494;0.21298656;0.27129656;0.46566954;0.39295995;0.15371783;0.14706893;0.2766749;0.89590514;0.36725235;0.24521132;0.1331629;0.54419935;0.14146635;0.37848666;0.23931402;0.53447318;0.21882388;0.46381608;0.45716271;0.24671309;0.22233711;0.20183504;0.74585259;0.70471841;0.73514813;0.73799419;0.92450541;0.17808543;0.27102804;0.38794217;0.41668916;0.20884846;0.34039414;0.26397797;0.29915124;0.50865281;0.1675653;0.3690919;0.27611816;0.11211637;0.419801;0.81985295;0.14791945;0.27472222;0.40357906;0.71946573;0.2613945;0.22111541;0.29015484;0.75707656;0.24880524;0.32275325;0.10622445;0.81111711;0.36667573;0.36611587;0.11941569;0.75323617;0.32805881;0.29870334;0.28122652;0.4419153;0.45635533;0.46045011;0.5271036;0.20093457;0.12036373;0.15611406;0.77253163;0.20937641;0.066269808;0.37208676;0.531367;0.47465232;0.31249276;0.29785338;0.34633291;0.44447032;0.33000296;0.20220181;0.92051411;0.45704338;0.17982456;0.38940382;0.49940237;0.18963727;0.7479732;0.32554665;0.40267253;0.79379165;0.28132331;0.05913825;0.38705465;0.4731451;0.69176149;0.23745692;0.23430759;0.20546776;0.28905162;0.52881777;0.32651827;0.48122561;0.4153091;0.30915943;0.8732512;0.71085364;0.34208828;0.16333684;0.22995149;0.84935957;0.3486914;0.42024887;0.10436351;0.49643826;0.29612759;0.51405436;0.51599348;0.54742354;0.1348407;0.12483206;0.42086768;0.59527117;0.86981678;0.61316347;0.55064863;0.82993895;0.63948959;0.43155417;0.28463948;0.31038558;0.36285135;0.31335628;0.57501358;0.32683694;0.29508916;0.37582031;0.11743285;0.3350513;0.2966617;0.50949168;0.38487434;0.25312272;0.28272012;0.6118536;0.84246206;0.36081615;0.35783371;0.29333568;0.41997772;0.81805974;0.25078955;0.22745834;0.28428337;0.14243501;0.86286104;0.21705607;0.42539433;0.18063793;0.26000124;0.86985177;0.43136075;0.49989897;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.33845434;0.16564593;0.46321017;0.1994717;0.97623384;0.25536188;0.062361181;0.50473857;0.53269887;0.11109019;0.097543016;0.27278066;0.97852373;0.15492906;0.24872011;0.14316839;0.48248371;0.25886708;0.053184569;0.2539171;0.93147135;0.116668;0.58231336;0.16770844;0.39169234;0.77806139;0.25661492;0.44337827;0.42540205;0.41961354;0.3735294;0.44521505;0.25242218;0.2525034;0.65461463;0.43084061;0.24157101;0.44959944;0.42122188;0.65312409;0.54965955;0.59085697;0.5813151;0.60077602;0.238213;0.70058376;0.44415963;0.47975448;0.54695714;0.69372296;0.55976456;0.3506155;0.44052541;0.23435561;0.32803598;0.19199732;0.19682026;0.24403672;0.83963007;0.231029;0.47182858;0.71919525;0.13520576;0.46048245;0.13334794;0.75243932;0.48154998;0.16214904;0.58176237;0.69012719;0.1965245;0.29071811;0.17207207;0.48560533;0.34962276;0.92287087;0.16666244;0.050242446;0.14665043;0.48847789;0.21772254;0.63222605;0.19460618;0.20058146;0.33518249;0.38084781;0.1130439;0.78960305;0.096295506;0.16814379;0.32940212;0.097695194;0.080886319;0.79098815;0.18097417;0.31176141;0.1534265;0.097497426;0.20822449;0.89456844;0.79947722;0.31021801;0.41477472;0.38766041;0.078571722;0.21343844;0.86974978;0.47545552;0.64065206;0.28504357;0.1206307;0.49326593;0.21350494;0.132715;0.25507462;0.57812655;0.23454325;0.18309173;0.88549411;0.80905038;0.037039716;0.24830331;0.30327684;0.35148263;0.51494581;0.41423216;0.53322756;0.53883278;0.27477697;0.61964345;0.31446755;0.40671989;0.53439522;0.52632535;0.47253063;0.45330849;0.41994661;0.22345358;0.32324249;0.29787347;0.80667722;0.60978687;0.22660634;0.25438374;0.76416075;0.3795478;0.27448237;0.5049181;0.63413537;0.31739563;0.31099892;0.29940289;0.59087211;0.67801738;0.76574022;0.21994719;0.46095148;0.49566713;0.34104699;0.60238451;0.41567713;0.27591667;0.41401803;0.2039603;0.60520065;0.23835731;0.24527332;0.26597592;0.53201169;0.67252457;0.65337682;0.24420467;0.40479544;0.25386369;0.49705845;0.13085572;0.52652925;0.22014393;0.53477567;0.69291842;0.29685837;0.45382461;0.61724287;0.8460421;0.17341606;0.22914243;0.36526152;0.50906163;0.1636979;0.37724242;0.20553876;0.90835148;0.17194431;0.47060406;0.20543373;0.83345366;0.60263371;0.29175732;0.22076887;0.23088312;0.37938789;0.20984961;0.54949868;0.57207489;0.73133981;0.16500252;0.41964346;0.21989319;0.90710706;0.49658388;0.3896651;0.31682795;0.65396231;0.45130992;0.40159887;0.50636715;0.85816818;0.31852439;0.2898857;0.15128839;0.58601278;0.16893011;0.35354945;0.46424416;0.15087764;0.19502729;0.33344224;0.86564201;0.37289298;0.4055005;0.27789938;0.10556075;0.77768975;0.18369359;0.2425651;0.21548051;0.22225763;0.80281198;0.34634355;0.48525873;0.20314845;0.29268989;0.8983683;0.21425001;0.19548798;0.3699607;0.21825098;0.85615617;0.52014774;0.12153643;0.15114823;0.23499134;0.19002713;0.27822876;0.17175595;0.24106765;0.10914279;0.17979041;0.23580122;0.17863768;0.82611382;0.7621752;0.68246394;0.82224309;0.84060597;0.30949467;0.58584535;0.33548862;0.24506012;0.14998825;0.2407546;0.17126073;0.37906569;0.34918767;0.12136386;0.67085761;0.38282919;0.40528494;0.35496524;0.17769662;0.2788057;0.33807567;0.26386496;0.65101743;0.36705965;0.19654137;0.68622887;0.14741711;0.31085417;0.27816865;0.78934723;0.42524609;0.30093592;0.31050399;0.82499331;0.11826674;0.438315;0.50438702;0.39439663;0.37257451;0.39943773;0.21936288;0.18047391;0.22480121;0.10399734;0.38137367;0.065669015;0.32345968;0.5475077;0.28298357;0.83617157;0.88875914;0.487064;0.65180051;0.78850514;0.61889476;0.31302646;0.24413368;0.075442277;0.75520509;0.22412503;0.38845757;0.42073014;0.39367583;0.18056153;0.62942809;0.3570863;0.57343876;0.23174952;0.26725736;0.37516525;0.21685734;0.511913;0.63888079;0.26754311;0.19504984;0.79383171;0.2702423;0.18633011;0.23672342;0.59906244;0.26611921;0.39351904;0.40795791;0.89484936;0.18025531;0.23935713;0.47279257;0.52647871;0.54747373;0.95575041;0.076787807;0.082912818;0.17327702;0.51673597;0.08529032;0.73750967;0.15652904;0.13559023;0.080772497;0.10034718;0.25221577;0.71802139;0.15811415;0.10480802;0.11961323;0.055793755;0.11457273;0.63580418;0.069568641;0.57747281;0.17759819;0.12300839;0.078363709;0.97068012;0.22818848;0.28482276;0.71249795;0.24192114;0.10265426;0.34063473;0.19086075;0.45845771;0.54392707;0.22678109;0.40216282;0.77406526;0.84432685;0.64988422;0.42625353;0.3502256;0.15372053;0.71885127;0.14415687;0.49719808;0.14661436;0.14893861;0.57059073;0.11722861;0.087855123;0.45794696;0.41396666;0.28374416;0.40798301;0.24442296;0.4915072;0.66429049;0.27466616;0.26324612;0.49067137;0.45787036;0.21018101;0.35251811;0.31026086;0.310202;0.58835769;0.52161729;0.59655851;0.57280403;0.54739112;0.2513555;0.59808075;0.58012635;0.44108331;0.32017344;0.86953247;0.17563869;0.18970028;0.21755253;0.83678526;0.18207522;0.1133991;0.15472902;0.45768061;0.2796534;0.11748108;0.18472691;0.82093978;0.17740035;0.22772641;0.40406126;0.40138024;0.12723906;0.11833553;0.23242226;0.92032713;0.31298602;0.20508479;0.11004771;0.54126644;0.12857647;0.3499617;0.21876688;0.50190324;0.19975367;0.43237975;0.42589447;0.22565028;0.2030087;0.18404268;0.77419502;0.7362051;0.76435089;0.76697093;0.93441057;0.16215678;0.24833965;0.359016;0.38666129;0.19052285;0.31367552;0.24175021;0.27471769;0.47635663;0.15248975;0.36149955;0.24024309;0.09614525;0.37241995;0.85077977;0.12710044;0.23898886;0.35717204;0.73217291;0.22704038;0.19121258;0.25288519;0.79658371;0.21579775;0.28245977;0.091072597;0.81971228;0.32280576;0.32228804;0.10243752;0.79322606;0.2873024;0.26061079;0.24483736;0.43260723;0.49597132;0.43083149;0.49640608;0.18416689;0.10990081;0.14274482;0.79802454;0.19200188;0.060470659;0.34539157;0.50063562;0.4447197;0.34864092;0.27482125;0.32078922;0.41525808;0.30525613;0.18534221;0.9306699;0.42750657;0.16462116;0.36200818;0.46903008;0.17369844;0.77551764;0.30011174;0.37373292;0.81750607;0.25842673;0.053782668;0.35872591;0.44211012;0.72356951;0.21743065;0.21450038;0.18774265;0.26568532;0.56782728;0.30103204;0.45002222;0.38591325;0.28462231;0.88892329;0.68178773;0.31580058;0.14888863;0.21044989;0.86760217;0.32207811;0.39068443;0.095227696;0.46603158;0.27313405;0.48340765;0.4853248;0.51652157;0.12315208;0.11396983;0.39228234;0.56447679;0.88528574;0.64803445;0.58770484;0.84944296;0.67312551;0.40263551;0.26230961;0.28660139;0.33648655;0.28941226;0.54410416;0.30218717;0.27215481;0.34889969;0.10718928;0.31088796;0.27211678;0.54921103;0.35576564;0.23139194;0.25903776;0.58189416;0.86154413;0.33279333;0.32995397;0.26899293;0.38950849;0.84106874;0.22921942;0.20754774;0.26050255;0.12932539;0.87976968;0.19989236;0.39473972;0.16433407;0.23780252;0.88599437;0.400509;0.47026378;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.32526526;0.12771755;0.43443123;0.15450729;0.97918004;0.19964446;0.047847871;0.47450686;0.51514417;0.085226506;0.074790925;0.21395519;0.9856407;0.11930491;0.19421905;0.11011198;0.46629751;0.24161562;0.040845975;0.19846283;0.94071239;0.089535221;0.55041641;0.12934044;0.37617102;0.82142901;0.21813747;0.38785049;0.37097418;0.42916188;0.32295734;0.45018131;0.21445838;0.21453004;0.59663403;0.37606695;0.20496054;0.52122468;0.36706764;0.59508473;0.49034321;0.53141981;0.52183425;0.60290319;0.20202765;0.7046122;0.388587;0.42239559;0.48767626;0.7489754;0.59821123;0.32375053;0.41014209;0.21442866;0.30231822;0.17519255;0.17964549;0.22343823;0.85899407;0.21133669;0.4406361;0.74926102;0.1230177;0.429557;0.12131846;0.77990782;0.45015204;0.14771309;0.54958332;0.72223198;0.17937233;0.26711327;0.15683396;0.45412818;0.32280609;0.94147933;0.13856864;0.04163475;0.12171698;0.49561164;0.18202849;0.63825542;0.16226646;0.16736044;0.2849606;0.32624966;0.09361998;0.83541656;0.079700679;0.13981986;0.27978832;0.08086209;0.066935457;0.79293406;0.15068059;0.32086042;0.12741251;0.080697931;0.17389062;0.91950172;0.84129739;0.26833889;0.3643634;0.33910921;0.066579051;0.18245201;0.87274778;0.42184782;0.64306909;0.24573959;0.10233019;0.49833682;0.22789136;0.11265802;0.21907945;0.58172452;0.20095988;0.15603721;0.88791829;0.80848271;0.031472746;0.21309085;0.26208878;0.3058053;0.52965522;0.44960517;0.50453603;0.51010919;0.25450319;0.59126127;0.29208943;0.38053244;0.50569648;0.56142896;0.44462532;0.42581367;0.45539159;0.20628183;0.3004356;0.27634305;0.82698309;0.58128029;0.2092322;0.2352924;0.78790212;0.3543182;0.25422493;0.47649434;0.60597944;0.29487282;0.32829177;0.2887058;0.57689244;0.66485673;0.77863467;0.211531;0.44736525;0.48179689;0.32937077;0.58846092;0.40264696;0.26583889;0.43300796;0.19606403;0.59129333;0.22936659;0.23607352;0.25617436;0.51798159;0.65928471;0.67008817;0.2350371;0.39192963;0.24441004;0.5162068;0.1193014;0.49521172;0.20165369;0.50339305;0.72385359;0.27342579;0.42377275;0.58614552;0.86415577;0.15841128;0.21002032;0.33833116;0.54745024;0.14945918;0.34979355;0.18810153;0.91971457;0.15705475;0.44015211;0.18800427;0.85282862;0.57135844;0.26862115;0.2022343;0.21164079;0.35108733;0.19161507;0.51715326;0.53971612;0.76049918;0.15027161;0.38979137;0.20091785;0.91898507;0.46477073;0.36093575;0.29160684;0.68831164;0.42048681;0.37239891;0.47440439;0.87557667;0.29320955;0.26622805;0.13768852;0.62358922;0.15387996;0.3264249;0.43309009;0.13731205;0.17764883;0.30691296;0.88256091;0.34442896;0.37568519;0.25462034;0.09576229;0.80349308;0.16721137;0.22165577;0.19653627;0.20280994;0.8262673;0.31914631;0.45313865;0.18514027;0.26848733;0.91152263;0.19539823;0.17807324;0.34162971;0.19910005;0.87412107;0.48749217;0.11030614;0.13749497;0.21483661;0.17322241;0.25517905;0.15640432;0.22048615;0.099127881;0.16379362;0.2155894;0.16273294;0.84700483;0.7890293;0.7153185;0.84352303;0.86000937;0.28456488;0.55338115;0.30913869;0.22420138;0.13643219;0.22019491;0.15594915;0.35064018;0.32214341;0.1102678;0.70422095;0.35446835;0.376035;0.32785428;0.16198924;0.25589961;0.31179953;0.24191195;0.68554455;0.33938599;0.17936483;0.71861863;0.13418022;0.28604206;0.25530231;0.81362861;0.39529693;0.27669322;0.285712;0.84586096;0.10752603;0.40795547;0.47255048;0.36556378;0.34465453;0.40766904;0.18363737;0.15042439;0.18831532;0.086193837;0.3270447;0.05442252;0.27476162;0.55330849;0.23891859;0.83696836;0.91472268;0.49605572;0.65720165;0.79042137;0.62316626;0.26547006;0.20501539;0.062504925;0.75641048;0.18773364;0.33352458;0.36329386;0.33831087;0.15049866;0.66499066;0.32994887;0.54127365;0.21203302;0.24514477;0.34720913;0.19821019;0.4800621;0.67395943;0.24541195;0.17803356;0.81762761;0.24793839;0.16998698;0.21665817;0.63601381;0.24407977;0.36480048;0.37869003;0.90813434;0.16438797;0.2191087;0.44162214;0.49446765;0.51532513;0.96673387;0.06342677;0.068483591;0.14389549;0.52398425;0.070447847;0.74020749;0.12978332;0.11223413;0.066715881;0.082907721;0.21143021;0.77585983;0.13111593;0.086606443;0.098908812;0.046126358;0.094715625;0.64103413;0.057472747;0.58345795;0.14754777;0.10173588;0.064727418;0.97804046;0.19256261;0.24214378;0.7176553;0.20449758;0.085698299;0.29199314;0.16038546;0.46929088;0.48337024;0.19134261;0.40835315;0.77356625;0.87823969;0.65169865;0.43212169;0.30066487;0.12872587;0.72383261;0.12062651;0.43787357;0.12270577;0.12467355;0.57936221;0.097925544;0.073319465;0.45794696;0.41396666;0.28374416;0.40798301;0.24442296;0.4915072;0.66429049;0.27466616;0.26324612;0.49067137;0.45787036;0.21018101;0.35251811;0.31026086;0.310202;0.58835769;0.52161729;0.59655851;0.57280403;0.54739112;0.2513555;0.59808075;0.58012635;0.44108331;0.32017344;0.86954832;0.14589797;0.15781084;0.18156458;0.87390143;0.15134463;0.09374468;0.12827691;0.46537501;0.23534994;0.097139321;0.15359159;0.86114597;0.14738755;0.1902962;0.34701768;0.40985852;0.10526742;0.097850241;0.19433655;0.93959653;0.26472849;0.1709048;0.090960123;0.54915136;0.11677271;0.32269621;0.19965586;0.46962675;0.1820796;0.40175292;0.39547867;0.20603406;0.18508431;0.1675995;0.80020845;0.76542306;0.79122937;0.79362148;0.94311434;0.14749183;0.22711474;0.33131084;0.35771927;0.17356715;0.28833899;0.22098345;0.25173753;0.44455481;0.13863257;0.35960868;0.20584066;0.081425779;0.32483071;0.8795436;0.10777976;0.20473623;0.31082407;0.7410655;0.19423583;0.16297135;0.21699758;0.83412451;0.18438962;0.24327289;0.077122301;0.82530147;0.27953538;0.27906653;0.08676976;0.83127767;0.24759933;0.22383733;0.20988993;0.42932868;0.53457773;0.40149885;0.46553823;0.16836758;0.10015268;0.13023126;0.82079995;0.17560874;0.055094663;0.31944475;0.46970239;0.41498172;0.38551968;0.25275472;0.29608914;0.38642904;0.28140214;0.16945322;0.93944079;0.39827687;0.15034232;0.33528626;0.43868539;0.15870652;0.80027652;0.27578053;0.34560326;0.83917135;0.23670943;0.048859015;0.33128193;0.41146365;0.75341773;0.19858615;0.19587207;0.17115305;0.24348992;0.60617304;0.27664676;0.41915113;0.35726142;0.26122487;0.90296346;0.65123874;0.2905699;0.13545434;0.19212297;0.88403964;0.29650101;0.36183649;0.08673349;0.43567669;0.25111622;0.45268762;0.45456874;0.48529878;0.11224554;0.10384712;0.36421952;0.53299224;0.89922839;0.68159842;0.62400496;0.86719036;0.70526737;0.37418038;0.2409725;0.26376569;0.31091261;0.26640961;0.51266193;0.27844596;0.25019765;0.32271817;0.097651303;0.28563538;0.24923611;0.5886147;0.32813385;0.21130091;0.23702054;0.54908222;0.87885463;0.30632877;0.30364117;0.24631548;0.36036053;0.86058491;0.20928514;0.18922342;0.238387;0.11742152;0.89503688;0.18215515;0.36537895;0.14944535;0.21725293;0.90054649;0.37091979;0.43850145;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.32167572;0.10147606;0.39713746;0.12304927;0.98283571;0.15984611;0.03803134;0.43539298;0.50844592;0.067595623;0.059325408;0.1716418;0.99001646;0.094737642;0.15539105;0.087392658;0.46075583;0.21830224;0.032503795;0.15887508;0.95130658;0.071015142;0.50910836;0.10277758;0.37112978;0.85971987;0.18357874;0.33455122;0.31910101;0.43847317;0.27569884;0.45743704;0.18040495;0.18046674;0.53536284;0.32375208;0.17222862;0.59506685;0.31553888;0.53379977;0.43076786;0.47056785;0.46121213;0.60730141;0.16970864;0.70831758;0.33522773;0.36651263;0.42820919;0.79950786;0.63540643;0.29816523;0.38064155;0.19586511;0.27793589;0.15964738;0.16374566;0.20421599;0.8763712;0.19300188;0.41013265;0.77708238;0.11183631;0.39939469;0.11028525;0.80510449;0.41937846;0.13441989;0.51725632;0.75217199;0.16349413;0.24489614;0.14278135;0.42324746;0.29727179;0.95578271;0.11487047;0.034518495;0.10078919;0.50272483;0.15148708;0.64388543;0.13477984;0.1390771;0.24027401;0.27682629;0.077435702;0.87264717;0.065915488;0.11591838;0.2357351;0.066875614;0.055373278;0.79464233;0.12502989;0.33002979;0.10554158;0.06673988;0.14459516;0.93888015;0.87290782;0.22988601;0.31639355;0.29335642;0.056175627;0.15480034;0.87236524;0.36965382;0.64525855;0.20993458;0.086349472;0.50317931;0.23670711;0.095101416;0.18658116;0.58508581;0.17081647;0.13208289;0.88732564;0.80775309;0.026652157;0.1813615;0.22435373;0.2632941;0.53637129;0.48684132;0.4748657;0.48036817;0.23458493;0.56130874;0.26995027;0.35416809;0.47601095;0.59723008;0.41614813;0.39786974;0.49264142;0.18955259;0.27783674;0.25510535;0.8462823;0.55126822;0.19229734;0.21660045;0.81069118;0.32905337;0.23432407;0.44728521;0.576159;0.27257922;0.34942091;0.27590525;0.559605;0.64839119;0.7933194;0.2015339;0.4308269;0.46484464;0.31534007;0.57121706;0.38686568;0.25380701;0.45580658;0.18669777;0.57406312;0.21866959;0.22512148;0.2444832;0.50075889;0.64273322;0.68942094;0.22412427;0.37636518;0.23314661;0.53888983;0.10863288;0.46401247;0.18435341;0.47206658;0.75304627;0.25120121;0.39433351;0.55445158;0.88061869;0.14447533;0.19210191;0.31244412;0.58555973;0.13625334;0.32334322;0.17182544;0.92990154;0.14322859;0.41020805;0.1717356;0.870489;0.53960425;0.2466985;0.18489081;0.19360392;0.3240678;0.17436004;0.48424676;0.50660533;0.78729206;0.13643083;0.36034772;0.18293138;0.92924345;0.4328284;0.3327857;0.26726577;0.7205739;0.38986608;0.3437137;0.44223449;0.89079994;0.2687692;0.24351577;0.12493636;0.65959543;0.13973141;0.30004999;0.40204704;0.12495291;0.16158698;0.28175756;0.89758378;0.31721577;0.3469767;0.23278712;0.086819693;0.8269192;0.15200587;0.20217256;0.17896792;0.18475348;0.84742385;0.29328915;0.42163792;0.16847412;0.24572322;0.92311156;0.17791894;0.1619771;0.31455988;0.18133143;0.89010972;0.45519257;0.1000374;0.12495901;0.19608147;0.15770221;0.2335609;0.1422663;0.2013136;0.089982234;0.14904328;0.19677843;0.14807005;0.86580306;0.8135879;0.74600899;0.86268961;0.87740749;0.26104286;0.52075243;0.28414759;0.20475702;0.12398765;0.2010437;0.14184918;0.32343549;0.296422;0.10012004;0.73549509;0.32728362;0.34786308;0.3020184;0.14749606;0.23439524;0.28684559;0.2213593;0.7180869;0.31294879;0.16346925;0.74885285;0.12202086;0.26260534;0.23383754;0.83568937;0.36632448;0.25383806;0.26229578;0.86465251;0.097696841;0.37850091;0.44118509;0.33785892;0.31795111;0.41574711;0.15311033;0.12502888;0.15708797;0.071409702;0.27796265;0.045132577;0.2317035;0.55893344;0.20049879;0.83789605;0.93505418;0.50514358;0.66269988;0.79246736;0.62728798;0.22357568;0.1713354;0.051807757;0.75754774;0.15659311;0.2837607;0.31059089;0.28805324;0.12509127;0.69883716;0.30394673;0.50887543;0.19358674;0.22432478;0.32032105;0.18080854;0.44846791;0.7072565;0.22457382;0.1622107;0.83930111;0.22692735;0.15481113;0.19786932;0.67148668;0.22333369;0.33707151;0.35034236;0.91994172;0.14966777;0.20013976;0.41098842;0.46260259;0.48315573;0.97511226;0.052399278;0.056564987;0.11915479;0.5305202;0.058183759;0.74366021;0.10735904;0.092749894;0.055108484;0.068463013;0.17627609;0.82469702;0.10847121;0.071518563;0.081696518;0.038161661;0.078224681;0.64712358;0.047497362;0.58875221;0.1222147;0.084038824;0.053470433;0.98362494;0.16247676;0.20546845;0.72395974;0.17276533;0.071806245;0.24940115;0.13491574;0.48143151;0.42587116;0.16142687;0.41800603;0.77528578;0.90650028;0.65648896;0.44146571;0.25712109;0.10803071;0.72995192;0.10118659;0.38268125;0.10294241;0.10460493;0.58941174;0.082068309;0.061438184;0.45794696;0.41396666;0.28374416;0.40798301;0.24442296;0.4915072;0.66429049;0.27466616;0.26324612;0.49067137;0.45787036;0.21018101;0.35251811;0.31026086;0.310202;0.58835769;0.52161729;0.59655851;0.57280403;0.54739112;0.2513555;0.59808075;0.58012635;0.44108331;0.32017344;0.86924332;0.12083702;0.13083556;0.15087572;0.90342206;0.12540424;0.077424251;0.10610708;0.47358459;0.19681294;0.080234282;0.12729038;0.89334404;0.12208533;0.1582787;0.29505554;0.41885859;0.086970411;0.080823004;0.16171128;0.95440984;0.22226357;0.14186491;0.075120695;0.55622017;0.10598262;0.29678893;0.18194403;0.43789205;0.16575144;0.37212685;0.36610016;0.18783234;0.16851635;0.15244725;0.82401043;0.79242647;0.81588614;0.81805253;0.95077366;0.13402331;0.20734124;0.30493638;0.33000454;0.15792654;0.26444101;0.20165956;0.23022442;0.41347763;0.12592386;0.36073399;0.17470613;0.068543725;0.27991164;0.90484941;0.090777226;0.17374869;0.26730645;0.74876332;0.16465749;0.13775019;0.18440005;0.86777657;0.15615803;0.20736137;0.064922616;0.829965;0.23937097;0.23895462;0.07304395;0.86542845;0.21116102;0.19035922;0.17822084;0.42929107;0.57282943;0.37286216;0.43495429;0.15364404;0.091158725;0.11863904;0.84158611;0.16031362;0.050155189;0.29456112;0.43902385;0.38586086;0.4237791;0.23187512;0.27251479;0.35837916;0.25870335;0.1546437;0.94720167;0.36976168;0.13707437;0.30957317;0.40880817;0.14475749;0.8229996;0.25285673;0.31870237;0.85873544;0.21640778;0.044380851;0.30511945;0.381715;0.78102797;0.18109636;0.17859146;0.15583102;0.22271399;0.64321429;0.25366807;0.38913015;0.32979053;0.23924606;0.91542792;0.61970603;0.26672578;0.12311856;0.17513344;0.89870477;0.27229926;0.33414939;0.078888752;0.40572712;0.230234;0.42225721;0.42408919;0.45412961;0.10214158;0.094479352;0.33697394;0.50119209;0.91204;0.71428996;0.65995055;0.88362849;0.73636502;0.34649336;0.22077577;0.2420541;0.28636476;0.24452844;0.48106426;0.25580773;0.22937696;0.29752484;0.088831604;0.26186502;0.22785939;0.62676215;0.30188543;0.19266875;0.21650025;0.51620787;0.8942557;0.28130808;0.27877837;0.22514123;0.33247298;0.87803435;0.19080557;0.172299;0.21776985;0.1065556;0.90856129;0.1657939;0.33725485;0.13578835;0.19817381;0.91341877;0.34254062;0.40755162;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.32272726;0.081986599;0.35422653;0.099523246;0.98635387;0.12967783;0.030825809;0.39013013;0.508322;0.054613017;0.047953986;0.13941661;0.99287111;0.076527663;0.12600911;0.070586465;0.46162537;0.1916621;0.02637871;0.1288776;0.96126425;0.057368517;0.46064702;0.083041988;0.37118477;0.89148474;0.15348132;0.28538609;0.27155533;0.4467808;0.23312865;0.46644858;0.15077938;0.15083183;0.47348499;0.27571058;0.14383;0.6658017;0.2683779;0.47195432;0.37347493;0.41097391;0.40210021;0.61337864;0.14169124;0.71112615;0.28599361;0.31426558;0.37108684;0.84275532;0.67106223;0.2738612;0.35210779;0.17858294;0.25487271;0.14526652;0.14902651;0.18629381;0.8919161;0.17594162;0.3804284;0.8026669;0.10156748;0.37009534;0.10015462;0.82809222;0.38934579;0.12217168;0.48494747;0.7799027;0.14879578;0.22402006;0.12981658;0.39308318;0.27302107;0.96676463;0.095048897;0.028644256;0.083349481;0.5091669;0.12566052;0.65022689;0.11165728;0.11525302;0.2012696;0.23305872;0.064019248;0.90247011;0.054511137;0.095921077;0.19735065;0.05530306;0.045821305;0.79691446;0.10351371;0.33868119;0.08729393;0.055191036;0.1198762;0.95388156;0.89935279;0.19603474;0.27282709;0.25215986;0.047424775;0.13103043;0.8731131;0.32126275;0.64641112;0.17862409;0.072844803;0.50686187;0.24725181;0.080238596;0.15837494;0.58733255;0.14478168;0.11162139;0.88776094;0.80634177;0.022597371;0.15386805;0.19119653;0.22543137;0.54526061;0.52537405;0.44455767;0.44994918;0.21523377;0.53007501;0.24829878;0.32794341;0.44567952;0.63310307;0.38744229;0.36981326;0.53112149;0.17342815;0.25570205;0.23439345;0.86434275;0.52004969;0.17596723;0.19849944;0.83221751;0.30405316;0.21499088;0.41763559;0.54494798;0.25076562;0.37335604;0.26137963;0.53921801;0.62870163;0.80871826;0.19028394;0.41168252;0.44512811;0.29934192;0.55084616;0.36870494;0.24018849;0.48112601;0.17617384;0.55369914;0.20660986;0.21276507;0.23126464;0.48062459;0.62295836;0.71003455;0.21181343;0.35847944;0.2204279;0.56370854;0.098815717;0.433204;0.16824588;0.44107336;0.78013712;0.23025088;0.36572954;0.52244949;0.89537263;0.13158508;0.17539614;0.28773659;0.62268889;0.12405394;0.29804045;0.15670376;0.93891644;0.13044253;0.38100886;0.15662117;0.8863585;0.50766158;0.22605088;0.16874127;0.17678329;0.29831085;0.15878941;0.45248058;0.47446138;0.81187326;0.1240195;0.33275008;0.1666756;0.9384985;0.40237764;0.30656242;0.24490596;0.75070721;0.36097085;0.31692702;0.41149771;0.90464985;0.24631125;0.22275233;0.11352102;0.693802;0.12703738;0.27565482;0.37266955;0.11353604;0.14684063;0.25812161;0.91086692;0.29145122;0.319617;0.21247672;0.078698598;0.84803754;0.13806796;0.18415447;0.16278926;0.16810837;0.86638707;0.26893467;0.39109212;0.15315473;0.22449227;0.93329024;0.16182548;0.14719796;0.28894654;0.16496159;0.904275;0.42361626;0.090697058;0.11347367;0.17869319;0.14340922;0.21337575;0.129279;0.18352099;0.081641749;0.13547873;0.17933619;0.13458806;0.88279158;0.83610827;0.77470684;0.88002586;0.89308059;0.23895903;0.48823124;0.26057327;0.18670103;0.11258774;0.18327197;0.12889774;0.297557;0.27209607;0.090854317;0.76459622;0.30130929;0.32082358;0.27746621;0.13412045;0.21423762;0.26320645;0.20214209;0.7485227;0.28776625;0.14876056;0.7768777;0.11084232;0.24051374;0.21371958;0.85564113;0.33840275;0.23233277;0.24022482;0.88151276;0.088689975;0.35003582;0.41042745;0.31132704;0.29248801;0.42377168;0.1273181;0.10375415;0.13067043;0.059181914;0.23455809;0.037472673;0.19430625;0.56449509;0.16751125;0.83875471;0.95073813;0.51396692;0.66797346;0.79440314;0.6313681;0.18730053;0.14270866;0.04298358;0.75870246;0.13025321;0.2396507;0.26335889;0.24342775;0.10380629;0.73055953;0.27936769;0.47675976;0.17652598;0.20495868;0.29481566;0.16475067;0.41761026;0.7383877;0.2051896;0.14765616;0.85882032;0.20737299;0.14086872;0.18047829;0.70500153;0.20403944;0.31067288;0.3232753;0.9303509;0.13615535;0.18257488;0.38133252;0.43137375;0.45147043;0.98139673;0.043315712;0.046743136;0.098489083;0.53689724;0.048075408;0.74669844;0.088688694;0.076586552;0.045544695;0.056539454;0.14637406;0.86431056;0.08961165;0.059057478;0.067452826;0.031605151;0.064587519;0.65266275;0.039283581;0.59390014;0.10103559;0.069386795;0.044197008;0.98779637;0.13581315;0.17250127;0.72915703;0.14455062;0.05977587;0.21050888;0.11252876;0.49247083;0.36946172;0.13492286;0.42083013;0.77203631;0.92701417;0.65489703;0.44388035;0.21724562;0.089971088;0.73497528;0.084250346;0.32953486;0.085717261;0.087106578;0.59824318;0.068310559;0.051164869;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86891603;0.09988834;0.10822049;0.12498631;0.92654657;0.1036917;0.06392695;0.08764974;0.48174143;0.1637862;0.066245571;0.10526358;0.91869903;0.10092764;0.13120335;0.24877849;0.42782792;0.071808033;0.066731386;0.13409068;0.9657197;0.1855253;0.11743673;0.062026873;0.56308913;0.096141554;0.27232677;0.16559456;0.40695068;0.15072186;0.34368443;0.33793375;0.17101291;0.15325858;0.13853112;0.84532911;0.81683201;0.83802187;0.8399719;0.95740402;0.12168975;0.1890038;0.27998912;0.30364656;0.14354865;0.242028;0.1837578;0.21018575;0.38335243;0.11430039;0.36362579;0.14709267;0.057419777;0.23859614;0.92579508;0.076035485;0.14627329;0.22746608;0.75507313;0.13850564;0.11562584;0.15540007;0.89611197;0.13126074;0.17517141;0.054393318;0.83357191;0.20296907;0.20260569;0.061182819;0.89421606;0.17845629;0.16051847;0.15010199;0.43112156;0.61049163;0.34513313;0.40491816;0.1399866;0.082888544;0.10794242;0.86055809;0.14611065;0.045628473;0.27086625;0.40886551;0.35758111;0.46319482;0.21223843;0.25016731;0.33130455;0.23724443;0.14090416;0.95410222;0.34216905;0.12479886;0.28501263;0.37964329;0.1318367;0.84384209;0.23126845;0.29301837;0.87602335;0.19742447;0.040291905;0.28021273;0.35290989;0.80598825;0.16484806;0.16254465;0.1416581;0.20326369;0.6781249;0.23202449;0.36001161;0.30349886;0.21860364;0.92626333;0.58728933;0.24420758;0.111766;0.15936655;0.91151476;0.24941753;0.30762565;0.071688145;0.37651587;0.21060802;0.39246309;0.3942346;0.42338285;0.092842951;0.085866295;0.31080297;0.46946371;0.92347163;0.74511337;0.6943897;0.89840639;0.7654978;0.31984359;0.20182754;0.22160199;0.26303533;0.22390661;0.44969228;0.2344252;0.20981155;0.27352676;0.080727614;0.23952381;0.20790462;0.66271043;0.27700779;0.17539117;0.19738689;0.48343295;0.90764278;0.25769749;0.25532842;0.20538574;0.30586436;0.89327407;0.17367539;0.15666233;0.19856143;0.096619152;0.9202677;0.15069431;0.31039238;0.12324623;0.1804639;0.92454493;0.31540319;0.37750989;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.33102775;0.068040006;0.30283391;0.082615353;0.98974472;0.10780356;0.025696984;0.33553782;0.51716477;0.045367237;0.039860662;0.11597752;0.99466562;0.063512079;0.10472944;0.058588255;0.47125494;0.16020483;0.022016229;0.10713259;0.97066927;0.047646485;0.40122604;0.068915941;0.37912539;0.91675502;0.1276944;0.24119218;0.22905061;0.45495731;0.19563055;0.47508454;0.12541831;0.1254624;0.41309544;0.23269181;0.11957143;0.72950768;0.22626971;0.41164058;0.32003921;0.35446212;0.34626746;0.61906427;0.11777405;0.71380842;0.24172628;0.26674512;0.31786528;0.87805414;0.70471597;0.25104833;0.32487226;0.16265441;0.23330745;0.13208577;0.13552794;0.16975278;0.90569919;0.16022509;0.35189304;0.82591242;0.092214987;0.34201524;0.09092968;0.84883028;0.36043692;0.11098514;0.45312902;0.80526072;0.13531652;0.20461775;0.11796225;0.36402217;0.25026214;0.97506028;0.078577295;0.023799317;0.068895161;0.51547956;0.10402282;0.65609807;0.092360839;0.095351547;0.16776356;0.19501254;0.052938741;0.92573309;0.045103732;0.079299912;0.16442426;0.045756038;0.037947375;0.79891557;0.085596308;0.34727609;0.072157294;0.045663826;0.099200867;0.96528369;0.92123383;0.16588569;0.23298292;0.21476139;0.039901622;0.11026709;0.87319863;0.27619556;0.64905649;0.15089174;0.061200708;0.51217359;0.25707653;0.067407191;0.13354562;0.59115636;0.12195339;0.093836553;0.88759726;0.80596542;0.019106278;0.12969771;0.16171156;0.19137822;0.55275542;0.5637365;0.41474676;0.41999102;0.19708963;0.4987199;0.227872;0.3028037;0.41583773;0.66770744;0.35956857;0.34267572;0.56936604;0.15841903;0.23478924;0.2149044;0.88068962;0.48878711;0.16076012;0.18157786;0.85186571;0.28020531;0.19686431;0.38865098;0.51350033;0.23017605;0.40220016;0.24519543;0.51549518;0.60541642;0.82565874;0.17786382;0.38987222;0.42254549;0.28142241;0.52709311;0.34815386;0.22505791;0.51091939;0.16457495;0.52994275;0.19326897;0.19908546;0.21659583;0.45742878;0.59959739;0.73315781;0.19818595;0.33827046;0.20633337;0.59240061;0.089816958;0.40306768;0.15332796;0.41069973;0.80511469;0.21063018;0.3381781;0.49046069;0.90856183;0.11971633;0.15990558;0.2643317;0.65850431;0.11283361;0.27402055;0.1427258;0.9468888;0.11867171;0.35278746;0.14265002;0.90057784;0.47585016;0.20672932;0.15378346;0.16118248;0.27396294;0.14445886;0.42138338;0.44282505;0.83420932;0.11265873;0.30646828;0.15169467;0.94663078;0.37291977;0.28173029;0.22399892;0.77856654;0.33328083;0.29150507;0.3816998;0.91692382;0.22530714;0.20342153;0.10308754;0.72595388;0.11541273;0.25270286;0.34444317;0.10310107;0.1332967;0.23595889;0.92234236;0.26712367;0.29362473;0.19360347;0.07130909;0.86662257;0.1252847;0.16749923;0.14789042;0.1527658;0.88298517;0.24604686;0.36159909;0.13907009;0.20471793;0.94202596;0.14700744;0.1336233;0.26477411;0.14988092;0.91653639;0.3928929;0.082186922;0.10297921;0.16263886;0.13029085;0.19462013;0.11738513;0.16707945;0.074050739;0.12304427;0.16323011;0.12223113;0.89781332;0.85627836;0.80086225;0.89536637;0.90690106;0.21833752;0.45610827;0.23846439;0.17000611;0.10217264;0.16685019;0.11703721;0.2731002;0.24922833;0.082412556;0.79132146;0.27679142;0.29519299;0.25440592;0.12188406;0.19554044;0.24106842;0.18435718;0.77660286;0.26406339;0.13527389;0.80252421;0.10065039;0.21991868;0.19506097;0.87350255;0.31183368;0.21231611;0.21964981;0.89650202;0.080500886;0.32288024;0.38067761;0.28622857;0.26849684;0.43141463;0.1056302;0.085979305;0.10843489;0.049055949;0.19670333;0.031137869;0.16216844;0.56965822;0.13942246;0.84008455;0.9628647;0.52360636;0.67394888;0.79688907;0.63508612;0.1562033;0.11852645;0.035685778;0.75961357;0.10808578;0.20110585;0.22170411;0.20437589;0.08602266;0.76003754;0.25621879;0.44512704;0.16077153;0.18698387;0.27071705;0.1499521;0.38764513;0.7672509;0.18719706;0.13428079;0.87631464;0.18921532;0.1280698;0.16440767;0.73637831;0.18613425;0.2856462;0.29754567;0.93950641;0.12376013;0.16633755;0.35277563;0.40095013;0.42045307;0.98612773;0.035846807;0.038665913;0.081342243;0.5437302;0.039761774;0.7492674;0.073233686;0.063240573;0.037680198;0.046725467;0.12122133;0.89595693;0.073996626;0.048797846;0.055711072;0.026212463;0.053350963;0.65759748;0.032530181;0.59950268;0.083451726;0.057304587;0.036571674;0.99092633;0.11367438;0.14481628;0.73479134;0.12106352;0.049956929;0.17742346;0.09405987;0.50392509;0.31839085;0.11292246;0.43450463;0.77644247;0.94540864;0.66315299;0.45724446;0.18324292;0.075152561;0.74043638;0.070370264;0.28221247;0.071596161;0.072757304;0.60749209;0.057068177;0.042787593;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86857355;0.08246506;0.089370713;0.1033062;0.94442415;0.085615702;0.05278388;0.072343223;0.4897221;0.13578886;0.054692622;0.08691857;0.93837976;0.083325639;0.10848824;0.20830327;0.43664646;0.059274327;0.055092808;0.11089763;0.97429544;0.15414712;0.097024307;0.051220022;0.56978291;0.087178439;0.24934889;0.1505473;0.37700403;0.13692375;0.3165535;0.3111003;0.15551847;0.13924521;0.12578019;0.86434436;0.83877766;0.8578065;0.85955226;0.9631393;0.11041788;0.17205678;0.25651842;0.27872384;0.13036436;0.22110389;0.16722915;0.19159395;0.35435638;0.10368851;0.36821595;0.12293679;0.047885504;0.20133147;0.94277346;0.063365459;0.12224441;0.19167578;0.75996399;0.11568584;0.09644153;0.12996751;0.91940135;0.10958046;0.14676516;0.045371473;0.83610022;0.17054708;0.1702349;0.051012099;0.91789901;0.14956507;0.13430718;0.12548198;0.43473235;0.64690053;0.31858075;0.37576982;0.12741284;0.0753318;0.098139487;0.87764519;0.13302203;0.041503165;0.24852829;0.37957171;0.33042738;0.50304508;0.19393484;0.22918583;0.30545664;0.21714796;0.12825285;0.96017283;0.31576434;0.11352275;0.26179153;0.35150158;0.11995564;0.8626976;0.2111415;0.26876947;0.89177877;0.1798397;0.036580596;0.25676113;0.32535571;0.82914418;0.14988384;0.14777185;0.12865508;0.18522687;0.71167183;0.21184328;0.33211312;0.27862033;0.19940563;0.93602598;0.5544315;0.22316024;0.10139666;0.14485903;0.92309344;0.22800769;0.28250536;0.065100469;0.3482728;0.19227463;0.36355218;0.36525291;0.39333344;0.084317066;0.077975333;0.28586134;0.43811178;0.9333812;0.77318639;0.72622502;0.91130108;0.79187524;0.29439676;0.18415587;0.20245774;0.24102007;0.20459491;0.41884002;0.2143608;0.19153777;0.25083253;0.073307171;0.21870007;0.18941849;0.69739348;0.25364119;0.15948035;0.17971545;0.45114449;0.91974849;0.23560901;0.23340166;0.18709311;0.28071809;0.90710044;0.15790525;0.14230901;0.18079813;0.087579437;0.93082476;0.13684797;0.28498128;0.11179442;0.16414043;0.9345696;0.28970367;0.34866008;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.33932811;0.05644301;0.25667754;0.06851799;0.99230593;0.089457624;0.021438485;0.28583616;0.52568197;0.037698142;0.03314836;0.096276484;0.99601597;0.052696493;0.086896427;0.048624583;0.48058057;0.13341163;0.018391021;0.088898495;0.97784126;0.039581347;0.34556079;0.057167921;0.38703009;0.93663996;0.10591034;0.20237722;0.19189054;0.46370345;0.16324541;0.4831138;0.1040079;0.10404465;0.35607764;0.195031;0.099125564;0.78495097;0.18949507;0.3547312;0.27159733;0.30247492;0.29508588;0.62416101;0.097626075;0.71698052;0.20283958;0.22459207;0.26966181;0.90638572;0.7361964;0.22970285;0.2989924;0.14799291;0.2131996;0.12001268;0.12315714;0.15450898;0.91788548;0.14576443;0.32461685;0.8469137;0.083694831;0.31523222;0.082526781;0.86744791;0.33275041;0.10076954;0.42198974;0.82830393;0.12296402;0.18662512;0.10712653;0.33616754;0.22897005;0.98133284;0.064961441;0.019806512;0.056968201;0.52225518;0.086031549;0.66137809;0.076362282;0.07883995;0.13936378;0.16245726;0.043815114;0.94374996;0.03736205;0.065558471;0.13654669;0.037899185;0.03146828;0.80054855;0.070763513;0.35634261;0.059659984;0.037823267;0.082030699;0.97394508;0.93878096;0.13995174;0.19794206;0.18207832;0.033599716;0.092681505;0.87348318;0.23593873;0.65176117;0.1271439;0.0514322;0.51751679;0.26722831;0.056633465;0.11238836;0.59502482;0.10256168;0.078830786;0.88761961;0.80567455;0.016174063;0.10912351;0.1363811;0.16184923;0.56046587;0.60151315;0.38558042;0.39064673;0.18011409;0.46743196;0.2086533;0.27879915;0.38663393;0.70075941;0.33263132;0.31654543;0.60696316;0.1444684;0.21508794;0.19661203;0.89541233;0.45766565;0.14662006;0.16578904;0.86969608;0.25753912;0.17990579;0.36046007;0.48200598;0.21079578;0.43619308;0.22733739;0.48802233;0.57794493;0.84370273;0.16429423;0.36521137;0.39685759;0.26153541;0.49952158;0.32508844;0.20841436;0.54507929;0.15192531;0.50235105;0.17866217;0.18409535;0.20048036;0.43086916;0.57207096;0.75830245;0.18325491;0.31562832;0.19087224;0.62464958;0.081586495;0.37381876;0.1395611;0.38116854;0.82784194;0.19234145;0.31182322;0.45876083;0.92023033;0.10881929;0.14559472;0.24228773;0.69250089;0.10254176;0.25135279;0.12984815;0.95387334;0.10786626;0.32570541;0.12977877;0.91318411;0.44443786;0.18873227;0.13997857;0.14676687;0.25082904;0.13117772;0.39087161;0.41162494;0.85401654;0.10217985;0.28134418;0.13779464;0.95365131;0.34434131;0.25811556;0.20434679;0.80368781;0.30665532;0.26728001;0.35273337;0.927607;0.2055583;0.18532155;0.093476109;0.7554127;0.10468626;0.23100598;0.31723529;0.09350507;0.12091999;0.21532899;0.93267268;0.24433456;0.26914045;0.17617778;0.064609639;0.88357025;0.11361716;0.1521931;0.13424382;0.13870138;0.89806104;0.2246989;0.33339566;0.12618755;0.18642251;0.94985861;0.13343677;0.1212179;0.24214168;0.1360634;0.92758781;0.36329818;0.074463338;0.093406729;0.14786151;0.11827883;0.17725852;0.10651467;0.151934;0.067149289;0.11167061;0.14840367;0.11092962;0.91094095;0.87411058;0.82435578;0.90878189;0.91894895;0.1991639;0.42463297;0.21782681;0.15461981;0.092673495;0.15172364;0.10619795;0.25011012;0.22783652;0.074731134;0.81569982;0.25373328;0.2709958;0.23281749;0.11069466;0.17823341;0.22039817;0.16792779;0.80232507;0.2418298;0.1229164;0.82584482;0.09135741;0.20076779;0.17779136;0.8894285;0.28666219;0.19372985;0.20051876;0.90978503;0.073051356;0.29709125;0.35205841;0.26257852;0.24597284;0.43884555;0.087526545;0.071211107;0.089860544;0.040690761;0.16418827;0.025904406;0.13488868;0.57460386;0.11575103;0.84106833;0.9720211;0.53240842;0.67922091;0.79892462;0.6386162;0.12985802;0.098271042;0.029658569;0.76041883;0.089570038;0.16794597;0.18559791;0.17074026;0.071246959;0.78716773;0.23449759;0.41417387;0.14624886;0.17033869;0.2480379;0.13633484;0.35871732;0.79375994;0.17053488;0.12200338;0.8918981;0.17239425;0.1163325;0.14958435;0.76545447;0.16955613;0.26202095;0.27319601;0.94752735;0.11240035;0.15135576;0.32542381;0.37148863;0.39027965;0.98967236;0.029703643;0.032022905;0.067166835;0.55039841;0.032924384;0.75173074;0.060477097;0.052243091;0.031212021;0.038652398;0.10021823;0.92076713;0.06110625;0.040357053;0.046044931;0.021772606;0.044102885;0.6623621;0.02697446;0.60495466;0.06890858;0.047356326;0.030300053;0.99326473;0.094649844;0.12081669;0.73942333;0.10084064;0.041619632;0.14844632;0.078264773;0.5142203;0.27125981;0.094020538;0.44051403;0.77600718;0.95843774;0.66487366;0.4629052;0.15340467;0.062527947;0.74490774;0.058554959;0.23916361;0.059573181;0.060537741;0.61555398;0.047515821;0.035676867;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86823398;0.068054333;0.073756509;0.085286401;0.95813251;0.070654996;0.043611202;0.059708349;0.49760738;0.11230265;0.045180779;0.07173086;0.95351595;0.06876459;0.089582406;0.173498;0.44538748;0.04894932;0.04550992;0.091581695;0.9807778;0.12767163;0.080084801;0.042325377;0.57632804;0.079042397;0.22791477;0.13676509;0.34828582;0.12431321;0.29088566;0.28574416;0.14131494;0.12643322;0.11414637;0.88143116;0.85863322;0.87561578;0.87716943;0.96817082;0.10015611;0.15647762;0.23459266;0.25533494;0.11832681;0.20169398;0.15204746;0.17444295;0.326693;0.094036452;0.37411749;0.10234488;0.039876521;0.16876532;0.95632935;0.052705325;0.10176441;0.1605027;0.76424366;0.096270882;0.080197901;0.10824431;0.93818945;0.091164581;0.12238158;0.037794031;0.83818686;0.14250651;0.14224145;0.04246667;0.93701756;0.1247439;0.11189088;0.10447919;0.43973121;0.68161029;0.29330191;0.34766936;0.11586111;0.068434052;0.089169055;0.89290231;0.12098718;0.037744898;0.22756572;0.35130751;0.30451033;0.54273081;0.17693396;0.20956987;0.28091663;0.19840226;0.11662837;0.96548015;0.29064143;0.10318362;0.23994286;0.32451788;0.10905205;0.87960154;0.19245207;0.24599351;0.9057433;0.16360492;0.033212703;0.23478796;0.2991606;0.85002565;0.13613886;0.13420726;0.11675126;0.16855843;0.74297118;0.19310078;0.30555171;0.25520518;0.18161814;0.94457906;0.5214144;0.2035711;0.091940299;0.13154434;0.93327111;0.20806281;0.25884324;0.059111148;0.32128558;0.17530178;0.33583289;0.33745512;0.36432645;0.07655181;0.07079298;0.26234612;0.40752906;0.94214714;0.79908997;0.75599343;0.92276901;0.8160879;0.2703622;0.1678194;0.1847014;0.2204508;0.18667632;0.38888177;0.19570968;0.1746224;0.22958772;0.066556014;0.19936346;0.17234695;0.7298463;0.23179227;0.14486471;0.16342485;0.41957641;0.9303813;0.21503024;0.21298203;0.17020746;0.25707296;0.91928524;0.14342232;0.12916119;0.16441974;0.079361998;0.94007063;0.12417545;0.26106545;0.10135236;0.14913356;0.94334072;0.26549265;0.32112706;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.34775665;0.046841603;0.21608698;0.056826927;0.99424756;0.074181035;0.017908921;0.24161957;0.53402787;0.031355191;0.027595662;0.079845816;0.99703646;0.043745633;0.072055325;0.04038142;0.48974773;0.1108419;0.015383311;0.073716976;0.98331648;0.032911014;0.2947948;0.047440797;0.39504346;0.95201606;0.087682076;0.16888736;0.15994877;0.47229832;0.13567959;0.4909831;0.086100928;0.086131535;0.30374849;0.16262245;0.082046203;0.8314209;0.15791126;0.30253264;0.22868359;0.25583729;0.24931087;0.62910545;0.080801718;0.72005039;0.1692823;0.18792354;0.22699143;0.92863017;0.76535499;0.20979339;0.2745108;0.13451657;0.19450383;0.10896283;0.11182975;0.14048268;0.9286145;0.13247766;0.29867193;0.86576104;0.075932689;0.28980833;0.07487265;0.88406181;0.30636808;0.091444261;0.39170673;0.84909123;0.1116536;0.16997768;0.097226955;0.309605;0.20911361;0.98605061;0.053724863;0.016509803;0.047136009;0.52885652;0.071125381;0.66647327;0.063133419;0.065180101;0.11549425;0.13489202;0.036301672;0.95754927;0.03098694;0.054217163;0.11313643;0.031429399;0.026131211;0.8021037;0.05851125;0.36530098;0.049354296;0.031366851;0.067817017;0.98048294;0.95257252;0.1181412;0.16794421;0.15424143;0.028397476;0.078065857;0.8746078;0.20102826;0.65376085;0.10724168;0.043365579;0.52209592;0.27877289;0.047732536;0.094724149;0.59814644;0.086409539;0.06639313;0.88841343;0.80489129;0.013744775;0.091959722;0.11509909;0.13685603;0.56972373;0.63822663;0.35722914;0.36208993;0.16428337;0.4364343;0.19063981;0.25599262;0.35823947;0.73195791;0.30674925;0.29152462;0.64344364;0.13153462;0.19660015;0.17950404;0.90857941;0.42690516;0.1335064;0.15110062;0.88575113;0.23609509;0.1640915;0.33320946;0.45069483;0.19262338;0.47222692;0.20926768;0.4587644;0.54808575;0.86122751;0.15070136;0.3396129;0.37002271;0.24186476;0.47008264;0.3013328;0.19162673;0.58096182;0.13927668;0.47287291;0.16399853;0.16947496;0.18424635;0.40292776;0.54219317;0.78325588;0.16825475;0.29235017;0.17532124;0.6570853;0.074080653;0.34566861;0.12690905;0.35269997;0.84847111;0.17538355;0.28680164;0.42764023;0.93056846;0.098849177;0.13243037;0.22165479;0.72456098;0.093133092;0.23009796;0.11803082;0.96001172;0.09798108;0.29991686;0.1179674;0.92437273;0.41370606;0.17205566;0.12729102;0.13350362;0.2294599;0.11901765;0.36143455;0.38137606;0.87201071;0.092625052;0.25768796;0.12505488;0.95979363;0.31706142;0.23598747;0.18612505;0.8268134;0.28144965;0.24453719;0.32503116;0.93701267;0.18724339;0.16859834;0.084721871;0.78289098;0.094902441;0.21078533;0.29141852;0.084876157;0.10962888;0.19619928;0.94170666;0.22308162;0.24619026;0.16013639;0.058538206;0.89858621;0.10298431;0.13816084;0.1217691;0.1258357;0.91136634;0.20486738;0.30658984;0.11442579;0.16954926;0.95667827;0.12103301;0.10990018;0.22104423;0.12342878;0.93726522;0.33497941;0.067457691;0.084708087;0.13432775;0.10732713;0.16127844;0.09662009;0.13805385;0.060894649;0.1013109;0.13482365;0.10063649;0.9225865;0.89007986;0.84567785;0.92068928;0.92961568;0.18144575;0.39410156;0.19868858;0.1405125;0.084042296;0.13786136;0.096332163;0.2286545;0.20796052;0.06776505;0.83776474;0.23212783;0.24824378;0.21267265;0.10046894;0.16224682;0.20115684;0.15277927;0.82569426;0.22104643;0.11160385;0.84689188;0.082885578;0.18300608;0.16184048;0.90355235;0.26291654;0.17651404;0.18277639;0.92150146;0.06627316;0.27270958;0.32467517;0.24037917;0.22490062;0.44631568;0.072546303;0.059030026;0.07448291;0.033812899;0.13669184;0.021596713;0.11203152;0.57960194;0.096025839;0.84191817;0.9789449;0.54081208;0.68416727;0.80077398;0.64222008;0.10781692;0.0814685;0.02470037;0.76133686;0.074241839;0.13986914;0.15484263;0.14223436;0.059059739;0.81195694;0.21424863;0.3841711;0.13292374;0.1550045;0.22683947;0.12385995;0.33103409;0.81793654;0.15518486;0.11078007;0.90573263;0.15689281;0.10561176;0.13597615;0.79218745;0.15428621;0.23987585;0.25031975;0.95454782;0.10203009;0.13759787;0.29944104;0.34321305;0.36119553;0.99232781;0.024641609;0.026550336;0.055462707;0.55641532;0.027292045;0.75449449;0.049954865;0.043180268;0.025883041;0.032003716;0.08275526;0.94000334;0.05047271;0.033405576;0.038082942;0.018108478;0.036485914;0.66743833;0.022394737;0.60978407;0.056897465;0.039161317;0.025132535;0.99501204;0.078950338;0.10088041;0.74448383;0.084127918;0.034792759;0.12418168;0.065274969;0.52498245;0.23005202;0.078424342;0.4517715;0.77893531;0.96893883;0.67102289;0.47381324;0.12838058;0.052172426;0.74980628;0.048868187;0.2019801;0.04971486;0.050517097;0.62406307;0.039692268;0.029853988;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86816275;0.056174777;0.060871944;0.070382096;0.96856755;0.058316663;0.036069602;0.049305558;0.50485229;0.092746623;0.03735986;0.059202924;0.96506363;0.056759737;0.073930182;0.14395669;0.45350936;0.04045786;0.037630413;0.075582549;0.98565966;0.10552963;0.066089422;0.035012659;0.58325785;0.07164716;0.20796099;0.12414122;0.32086354;0.11278447;0.26668185;0.2618598;0.12829599;0.1147167;0.10352617;0.8962692;0.87599218;0.8911078;0.89248759;0.97242647;0.090806074;0.1421625;0.21415448;0.23344225;0.10733151;0.18371513;0.13810767;0.15863475;0.30040437;0.085248552;0.38067931;0.085102104;0.033234954;0.14096242;0.96681678;0.043859571;0.084617928;0.1339599;0.76797289;0.08003749;0.066663317;0.090027377;0.95284617;0.075784311;0.10185622;0.0315102;0.83988893;0.11876459;0.11854125;0.03537998;0.95194018;0.10383661;0.093074828;0.086883351;0.44542071;0.71440005;0.26935703;0.32073885;0.10526459;0.062140934;0.080968179;0.90648544;0.10993952;0.034320734;0.20796901;0.32419831;0.27990326;0.58182031;0.16118771;0.19129428;0.25773123;0.18097332;0.10596399;0.97011983;0.26685742;0.093715437;0.21946913;0.29878795;0.099059336;0.89470381;0.17519556;0.2247456;0.91806293;0.14869104;0.030162899;0.21433499;0.27445164;0.86872768;0.12356907;0.12180623;0.10589674;0.15323333;0.77187532;0.17579302;0.28046274;0.23332052;0.16522636;0.95204961;0.4885878;0.18544628;0.08334545;0.11937658;0.94218618;0.18959293;0.23671125;0.053652126;0.29556948;0.1595884;0.30933553;0.31087348;0.33642277;0.069463931;0.064240634;0.24021359;0.37781581;0.94960386;0.82209885;0.78278226;0.93258339;0.83748513;0.24770397;0.15271473;0.16823575;0.20125027;0.17005408;0.35990068;0.17837973;0.15896399;0.209722;0.060399234;0.18150197;0.15665455;0.75990516;0.21148375;0.13149187;0.14847347;0.38899457;0.93969142;0.19596441;0.19407141;0.15469189;0.23498285;0.92998499;0.13017434;0.11716126;0.14938536;0.071910627;0.94814634;0.11261809;0.23870459;0.091859274;0.13539334;0.95099556;0.24283478;0.29505193;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.35641792;0.038928244;0.18106416;0.047182966;0.99570823;0.061546542;0.014990823;0.20310266;0.54194915;0.026126595;0.023016412;0.066242039;0.9978013;0.036369417;0.059785437;0.033588953;0.49849725;0.092019409;0.012893852;0.061162017;0.98746145;0.02741323;0.24963596;0.039423473;0.40327728;0.96381605;0.072508879;0.14034967;0.13281114;0.48020887;0.11243822;0.49927956;0.071200304;0.071225598;0.2568067;0.13506395;0.067846492;0.86938787;0.13109539;0.25573173;0.19132154;0.2148055;0.20914046;0.63445574;0.066817582;0.72258186;0.1406834;0.15647192;0.1898655;0.94589859;0.79214019;0.1913307;0.25151625;0.122181;0.17721589;0.098885782;0.10149556;0.12763178;0.93803942;0.12031936;0.27417883;0.88259369;0.068881311;0.2658523;0.067919999;0.89882714;0.28142124;0.082958803;0.36252049;0.86774147;0.10133512;0.15465078;0.088212535;0.2844702;0.19070262;0.98960072;0.044445619;0.013778589;0.039020807;0.53486282;0.058785699;0.67181903;0.052196201;0.053883158;0.09552981;0.11170653;0.030101353;0.96807718;0.025724182;0.044851039;0.093568742;0.026088675;0.021722365;0.80389452;0.048387747;0.37375751;0.040847082;0.026037196;0.056057051;0.98541653;0.96337521;0.099529304;0.14198564;0.13025126;0.024011839;0.065702766;0.87583572;0.17050114;0.65531939;0.090303503;0.036569368;0.52615625;0.29068953;0.040231995;0.079733193;0.60078305;0.072725452;0.055892043;0.88930708;0.80383199;0.011688057;0.0774021;0.096952237;0.11542275;0.57908893;0.67341405;0.32999095;0.33462444;0.14964388;0.40610921;0.17390579;0.234543;0.33095366;0.7610538;0.28215328;0.26782227;0.67835331;0.1196361;0.17940691;0.16364224;0.92028022;0.39688006;0.12143888;0.1375469;0.90010244;0.21600498;0.14946763;0.30716565;0.41995996;0.17573592;0.51064754;0.19173333;0.42889351;0.51695454;0.87698448;0.13763726;0.31541428;0.34315485;0.22207047;0.43995079;0.27788019;0.17538562;0.61725152;0.12714097;0.44268101;0.14987636;0.15492401;0.16856043;0.37613404;0.51108742;0.80617124;0.15379909;0.26940978;0.16031717;0.68993235;0.067255355;0.31880036;0.11532854;0.32548496;0.86703056;0.15973996;0.26321924;0.39737484;0.93967247;0.089758478;0.12037106;0.20245959;0.75442606;0.084560201;0.21029234;0.10722822;0.96537924;0.088968739;0.27554438;0.10717034;0.93424076;0.38391611;0.15668042;0.11567729;0.12135175;0.2098255;0.10788608;0.33317542;0.35220295;0.88820648;0.083909072;0.2354846;0.11338225;0.96512878;0.29113227;0.21530938;0.16925843;0.84788048;0.25767505;0.22324818;0.29865399;0.94522816;0.17028688;0.15316677;0.076743394;0.80822927;0.085975081;0.19198197;0.26701578;0.077137224;0.099357948;0.17854756;0.94958919;0.20336999;0.22480644;0.14542924;0.053045303;0.9118365;0.093320742;0.12534225;0.11040176;0.11410516;0.92306703;0.1865382;0.28129426;0.1037195;0.15405454;0.96260667;0.10973163;0.099604599;0.20148456;0.11191298;0.94571871;0.30808827;0.061115481;0.076793656;0.12193127;0.09733513;0.14657708;0.087604992;0.12533285;0.055216096;0.091866426;0.1223839;0.091253459;0.93258315;0.90392047;0.86440229;0.93091637;0.93875277;0.16508806;0.36463028;0.18096441;0.12757842;0.076189697;0.12515704;0.087343559;0.20867056;0.18952119;0.06143735;0.85762292;0.2120091;0.22698916;0.19398387;0.091154963;0.14754957;0.1833443;0.13887408;0.84679711;0.20173427;0.1012846;0.86578655;0.075184956;0.16661771;0.14717697;0.91604006;0.240668;0.1606476;0.16640656;0.93181247;0.060121506;0.24981955;0.2986815;0.21967331;0.20530571;0.45357242;0.06006074;0.048898436;0.061661616;0.028098866;0.11340436;0.018011076;0.092808895;0.58437568;0.079504088;0.84206408;0.98409915;0.54799467;0.68800098;0.80178845;0.64562339;0.089300968;0.067440093;0.02057635;0.76212674;0.061462302;0.1160674;0.12864733;0.11805095;0.048922926;0.83441424;0.19547176;0.35533074;0.12073996;0.14093459;0.20713469;0.11246908;0.3047393;0.83980167;0.14109978;0.10055112;0.91794974;0.14266478;0.095847294;0.12352775;0.81654096;0.14027645;0.2192383;0.22895648;0.96067184;0.092589296;0.12500936;0.27492934;0.316284;0.33338484;0.99431592;0.020470632;0.022042682;0.045822855;0.5622822;0.022653397;0.75725603;0.041293025;0.035722654;0.021493167;0.026531167;0.068306953;0.95478559;0.041718882;0.027684426;0.031531338;0.015083442;0.03021799;0.67246449;0.018619105;0.61448038;0.047003176;0.032418102;0.020875007;0.99631709;0.065609291;0.083858132;0.7488693;0.069911346;0.029016625;0.10333761;0.054262184;0.53495926;0.19340216;0.065172382;0.45776194;0.77860683;0.97654259;0.67278284;0.47944593;0.10685898;0.043406636;0.75403911;0.040670607;0.16924039;0.041371696;0.042035945;0.63176757;0.033073638;0.02492539;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86808312;0.046396449;0.050260175;0.058088608;0.97646326;0.048158102;0.029867919;0.040748499;0.51196587;0.076541223;0.030928748;0.0488871;0.97381574;0.046877544;0.061011847;0.1191227;0.46150973;0.033475567;0.031151209;0.062373511;0.9893229;0.087122843;0.054553956;0.028998904;0.5900147;0.064945497;0.18949814;0.11262678;0.29489502;0.10228619;0.24402404;0.23952329;0.11641378;0.10404444;0.093867429;0.909729;0.89181364;0.90517741;0.90639472;0.97623277;0.082315706;0.12906916;0.19522129;0.21308556;0.097326443;0.16715382;0.12536584;0.14413665;0.27561995;0.077273801;0.38753176;0.070653103;0.027700314;0.1173209;0.97488612;0.036489185;0.070250899;0.11143737;0.77133238;0.066448264;0.055360015;0.074745692;0.96419662;0.062919766;0.084590226;0.026272966;0.84133619;0.098704979;0.098518141;0.029475085;0.96350145;0.086240768;0.077279836;0.072132692;0.45139644;0.74506903;0.24681322;0.29510903;0.095570542;0.056409858;0.073487386;0.91852951;0.09982679;0.031204822;0.18973906;0.29837897;0.2566857;0.61985606;0.14666076;0.17434523;0.23595397;0.16483928;0.096207276;0.97416979;0.24447657;0.085066341;0.20038211;0.27441543;0.089925013;0.90813613;0.15928902;0.20497851;0.92890573;0.13500579;0.027396983;0.19534561;0.25123259;0.88540709;0.11207978;0.11047435;0.096000068;0.1391602;0.79836988;0.15983756;0.2568565;0.21292654;0.15014316;0.95856786;0.45617342;0.16870864;0.075530507;0.10826184;0.94998407;0.17252384;0.21607316;0.048699029;0.27129942;0.14514118;0.28425443;0.2857044;0.30985466;0.063026056;0.058291733;0.21956104;0.34926075;0.95636994;0.8435533;0.80801165;0.94151336;0.85736173;0.22652963;0.13884287;0.15307446;0.18346618;0.15474382;0.33216199;0.16239472;0.14456873;0.19129273;0.05481093;0.16503584;0.14225058;0.78754628;0.19265737;0.11926682;0.1347684;0.35954347;0.94783735;0.17834172;0.17659825;0.14045474;0.21441051;0.9393698;0.11806576;0.1062145;0.13560209;0.065150283;0.95519733;0.10208185;0.21786468;0.083228275;0.12282478;0.95767438;0.22170065;0.27046528;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.36503318;0.032380488;0.15109596;0.039201535;0.99680489;0.051075023;0.012565048;0.16989002;0.54964417;0.021795705;0.019220902;0.054959562;0.99837327;0.030265851;0.049618509;0.02796755;0.50702769;0.076330185;0.01082188;0.050756939;0.99059314;0.022860363;0.21001679;0.032789789;0.41143274;0.97281832;0.059931848;0.11628174;0.10997614;0.48795322;0.092995644;0.50753367;0.058852147;0.058873016;0.21553165;0.11185917;0.056085892;0.89977324;0.10854274;0.21459763;0.15927009;0.17930378;0.17445691;0.63977194;0.055237398;0.72501278;0.11656082;0.12980987;0.15803303;0.95918673;0.81652981;0.174289;0.23004477;0.11092424;0.16129859;0.089719087;0.092091776;0.11589527;0.94628936;0.10922737;0.25120255;0.8975417;0.062487464;0.24341798;0.061616216;0.91188246;0.25798368;0.07525415;0.33461228;0.88436991;0.091945887;0.14059332;0.080022991;0.26084152;0.17371021;0.99226749;0.036800608;0.011516342;0.032335456;0.54074067;0.048606709;0.67708582;0.04318054;0.044569496;0.078945346;0.09236639;0.024990959;0.97606981;0.02138369;0.037134301;0.077321514;0.021684181;0.018082734;0.80568588;0.040045407;0.38212833;0.033838719;0.021641748;0.046359435;0.98913085;0.97188538;0.083391815;0.11923005;0.10928972;0.020236064;0.055051465;0.87622428;0.14351222;0.65758055;0.075646676;0.030726185;0.53094959;0.3014909;0.033783469;0.066788271;0.60414511;0.060923398;0.046855729;0.88943642;0.80330998;0.0099086557;0.064836629;0.081226982;0.096767806;0.58670455;0.70670456;0.30405316;0.30844346;0.13617925;0.37673557;0.15845251;0.21451388;0.30496496;0.78789252;0.25896671;0.24554323;0.71133333;0.10874215;0.16351464;0.1490199;0.93061751;0.36785814;0.11038735;0.12510458;0.9128471;0.19731154;0.13601795;0.28248593;0.39009231;0.16013619;0.54951596;0.17477129;0.39854145;0.48464766;0.89105576;0.12511167;0.29205111;0.31637317;0.20281677;0.40925476;0.25481933;0.15971899;0.65277714;0.11552338;0.41190439;0.13631041;0.14093493;0.15344657;0.34991497;0.47885323;0.82703388;0.13990407;0.24689054;0.14588025;0.72139192;0.061050419;0.29329389;0.1047425;0.29961216;0.88362569;0.14534158;0.24109086;0.36813411;0.94766092;0.081475496;0.10933951;0.18465905;0.78198344;0.076753385;0.19189902;0.097364016;0.97005987;0.080757894;0.25261739;0.097311407;0.94291133;0.3552238;0.14253619;0.10506038;0.11023393;0.1914369;0.0977327;0.30626905;0.3243072;0.90240723;0.075982466;0.21477842;0.10272703;0.96977037;0.26667121;0.19610173;0.15372385;0.86656541;0.23540364;0.20344283;0.27372974;0.95240963;0.15466689;0.13899323;0.069493033;0.830962;0.077854246;0.17459279;0.24411145;0.070035823;0.090016812;0.16229279;0.95645654;0.18513545;0.20494299;0.13196261;0.048071668;0.92349339;0.084538504;0.11364187;0.1000483;0.10341527;0.93333054;0.16963543;0.25752515;0.093976937;0.13984643;0.96775496;0.099439196;0.090240724;0.18339691;0.10142203;0.95309055;0.28267404;0.055369992;0.069615871;0.11062498;0.088252366;0.13311744;0.079419658;0.11372475;0.050074905;0.083286926;0.1110375;0.082730494;0.94158173;0.91645461;0.88151729;0.94012529;0.94696784;0.15006571;0.33644104;0.16464178;0.11577171;0.069068447;0.11356448;0.079182565;0.19017272;0.17251369;0.055706132;0.87537533;0.19336842;0.20724006;0.17672651;0.082690991;0.13408624;0.16692756;0.12615421;0.86571819;0.18387575;0.0918957;0.88263983;0.068199113;0.15155774;0.13374551;0.9270308;0.21993981;0.14608188;0.151364;0.94085085;0.054547798;0.22845443;0.27417314;0.20046085;0.1871734;0.46061897;0.04977417;0.040560681;0.051096227;0.023394614;0.093999729;0.015051532;0.076874323;0.58895922;0.065847799;0.84302795;0.98809695;0.55634141;0.69294268;0.80373031;0.64887041;0.073964439;0.05586997;0.017175522;0.76284206;0.050931472;0.09621983;0.10672574;0.097874157;0.04058088;0.85462296;0.17809924;0.32775432;0.10960632;0.12803821;0.18886413;0.10207209;0.27987435;0.85944802;0.1281891;0.091229416;0.92869771;0.12961961;0.086954206;0.11214779;0.8385663;0.12743649;0.20005949;0.20906606;0.96600163;0.083994284;0.11349874;0.2518957;0.29075557;0.30692214;0.99579614;0.01703711;0.018333796;0.037905831;0.56793821;0.01883734;0.75998551;0.034180358;0.029598327;0.01788063;0.02203282;0.056410171;0.96602356;0.03453055;0.022982638;0.026149606;0.012587667;0.025068602;0.67740667;0.015509054;0.61898762;0.038876604;0.026879406;0.017370734;0.99728614;0.054554403;0.069706321;0.75318384;0.058122903;0.024237966;0.085931368;0.045149665;0.54478884;0.16194382;0.054192051;0.46349847;0.77817243;0.98231059;0.67436606;0.48482406;0.088870943;0.036158722;0.75820559;0.033892874;0.14136684;0.034473464;0.035023555;0.63933045;0.027600201;0.020845223;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86772758;0.038359396;0.04153581;0.047973521;0.98241061;0.039807659;0.024768816;0.033716533;0.51948732;0.063167647;0.025641667;0.040406916;0.98041648;0.038754962;0.050378487;0.098413847;0.46992269;0.027736574;0.02582466;0.051498808;0.99206388;0.071898893;0.045066305;0.024053773;0.59605807;0.0588733;0.17246662;0.10213768;0.27043167;0.092735991;0.22290339;0.21872075;0.10558401;0.09433376;0.085090131;0.92157042;0.90579969;0.91757041;0.91864055;0.97952545;0.074610434;0.1171132;0.17773767;0.19422387;0.088230766;0.15193705;0.11373731;0.13086666;0.25236663;0.070040204;0.39426994;0.058591519;0.02309058;0.097374469;0.98107952;0.030355034;0.058258619;0.092464648;0.77473718;0.055112183;0.045944579;0.061979886;0.97295052;0.052193794;0.070138864;0.021909932;0.84284538;0.081861526;0.081706211;0.024558166;0.97242075;0.071508117;0.064078927;0.05981629;0.45723692;0.77344555;0.22572598;0.27089679;0.086731151;0.051203258;0.066682324;0.92915338;0.090600573;0.028374942;0.17287078;0.27397063;0.23492524;0.65637583;0.13331729;0.15870488;0.21562715;0.14997521;0.087309919;0.97769386;0.22355117;0.07718917;0.18268624;0.25148961;0.081601486;0.92001635;0.14468567;0.18668133;0.93839687;0.12249156;0.02489127;0.1778;0.22954471;0.90017766;0.10160919;0.10014924;0.086999781;0.12628266;0.82241368;0.14518809;0.23478158;0.19402047;0.13631693;0.96423078;0.42445999;0.15331757;0.068439543;0.098137766;0.95677316;0.15681756;0.19692935;0.044205517;0.24850614;0.13188761;0.26063621;0.26199543;0.2846992;0.057180826;0.052892219;0.20036292;0.32198992;0.96226555;0.86281383;0.83088797;0.9493233;0.87513739;0.20682058;0.12612982;0.13914783;0.16704507;0.14067671;0.3057707;0.14768872;0.13136418;0.17425185;0.049739756;0.14991428;0.12907326;0.81266463;0.1752827;0.10812205;0.12224518;0.33139896;0.95491838;0.16212018;0.16051924;0.12743357;0.19534662;0.94754559;0.10702914;0.096253373;0.12300559;0.059026279;0.96131504;0.092499435;0.19853988;0.075396352;0.111361;0.96346545;0.20208842;0.24742343;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.37332866;0.026957717;0.12568709;0.032593209;0.99762946;0.042400666;0.0105443;0.14155819;0.55750477;0.01820262;0.016069427;0.045609973;0.99880141;0.02520993;0.041197419;0.023309736;0.51573426;0.063286982;0.0090936478;0.042137876;0.99296176;0.019084161;0.17574403;0.027295956;0.41922745;0.97963381;0.049560137;0.096189082;0.090945646;0.49548709;0.076861501;0.51573896;0.048670631;0.048687864;0.17991935;0.092510685;0.046391942;0.92362511;0.089754798;0.17911947;0.13215916;0.14907043;0.14496951;0.64505547;0.045693088;0.72732604;0.096421383;0.10746508;0.13111828;0.96931201;0.83858085;0.15858735;0.21005575;0.10065587;0.1466656;0.081379697;0.083534151;0.10518179;0.9534924;0.099111497;0.22972305;0.9107585;0.056685805;0.22247778;0.05589661;0.92338228;0.2360432;0.068255641;0.30805799;0.89912468;0.083401702;0.12771375;0.072580405;0.23870927;0.15805562;0.99425811;0.030519109;0.0096446667;0.02684111;0.54637378;0.04024078;0.68229556;0.035772778;0.036916472;0.065255456;0.07635504;0.02078674;0.98208898;0.01780967;0.030793939;0.06391418;0.018057771;0.015082433;0.80749357;0.033191252;0.39029017;0.02807954;0.018022774;0.038390309;0.99190933;0.97850454;0.069790699;0.099890605;0.091519803;0.017062679;0.046113327;0.87653685;0.1204199;0.66012973;0.063311234;0.025824828;0.53604203;0.31225169;0.028375717;0.055909306;0.6078012;0.051012907;0.039277643;0.88950026;0.80301607;0.0084050717;0.054279603;0.067978896;0.081000216;0.59404159;0.7378841;0.2794567;0.28359342;0.12380621;0.34843346;0.14420128;0.19585833;0.28031537;0.81244826;0.23718263;0.22466782;0.74218023;0.098770671;0.14884621;0.13555577;0.93971753;0.3399511;0.10026935;0.11368992;0.92411733;0.17995524;0.12365863;0.25918764;0.3612273;0.14574581;0.58884442;0.15827417;0.36758584;0.45099187;0.90383804;0.11302885;0.27045709;0.28956923;0.18510672;0.377868;0.23204109;0.14452159;0.68926567;0.10433219;0.38041514;0.12320182;0.12823389;0.13880125;0.32537383;0.44532266;0.8463093;0.12646963;0.22468378;0.13190822;0.75165033;0.055408478;0.26919419;0.095073253;0.27513343;0.89837974;0.1321121;0.22040457;0.34005058;0.95464599;0.073930621;0.099257268;0.1681942;0.80718595;0.069645815;0.17486341;0.08836256;0.97413021;0.073279358;0.23113498;0.088314809;0.95050174;0.32774711;0.12954585;0.095362529;0.10007153;0.17439072;0.088564485;0.28102574;0.29803151;0.91498661;0.068842553;0.19571519;0.093099542;0.97384977;0.24391438;0.17848058;0.13957913;0.88326818;0.21481559;0.18524784;0.2505081;0.95874351;0.14044186;0.12611867;0.062966146;0.85147554;0.070538044;0.15870182;0.2229019;0.063552506;0.081537709;0.14737862;0.96242148;0.16833693;0.18657671;0.1196679;0.043572575;0.9337042;0.076571703;0.10298849;0.090638645;0.093695775;0.94229752;0.15410693;0.2353176;0.085129164;0.12685859;0.97221422;0.09008576;0.081740722;0.16673894;0.091885813;0.95949912;0.25880435;0.050171025;0.063108534;0.10032631;0.080002315;0.12081692;0.071992025;0.10314663;0.045419868;0.075498402;0.10070166;0.074993804;0.94943446;0.92746389;0.89669108;0.94816452;0.95412695;0.13629986;0.3096391;0.1496478;0.10500953;0.062612712;0.1030008;0.071776979;0.17310384;0.15686946;0.050515439;0.89116395;0.17613658;0.1889365;0.16082069;0.074997738;0.12176479;0.15182236;0.11452711;0.88259065;0.16739513;0.083352789;0.89759922;0.061858118;0.13773672;0.12145383;0.93667281;0.2006824;0.13272639;0.13755935;0.94875222;0.049493339;0.20857286;0.2511563;0.18267719;0.1704302;0.46756363;0.041324884;0.033714924;0.042416967;0.019525874;0.077941723;0.012610289;0.063735895;0.59346324;0.054609429;0.84396434;0.99109352;0.56446719;0.69772905;0.80561292;0.65206742;0.061326213;0.046361003;0.01437307;0.76356804;0.042280871;0.079786591;0.088527903;0.081161804;0.033731617;0.87270123;0.16208023;0.3015523;0.099450938;0.11624367;0.17198443;0.092598043;0.25648955;0.87699997;0.11638126;0.082746416;0.93812418;0.1176864;0.078865252;0.10176396;0.85835773;0.11569482;0.1823042;0.19062102;0.97063267;0.076179147;0.10299379;0.23035674;0.26669195;0.28189114;0.99689865;0.014205036;0.015276193;0.031400036;0.57347393;0.015691997;0.76266491;0.028334673;0.024562947;0.014901921;0.018328927;0.046623848;0.97453678;0.028622845;0.01911222;0.02172246;0.010524015;0.020831695;0.68224162;0.012941886;0.6233936;0.032198705;0.022323735;0.014480675;0.99800605;0.045398202;0.057961132;0.75714761;0.048355449;0.020277688;0.071440682;0.037607502;0.55413252;0.13520049;0.045097988;0.46901649;0.77765441;0.9866519;0.67580307;0.48998323;0.073886655;0.030160185;0.76202774;0.028282914;0.11782261;0.028763957;0.029219765;0.64642662;0.023066891;0.017460898;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86736375;0.031749878;0.034360949;0.039652731;0.98688245;0.03294041;0.020569827;0.0279325;0.52687526;0.052148201;0.021288589;0.033433039;0.98538446;0.032075092;0.041629743;0.081227459;0.47821119;0.023013035;0.021439252;0.042550765;0.9941138;0.059336904;0.037263028;0.019980909;0.60194033;0.053373676;0.15680274;0.092595831;0.24750315;0.084058322;0.20329617;0.19942454;0.095727645;0.085508697;0.077121839;0.93195832;0.91812009;0.92845351;0.92939138;0.98237228;0.06762296;0.1062145;0.16164285;0.17680879;0.079970397;0.13799098;0.10314218;0.11874559;0.23065296;0.063483067;0.40119016;0.048581496;0.019263284;0.080698632;0.98579264;0.025268422;0.048306491;0.076621257;0.77791131;0.045707949;0.038139455;0.05138069;0.97963703;0.043298271;0.058125164;0.018286377;0.84420758;0.067828514;0.067699865;0.020477217;0.97923523;0.059257694;0.053115331;0.049593236;0.46325377;0.79971159;0.20611139;0.24817161;0.078691773;0.046481483;0.060505066;0.93857819;0.082205631;0.025808351;0.15733215;0.25104699;0.21464795;0.69136333;0.1211051;0.14433222;0.19675641;0.13633552;0.07921721;0.98078388;0.20409551;0.070032105;0.16635747;0.23005657;0.074035414;0.93058014;0.13131398;0.16980577;0.94658697;0.111072;0.022621235;0.16164343;0.2093783;0.91306084;0.092082351;0.090756513;0.078825273;0.11452521;0.84385908;0.13177301;0.21423428;0.17655994;0.12367381;0.96908194;0.39367548;0.13920459;0.062011171;0.088930294;0.96260142;0.14240699;0.17923942;0.040130485;0.22720285;0.11975738;0.23850754;0.23977615;0.26101273;0.051877242;0.04799417;0.18258594;0.29610646;0.96739513;0.88001198;0.85149658;0.95614022;0.89095652;0.18854791;0.11450437;0.12638713;0.15192966;0.12778421;0.28080973;0.13419537;0.1192796;0.15854627;0.045140162;0.13606457;0.11704396;0.83514243;0.15929976;0.097979121;0.11082482;0.30467519;0.96100408;0.14723229;0.1457662;0.11554996;0.17774591;0.95458651;0.0969861;0.087201655;0.11151712;0.053481739;0.9665634;0.083795853;0.1806875;0.06829603;0.10092297;0.96843052;0.1839584;0.225933;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.38161597;0.022468755;0.10433125;0.027126461;0.99824744;0.035226364;0.0088602742;0.1176333;0.56517327;0.015221422;0.01345227;0.037876371;0.99912059;0.021023296;0.03423281;0.019451153;0.52425253;0.052479289;0.0076514599;0.035009392;0.99474764;0.01595203;0.14648086;0.022748413;0.42699143;0.98475754;0.041018505;0.079506978;0.075164936;0.50290674;0.063522615;0.52360386;0.040286146;0.040300265;0.14959237;0.076460458;0.038410082;0.94206035;0.074179456;0.14891534;0.10942797;0.12358797;0.12014803;0.65003425;0.037834745;0.72960091;0.079699516;0.088860333;0.10855839;0.97696245;0.85838991;0.14416164;0.19152151;0.091303334;0.13324796;0.073801227;0.075755686;0.095418349;0.95976871;0.089899823;0.20973125;0.92240125;0.051424455;0.20301531;0.050709918;0.93347907;0.21559691;0.061903559;0.28294185;0.91216189;0.075635552;0.11593877;0.065822743;0.21807332;0.1436744;0.99574625;0.025349304;0.0080916919;0.022316853;0.55188906;0.033358503;0.6874159;0.029678313;0.030620383;0.053968195;0.063128479;0.017319931;0.98662263;0.014859403;0.025575802;0.052862231;0.015064597;0.012602632;0.80929476;0.027551396;0.39835662;0.023338098;0.015035633;0.031834416;0.99399072;0.98368967;0.058705606;0.084034659;0.076977924;0.014474514;0.038847338;0.87872714;0.10139079;0.66197276;0.053267229;0.021836957;0.54033977;0.32660219;0.023977466;0.047058918;0.61069894;0.042954054;0.033118296;0.89128554;0.80223918;0.0071718413;0.045692548;0.057184488;0.068124324;0.60519224;0.76678789;0.25627092;0.26014867;0.11246765;0.32135758;0.13110113;0.17855701;0.2570757;0.83473229;0.21682191;0.20520358;0.77074057;0.08966393;0.13535242;0.12319589;0.94769841;0.31330287;0.091027044;0.10324448;0.93404084;0.1639051;0.11233299;0.23731668;0.33353344;0.13251442;0.60610509;0.14295645;0.33752736;0.41762444;0.91520506;0.10189253;0.23578839;0.26400939;0.16845423;0.34731466;0.21058781;0.13044457;0.7046057;0.094030619;0.34974197;0.11110134;0.11639956;0.12524842;0.28548074;0.4121286;0.86369956;0.11406229;0.20380047;0.11899269;0.76280403;0.050287675;0.24656796;0.086264789;0.25212318;0.91144657;0.11999851;0.20117031;0.31328225;0.9607445;0.067073137;0.090067677;0.15302962;0.83006984;0.063188113;0.15915518;0.080168881;0.97766751;0.066482492;0.21111882;0.080125578;0.95713556;0.3016279;0.1176559;0.086527646;0.090808012;0.15878706;0.080222376;0.25726575;0.27320939;0.92612416;0.062359065;0.17807429;0.084334798;0.97738779;0.22265814;0.16222574;0.1266169;0.89817768;0.19569491;0.16844292;0.22878867;0.96425676;0.1274042;0.11434498;0.057042032;0.86994272;0.063893549;0.1440936;0.20317309;0.057708811;0.073848762;0.13372937;0.96753216;0.15290835;0.16965319;0.1084643;0.039503418;0.94252324;0.06935104;0.09330304;0.082097128;0.084869601;0.95002389;0.13987955;0.21466263;0.07710278;0.11501064;0.97602403;0.081595726;0.074032642;0.15144381;0.083228059;0.96499443;0.23649752;0.045468058;0.057212025;0.090958104;0.072515368;0.10959615;0.065256596;0.093520671;0.041205578;0.068433404;0.091299094;0.067976139;0.95627552;0.9371087;0.91009265;0.95517027;0.96035647;0.1237129;0.28430536;0.13590871;0.095213696;0.056763109;0.093388043;0.065061845;0.15740107;0.14251734;0.045815427;0.90514344;0.1602587;0.17203225;0.14620322;0.068011567;0.11051101;0.1379614;0.10391831;0.89756429;0.1522323;0.075588435;0.91082197;0.056106221;0.12508276;0.11022768;0.94510883;0.18285918;0.12050814;0.12492055;0.95564443;0.044911534;0.19014457;0.2296439;0.16627179;0.15501757;0.47445196;0.03433631;0.028051682;0.035238042;0.016317252;0.064601362;0.010578793;0.052847534;0.59792584;0.045306284;0.84480828;0.99334979;0.57230097;0.70228481;0.80736631;0.65524405;0.050855834;0.03849455;0.012043489;0.76431966;0.035125632;0.06612958;0.07337667;0.067268923;0.028065478;0.88879603;0.14737745;0.27684289;0.090217441;0.10549577;0.15646547;0.083991177;0.23464282;0.89260817;0.10562103;0.0750487;0.94637448;0.10680982;0.071527958;0.092319936;0.8760463;0.10499585;0.16595066;0.17360662;0.97465438;0.069091998;0.093438119;0.21033894;0.24416396;0.2583842;0.99771738;0.011863044;0.012749205;0.026046066;0.57933521;0.013093071;0.76489097;0.023522163;0.020414788;0.012439661;0.015272059;0.038571496;0.98095548;0.02375951;0.01591883;0.018072816;0.0088130403;0.017337952;0.68649888;0.010817335;0.62812799;0.026703514;0.018568711;0.012091149;0.99853915;0.037806343;0.048212312;0.76124185;0.040255345;0.016986391;0.059389286;0.03135461;0.5635767;0.11261237;0.03755777;0.47455406;0.77721584;0.98997271;0.67730308;0.49516281;0.061419439;0.025184771;0.76598203;0.023628682;0.098034002;0.024027461;0.024405275;0.6536234;0.019302228;0.01464542;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86728549;0.026305452;0.028451998;0.03280095;0.99023747;0.027284242;0.017103642;0.02316591;0.53347993;0.043068536;0.017695978;0.027689222;0.98911482;0.026572807;0.034425449;0.06700182;0.48572585;0.019116635;0.017820153;0.035182208;0.99564409;0.048978072;0.030837247;0.016618188;0.60825014;0.048393264;0.14243212;0.083923973;0.22610873;0.076179713;0.18515809;0.18158729;0.086766616;0.077494897;0.069892541;0.94104862;0.92894012;0.9379856;0.93880558;0.98483247;0.061288942;0.096292593;0.14686468;0.16077638;0.07247398;0.12523571;0.093500614;0.10769153;0.2104606;0.057541173;0.40868434;0.040292654;0.016086075;0.06682577;0.98935014;0.021052592;0.040065672;0.063451432;0.78041583;0.037922025;0.03167839;0.042602051;0.98470002;0.035934221;0.048168141;0.015277205;0.84507996;0.056181733;0.056075424;0.017090784;0.9843961;0.049102962;0.044033408;0.041127332;0.46985114;0.82334793;0.18791558;0.22691779;0.071378693;0.042195935;0.054894604;0.94674391;0.074566454;0.023477659;0.1430417;0.22959557;0.19580732;0.72386068;0.10993721;0.13114211;0.17928086;0.12383359;0.071855292;0.98343319;0.18605371;0.063526951;0.15131733;0.2100828;0.067156054;0.93975157;0.11910278;0.15429641;0.95383716;0.10067438;0.020565325;0.14681572;0.19070996;0.92455274;0.083429255;0.082226619;0.071411528;0.10381471;0.86332905;0.11952129;0.19519578;0.16049418;0.11214113;0.9733575;0.36402547;0.12630053;0.056189623;0.080570318;0.96774429;0.12922412;0.16295457;0.036435101;0.20737405;0.10867487;0.21786517;0.21904385;0.23881739;0.047066342;0.043551739;0.16617708;0.27167347;0.97185296;0.89529806;0.86995751;0.9620806;0.90497553;0.1716637;0.10389075;0.11471729;0.13805062;0.11599133;0.25732365;0.12184098;0.10823939;0.14410958;0.040968768;0.12341323;0.10608707;0.85557199;0.14464422;0.088764213;0.10043153;0.2794596;0.96636778;0.13360816;0.13226874;0.10472798;0.16155463;0.96080017;0.087863006;0.078988723;0.10106082;0.048465699;0.97118419;0.075901851;0.16425616;0.061865844;0.091436401;0.97280049;0.1672616;0.20598374;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.39027759;0.018746607;0.086472183;0.022597931;0.99870765;0.029288074;0.0074536027;0.097555026;0.57207912;0.0127428;0.011274153;0.031475671;0.99935693;0.01755042;0.028467754;0.016248824;0.53200412;0.043528717;0.0064451648;0.029108938;0.99608737;0.013348897;0.12171314;0.018977962;0.43512085;0.98863113;0.033973869;0.065682732;0.062098797;0.51064754;0.052499972;0.53102475;0.033371117;0.033382777;0.12398005;0.063167952;0.031827178;0.95627993;0.061285697;0.12341223;0.090457134;0.10223693;0.0993715;0.65462488;0.031353649;0.7321831;0.065841757;0.073411971;0.089734912;0.98276752;0.8760888;0.13096306;0.17442523;0.082810089;0.12099272;0.066931807;0.068703704;0.086547486;0.96523088;0.081535868;0.19122814;0.93262798;0.04666283;0.18502471;0.046016026;0.94232297;0.19665204;0.056151379;0.25935355;0.92364383;0.068594672;0.10521133;0.059701588;0.19894379;0.13051757;0.99685442;0.021088704;0.0068003405;0.01858568;0.5577029;0.027692419;0.69196361;0.024659071;0.025435692;0.044670187;0.052220497;0.014455996;0.99002248;0.012419313;0.021275576;0.043759037;0.01258926;0.010548829;0.81072956;0.022905253;0.40672538;0.019428851;0.012565275;0.02643637;0.99554366;0.98756456;0.049178872;0.070352994;0.064446591;0.012242537;0.032610297;0.87918937;0.084910087;0.66398299;0.044640064;0.01840728;0.54475892;0.33774334;0.020196775;0.039460476;0.61374569;0.036036212;0.027830126;0.89149785;0.80164403;0.0061021629;0.038320646;0.047909223;0.057044849;0.61251616;0.79333997;0.23457985;0.23819852;0.10212404;0.2956804;0.11911832;0.16260768;0.23533095;0.85481614;0.19792041;0.18717383;0.79694724;0.081380233;0.12300164;0.11190335;0.95468158;0.28807554;0.082618751;0.093727395;0.94275284;0.14914629;0.10200145;0.21693267;0.30720073;0.12040902;0.64299387;0.12955712;0.31016222;0.38665721;0.92593735;0.09221188;0.21636334;0.24111983;0.1537395;0.31943598;0.1915863;0.11815552;0.73714161;0.08508455;0.32173815;0.10056891;0.1060271;0.11342658;0.26286107;0.38136327;0.8802641;0.10325804;0.18532836;0.10773826;0.7894637;0.045644857;0.22543858;0.078255318;0.23061173;0.92293936;0.1089358;0.18336459;0.28793561;0.96604115;0.060849201;0.081708193;0.13910973;0.85064888;0.057328884;0.14472167;0.072723508;0.98072672;0.060313992;0.19255538;0.072684184;0.96290237;0.27695814;0.10680114;0.07849399;0.082380503;0.14442408;0.072515033;0.23464102;0.24949494;0.93569654;0.056378614;0.16153421;0.076233596;0.98037463;0.20255949;0.14702767;0.11456787;0.91110575;0.17770928;0.15271381;0.20822684;0.96893167;0.11528348;0.10342054;0.051579509;0.88609689;0.057763908;0.13047686;0.18458916;0.05242553;0.066884063;0.12126918;0.97202808;0.13878042;0.15411152;0.098274671;0.035824545;0.95032114;0.062813245;0.084511414;0.074353777;0.076865785;0.95684469;0.12687926;0.19553605;0.069830209;0.10422516;0.97937053;0.073899567;0.067050539;0.13744123;0.075378411;0.96983099;0.21575248;0.041215807;0.051870003;0.08244434;0.065724522;0.099374585;0.059151143;0.084769942;0.037389714;0.062027592;0.082753673;0.061613452;0.96222675;0.9455393;0.9218896;0.96126652;0.96577042;0.11222394;0.26048261;0.12334453;0.086306773;0.051463734;0.084649526;0.058974892;0.14299077;0.12937869;0.041559469;0.91747713;0.1456937;0.15649453;0.13282567;0.061682627;0.10026662;0.12529266;0.094269611;0.91080153;0.13834195;0.06854967;0.92247063;0.050899886;0.11353979;0.10000878;0.95247638;0.16644537;0.1093701;0.11339189;0.96164829;0.040766098;0.17315134;0.20965837;0.15120742;0.14089204;0.48112202;0.028546356;0.023356905;0.029290644;0.013648609;0.05352734;0.0088830842;0.043822017;0.60218263;0.037598856;0.84569997;0.9950496;0.58010393;0.70683646;0.80915737;0.658243;0.042178214;0.031978182;0.010101181;0.76496208;0.029197842;0.054790083;0.060781196;0.055731531;0.023368288;0.90305644;0.13390273;0.25363982;0.08182361;0.095706448;0.14222167;0.076172471;0.21430227;0.90642291;0.095820472;0.068062164;0.95357597;0.096901789;0.06487079;0.083732717;0.89177263;0.095251903;0.15091662;0.15794453;0.97814071;0.062663235;0.084748097;0.19178854;0.22314982;0.23639372;0.99832565;0.0099236285;0.010657913;0.021637302;0.58455187;0.010942698;0.76748735;0.019557178;0.016994212;0.010401476;0.012745978;0.031947978;0.98578978;0.019752856;0.013280828;0.015060769;0.0073923334;0.014453698;0.6911487;0.0090565234;0.63225538;0.022178989;0.015470306;0.010112687;0.99893391;0.031521082;0.04013915;0.76527762;0.033549402;0.014251634;0.049398653;0.02617613;0.57289094;0.093680337;0.031315256;0.47995585;0.77675009;0.99248159;0.67873174;0.50020695;0.051081382;0.021060718;0.76988143;0.019769579;0.081508912;0.020100506;0.020414012;0.6607002;0.016176919;0.012303386;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86693245;0.021832727;0.023599343;0.027176667;0.99275076;0.022638382;0.01424842;0.019247463;0.54060704;0.035617031;0.014737391;0.022971675;0.99191111;0.022052808;0.028512459;0.055297974;0.49376267;0.015909608;0.014839895;0.029134631;0.9967854;0.040474121;0.025561634;0.013847589;0.61385894;0.043885838;0.1292849;0.076054275;0.20623907;0.069035493;0.16844203;0.16515926;0.078631915;0.070227213;0.063340969;0.94897687;0.93840647;0.94630575;0.94702107;0.98695481;0.055552643;0.087275371;0.13333499;0.14606418;0.065678753;0.11359716;0.084741011;0.097630456;0.19176362;0.052161291;0.41576952;0.033440333;0.013448591;0.055329062;0.99204671;0.017559515;0.033253193;0.052542776;0.78323036;0.031485435;0.026335251;0.035344664;0.98854625;0.029845998;0.039934348;0.012778191;0.84622365;0.046543758;0.046456005;0.014280888;0.98831737;0.040705256;0.036524903;0.034128621;0.47601384;0.84472358;0.17110085;0.20713328;0.064734772;0.038308796;0.049803544;0.95389086;0.067624196;0.02136185;0.12993677;0.20961654;0.1783718;0.7541011;0.099745966;0.11906847;0.16315682;0.11240251;0.065166719;0.98573184;0.1693871;0.057620771;0.13750641;0.19154964;0.060908359;0.94779253;0.10797101;0.14007962;0.96013945;0.091219865;0.018702673;0.1332406;0.1734874;0.9346177;0.07557714;0.074487418;0.06469214;0.094071634;0.88066584;0.10835192;0.17761715;0.14575188;0.10163843;0.97705621;0.33566159;0.11452471;0.050919324;0.072986692;0.97219932;0.11718838;0.14800507;0.033086546;0.18900238;0.098573148;0.19870123;0.19979209;0.21812721;0.042706657;0.039526306;0.15108636;0.24874553;0.97571713;0.90881044;0.88638878;0.96724218;0.91733593;0.15612096;0.094222747;0.10407159;0.12534539;0.10523139;0.23534916;0.11055935;0.098176993;0.13088118;0.037189033;0.1118776;0.096120939;0.87379611;0.1312367;0.08040081;0.090985201;0.2557925;0.9710139;0.12116635;0.11994525;0.094886512;0.14670064;0.96618992;0.079583779;0.071542718;0.091556452;0.043928146;0.97518206;0.068747193;0.14917491;0.05604488;0.082823806;0.97657973;0.15192863;0.18753417;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.39851564;0.015664725;0.071638659;0.018852834;0.99905181;0.024383217;0.0062797735;0.080835916;0.57934517;0.010684399;0.0094633969;0.026190141;0.99953264;0.014673644;0.023705494;0.01359459;0.54011917;0.036139708;0.0054371725;0.024235204;0.99709606;0.011187919;0.10095774;0.015856359;0.44279236;0.9915393;0.028176336;0.054281432;0.051328436;0.51770836;0.043424234;0.53887469;0.027680073;0.027689679;0.10256669;0.052209232;0.026408738;0.9671241;0.050658658;0.1020935;0.074734934;0.0844917;0.082116134;0.65963405;0.026018783;0.73427606;0.05441251;0.060654365;0.074137464;0.98713917;0.89181942;0.11890062;0.15868846;0.075097181;0.10980894;0.060702864;0.062308222;0.078488298;0.96997523;0.073941275;0.1741453;0.94158292;0.042350162;0.16843368;0.041764747;0.95004809;0.17914416;0.050939448;0.23728696;0.93372113;0.06220945;0.095443167;0.054154024;0.18125744;0.11849406;0.9976812;0.017569851;0.0057235663;0.015501487;0.56290895;0.023019537;0.69685966;0.020517364;0.021158127;0.037007555;0.043226399;0.012084122;0.99257606;0.010395898;0.017724212;0.036257103;0.010536836;0.0088432832;0.8124733;0.019069893;0.41452163;0.016198454;0.010516966;0.02198362;0.99670482;0.99055248;0.041217335;0.058890335;0.053957034;0.010366644;0.027398514;0.87982941;0.071065851;0.66584641;0.037432022;0.015533518;0.54898542;0.3492299;0.017030744;0.0331125;0.61662173;0.030256502;0.023408931;0.89187819;0.80097389;0.0051977141;0.032161925;0.040158466;0.047779083;0.62005359;0.81753373;0.21435453;0.21771693;0.092691876;0.27143863;0.10816605;0.14793065;0.21505272;0.8728044;0.18041804;0.17051101;0.82080197;0.073844723;0.11170682;0.10159237;0.96077508;0.2642965;0.074968882;0.085057914;0.95037729;0.13559493;0.092580289;0.19799034;0.28227922;0.10934273;0.67929322;0.11638377;0.28226295;0.35450488;0.93498313;0.082745656;0.19934909;0.21813625;0.13980299;0.29095185;0.1726972;0.10609529;0.76925254;0.076344214;0.29311189;0.090258434;0.096285075;0.10183303;0.24281253;0.34946153;0.89444077;0.092677414;0.16698802;0.096709989;0.81453484;0.041434504;0.20578116;0.070975892;0.21057877;0.93308043;0.098844633;0.16692856;0.26405501;0.97066694;0.05520096;0.074107848;0.12635599;0.86915553;0.052012756;0.13148536;0.065960206;0.98338991;0.054716188;0.17539138;0.065924548;0.96794248;0.25376767;0.096902356;0.071192361;0.074717812;0.13123223;0.065648355;0.21394363;0.22773473;0.94421214;0.051057078;0.14661078;0.069013275;0.98304129;0.18428881;0.13334852;0.10377768;0.92266101;0.16143464;0.13854347;0.18951416;0.97310984;0.10442816;0.093652673;0.046720169;0.90061378;0.052309126;0.11825369;0.16775191;0.047600109;0.060578577;0.1099147;0.97591567;0.12587127;0.13987525;0.089018434;0.032497991;0.95710069;0.056896143;0.076538235;0.067338601;0.069612876;0.96276492;0.1150225;0.17788653;0.063244343;0.094420113;0.98225898;0.066927485;0.060729176;0.12464959;0.068266287;0.97401565;0.19653593;0.037370905;0.047033962;0.07471811;0.059571553;0.090079926;0.053621806;0.076826677;0.033936188;0.056225054;0.074998543;0.055850253;0.96739048;0.95288503;0.93223119;0.96655738;0.97046381;0.10175914;0.23820162;0.1118821;0.078220375;0.046666414;0.076717488;0.053462282;0.12980415;0.11738135;0.037707757;0.92831862;0.13235244;0.14223698;0.12059672;0.055946406;0.090944931;0.11372482;0.085496433;0.92245764;0.12563331;0.062166769;0.93269664;0.046183929;0.10301788;0.09071061;0.95889527;0.15135871;0.099223092;0.10288317;0.96686733;0.037012119;0.15751383;0.19114444;0.13739634;0.1279632;0.48765785;0.023765633;0.019476781;0.024380397;0.011434625;0.044383209;0.0074709626;0.03637423;0.60632813;0.031239148;0.84655029;0.99632192;0.58769637;0.71123695;0.81087989;0.6611563;0.0350179;0.026599718;0.0084855724;0.76557636;0.024303772;0.045425501;0.05037206;0.046202641;0.019486193;0.9156341;0.12158167;0.23195671;0.074201092;0.086802743;0.12918013;0.069076404;0.19544083;0.91859686;0.086906388;0.061725862;0.95984578;0.087888673;0.058834806;0.075932942;0.90568519;0.086389922;0.13713208;0.14356729;0.98115772;0.056835286;0.076854266;0.17465876;0.20363061;0.21591495;0.9987759;0.008316298;0.0089258319;0.018006075;0.5896104;0.0091621149;0.77005714;0.016289342;0.014172216;0.0087130079;0.010657104;0.026502404;0.98941636;0.016450888;0.011100139;0.012573483;0.0062116543;0.012071135;0.69572359;0.0075959894;0.63624692;0.018452976;0.012912237;0.008473279;0.99922502;0.026313582;0.033452626;0.76922083;0.027994204;0.011975227;0.041120965;0.021882607;0.58202702;0.077879831;0.02614305;0.48564541;0.7765283;0.99438101;0.68044007;0.50553864;0.042514652;0.017637402;0.77369189;0.016564924;0.067753084;0.016839841;0.017100293;0.66761625;0.013577958;0.010351528;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86658704;0.018149318;0.019604865;0.02255032;0.99462867;0.018813211;0.011889723;0.016017824;0.5475961;0.029492686;0.012293951;0.019087797;0.99400181;0.018330721;0.023649562;0.045670439;0.50166458;0.013262622;0.012378675;0.024161477;0.99763429;0.033485293;0.021220822;0.01155824;0.61933768;0.03980707;0.11728156;0.068918355;0.1878559;0.062561691;0.15308237;0.1500726;0.071253732;0.063640751;0.057406805;0.95581377;0.9465934;0.95348591;0.95410931;0.98876464;0.050359569;0.079089127;0.12097488;0.13259663;0.059522785;0.10299572;0.076791041;0.088485382;0.17451176;0.04729173;0.42289066;0.027783602;0.011259492;0.0458313;0.99407685;0.014666344;0.02762926;0.043533575;0.78592759;0.02617103;0.021920668;0.029354094;0.99144834;0.024818374;0.033138491;0.010703162;0.84730667;0.038587358;0.038514972;0.01194986;0.99127626;0.033774074;0.030327393;0.028351253;0.48220652;0.86390626;0.1556254;0.18880507;0.058708616;0.034786884;0.045189966;0.96012288;0.061326046;0.019442687;0.11795635;0.19109905;0.16230443;0.78194731;0.090468526;0.10804857;0.14833713;0.10197878;0.059099868;0.98772079;0.15405241;0.052266393;0.12486576;0.17443016;0.05524319;0.95481455;0.097841516;0.12708119;0.96560973;0.082634978;0.017014949;0.12084214;0.15765169;0.94341016;0.068459444;0.067472726;0.058607023;0.085221797;0.89603025;0.098187678;0.16144216;0.13226043;0.092089422;0.98025328;0.30870834;0.10379941;0.046150517;0.066113994;0.97605473;0.10622234;0.13431904;0.03005269;0.17204134;0.089379571;0.18097742;0.18198338;0.19892153;0.03875706;0.035879612;0.13724582;0.22733393;0.97902501;0.92059511;0.90080887;0.97167164;0.92809027;0.14185376;0.085428692;0.094376095;0.11373971;0.095430277;0.2148827;0.10027561;0.089019775;0.1187875;0.033764895;0.10137866;0.087069325;0.88997084;0.11899923;0.072818503;0.082411028;0.2336911;0.97503406;0.10982742;0.10871619;0.085949317;0.13310947;0.97085911;0.072078519;0.06479799;0.082928978;0.039824676;0.97863781;0.062267955;0.13537008;0.050778344;0.075013541;0.9798454;0.13788711;0.17053287;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.40672469;0.013109158;0.059351712;0.015751515;0.99930751;0.020327879;0.0052984864;0.066963024;0.58644038;0.0089720422;0.0079554226;0.021821601;0.99966222;0.012286899;0.019767465;0.011391125;0.54806107;0.030038724;0.0045933672;0.020205479;0.99785167;0.0093909726;0.083656892;0.013268095;0.45041856;0.99371684;0.023403421;0.044894546;0.042463489;0.52460164;0.035957668;0.54661417;0.022994502;0.023002423;0.084772438;0.043188557;0.02194667;0.97534496;0.04191212;0.084379822;0.061751086;0.069808401;0.067845345;0.66456473;0.021625221;0.73629558;0.045002382;0.050142791;0.061258029;0.99042106;0.90573382;0.10789689;0.14424349;0.068098962;0.099619865;0.055057775;0.056511588;0.071173489;0.97408879;0.067051195;0.15842293;0.94940186;0.038444798;0.15317917;0.037915025;0.95677894;0.16301629;0.046218637;0.21673602;0.94253755;0.056422126;0.086560227;0.049128465;0.16495922;0.10752651;0.99829549;0.014664728;0.0048257206;0.012952781;0.56793964;0.019168507;0.70168364;0.017101724;0.017631123;0.030703358;0.035826683;0.010120019;0.99448633;0.0087181116;0.014792409;0.030084956;0.0088352291;0.0074269674;0.81421983;0.015905291;0.42214948;0.01352984;0.0088187167;0.018313037;0.99756932;0.99284405;0.034578022;0.04931955;0.045203339;0.0087907128;0.023048786;0.88050061;0.059486605;0.66790241;0.031421036;0.01312705;0.55340004;0.36077675;0.014381245;0.02781776;0.61968917;0.025434554;0.019716311;0.89229268;0.80047035;0.0044332473;0.02702463;0.033694949;0.040050272;0.62749851;0.83941144;0.19557595;0.198688;0.084104121;0.24867485;0.098174773;0.13446212;0.19622189;0.88882387;0.16426815;0.15516233;0.84235311;0.06699761;0.10139817;0.092194207;0.96607929;0.24199958;0.068017133;0.077171423;0.95703131;0.12318365;0.084002838;0.18045641;0.25882465;0.099245884;0.71428299;0.10404223;0.25521845;0.32278022;0.94277525;0.073919222;0.18415372;0.1961785;0.12679243;0.26328337;0.15482046;0.094814412;0.79951459;0.068200611;0.26529056;0.080635861;0.087250374;0.090995468;0.22474235;0.31802404;0.90679348;0.082799554;0.14964944;0.086408295;0.83773333;0.03761984;0.18757632;0.064370073;0.19200905;0.94196612;0.089659452;0.15181303;0.24168432;0.97468281;0.050081261;0.067208864;0.11470313;0.88564682;0.047194894;0.11938243;0.059825368;0.98569471;0.049642324;0.159583;0.059792947;0.97232068;0.23208925;0.087894559;0.064566314;0.067761801;0.11928058;0.059438083;0.19479422;0.20754738;0.95172668;0.046248704;0.13296981;0.062481437;0.98535585;0.16747853;0.12087195;0.093978167;0.93290788;0.14652167;0.12560783;0.17228116;0.97674435;0.094568714;0.084792994;0.04233006;0.91355568;0.047380101;0.10713032;0.15230633;0.043265019;0.054873403;0.099585772;0.97927463;0.11410102;0.12686667;0.080620632;0.029490022;0.96298552;0.051543515;0.069314346;0.060987987;0.063045926;0.96789664;0.10422885;0.16165438;0.057284351;0.085518837;0.98475069;0.060616057;0.05500957;0.11298871;0.061827336;0.97763276;0.17880242;0.033894733;0.042656958;0.067712322;0.053999152;0.081638232;0.048615992;0.069622651;0.030810533;0.050971106;0.067966305;0.050632052;0.97182047;0.9592123;0.94118947;0.97109741;0.97448665;0.092240691;0.21745685;0.1014422;0.070885427;0.042324491;0.069523655;0.048471678;0.11776245;0.10644578;0.034221936;0.93781579;0.12015858;0.12918571;0.10943928;0.050749764;0.082473129;0.10318097;0.077528052;0.93268377;0.11402967;0.056381945;0.94164461;0.041913353;0.09344092;0.082260385;0.9644751;0.13752794;0.089991927;0.093318485;0.97139537;0.033612881;0.14316353;0.17405438;0.12476327;0.11615434;0.49404666;0.019813593;0.016265346;0.020321814;0.009594501;0.036835145;0.0062927366;0.030226674;0.6103524;0.025988016;0.84708041;0.99726361;0.59462708;0.71508574;0.81221521;0.66397572;0.029107329;0.02215605;0.007139178;0.76615369;0.020258496;0.037695128;0.04177659;0.038336314;0.016273143;0.92670631;0.110332;0.21177414;0.067281976;0.078710102;0.1172593;0.062638111;0.17800577;0.92930549;0.078804128;0.055980269;0.96530402;0.07969562;0.053362556;0.068851769;0.91796446;0.078335464;0.12451676;0.13039601;0.98377085;0.051552247;0.069686897;0.1588838;0.18556033;0.19691221;0.99910814;0.0069803768;0.0074871653;0.015007914;0.59472817;0.0076835221;0.77246916;0.013589188;0.011837838;0.0073102652;0.008924921;0.02201668;0.99213237;0.013722716;0.0092924824;0.010513889;0.0052276035;0.010097588;0.70007318;0.0063810316;0.64030719;0.015377066;0.010794546;0.0071109328;0.99943888;0.022011962;0.027933707;0.77325171;0.023406588;0.01008461;0.034290023;0.018332526;0.59120619;0.064784482;0.02187039;0.49057227;0.77588087;0.99580085;0.68156183;0.51011211;0.035445072;0.014802861;0.77759171;0.013910241;0.056372672;0.014139094;0.014355878;0.67458272;0.0114217;0.0087284427;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.8661713;0.015113181;0.016314121;0.018742388;0.99602437;0.015661024;0.0099388203;0.013353235;0.55441689;0.024458351;0.010273571;0.015887581;0.99555659;0.015262904;0.019648043;0.037759829;0.50939816;0.011075358;0.010343716;0.020069709;0.99826187;0.027742524;0.017646607;0.0096642477;0.62455279;0.036118291;0.10634775;0.062455412;0.17091484;0.056701418;0.13901319;0.13626043;0.064570129;0.057677958;0.05203687;0.96183896;0.95382231;0.95981652;0.96035826;0.99035043;0.045661919;0.071667857;0.10971018;0.12030098;0.053951427;0.093357839;0.069585621;0.080186315;0.1586512;0.042887215;0.42978564;0.023112359;0.0094403187;0.037993394;0.99559236;0.012267436;0.022984961;0.036099445;0.78849608;0.021781348;0.018270742;0.024408266;0.99361962;0.020664502;0.02752986;0.008977998;0.84831828;0.032022335;0.031962685;0.010013744;0.99349046;0.028053993;0.025211297;0.023580801;0.48815516;0.88098443;0.14141256;0.17187481;0.053242408;0.031594161;0.041007563;0.96553123;0.055612095;0.017700432;0.10701767;0.17398717;0.14753132;0.80732107;0.082028054;0.09800075;0.13474302;0.092482291;0.053596605;0.98943436;0.13997248;0.047411315;0.11331264;0.15865675;0.050105505;0.9609167;0.088639446;0.11522454;0.97035617;0.074850015;0.015485689;0.10954332;0.14313583;0.95108098;0.062013865;0.061120901;0.053100534;0.077194184;0.90960115;0.088953644;0.14660579;0.11994434;0.083420701;0.98301744;0.28325516;0.094048582;0.041837674;0.059891365;0.97939157;0.096249342;0.12182146;0.0273057;0.15644191;0.081028365;0.1646508;0.1655755;0.18117179;0.035181932;0.032578498;0.12458982;0.20743814;0.98193514;0.93108714;0.91370851;0.9755733;0.93764842;0.12879834;0.077444039;0.085563704;0.10316435;0.086520851;0.1959109;0.090921797;0.080701895;0.10775968;0.030665066;0.091839239;0.078859404;0.90427649;0.10785335;0.065951496;0.074638121;0.21314938;0.97851324;0.099513128;0.098503448;0.077844203;0.12070411;0.974904;0.065281667;0.05869367;0.075107381;0.036114912;0.98162591;0.056405097;0.12276528;0.046015963;0.067938499;0.9826684;0.1250612;0.15491812;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.41477367;0.010987549;0.049195893;0.013180616;0.99949598;0.016972248;0.0044770474;0.055483777;0.59333622;0.0075456924;0.006697922;0.018208414;0.99975699;0.010304357;0.016508287;0.0095596351;0.55579919;0.025000373;0.0038860564;0.016870933;0.99841416;0.0078947889;0.069296911;0.011119539;0.45786321;0.99534255;0.019466765;0.037164181;0.035163544;0.53143531;0.029809061;0.55407441;0.01912944;0.019135995;0.070033379;0.035760213;0.018265005;0.98154759;0.03470974;0.069708861;0.051041186;0.057681512;0.056063145;0.66925961;0.017999753;0.73832393;0.037252951;0.041483402;0.050635081;0.99287742;0.91801143;0.097870789;0.13101053;0.061750837;0.090346053;0.049941707;0.051257744;0.064536393;0.9776566;0.060801733;0.14398634;0.95622432;0.034907054;0.13918419;0.034427591;0.9626413;0.14819574;0.041941844;0.19766666;0.95024353;0.051176786;0.078487881;0.044575151;0.1499774;0.097533934;0.99875069;0.012259015;0.0040746103;0.010840046;0.57300663;0.015985904;0.70626527;0.014276591;0.014714573;0.025506143;0.029728552;0.0084883543;0.99591333;0.0073223957;0.012364762;0.024996292;0.0074198591;0.0062470045;0.81583488;0.013286396;0.42982173;0.011318507;0.0074061211;0.015278569;0.99821168;0.99458247;0.029006246;0.041285798;0.037857119;0.0074566049;0.019392941;0.88088286;0.049757451;0.66999257;0.026375424;0.011096657;0.55782348;0.37185851;0.012147414;0.023371521;0.62277818;0.0213838;0.016609896;0.89244324;0.80002034;0.0037821168;0.022710117;0.02827042;0.033564955;0.63426489;0.85909176;0.17819738;0.18106766;0.076291375;0.2273922;0.089070305;0.12212622;0.17879306;0.90304172;0.14940463;0.14105804;0.86172378;0.060778547;0.092000537;0.083636448;0.97069538;0.22118127;0.06170252;0.070001848;0.96283466;0.11183517;0.076199569;0.16427374;0.23685133;0.090043873;0.74956107;0.092336223;0.22875398;0.2912069;0.94923043;0.065581419;0.17240591;0.17498134;0.11437864;0.23615569;0.13771051;0.084129363;0.82903588;0.060512431;0.23800035;0.071538612;0.078676321;0.080736101;0.21056543;0.28677556;0.91715515;0.073458679;0.13307139;0.076662138;0.8602317;0.034164805;0.17077839;0.058380738;0.17486031;0.9497357;0.081310846;0.13795137;0.22082859;0.97816652;0.045443211;0.060952358;0.10407759;0.9002791;0.042830735;0.10833903;0.054264799;0.98768872;0.045045894;0.14506735;0.054235484;0.97612089;0.2119171;0.079708882;0.058558527;0.061453249;0.10699388;0.053819686;0.1771276;0.18887848;0.95732892;0.041901339;0.12051909;0.056570817;0.98736125;0.15204625;0.10950476;0.085082486;0.94063473;0.13287996;0.11381416;0.15644757;0.97989923;0.08561784;0.0767591;0.038361114;0.92341262;0.042923432;0.097015791;0.138164;0.038838912;0.049714305;0.09020482;0.98217785;0.10338997;0.11500648;0.073010623;0.026770351;0.96809196;0.046704076;0.062775142;0.055243112;0.057104379;0.97234434;0.094419807;0.1467718;0.051894121;0.077448167;0.9869014;0.054906793;0.049837422;0.10237879;0.056002285;0.98076051;0.16249399;0.030752355;0.038697891;0.061367229;0.048957009;0.073982477;0.044087574;0.063096926;0.027982783;0.046217769;0.061597135;0.045911092;0.97571397;0.96478659;0.94911188;0.97508818;0.97802079;0.083598144;0.19823143;0.091952108;0.064240411;0.038397234;0.06300728;0.043957002;0.10679182;0.096498571;0.031068796;0.94612586;0.10902958;0.11725826;0.099271543;0.046041377;0.074778274;0.093580343;0.070294164;0.94164342;0.10344861;0.051139183;0.94946665;0.038044907;0.084731378;0.074585333;0.9693256;0.12487178;0.081600294;0.084620215;0.97532493;0.030533459;0.13002029;0.15832064;0.11322573;0.10538292;0.50027525;0.016562341;0.013619645;0.016983466;0.0080717867;0.030641645;0.0053139268;0.02518015;0.61425465;0.021674693;0.84798741;0.99797559;0.60199767;0.71937978;0.813959;0.66670436;0.02425468;0.018502897;0.0060220002;0.76670498;0.016931044;0.03135217;0.034723833;0.031881891;0.013626114;0.93641376;0.1000896;0.19308434;0.061012931;0.071370058;0.10639539;0.05680681;0.16196017;0.93868792;0.071455404;0.050778627;0.97004396;0.072263785;0.048409;0.062435068;0.92875469;0.071030475;0.11300793;0.11836933;0.98602998;0.046770412;0.063191727;0.14441364;0.16890757;0.17936388;0.99935317;0.0058679255;0.0062899566;0.012528376;0.5996142;0.0064533963;0.77484226;0.011354277;0.0099033983;0.0061426763;0.0074858218;0.018317031;0.99416399;0.011464831;0.007791236;0.0088053541;0.0044058762;0.0084598446;0.70433396;0.0053684367;0.6441623;0.012833722;0.0090382323;0.0059766746;0.99959588;0.018435653;0.023350833;0.77707905;0.019593831;0.0085034026;0.028621135;0.015377601;0.60006166;0.053895652;0.018318063;0.49548274;0.77528501;0.99686855;0.68271595;0.51467198;0.029578419;0.01243982;0.7812922;0.011696048;0.046920057;0.011886745;0.012067414;0.68125558;0.0096202837;0.0073692622;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86610711;0.012604458;0.013596627;0.015601035;0.99706894;0.013057152;0.0083209276;0.011149235;0.56058317;0.020312194;0.008598567;0.013244312;0.99672079;0.012728179;0.016348103;0.03125399;0.51647085;0.009263251;0.0086567225;0.016695799;0.99872911;0.02301581;0.014696796;0.0080931354;0.63029462;0.032780245;0.096398033;0.0566018;0.15534121;0.051395655;0.12614861;0.12363632;0.058515679;0.052279115;0.047176298;0.96706367;0.96010339;0.9653089;0.96577913;0.99171531;0.041410759;0.06494122;0.099454552;0.10909009;0.048908029;0.08460182;0.06305588;0.072657876;0.14410175;0.038901586;0.43720707;0.019262364;0.007930479;0.031544421;0.99673104;0.010281043;0.01915708;0.029982362;0.79068983;0.018162167;0.015257948;0.020333208;0.99525398;0.017238609;0.022911308;0.0075454996;0.84906745;0.026619114;0.026569916;0.0084077111;0.99515718;0.023344029;0.020996585;0.019649502;0.49464229;0.89618284;0.12840286;0.15629858;0.048290756;0.028702423;0.037220199;0.97024298;0.050435401;0.016119903;0.097055532;0.15823777;0.13399567;0.83036476;0.074364349;0.088860624;0.12231268;0.08384946;0.048611332;0.99091905;0.12708744;0.043014258;0.10278192;0.14417773;0.045452103;0.96623862;0.080286801;0.1044252;0.97445017;0.067794107;0.014099129;0.099260353;0.12985809;0.95773041;0.056178246;0.055370543;0.048117775;0.06991677;0.92149514;0.080571733;0.13302715;0.10871898;0.075556912;0.98539358;0.25934258;0.085192136;0.037936408;0.054258429;0.98226291;0.087188788;0.11042731;0.024816602;0.14212528;0.073445275;0.1496457;0.15049362;0.16481185;0.031943765;0.029588288;0.11303303;0.1890111;0.98444849;0.94026512;0.92504394;0.97894818;0.94599539;0.11686917;0.070196256;0.077557757;0.093536481;0.078425959;0.17837733;0.082418807;0.073149242;0.097713545;0.027856916;0.083179474;0.071417399;0.91683054;0.097714499;0.059734181;0.067595206;0.19412845;0.98150718;0.090141155;0.08922489;0.070498049;0.1093991;0.97838819;0.05912821;0.053169746;0.068020031;0.032760013;0.98419505;0.051100425;0.11127503;0.041708902;0.061531831;0.98509473;0.11336512;0.14061105;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.42316505;0.0092253396;0.040818702;0.011048582;0.99963522;0.014194986;0.0037890351;0.04600963;0.59971821;0.0063569173;0.0056486949;0.015219514;0.99982649;0.0086567225;0.013810315;0.0080365073;0.56300938;0.020840639;0.0032928342;0.014111012;0.99883395;0.0066483328;0.057422452;0.0093351593;0.46564683;0.99655735;0.016216096;0.030798569;0.029151922;0.53810018;0.024743419;0.56142288;0.0159375;0.015942933;0.057860132;0.029643081;0.015223559;0.98622322;0.028778402;0.057592653;0.042217869;0.047683906;0.046351466;0.67388165;0.015004412;0.74027842;0.030871607;0.034352928;0.041883659;0.99471742;0.92879874;0.08875832;0.11892769;0.056002207;0.081924856;0.045311864;0.04650294;0.058524851;0.98074543;0.055142783;0.13077757;0.96216118;0.031705935;0.12638959;0.031271983;0.96773481;0.13462658;0.038072214;0.18005584;0.95695907;0.046429675;0.071167253;0.040455163;0.13625647;0.088452317;0.99908829;0.010263068;0.0034449787;0.0090852864;0.57791436;0.013351138;0.71073401;0.011935676;0.012298504;0.021216614;0.024698708;0.0071301237;0.99697971;0.0061589596;0.01035078;0.020795943;0.0062401919;0.0052619255;0.81741828;0.011115069;0.43732941;0.0094825607;0.006228738;0.01276556;0.99868929;0.99590969;0.024380345;0.034619775;0.031761616;0.0063381903;0.01635148;0.88160044;0.04168167;0.67155927;0.022184808;0.0094003938;0.56161642;0.38350257;0.010282572;0.019676547;0.62529027;0.018015819;0.014022847;0.89290911;0.79923582;0.0032329238;0.019124037;0.0237664;0.028182868;0.64152551;0.87667668;0.16219026;0.16482987;0.069200985;0.20760953;0.080796257;0.11086687;0.16273792;0.9155966;0.13578112;0.12814739;0.8790198;0.055141758;0.083457246;0.075864017;0.97470307;0.20185342;0.055978734;0.063498855;0.96788263;0.10149218;0.069117732;0.14940418;0.21638869;0.08168038;0.782956;0.081530303;0.20362955;0.26075196;0.954422;0.057910286;0.1622609;0.15510608;0.10223489;0.21035464;0.12179101;0.074277394;0.85528457;0.053442299;0.21203206;0.063163802;0.070309289;0.071280688;0.19823402;0.25666961;0.92558908;0.06485749;0.11766066;0.06768439;0.88081694;0.031037062;0.15533324;0.05295581;0.15908173;0.95650917;0.073734142;0.12527533;0.20147581;0.98118287;0.041244611;0.055284467;0.094408274;0.91319853;0.038880266;0.098283917;0.049229369;0.98941106;0.04088505;0.13177818;0.049202867;0.97941285;0.19323057;0.072281204;0.053116832;0.055738039;0.097162984;0.048728768;0.16085045;0.17164078;0.96310723;0.037963547;0.10915413;0.051214319;0.98909009;0.13788942;0.099145211;0.077000476;0.94857395;0.12040461;0.1030595;0.14191209;0.98262459;0.077485226;0.069466554;0.034766153;0.93352318;0.03888673;0.087813094;0.12522012;0.035322193;0.04504877;0.081692182;0.9846732;0.093654387;0.10420907;0.066117592;0.024310092;0.97249752;0.042328104;0.056857143;0.050046518;0.051729254;0.97617722;0.085514329;0.13315631;0.047019117;0.07013464;0.98874736;0.049742512;0.045160051;0.092736296;0.050732851;0.98344982;0.14753456;0.027910521;0.035114989;0.055620179;0.04439313;0.067041114;0.039989188;0.057185508;0.025422651;0.041915733;0.055828214;0.041638408;0.97907883;0.96961731;0.95600426;0.97853768;0.98107332;0.07575427;0.18046863;0.083330847;0.058220427;0.034843083;0.05710442;0.039871175;0.096806876;0.087457031;0.028214643;0.95337504;0.098900557;0.10638981;0.090029031;0.041781086;0.067802727;0.084859543;0.063739218;0.94946784;0.093825229;0.046394605;0.95628434;0.034544893;0.07682801;0.067627892;0.97353303;0.11332661;0.073987924;0.076727122;0.97872871;0.027746651;0.11802178;0.14389169;0.10271866;0.095583871;0.50637001;0.013852455;0.011411088;0.014201537;0.0067947642;0.02549734;0.0044898237;0.020985108;0.61804092;0.018086182;0.84884751;0.99850845;0.60918373;0.7235378;0.8156333;0.66933948;0.020220056;0.015460479;0.0050825067;0.76721025;0.014158104;0.026084052;0.028867677;0.026521455;0.011416458;0.94490212;0.090773009;0.17582983;0.055333212;0.064714551;0.09650524;0.051525105;0.14722788;0.94688725;0.064791903;0.04606865;0.97415435;0.065524466;0.043924063;0.056620959;0.93820816;0.064406879;0.10252126;0.10740256;0.98798126;0.0424412;0.057306156;0.13116625;0.15359965;0.16320291;0.99953318;0.0049412176;0.0052933004;0.010477327;0.60436672;0.0054295962;0.77719766;0.0095039671;0.0082999105;0.0051704589;0.0062897946;0.015265969;0.99568069;0.0095956679;0.0065440265;0.007387579;0.0037194563;0.0071002855;0.70853114;0.0045241853;0.64790571;0.010730331;0.0075811553;0.0050319606;0.99971044;0.015550508;0.019658959;0.78218508;0.016519174;0.0072198058;0.024058618;0.012990674;0.61047363;0.045131158;0.01545214;0.50188726;0.77565938;0.99767476;0.68510062;0.52071297;0.024857311;0.01052779;0.78626049;0.0099035343;0.039315674;0.010063608;0.010215257;0.68939918;0.0081595136;0.0062644775;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86577976;0.010531222;0.011352322;0.013009592;0.99784458;0.010905918;0.0069788164;0.0093258526;0.56715024;0.016898403;0.0072095087;0.011060808;0.99758595;0.010633637;0.013626814;0.025908777;0.52394485;0.0077615157;0.0072578182;0.013913994;0.99907404;0.019127;0.012262179;0.006789498;0.63538748;0.0297592;0.087354995;0.051301952;0.14106247;0.046593111;0.11440828;0.11211959;0.053033371;0.047392134;0.042777352;0.97154516;0.96550149;0.97002232;0.97043055;0.99287641;0.037563827;0.05884748;0.090129837;0.09888383;0.044343371;0.076654792;0.057141334;0.065833196;0.13078663;0.035294894;0.44418764;0.016069703;0.0066690343;0.026209874;0.9975844;0.0086254152;0.015982656;0.024921592;0.79308647;0.015159664;0.01275528;0.016955122;0.99648148;0.014395418;0.019085504;0.0063481433;0.85000116;0.022146791;0.0221062;0.0070666322;0.996409;0.019442914;0.017503468;0.01638986;0.5006721;0.90962297;0.11652016;0.14200799;0.043806892;0.026083324;0.033791114;0.97433221;0.04574734;0.014685799;0.087995723;0.14378397;0.12162191;0.85111302;0.067412332;0.080556683;0.11096936;0.076010726;0.044096962;0.99220085;0.11532086;0.03903307;0.093198203;0.1309205;0.04123861;0.97086179;0.072716638;0.094609052;0.97800118;0.061406661;0.012842173;0.08991982;0.11774496;0.96352035;0.050899852;0.050169501;0.043612514;0.063327551;0.93194562;0.072974712;0.12063359;0.098509707;0.068433128;0.98744941;0.2370023;0.077161007;0.034409415;0.049163964;0.98474896;0.078970611;0.1000622;0.022560855;0.12901755;0.066565245;0.13589077;0.13666636;0.14977653;0.029010709;0.026879463;0.10249803;0.17200343;0.98659307;0.94819695;0.93488157;0.98183328;0.9531979;0.10598895;0.063622378;0.070291221;0.084782176;0.071078017;0.16222546;0.074697219;0.066297039;0.088574238;0.025312714;0.075330094;0.064679675;0.92787039;0.088508509;0.054110482;0.06122091;0.17658761;0.98409891;0.081639588;0.080808766;0.063847654;0.099118412;0.98140645;0.053562507;0.048175208;0.061605375;0.029727241;0.98641759;0.046304502;0.10082325;0.037815891;0.055736125;0.98719335;0.10272324;0.12753947;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.43112937;0.0077557717;0.033894345;0.0092734955;0.99973756;0.011887572;0.003210451;0.03817727;0.60629779;0.0053621088;0.0047696806;0.012737625;0.99987698;0.0072819036;0.011568273;0.0067646913;0.57041794;0.017394295;0.0027933042;0.011817877;0.99914622;0.0056056948;0.047596026;0.0078472616;0.47298029;0.99746233;0.013531518;0.025560934;0.024204697;0.54460305;0.020571563;0.56866598;0.013301109;0.013305612;0.047836084;0.024609227;0.012710501;0.98973507;0.023896998;0.047615808;0.034961015;0.039459307;0.038362712;0.6784367;0.012529193;0.74216914;0.025621116;0.028487695;0.034685969;0.99609154;0.93824846;0.08048147;0.10790967;0.050796021;0.074281819;0.041120734;0.042198539;0.053079717;0.98341662;0.050018013;0.11871166;0.96731865;0.028807798;0.11470976;0.028415015;0.97215366;0.12222421;0.034569416;0.16383699;0.96280044;0.042132247;0.064529896;0.036725823;0.12371213;0.080203757;0.99933738;0.0086075952;0.0029173216;0.007628236;0.5826807;0.011170827;0.715141;0.0099966656;0.010297746;0.017679192;0.020554367;0.005999757;0.99777389;0.0051893564;0.0086804898;0.017331595;0.0052571804;0.0044397232;0.81900769;0.0093154013;0.44468981;0.0079586999;0.0052476251;0.010685218;0.99904275;0.996921;0.020521045;0.029065292;0.026681446;0.0053953873;0.013807779;0.88238859;0.034953222;0.67312652;0.018686924;0.0079754209;0.5653764;0.39524937;0.0087172193;0.016590172;0.62778777;0.015200916;0.011856717;0.89344537;0.79848111;0.0027671573;0.016128076;0.020008273;0.023695584;0.64877242;0.89231175;0.14748123;0.14990214;0.062767781;0.18928295;0.073280878;0.10060246;0.14798343;0.92664456;0.12331586;0.11634832;0.89438844;0.050032478;0.075695045;0.068807788;0.97817814;0.18396741;0.050790399;0.057601325;0.97226691;0.092074744;0.062692314;0.13576947;0.19740067;0.074083023;0.81361705;0.071358822;0.17938419;0.23092803;0.95879203;0.050708625;0.15362969;0.13614126;0.091193564;0.18541543;0.10670464;0.065012433;0.87936181;0.046806999;0.18692103;0.055297632;0.062746346;0.062391859;0.18763639;0.22722015;0.93276542;0.056777589;0.10306825;0.059248138;0.89908004;0.028202636;0.14115608;0.048038945;0.14458941;0.96240979;0.066856667;0.11369514;0.18356638;0.98379493;0.037440576;0.050146826;0.085611656;0.92457724;0.035301015;0.089132078;0.044666342;0.99089926;0.03711519;0.11962602;0.04464234;0.98226476;0.1759638;0.065540001;0.048184771;0.050557435;0.088159353;0.044149198;0.1460011;0.15588547;0.96812612;0.034421887;0.098869771;0.046395287;0.99059957;0.12502378;0.089783326;0.069715314;0.95549208;0.10909742;0.093335569;0.12869355;0.98500663;0.070154101;0.062897526;0.031532533;0.94236493;0.03525601;0.079508193;0.11347967;0.032108914;0.040832192;0.073978417;0.98683125;0.084820352;0.094398402;0.059880655;0.022084994;0.97631824;0.038373359;0.051505934;0.045349211;0.046870228;0.97949851;0.077441253;0.1207331;0.042612981;0.06351506;0.99034214;0.045074441;0.040932767;0.083987676;0.045969598;0.98577631;0.13385367;0.025341246;0.031872258;0.050416522;0.040262602;0.060751062;0.036280099;0.051832572;0.023104213;0.038022298;0.050604682;0.037771523;0.98195487;0.97375762;0.96193427;0.98148644;0.98368067;0.068640925;0.16410954;0.075506292;0.052768834;0.03162634;0.051759172;0.036173388;0.08773049;0.079247393;0.025630577;0.95968586;0.089689508;0.09649682;0.081633225;0.037924886;0.061480422;0.07694222;0.057800021;0.95628607;0.085079581;0.042099629;0.96221519;0.031376652;0.069658883;0.061322074;0.97717786;0.10280775;0.067084596;0.069567375;0.9816736;0.025223067;0.10708239;0.13068472;0.093159191;0.086676672;0.51230103;0.011603282;0.0095749712;0.011893029;0.0057280548;0.021245237;0.0037987332;0.01751386;0.62169397;0.015113834;0.84942424;0.99890035;0.61577559;0.72721076;0.81696612;0.67186737;0.016880697;0.012937521;0.0042955731;0.76766384;0.011856968;0.021730106;0.024029789;0.022091536;0.009579435;0.9522962;0.082300931;0.1599355;0.050184797;0.058677863;0.087505378;0.046738375;0.13372275;0.95402604;0.058747958;0.041800864;0.97770846;0.059411347;0.039860412;0.051350333;0.94645709;0.058399286;0.092971236;0.097409032;0.98966223;0.038518675;0.051970556;0.11905301;0.13955209;0.14834872;0.99966449;0.0041677663;0.0044620261;0.0087776072;0.60905844;0.0045758821;0.77940077;0.007969249;0.0069682375;0.0043593789;0.0052938871;0.01274568;0.99680859;0.0080454433;0.0055059027;0.0062088482;0.003144986;0.0059695295;0.71251166;0.0038189578;0.65160602;0.0089876167;0.0063700425;0.0042436146;0.99979377;0.013075232;0.016496737;0.78613973;0.013882488;0.0061114151;0.020155238;0.010939956;0.61935842;0.03764274;0.012993257;0.5061444;0.7747612;0.99827421;0.68580204;0.52462667;0.020818906;0.0088822162;0.790093;0.0083600264;0.032819185;0.0084939571;0.0086208247;0.69612217;0.0068995091;0.0053092595;0.45794696;0.41396666;0.27739915;0.40798301;0.24442296;0.4915072;0.66429049;0.26847196;0.26324612;0.49067137;0.45787001;0.21018077;0.34517711;0.31026086;0.310202;0.58835769;0.52161765;0.58800656;0.57280403;0.54739112;0.2513555;0.59808075;0.57153219;0.44108331;0.32017344;0.86535853;0.0088126827;0.0094932262;0.010865497;0.99841774;0.0091232974;0.0058620176;0.0078127412;0.57357341;0.014079925;0.0060540028;0.0092516663;0.99822587;0.0088975923;0.011376183;0.021507714;0.53127259;0.0065131593;0.0060942057;0.011613713;0.99932718;0.015919233;0.01024683;0.0057044267;0.64018399;0.027027687;0.079154126;0.046510227;0.128016;0.042251702;0.10372417;0.10164243;0.048076242;0.04297429;0.038801111;0.97548276;0.97024971;0.9741649;0.97451824;0.99389338;0.034086592;0.053335719;0.081670858;0.089615233;0.040217269;0.069456093;0.051792152;0.059657231;0.11864009;0.032034665;0.45087138;0.01342543;0.0056160842;0.021805296;0.99821687;0.0072467793;0.013353345;0.020742055;0.79537809;0.012671728;0.010678563;0.01415838;0.99739373;0.012038502;0.015920796;0.0053482098;0.8508786;0.01845081;0.018417269;0.0059478232;0.99733949;0.016216287;0.014612178;0.013690514;0.50639397;0.92161053;0.1056895;0.12893236;0.039748453;0.023711467;0.030687192;0.97791958;0.041503947;0.013384489;0.079768471;0.13055509;0.11033539;0.86991894;0.061111979;0.073021844;0.10063824;0.068901323;0.040010903;0.99331951;0.10459785;0.035429738;0.084489718;0.11881113;0.037425026;0.97492093;0.065858789;0.085695416;0.98107713;0.055625662;0.011701934;0.081442796;0.10671133;0.96855307;0.04612546;0.045465264;0.039538372;0.057363164;0.9411;0.066092417;0.10933972;0.089234494;0.061982155;0.9892261;0.21621935;0.069882505;0.031219769;0.044556286;0.98689902;0.071521252;0.090643629;0.020518882;0.11705773;0.060335625;0.12332742;0.12403524;0.13601306;0.026357312;0.024428526;0.092921823;0.15637553;0.98847628;0.95520955;0.94360447;0.98436826;0.9595589;0.096094377;0.057671361;0.063709609;0.076841556;0.064422213;0.14740887;0.067700595;0.060092732;0.080280915;0.023010364;0.068219118;0.058581397;0.9375487;0.080156669;0.049024023;0.055453103;0.1604587;0.98634011;0.073932543;0.07318005;0.057828858;0.089779608;0.98401821;0.048528578;0.043658916;0.055800784;0.026984507;0.98833841;0.041968118;0.091326922;0.034296196;0.050493654;0.98900682;0.09305165;0.1156179;0.26168433;0.33488214;0.59562397;0.43401158;0.57413512;0.47024614;0.5778926;0.47655213;0.48597333;0.47466278;0.51834893;0.40053084;0.32633352;0.61755371;0.53165954;0.62894833;0.50743228;0.63056189;0.38575378;0.27011776;0.59641635;0.56556833;0.47882628;0.25294358;0.58866131;0.4387663;0.0065290863;0.028173687;0.0077942247;0.99981195;0.0099689253;0.0027234445;0.031707522;0.61271536;0.0045288135;0.0040325639;0.010675134;0.99991333;0.0061336369;0.0097035496;0.0057017175;0.57765794;0.014537395;0.0023722968;0.0099110091;0.9993763;0.0047326991;0.039477095;0.0066054086;0.47996777;0.99812806;0.011311349;0.021248424;0.020130118;0.55101174;0.017132243;0.57527304;0.011120475;0.011124201;0.039590031;0.020463726;0.010631092;0.99234343;0.019876324;0.039408758;0.028992301;0.032695342;0.031792659;0.68243676;0.010480821;0.74404877;0.021298053;0.023660704;0.028765824;0.99710548;0.94649357;0.072963975;0.097869329;0.04607825;0.067344271;0.037323646;0.038298819;0.048144907;0.98572057;0.045374192;0.10770006;0.97178566;0.026181243;0.10405643;0.025825674;0.97597623;0.11089969;0.031395752;0.14892884;0.96786553;0.038238868;0.058510292;0.033347063;0.11225557;0.072712302;0.99952048;0.0072316024;0.0024742142;0.0064158002;0.58740783;0.0093628969;0.71937615;0.0083872266;0.0086375019;0.014756846;0.017134229;0.0050570173;0.99836379;0.0043795649;0.0072922916;0.014469249;0.0044362936;0.0037520123;0.82051879;0.0078206453;0.45200431;0.0066911718;0.0044283061;0.0089594973;0.99930358;0.9977206;0.017387163;0.024562377;0.022561727;0.0046215588;0.011736531;0.88533962;0.029501216;0.67616391;0.015844865;0.0068098633;0.57083851;0.41199654;0.0074377963;0.014080463;0.6318689;0.012910519;0.010090799;0.89597785;0.79875493;0.0023826209;0.013691386;0.016956052;0.020054625;0.66054201;0.90613544;0.13398641;0.13620122;0.056928903;0.17234756;0.066453837;0.091249578;0.1344458;0.93632382;0.11192223;0.10557429;0.90796846;0.045398582;0.068642169;0.062400293;0.98118317;0.16745506;0.046084564;0.0522504;0.97606385;0.083502755;0.056860451;0.12328354;0.17982826;0.067181028;0.77214134;0.062428951;0.15764265;0.20382945;0.96230078;0.044398341;0.10974514;0.11930223;0.080640249;0.16301805;0.093387194;0.056884512;0.84788185;0.040993992;0.16436169;0.048402954;0.055519298;0.054596059;0.13448347;0.20048811;0.93858731;0.049694642;0.090194963;0.05185125;0.86947536;0.025633777;0.12817372;0.043583948;0.13131128;0.96753162;0.060618207;0.10313424;0.16704786;0.98605007;0.033994216;0.045491382;0.077617884;0.93454969;0.032058209;0.080812037;0.040532283;0.99218142;0.033699792;0.10853416;0.040510502;0.98472792;0.16005951;0.059425771;0.043715864;0.04586298;0.080008522;0.040010508;0.13242422;0.14145663;0.97250074;0.031221006;0.089531928;0.042039976;0.99190396;0.1132992;0.081292488;0.063121781;0.96153903;0.098816805;0.084512532;0.11664071;0.98706812;0.063518688;0.056955423;0.028609784;0.95011669;0.031974774;0.071984589;0.10279876;0.0292076;0.03702049;0.066992044;0.98869562;0.076810427;0.085492931;0.054238394;0.020071415;0.97962761;0.034798279;0.046667192;0.041102637;0.042477328;0.98237318;0.070126824;0.10941579;0.038629811;0.057525046;0.99171865;0.04085438;0.037111331;0.076055899;0.041663356;0.98778677;0.12136586;0.023017116;0.02894046;0.045711558;0.036528766;0.055060659;0.032927223;0.046992332;0.021006553;0.034502763;0.045881752;0.034275971;0.98447841;0.97739524;0.96715558;0.98407388;0.98596787;0.062201664;0.14910418;0.068418927;0.047839206;0.028717987;0.046925936;0.032830641;0.079498515;0.071808368;0.023293244;0.96516174;0.08131548;0.087495536;0.074007079;0.034431431;0.055748079;0.069754228;0.052416243;0.96220738;0.077132814;0.038208649;0.96735823;0.028505895;0.063154519;0.055604644;0.98032653;0.093229249;0.060822729;0.06307169;0.9842146;0.022935389;0.097115412;0.11861071;0.084464833;0.078581519;0.51821089;0.0097440919;0.0080546467;0.0099852011;0.0048405775;0.017746573;0.0032215088;0.014653977;0.6253612;0.012662269;0.85029709;0.99919528;0.62267405;0.73121053;0.81861407;0.67443204;0.014128769;0.010853975;0.0036390657;0.76819158;0.0099551929;0.01814816;0.020052016;0.018447472;0.0080583692;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
  };
 };
 data_proc {
  name=;
  el_typ=taDataProc;
  el_def=0;
  taDataProc @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
    };
   };
   name="data_base";
  };
  taDataAnal @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
    };
   };
   name="data_anal";
  };
  taDataGen @[2] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
    };
   };
   name="data_gen";
  };
  taImageProc @[3] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
    };
   };
   name="image_proc";
  };
 };
 programs {
  name=;
  el_typ=Program;
  el_def=0;
  step_prog=NULL;
  tags=;
  desc=;
  Program @[0] {
   name="LeabraStartup";
   tags="Leabra, Startup";
   desc="run project in the background (replaces leabra_startup.css)
command line is: emergent -nogui -ni -p <project name>.proj [Epochs=xxx] [Batches=xxx] [Tag=xxx]";
   flags=STARTUP_RUN;
   objs {
    name=;
    el_typ=taNBase;
    el_def=0;
   };
   types {
    name=;
    el_typ=ProgType;
    el_def=0;
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="network";
     var_type=T_Object;
     object_type=LeabraNetwork;
     object_val=.projects[0].networks[0]$1$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc="network to operate on -- updates batch counter on network and passes it to train program";
    };
    ProgVar @[1] {
     name="input_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].data.gp[0][0]$2$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc="datatable with training patterns -- not used by this program, but passed to train program";
    };
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="train";
     var_type=T_Object;
     object_type=Program;
     object_val=.projects[0].programs.gp[0][1]$3$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc="set this to point to your train process";
    };
    ProgVar @[1] {
     name="batch";
     var_type=T_Object;
     object_type=Program;
     object_val=.projects[0].programs.gp[0][0]$4$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc="set this to point to your batch process";
    };
    ProgVar @[2] {
     name="tag";
     var_type=T_String;
     string_val=;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc=;
    };
    ProgVar @[3] {
     name="log_dir";
     var_type=T_String;
     string_val=;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc="log file directory";
    };
    ProgVar @[4] {
     name="log_file_nm";
     var_type=T_String;
     string_val=;
     objs_ptr=0;
     flags=NULL_CHECK;
     desc="name of log file";
    };
    ProgVar @[5] {
     name="EpochOutputData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].data.gp[1][1]$5$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc=;
    };
    ProgVar @[6] {
     name="TrialOutputData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].data.gp[1][0]$6$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc=;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    IfReturn @[0] {
     desc="don't run if running in the gui!";
     flags=;
     cond {
      expr="taMisc::gui_active";
      flags=;
      var_expr="taMisc::gui_active";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    Comment @[1] {
     desc="add our special args from command line";
     flags=;
    };
    MiscCall @[2] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taMisc;
     method=taMisc::AddArgName;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="flag";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"tag=\"";
	flags=;
	var_expr="\"tag=\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="name";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"FileTag\"";
	flags=;
	var_expr="\"FileTag\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MiscCall @[3] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taMisc;
     method=taMisc::AddArgName;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="flag";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"logdir=\"";
	flags=;
	var_expr="\"logdir=\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="name";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"LogDir\"";
	flags=;
	var_expr="\"LogDir\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MiscCall @[4] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taMisc;
     method=taMisc::AddArgName;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="flag";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"epochs=\"";
	flags=;
	var_expr="\"epochs=\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="name";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"EpochMax\"";
	flags=;
	var_expr="\"EpochMax\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MiscCall @[5] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taMisc;
     method=taMisc::AddArgName;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="flag";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"batches=\"";
	flags=;
	var_expr="\"batches=\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="name";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"BatchMax\"";
	flags=;
	var_expr="\"BatchMax\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MiscCall @[6] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taMisc;
     method=taMisc::AddArgName;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="flag";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"cycle_max=\"";
	flags=;
	var_expr="\"cycle_max=\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="name";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"CycleMax\"";
	flags=;
	var_expr="\"CycleMax\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MiscCall @[7] {
     desc="key step: actually process args!";
     flags=;
     result_var=NULL;
     object_type=taMisc;
     method=taMisc::UpdateArgs;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
     };
    };
    Comment @[8] {
     desc="Initialize and set variables from args";
     flags=;
    };
    PrintExpr @[9] {
     desc=;
     flags=;
     expr {
      expr="\"Loaded project: \" << .projects[0].file_name";
      flags=;
      var_expr="\"Loaded project: \" << .projects[0].file_name";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    MethodCall @[10] {
     desc=;
     flags=;
     result_var=NULL;
     obj=.projects[0].programs[0].vars[1]$7$;
     method=Program::Init;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
     };
    };
    MiscCall @[11] {
     desc=;
     flags=;
     result_var=.projects[0].programs[0].vars[2]$8$;
     object_type=taMisc;
     method=taMisc::FindArgByName;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="nm";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"FileTag\"";
	flags=;
	var_expr="\"FileTag\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MiscCall @[12] {
     desc=;
     flags=;
     result_var=.projects[0].programs[0].vars[3]$9$;
     object_type=taMisc;
     method=taMisc::FindArgByName;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="nm";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"LogDir\"";
	flags=;
	var_expr="\"LogDir\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MethodCall @[13] {
     desc=;
     flags=;
     result_var=NULL;
     obj=.projects[0].programs[0].vars[0]$10$;
     method=Program::SetVarFmArg;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="arg_nm";
       required=1;
       def_val=;
       expr {
	expr="\"EpochMax\"";
	flags=;
	var_expr="\"EpochMax\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="var_nm";
       required=1;
       def_val=;
       expr {
	expr="\"max_epoch\"";
	flags=;
	var_expr="\"max_epoch\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="quiet";
       required=0;
       def_val="false";
       expr {
	expr="false";
	flags=;
	var_expr="false";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MethodCall @[14] {
     desc=;
     flags=;
     result_var=NULL;
     obj=$7$;
     method=Program::SetVarFmArg;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="arg_nm";
       required=1;
       def_val=;
       expr {
	expr="\"BatchMax\"";
	flags=;
	var_expr="\"BatchMax\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="var_nm";
       required=1;
       def_val=;
       expr {
	expr="\"max_batch\"";
	flags=;
	var_expr="\"max_batch\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="quiet";
       required=0;
       def_val="false";
       expr {
	expr="false";
	flags=;
	var_expr="false";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    Comment @[15] {
     desc="Set log files";
     flags=;
    };
    MethodCall @[16] {
     desc="last arg is to include dmem proc number";
     flags=;
     result_var=.projects[0].programs[0].vars[4]$11$;
     obj=.projects[0].programs[0].vars[5]$12$;
     method=taBase::GetFileNameFmProject;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="ext";
       required=1;
       def_val=;
       expr {
	expr="\".epc.dat\"";
	flags=;
	var_expr="\".epc.dat\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="tag";
       required=0;
       def_val="\"\"";
       expr {
	expr="tag";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ tag;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[2] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="subdir";
       required=0;
       def_val="\"\"";
       expr {
	expr="log_dir";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ log_dir;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="dmem_proc_no";
       required=0;
       def_val="false";
       expr {
	expr="false";
	flags=;
	var_expr="false";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MethodCall @[17] {
     desc="last arg is to restrict log to dmem_proc = 0";
     flags=;
     result_var=NULL;
     obj=$12$;
     method=DataTable::SaveDataLog;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       expr {
	expr="log_file_nm";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ log_file_nm;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="append";
       required=0;
       def_val="false";
       expr {
	expr="false";
	flags=;
	var_expr="false";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="dmem_proc_0";
       required=0;
       def_val="true";
       expr {
	expr="true";
	flags=;
	var_expr="true";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MethodCall @[18] {
     desc="last arg is to include dmem proc number";
     flags=OFF;
     result_var=$11$;
     obj=.projects[0].programs[0].vars[6]$13$;
     method=taBase::GetFileNameFmProject;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="ext";
       required=1;
       def_val=;
       expr {
	expr="\".trl.dat\"";
	flags=;
	var_expr="\".trl.dat\"";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="tag";
       required=0;
       def_val="\"\"";
       expr {
	expr="tag";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ tag;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[2] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="subdir";
       required=0;
       def_val="\"\"";
       expr {
	expr="log_dir";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ log_dir;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="dmem_proc_no";
       required=0;
       def_val="false";
       expr {
	expr="true";
	flags=;
	var_expr="true";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MethodCall @[19] {
     desc="last arg is to restrict log to dmem_proc = 0";
     flags=OFF;
     result_var=NULL;
     obj=$13$;
     method=DataTable::SaveDataLog;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       expr {
	expr="log_file_nm";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ log_file_nm;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="append";
       required=0;
       def_val="false";
       expr {
	expr="false";
	flags=;
	var_expr="false";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="dmem_proc_0";
       required=0;
       def_val="true";
       expr {
	expr="false";
	flags=;
	var_expr="false";
	vars {
	};
	var_names{ 	};
	bad_vars{ 	};
       };
      };
     };
    };
    MemberFmArg @[20] {
     desc="set member value from startup arg!";
     flags=;
     obj=.projects[0].programs[0].args[0]$14$;
     path="cycle_max";
     arg_name="CycleMax";
     update_after=0;
     quiet=0;
    };
    OtherProgramVar @[21] {
     desc=;
     flags=;
     other_prog=.projects[0].programs.gp[0][9]$15$;
     set_other=1;
     var_1=$8$;
     var_2=NULL;
     var_3=NULL;
     var_4=NULL;
    };
    PrintExpr @[22] {
     desc=;
     flags=;
     expr {
      expr="\"Running: \" << batch.name";
      flags=;
      var_expr="\"Running: \" << batch.name";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgramCall @[23] {
     desc=;
     flags=;
     target=$4$;
     targ_ld_init="*LeabraBatch*";
     prog_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=LeabraNetwork;
       type="LeabraNetwork*";
       name="network";
       required=1;
       def_val=;
       expr {
	expr="network";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ network;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=DataTable;
       type="DataTable*";
       name="input_data";
       required=1;
       def_val=;
       expr {
	expr="input_data";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ input_data;	};
	bad_vars{ 	};
       };
      };
     };
    };
   };
  };
  Program @[1] {
   name="ActBasedRField";
   tags="Statistic, Receptive Field";
   desc="computes an activation based receptive field using ActBasedRF object type -- allows you to see how units in a selected target layer relate to activations of units throughout the network";
   flags=;
   objs {
    name=;
    el_typ=ActBasedRF;
    el_def=0;
    ActBasedRF @[0] {
     name="ActBasedRF_0";
     rf_data=.projects[0].programs[1].objs[1]$16$;
     network=$1$;
     trg_layer=.projects[0].networks[0].layers[1]$17$;
     norm_mode=NORM_TRG_UNIT_RF_LAY;
     threshold=0.5;
    };
    DataTable @[1] {
     name="ActRFData";
     desc="receptive field data -- could move this into AnalysisData if you want..";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="Input";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=1;
       cell_geom{ 5;5;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [5 5 25] 1;0;0.019378487;0;0.0010756084;0;0.0016502431;0.019378487;0.99786961;0;0.00011720824;0.99768907;0.022221547;0.00011720824;0.00011720824;0.99757183;0.00029772223;0.019378487;0.0016502431;0.99757183;0.0010756084;0;0.019378487;0;0.0024281293;0.94883996;0;0.016535981;0;0.50577408;0;0.47737601;0.016535981;0.034311667;0;0.00031400315;0.00031483459;1;0.00031400315;0.00031400315;8.3144914e-07;0.03431084;0.016535981;0.47737601;8.3144914e-07;0.50577408;0;0.016535981;0;0.94883925;0.086812161;0;0.53493875;0;0.00036312317;0;1.3878708e-09;0.53493875;0.08717528;0;0.46469811;0.55151021;1;0.46469811;0.46469811;0.086812161;0.00036312317;0.53493875;1.3878708e-09;0.086812161;0.00036312317;0;0.53493875;0;1.3878708e-09;0.072915524;0;0.50049281;0;3.9812157e-11;0;0.071357764;0.50049281;0.0015577549;0;0.42814961;0.42970744;1;0.42814961;0.42814961;0.0015577549;3.9812147e-11;0.50049281;0.071357764;0.0015577549;3.9812157e-11;0;0.50049281;0;0.071357764;0.53798026;0;0.012583916;0;0.97980237;0;0.0075266287;0.012583916;0.51020402;0;8.7219945e-05;0.030514797;1;8.7219945e-05;8.7219945e-05;0.030427575;0.47977644;0.012583916;0.0075266287;0.030427575;0.97980237;0;0.012583916;0;0.50755262;0.02882676;0;0.0056869243;0;0.0060214521;0;0.025695259;0.0056869243;0.0028899512;0;0.96259636;0.96259636;1;0.96259636;0.96259636;1.4196137e-11;0.0028899512;0.0056869243;0.025695259;1.4196137e-11;0.0060214521;0;0.0056869243;0;0.02882676;0.46289507;0;0.00073281676;0;0.96244633;0;0.018668411;0.00073281676;0.53415811;0;0.018152352;0.026121499;1;0.018152352;0.018152352;0.0079691475;0.52618903;0.00073281676;0.018668411;0.0079691475;0.96244633;0;0.00073281676;0;0.45492589;0.97927737;0;6.3112057e-05;0;0.032384533;0;0.93173409;6.3112057e-05;0.03352515;0;0.035818398;0.060160406;1;0.035818398;0.035818398;0.02434201;0.0091831423;6.3112057e-05;0.93173409;0.02434201;0.032384533;0;6.3112057e-05;0;0.95493531;0.12194275;0;0.86053836;0;0.01206491;0;0.11794439;0.86053836;0.008066942;0;0.0094524426;0.0094526447;1;0.0094524426;0.0094524426;2.0210685e-07;0.0080667399;0.86053836;0.11794439;2.0210685e-07;0.01206491;0;0.86053836;0;0.12194255;0.028158054;0;0.00083504227;0;0.016659295;0;2.8245073e-05;0.00083504227;0.044248644;0;0.97214037;0.99999994;0.98966295;0.97214037;0.97214037;0.02785958;0.016389066;0.00083504227;2.8245073e-05;0.02785958;0.016659295;0;0.00083504227;0;0.00029847398;0.04767609;0;0.93662864;0;0.00034745206;0;0.045619123;0.93662864;0.0017207225;0;0.017404871;0.019119991;1;0.017404871;0.017404871;0.001715122;5.6007025e-06;0.93662864;0.045619123;0.001715122;0.00034745206;0;0.93662864;0;0.04596097;0.28618228;0;0.006723823;0;0.95891792;0;0.034184881;0.006723823;0.70864612;0;0.00017344383;0.0010362791;1;0.00017344383;0.00017344383;0.00086283532;0.70778328;0.006723823;0.034184881;0.00086283532;0.95891792;0;0.006723823;0;0.28531945;0.43480366;0;0.11036801;0;0.8815189;0;5.7722545e-08;0.11036801;0.44901973;0;0.008112926;0.0092651146;1;0.008112926;0.008112926;0.0011521881;0.4478676;0.11036801;5.7722545e-08;0.0011521881;0.8815189;0;0.11036801;0;0.43365142;0.99936336;0;1.2077062e-10;0;0.50541854;0;0.49416867;1.2077062e-10;0.001605361;0;0.00041285381;0.0011036133;1;0.00041285381;0.00041285381;0.00069075957;0.00091460155;1.2077062e-10;0.49416867;0.00069075957;0.50541854;0;1.2077062e-10;0;0.99867254;0.98238349;0;2.6543773e-17;0;0.0133427;0;0.00050887716;2.6543773e-17;0.98367077;0;0.023898745;1;0.037750322;0.023898745;0.023898745;0.9761014;0.007569442;2.6543773e-17;0.00050887716;0.9761014;0.0133427;0;2.6543773e-17;0;0.0062821354;0.96102643;0;0.00036980168;0;0.51213318;0;0.48441818;0.00036980168;0.037339531;0;0.0030789839;0.0039862981;1;0.0030789839;0.0030789839;0.00090731424;0.036432218;0.00036980168;0.48441818;0.00090731424;0.51213318;0;0.00036980168;0;0.96011907;1;0;2.505977e-05;0;0.0066396412;0;0.52746814;2.505977e-05;0.47255984;0;0.00032700907;0.46955305;0.53445983;0.00032700907;0.00032700907;0.46922603;0.0033337933;2.505977e-05;0.52746814;0.46922603;0.0066396412;0;2.505977e-05;0;0.53077394;0.99993557;0;1.0500298e-06;0;7.990731e-05;0;4.2607224e-09;1.0500298e-06;1;0;1.7255072e-11;0.99992782;8.0961625e-05;1.7255072e-11;1.7255072e-11;0.99992782;7.2204275e-05;1.0500298e-06;4.2607224e-09;0.99992782;7.990731e-05;0;1.0500298e-06;0;7.7073009e-06;0.90905416;0;0.039754618;0;0.85675949;0;0.088951416;0.039754618;0.036656819;0;0.014534296;0.014534305;1;0.014534296;0.014534296;7.6557454e-09;0.036656816;0.039754618;0.088951416;7.6557454e-09;0.85675949;0;0.039754618;0;0.90905404;0.019998292;0;5.7915026e-05;0;0.9896487;0;0.00073287258;5.7915026e-05;0.97038358;0;0.0095603811;0.0095603829;0.99999994;0.0095603811;0.0095603811;1.3117428e-09;0.97038358;5.7915026e-05;0.00073287258;1.3117428e-09;0.9896487;0;5.7915026e-05;0;0.019998292;0.07313969;0;9.6458743e-09;0;0.99889112;0;0.00046757056;9.6458743e-09;0.98011595;0;0.00064128754;0.027589796;1;0.00064128754;0.00064128754;0.026948506;0.95316738;9.6458743e-09;0.00046757056;0.026948506;0.99889112;0;9.6458743e-09;0;0.046191178;8.1888487e-05;0;0.99704212;0;1.8954344e-05;0;8.1726008e-05;0.99704212;1.8791869e-05;0;0.0028571717;0.0028571717;0.99999994;0.0028571717;0.0028571717;1.9133122e-16;1.8791869e-05;0.99704212;8.1726008e-05;1.9133122e-16;1.8954344e-05;0;0.99704212;0;8.1888487e-05;0.0056347614;0;8.6810746e-07;0;6.9020236e-05;0;0.0056160116;8.6810746e-07;8.7640328e-05;0;0.99431407;0.99433273;1;0.99431407;0.99431407;1.8684987e-05;6.8955342e-05;8.6810746e-07;0.0056160116;1.8684987e-05;6.9020236e-05;0;8.6810746e-07;0;0.0056160768;1;0;2.3208711e-06;0;0.0052515808;0;0.0023475527;2.3208711e-06;0.9953472;0;0.0003099741;0.99418414;0.0079114279;0.0003099741;0.0003099741;0.99387401;0.0014731272;2.3208711e-06;0.0023475527;0.99387401;0.0052515808;0;2.3208711e-06;0;0.0061260057;0.50490922;0;0.0031901998;0;0.004821382;0;0.0037210023;0.0031901998;0.49714237;0;0.50324559;1;0.51497817;0.50324559;0.50324559;0.49675459;0.00038775461;0.0031901998;0.0037210023;0.49675459;0.004821382;0;0.0031901998;0;0.0081546297;       };
      };
      float_Data @[1] {
       name="Hidden";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=1;
       cell_geom{ 5;5;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [5 5 25] 0.98565;0.0062133721;0.11240652;0.0019959761;0.024362242;0.0021208748;0.0039704023;0.0070586512;0.016144281;0.011219689;0.018715475;6.3234962e-05;0.017868815;0.00090856431;1;0.002807857;0.8326056;0.91840655;0.004404264;0.0001878966;0.0055377549;0.017602615;0.00020725993;0.99987996;0.95593876;0.0029139665;1;0.005635995;0.0070390529;0.50415862;0.013342732;0.44810906;0.48990723;0.078118332;0.0047640381;0.037390977;0.0019693526;0.5111503;0.81083852;0.0042659431;0.97624969;0.45229599;1.5674819e-05;0.40254444;0.032429282;0.047273085;0.015641114;0.0026081153;0.0028542774;0.0089494102;0.061585519;0.0065841624;1;0.0054472047;0.033855986;0.4803755;0.010505887;0.019070012;0.55107516;0.47884244;0.55967849;6.553407e-05;0.11577053;0.00066371082;0.082109265;0.0017782357;0.048742287;0.038361475;0.010383524;0.0011356113;0.011782228;0.55813628;0.48049331;0.076114543;0.55370134;0.095637947;0.71917063;0.47638875;0.47568044;0.22202098;0.37150586;0.50236917;0.37572294;0.70730186;0.45561376;1;0.00052891119;0.9202897;0.0053894748;0.28013468;0.18521222;0.083635941;0.00052754476;0.62221247;0.12701449;0.011070725;0.84987557;0.6027658;0.0096913446;0.58294582;0.012188097;0.53780979;0.030914839;0.0023181299;1;0.0045364746;0.9232161;0.026830055;0.016315708;0.012002323;0.014673717;0.0017035505;0.99056274;0.44160756;0.028712941;0.52549905;0.022359114;0.0095802173;0.40318215;0.48983404;0.52071166;0.011691885;0.00047028455;0.02447512;0.033981372;0.0020064812;0.026915818;0.82949489;0.00733518;0.0085786674;1;0.021358294;0.046781395;0.024692459;0.95523816;0.020254418;0.0004654646;0.01643955;0.0021218648;0.011225743;0.02831508;0.018213304;3.932967e-06;0.0059188921;0.0049758898;0.0034447261;0.0061882585;0.9977597;0.00059327675;0.97203135;0.0021148485;0.50894547;0.01021387;0.0055846097;0.9829455;0.012025171;0.97079754;0.035277538;0.021892358;0.019952808;0.012900971;0.0033407966;0.99999994;0.40955374;0.020929864;0.50313908;0.019150762;0.0015203037;0.38987437;0.542081;0.57012057;0.0019330607;0.015032252;0.0074145971;0.022637052;0.0067571737;1;0.033320174;0.0075064776;0.051338866;0.047336541;0.063401118;0.98419601;0.1144013;0.035915717;0.045056999;0.0014511832;0.037066955;0.82659382;0.031349059;0.99568355;0.90379024;0.0056200889;0.089878641;0.008041488;0.021617735;0.0012585943;0.036925793;0.018083544;0.057734679;0.013870236;0.14310701;0.86414939;0.012682212;0.028018983;0.022423811;0.035311233;0.10267215;0.99999994;0.0094025927;0.94605976;0.0012153462;0.21211135;0.0087849069;0.0039697438;0.11724903;0.096928723;1.1693388e-05;0.027986312;0.004384716;0.0060524377;0.91986483;0.010734205;0.0018211477;0.014826448;0.010996697;0.0099563347;0.85661763;0.009319732;0.023514086;0.98963058;0.036714762;0.036772456;0.010726647;0.97473687;0.012995652;0.0012179152;0.025709087;0.00065468956;0.039511856;0.013593068;0.014317964;0.0085833184;0.0074936375;0.014372149;0.018307628;0.0023157776;0.99999994;0.022019768;0.99972469;0.016845591;0.071762092;0.9194687;0.018784972;0.026400181;0.019270156;0.021800332;0.04236472;0.99114889;0.01193444;1;0.00017901012;0.23057042;0.0068566757;0.0078627858;0.040016167;0.032061528;0.00040890338;0.035628401;0.0032410705;0.001372218;0.98464125;0.015356031;0.002348541;0.020416224;0.0096251182;0.63916802;0.0182066;0.0016801832;0.51830471;0.07488855;0.95467186;0.23074256;0.21531968;0.18914044;0.030271988;0.11840085;1;0.013580288;0.18978257;0.69838983;0.13524742;0.0013770246;0.046019565;0.36871937;0.70084679;0.0080227647;0.0022226386;0.05617258;0.077990696;0.0081655867;0.49806163;0.096561186;0.0087769032;0.904805;0.0079407506;0.85792023;0.017694375;0.11282113;0.011986623;0.11706036;0.0030022224;1;0.38598132;0.010371228;0.47992903;0.0049411552;0.00024473999;0.36739507;0.46405685;0.48853606;0.11565237;0.0064769182;0.002951358;0.011939832;0.00052550703;1;0.00070067175;6.5057058e-05;0.51055288;0.0012972407;0.44472241;0.49942657;0.0059141852;0.00038634636;0.0044060661;5.1603962e-05;0.48853701;0.96758169;0.00076766114;0.9935382;0.46803692;0.00017739797;0.47089371;0.0016383375;0.0099431966;3.9889792e-06;0.00058869913;0.00061598764;0.001331971;0.94639468;0.0086085526;0.14183304;0.0055330461;0.054316442;0.01122968;0.037187245;0.030992277;0.0043729013;0.038152084;0.0082672928;0.0011799942;0.021478839;0.0012560849;1;0.012849937;0.81037456;0.88537729;0.0062636295;0.0080262786;0.02932011;0.0013062236;0.019011246;0.98475975;0.96812028;0.0013488736;1;0.0015591879;0.0018569105;0.50460267;0.014377853;0.45377398;0.49965957;0.065560229;0.0066624242;0.021357298;0.0022041716;0.50452381;0.82519764;0.0065226639;0.9895519;0.46075815;0.00020267883;0.39928451;0.033313625;0.048815805;0.00058158167;0.0048744837;0.0031481388;0.008694795;0.52102274;0.60350782;0.055671912;0.0010922836;0.027967477;0.0120472;0.022498764;0.59080154;0.07060001;0.0091414936;0.022290312;0.00055602909;0.0067663463;0.50637776;0.53583467;0.60019737;1;0.49386472;0.050117381;0.0016390729;0.0068794526;7.2463074e-05;0.0028520804;0.53593045;0.51612109;0.9817003;3.5726403e-05;0.074843161;1.1768696e-05;0.020469189;4.4436943e-06;0.003050911;0.0062754336;1.4548531e-05;0.009360902;0.00048560058;9.6702297e-06;0.00057247584;0.00032784589;1;0.0004509787;0.84359604;0.940543;2.9968501e-06;2.7652919e-05;0.0056224531;9.675291e-07;4.2344091e-06;0.99991661;0.95481074;0.0051311729;0.99999994;0.022080097;0.015128894;0.93891424;0.0072889295;0.8527531;0.10938467;0.037951056;0.0089074736;0.046116278;0.00035223865;0.93666649;0.94851321;0.0077107586;0.96834362;0.093307026;3.2663629e-06;0.83234346;0.04217986;0.055430684;0.040912714;0.011901178;0.00063029118;0.013153234;0.00018462879;0.067945488;0.0020366816;0.0026047069;0.96207911;0.0051681041;1;0.0082541741;0.0050148382;0.014408568;0.0035382097;0.0023802777;0.99783814;0.0027833066;0.0083334045;0.068140626;0.0025737211;2.5420122e-05;0.03557479;0.96795034;0.9840337;0.00068580674;0.0072943373;0.0013895358;0.0071957442;0.0051738252;0.09417481;0.020091776;0.00021586347;0.97242624;0.0034018308;1;0.021098172;0.0065817777;0.017451333;0.0014243466;0.0043018204;0.99881023;0.016061317;0.02894485;0.094938464;0.010271043;0.0049142805;0.044451348;0.93563712;0.98431587;5.4999182e-05;0.00055952749;0.018087689;0.029086364;0.016037896;0.0303865;0.92816108;0.016160347;0.021292962;0.0059596212;0.0033065185;0.001197878;0.97550416;0.0021527102;0.99669617;4.8022579e-05;0.23058608;6.2836089e-06;0.0012575216;0.0011030232;0.00010550416;8.2468921e-07;0.031995226;0.00063590379;5.3635013e-05;1;0.0021036346;2.4263371e-05;0.0069005247;0.00019400925;0.0052056708;0.82093227;0.011775539;0.00087993208;0.9872179;0.026417181;0.036107183;0.011695314;0.95504892;0.015969845;1.3668698e-05;0.01326734;0.00095274718;0.018803788;0.0094981585;0.0042663012;3.7081388e-06;0.0095621105;0.0069488417;0.00056059664;0.0021612609;1;0.0002580983;0.97058374;0.96092588;0.0058489912;0.13351269;0.00019437981;0.04701627;0.00060266966;0.013377804;0.018154413;0.0020371457;0.021591026;0.0025075797;0.0003546644;0.006206864;0.0010235078;1;0.0062979558;0.82306302;0.89900458;0.0005199241;0.0013590369;0.018605744;2.5593103e-05;0.00026498426;0.996867;0.96254325;0.48173058;0.009616374;0.509287;0.0061309449;0.034229171;0.51776701;0.021416537;0.030392578;0.0086965328;0.5140118;0.011430471;0.00025820706;0.013166813;0.0011605024;0.51550293;0.009120889;0.41563138;0.45013988;0.0056893593;0.003690365;0.015688648;0.0038166828;0.52251655;0.50472218;1;       };
      };
      float_Data @[2] {
       name="Output";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=1;
       cell_geom{ 5;5;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [5 5 25] 1;0;0.019378487;0;0.0010756084;0;0.0016502431;0.019378487;0.99786961;0;0.00011720824;0.99768907;0.022221547;0.00011720824;0.99768907;0.99757183;0.00029772223;0.019378487;0.0016502431;0;0.0010756084;0;0.019378487;0;0.0024281293;0.94883996;0;0.016535981;0;0.50577408;0;0.47737601;0.016535981;0.034311667;0;0.00031400315;0.00031483459;1;0.00031400315;0.00031483459;8.3144914e-07;0.03431084;0.016535981;0.47737601;0;0.50577408;0;0.016535981;0;0.94883925;0.086812161;0;0.53493875;0;0.00036312317;0;1.3878708e-09;0.53493875;0.08717528;0;0.46469811;0.55151021;1;0.46469811;0.55151021;0.086812161;0.00036312317;0.53493875;1.3878708e-09;0;0.00036312317;0;0.53493875;0;1.3878708e-09;0.072915524;0;0.50049281;0;3.9812157e-11;0;0.071357764;0.50049281;0.0015577549;0;0.42814961;0.42970744;1;0.42814961;0.42970744;0.0015577549;3.9812147e-11;0.50049281;0.071357764;0;3.9812157e-11;0;0.50049281;0;0.071357764;0.53798026;0;0.012583916;0;0.97980237;0;0.0075266287;0.012583916;0.51020402;0;8.7219945e-05;0.030514797;1;8.7219945e-05;0.030514797;0.030427575;0.47977644;0.012583916;0.0075266287;0;0.97980237;0;0.012583916;0;0.50755262;0.02882676;0;0.0056869243;0;0.0060214521;0;0.025695259;0.0056869243;0.0028899512;0;0.96259636;0.96259636;1;0.96259636;0.96259636;1.4196137e-11;0.0028899512;0.0056869243;0.025695259;0;0.0060214521;0;0.0056869243;0;0.02882676;0.46289507;0;0.00073281676;0;0.96244633;0;0.018668411;0.00073281676;0.53415811;0;0.018152352;0.026121499;1;0.018152352;0.026121499;0.0079691475;0.52618903;0.00073281676;0.018668411;0;0.96244633;0;0.00073281676;0;0.45492589;0.97927737;0;6.3112057e-05;0;0.032384533;0;0.93173409;6.3112057e-05;0.03352515;0;0.035818398;0.060160406;1;0.035818398;0.060160406;0.02434201;0.0091831423;6.3112057e-05;0.93173409;0;0.032384533;0;6.3112057e-05;0;0.95493531;0.12194275;0;0.86053836;0;0.01206491;0;0.11794439;0.86053836;0.008066942;0;0.0094524426;0.0094526447;1;0.0094524426;0.0094526447;2.0210685e-07;0.0080667399;0.86053836;0.11794439;0;0.01206491;0;0.86053836;0;0.12194255;0.028158054;0;0.00083504227;0;0.016659295;0;2.8245073e-05;0.00083504227;0.044248644;0;0.97214037;0.99999994;0.98966295;0.97214037;0.99999994;0.02785958;0.016389066;0.00083504227;2.8245073e-05;0;0.016659295;0;0.00083504227;0;0.00029847398;0.04767609;0;0.93662864;0;0.00034745206;0;0.045619123;0.93662864;0.0017207225;0;0.017404871;0.019119991;1;0.017404871;0.019119991;0.001715122;5.6007025e-06;0.93662864;0.045619123;0;0.00034745206;0;0.93662864;0;0.04596097;0.28618228;0;0.006723823;0;0.95891792;0;0.034184881;0.006723823;0.70864612;0;0.00017344383;0.0010362791;1;0.00017344383;0.0010362791;0.00086283532;0.70778328;0.006723823;0.034184881;0;0.95891792;0;0.006723823;0;0.28531945;0.43480366;0;0.11036801;0;0.8815189;0;5.7722545e-08;0.11036801;0.44901973;0;0.008112926;0.0092651146;1;0.008112926;0.0092651146;0.0011521881;0.4478676;0.11036801;5.7722545e-08;0;0.8815189;0;0.11036801;0;0.43365142;0.99936336;0;1.2077062e-10;0;0.50541854;0;0.49416867;1.2077062e-10;0.001605361;0;0.00041285381;0.0011036133;1;0.00041285381;0.0011036133;0.00069075957;0.00091460155;1.2077062e-10;0.49416867;0;0.50541854;0;1.2077062e-10;0;0.99867254;0.98238349;0;2.6543773e-17;0;0.0133427;0;0.00050887716;2.6543773e-17;0.98367077;0;0.023898745;1;0.037750322;0.023898745;1;0.9761014;0.007569442;2.6543773e-17;0.00050887716;0;0.0133427;0;2.6543773e-17;0;0.0062821354;0.96102643;0;0.00036980168;0;0.51213318;0;0.48441818;0.00036980168;0.037339531;0;0.0030789839;0.0039862981;1;0.0030789839;0.0039862981;0.00090731424;0.036432218;0.00036980168;0.48441818;0;0.51213318;0;0.00036980168;0;0.96011907;1;0;2.505977e-05;0;0.0066396412;0;0.52746814;2.505977e-05;0.47255984;0;0.00032700907;0.46955305;0.53445983;0.00032700907;0.46955305;0.46922603;0.0033337933;2.505977e-05;0.52746814;0;0.0066396412;0;2.505977e-05;0;0.53077394;0.99993557;0;1.0500298e-06;0;7.990731e-05;0;4.2607224e-09;1.0500298e-06;1;0;1.7255072e-11;0.99992782;8.0961625e-05;1.7255072e-11;0.99992782;0.99992782;7.2204275e-05;1.0500298e-06;4.2607224e-09;0;7.990731e-05;0;1.0500298e-06;0;7.7073009e-06;0.90905416;0;0.039754618;0;0.85675949;0;0.088951416;0.039754618;0.036656819;0;0.014534296;0.014534305;1;0.014534296;0.014534305;7.6557454e-09;0.036656816;0.039754618;0.088951416;0;0.85675949;0;0.039754618;0;0.90905404;0.019998292;0;5.7915026e-05;0;0.9896487;0;0.00073287258;5.7915026e-05;0.97038358;0;0.0095603811;0.0095603829;0.99999994;0.0095603811;0.0095603829;1.3117428e-09;0.97038358;5.7915026e-05;0.00073287258;0;0.9896487;0;5.7915026e-05;0;0.019998292;0.07313969;0;9.6458743e-09;0;0.99889112;0;0.00046757056;9.6458743e-09;0.98011595;0;0.00064128754;0.027589796;1;0.00064128754;0.027589796;0.026948506;0.95316738;9.6458743e-09;0.00046757056;0;0.99889112;0;9.6458743e-09;0;0.046191178;8.1888487e-05;0;0.99704212;0;1.8954344e-05;0;8.1726008e-05;0.99704212;1.8791869e-05;0;0.0028571717;0.0028571717;0.99999994;0.0028571717;0.0028571717;1.9133122e-16;1.8791869e-05;0.99704212;8.1726008e-05;0;1.8954344e-05;0;0.99704212;0;8.1888487e-05;0.0056347614;0;8.6810746e-07;0;6.9020236e-05;0;0.0056160116;8.6810746e-07;8.7640328e-05;0;0.99431407;0.99433273;1;0.99431407;0.99433273;1.8684987e-05;6.8955342e-05;8.6810746e-07;0.0056160116;0;6.9020236e-05;0;8.6810746e-07;0;0.0056160768;1;0;2.3208711e-06;0;0.0052515808;0;0.0023475527;2.3208711e-06;0.9953472;0;0.0003099741;0.99418414;0.0079114279;0.0003099741;0.99418414;0.99387401;0.0014731272;2.3208711e-06;0.0023475527;0;0.0052515808;0;2.3208711e-06;0;0.0061260057;0.50490922;0;0.0031901998;0;0.004821382;0;0.0037210023;0.0031901998;0.49714237;0;0.50324559;1;0.51497817;0.50324559;1;0.49675459;0.00038775461;0.0031901998;0.0037210023;0;0.004821382;0;0.0031901998;0;0.0081546297;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=ProgType;
    el_def=0;
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="network";
     var_type=T_Object;
     object_type=LeabraNetwork;
     object_val=$1$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc=;
    };
    ProgVar @[1] {
     name="final_rf";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc="whether to compute the final receptive field or just increment the sums -- call with false to accumulate, and true at end to get final values";
    };
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="ActBasedRF_0";
     var_type=T_Object;
     object_type=ActBasedRF;
     object_val=.projects[0].programs[1].objs[0]$18$;
     objs_ptr=1;
     flags=CTRL_PANEL|NULL_CHECK;
     desc=;
    };
    ProgVar @[1] {
     name="ActRFData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=$16$;
     objs_ptr=1;
     flags=NULL_CHECK;
     desc="data table to record activation based receptive field information into";
    };
    ProgVar @[2] {
     name="trg_layer_name";
     var_type=T_String;
     string_val="Hidden";
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc=;
    };
    ProgVar @[3] {
     name="trg_layer";
     var_type=T_Object;
     object_type=LeabraLayer;
     object_val=$17$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK;
     desc="target layer to get receptive field data for";
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    MethodCall @[0] {
     desc=;
     flags=;
     result_var=.projects[0].programs[1].vars[3]$19$;
     obj=.projects[0].programs[1].args[0]$20$;
     method=Network::FindLayer;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_char_ptr;
       type="const char*";
       name="nm";
       required=0;
       def_val=;
       expr {
	expr="trg_layer_name";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ trg_layer_name;	};
	bad_vars{ 	};
       };
      };
     };
    };
    MethodCall @[1] {
     desc=;
     flags=;
     result_var=NULL;
     obj=.projects[0].programs[1].vars[0]$21$;
     method=ActBasedRF::InitAll;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="dt";
       required=0;
       def_val=;
       expr {
	expr="ActRFData";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ ActRFData;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=Network_ptr;
       type="Network*";
       name="net";
       required=0;
       def_val=;
       expr {
	expr="network";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ network;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[2] {
       arg_type=Layer_ptr;
       type="Layer*";
       name="tlay";
       required=0;
       def_val=;
       expr {
	expr="trg_layer";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ trg_layer;	};
	bad_vars{ 	};
       };
      };
     };
    };
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    IfElse @[0] {
     desc=;
     flags=;
     cond {
      expr="final_rf";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ final_rf;      };
      bad_vars{       };
     };
     true_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      MethodCall @[0] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$21$;
       method=ActBasedRF::ComputeRF;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
       };
      };
     };
     false_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      MethodCall @[0] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$21$;
       method=ActBasedRF::IncrementSums;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
       };
      };
     };
    };
   };
  };
  Program_Group @.gp[0] {
   name="LeabraAll_Std";
   el_typ=Program;
   el_def=0;
   step_prog=.projects[0].programs.gp[0][4]$22$;
   tags="Leabra, Std, All";
   desc="The full set of programs for training a standard Leabra network";
   Program @[0] {
    name="LeabraBatch";
    tags="Leabra, Std";
    desc="Iterate over training runs (a batch of training runs) -- just a simple loop that calls training program";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="network to operate on -- updates batch counter on network and passes it to train program";
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="datatable with training patterns -- not used by this program, but passed to train program";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="batch counter";
     };
     ProgVar @[1] {
      name="max_batch";
      var_type=T_Int;
      int_val=10;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="maximum number of batch runs to perform";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initializes local batch counter and batch field on network";
      flags=;
      network_var=.projects[0].programs.gp[0][0].args[0]$23$;
      local_ctr_var=.projects[0].programs.gp[0][0].vars[0]$24$;
      counter=Network::batch;
     };
    };
    prog_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
     NetCounterInit @[0] {
      desc="initializes local batch counter and batch field on network";
      flags=;
      network_var=$23$;
      local_ctr_var=$24$;
      counter=Network::batch;
     };
     WhileLoop @[1] {
      desc="the main loop over training runs";
      flags=;
      loop_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       ProgramCall @[0] {
	desc="run the training program -- sets the network and input_data args";
	flags=;
	target=$3$;
	targ_ld_init="*LeabraTrain*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[2] {
	  arg_type=bool;
	  type="bool";
	  name="no_prompts";
	  required=1;
	  def_val=;
	  expr {
	   expr="true";
	   flags=;
	   var_expr="true";
	   vars {
	   };
	   var_names{ 	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the local batch counter and copy to network";
	flags=;
	network_var=$23$;
	local_ctr_var=$24$;
	counter=Network::batch;
       };
      };
      test {
       expr="batch < max_batch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ batch;max_batch;       };
       bad_vars{        };
      };
     };
    };
   };
   Program @[1] {
    name="LeabraTrain";
    tags="Leabra, Std";
    desc="A complete training run of a Leabra network: iterating over epochs until the network has learned the task";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=RndSeed;
     el_def=0;
     RndSeed @[0] {
      name="rnd_seed";
      seed{ 897248114;-1259630319;-1954705695;-2086433643;-1705562578;-246166775;142172280;-1066196830;649876912;-363601797;-1551220787;-201998924;984813377;-1929982005;1866720504;1737535582;-2064818913;-596409631;-537210356;-394821123;-1176302275;-1088439095;390472553;1002483428;-644065336;-93234492;-249392311;1955837623;486322880;268723693;-1316990013;-1148081097;1053267338;-194887551;722894185;-1796145741;-419870710;-744395548;-2126350183;-1623934615;-1975558537;-1109580724;1457379925;952758326;-932820647;-793678521;622734178;-1116891631;992844023;348717466;1162608598;-2078137647;-402129645;-523610230;-892508948;-545793120;1897913877;280270467;-1694155315;294983543;-1251003482;-1650029695;-1335161250;-843867016;1576969605;-260969840;-224140684;1265137246;954732510;2064975050;-1145863940;-1435022393;-1859029257;1513712809;985631399;417291160;-2038587757;-1933156114;888379733;1446724555;-464909414;-1706911051;-1159096460;-1791674743;-147343083;960690226;682596297;1099430942;359127508;311504974;93962501;-1671326033;632618192;-885562045;1179982281;-1505675969;1344906533;-1418551925;1622092278;1701084792;242471559;-1984251903;-1568971862;-1063520265;1591722069;-1959097976;-1601150455;-874166212;-889564662;717605003;-1582378599;-1301052667;1211123575;485189748;-182999148;374766658;1150697026;-738165078;-390496439;960351772;-332421139;71115877;-1747551486;-288197538;2067393244;-402841323;168191432;698976579;-691346957;454158309;419567441;-1655444926;1843518827;-1387150657;-1775972895;1209349907;1737084105;-273997764;2063222132;-629133755;1321145195;-340980602;-64855207;836106865;-384606302;857100345;-616134379;-1192753754;-1534913223;1646103447;-337508797;-104008340;1371554336;1910014402;1731164243;157488784;-1230766726;1651230814;-1801393009;1853249886;-1909629469;-2064890998;-586605120;1029458265;-1567764431;-569878997;-1071722633;1842759325;1870815306;1275367738;-2047480342;699437794;-2078020834;2120915280;1609487567;715455530;-1961002406;-1366381474;1214551640;1682680277;1866914062;-1438763676;1522254727;410589237;1882867230;-2066414372;335577213;-1969515802;-2079897542;1101145964;-914546306;-578950040;-399253994;-1096753521;-660660212;-1198578643;1339175923;-781551297;-1839371394;1105332893;-1928816742;-400816250;1655921312;-452260989;2002840327;447789431;319958765;-658015714;-2019202134;-1586612048;-137582258;706769011;1101838665;827045450;599553857;-2145445088;244597783;1487421271;1630555190;-344172316;-1830139429;-1553867370;-156727033;-755056810;-2131860048;-494346652;1852068823;91308896;725609566;-1111505690;-982815291;1292267944;1836226774;-810066908;-496780978;202956912;603675823;637918661;-10943404;552199869;1297990249;-1519144401;-1727998742;1493519921;-1227758025;-860568373;2118867559;1126222143;-1549971275;-1469719981;-370967157;-1094842937;2081077388;-1045858167;-179155018;-384518151;905350287;-1851803717;571620219;760498291;-480881197;-973785647;838212682;340510526;510321855;-801267485;-852016520;1774211485;39420368;537777206;2107097314;1618664461;210916571;-423959548;631482818;-1040919263;-279241335;-892903760;497369428;1334556795;-290177741;-620998078;1723791759;253979182;2098469877;2033083432;2025527244;-556275368;-1153759308;1554310973;-2109179006;1594713042;-1652347925;-1896234258;1399293819;-1212915145;264979477;2035769098;-26264659;816116738;-1472777223;-1886895409;579752040;1987550252;850378084;-592526232;228677599;-1282752773;-3264037;1636907752;554996081;10747923;1856021975;150743074;1441285143;-284865308;64061770;547700487;2007963302;-518601320;717968026;-1887063740;-1161755710;654757340;624448862;1095845326;1219653475;1112960789;540367258;1430941426;-1573264900;842324047;-1866598839;672477326;-834606497;456739053;2014938441;1820294365;-1127769538;237909957;778195458;-320898672;-493131725;374332760;1492882317;244532839;1469335464;813662131;1904048850;1828753335;1969748325;1462812563;773013089;1263710334;6222118;1806899780;-1306665146;695150693;1034369820;-410885147;-2065109159;-21981403;1688153775;-1834763828;-2034905187;-868895926;-2040902706;760295113;705437415;-801989522;-327259983;340256932;1639347777;676478214;-868392127;-2126595595;1085040460;-101711712;1181203896;-1177629723;1052562025;-385800214;-2127578499;-247860261;-210619237;-1285411717;-1501642238;-1370695642;-901640534;-1139102088;-1435816006;2062624444;733280257;-325264040;815916517;1806401640;106587238;222094010;-1348528385;297616670;-861761020;117428779;2046490308;1520601476;1774880419;2117307057;709856479;658783300;-1019651996;1857641166;-1623434894;-1466106812;1764750271;337867896;1769011978;1878580541;-337505063;55931846;657238908;1968152816;-169076117;-975001150;-619957198;463669432;-1908341507;-643594058;-2026430605;1348524010;-730896925;454931916;416148985;-1578791134;-739712940;-1725329931;204101311;-1062609662;-1691773722;860783264;946450304;1161241387;207536058;3478215;923381087;-305329130;-1353819564;48467194;-497866365;-1191262819;1442954968;-408984143;934531440;1843513070;-1086308879;585900848;-1977125474;-643228730;1005419111;430194483;1169789286;892875109;-1732318651;-897476207;416658129;2090816327;-186559977;-187909452;1699611428;132945605;1386154990;-1021089733;1553010825;1685237703;1771892687;-1665309430;-1471203233;408978895;-1985168698;-1461014828;-475885929;-149644797;184461852;-1631733780;-113049057;1929365839;-1841043271;755994780;1384891379;-572376242;-1822728640;527993133;536302677;-728200547;-1916517795;401821920;777687226;634513383;938837982;-1741204308;-712292839;-888158003;-989731250;1070351745;-997999887;-1220926516;-477621207;-668502217;432615022;341097247;-1817216444;-1580909839;1073812924;-1037427637;-421491456;-2071807233;419582815;835099779;-300811050;1008848942;-622226245;1119083448;2015783992;374250496;417956216;70961961;-1285132279;1021911943;1585993281;1118486430;-946608452;-1704284523;1344252873;908115709;2135579935;636192621;-776174384;533471998;586778067;-154978136;1359740759;1629951629;-1733015859;2121954041;2104107711;-295897115;1345244080;-1738577645;-559564224;1033955967;-1763695458;250221436;-693902564;1091788545;927707887;-712040796;1439001997;1595609215;1364606826;661845780;-755815374;-2034931863;1346096804;-2074100882;-1065691144;654888208;1007146357;778226326;1410374083;1808044267;239070962;-300943249;1387420801;914251343;580430497;1404608152;117575915;1513662704;256310634;-569005681;-1678005121;-1445134348;2053633677;2025466731;-1577911340;-1278866808;-623511374;-1672074119;45321757;1247003680;1061170196;1198754894;-104913407;2054118989;-1781862918;1530368638;-226966082;-707276305;1591871350;331461390;608113940;235882513;-2046843672;-1075932011;-1894925926;1648301914;1170547429;1665497643;-1251944432;-1796010764;-73953480;788544378;1090859788;-1128050928;-145143834;594707390;-728801566;-252193318;1890915838;-834826210;602694736;1275821290;-2078563303;-1397408457;-343458496;1558647263;      };
      mti=156;
     };
    };
    types {
     name=;
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @[0] {
      name="RndInitType";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="OLD_SEED";
	value=0;
	desc="use stored random seed value (recreates same sequence every time)";
       };
       DynEnumItem @[1] {
	name="NEW_SEED";
	value=1;
	desc="generate new random seed (new sequence of random numbers)";
       };
      };
      bits=0;
     };
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="network to train";
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="datatable with training patterns";
     };
     ProgVar @[2] {
      name="no_prompts";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="If train is called by other programs (e.g., Batch), they should set this to true -- otherwise it is reset to false in Init";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=500;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="maximum number of epochs to run";
     };
     ProgVar @[1] {
      name="epoch";
      var_type=T_Int;
      int_val=22;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="current epoch -- local copy, which is used to update network's epoch counter";
     };
     ProgVar @[2] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=Network::TrainMode;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="TRAIN = update weights (learn), TEST = just record network's responses but don't learn";
     };
     ProgVar @[3] {
      name="rnd_init";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects[0].programs.gp[0][1].types[0]$25$;
       value=0;
      };
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="how to initialize the random numbers when the Init button is pressed";
     };
     ProgVar @[4] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="stopping criterion -- when error measure (count of trials with a non-zero error by defult)
goes <= this value, stop training (set to -1 to disable stopping criterion, and always train to max_epoch epochs)";
     };
     ProgVar @[5] {
      name="rnd_seed";
      var_type=T_Object;
      object_type=RndSeed;
      object_val=.projects[0].programs.gp[0][1].objs[0]$26$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc="random seed that is used at start of training -- if OldSeed is called";
     };
     ProgVar @[6] {
      name="train_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].train_time$27$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="records time used to train network (object lives on network -- this is a pointer to it)";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=;
      result_var=.projects[0].programs.gp[0][1].args[2]$28$;
      expr {
       expr="false";
       flags=;
       var_expr="false";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc="check network to make sure it is ready to be run";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].args[0]$29$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[2] {
      desc="get our pointer to the network training time object";
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[6]$30$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     IfElse @[3] {
      desc="initialize random seed (either old or new)";
      flags=;
      cond {
       expr="rnd_init == OLD_SEED";
       flags=;
       var_expr="$#0#$ == OLD_SEED";
       vars {
       };
       var_names{ rnd_init;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="restore previous random seed (all runs produce same results)";
	flags=;
	result_var=NULL;
	obj=.projects[0].programs.gp[0][1].vars[5]$31$;
	method=RndSeed::OldSeed;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="new random numbers each time";
	flags=;
	result_var=NULL;
	obj=$31$;
	method=RndSeed::NewSeed;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
     };
     IfGuiPrompt @[4] {
      desc="don't initialize weights without checking";
      flags=;
      prompt="Do you want to Initialize Network Weights";
      yes_label="Yes";
      no_label="No";
      yes_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=;
	result_var=NULL;
	obj=$29$;
	method=Network::Init_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       PrintExpr @[1] {
	desc=;
	flags=;
	expr {
	 expr="network.name << \" Weights Initialized\"";
	 flags=;
	 var_expr="$#0#$.name << \" Weights Initialized\"";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc="get our pointer to the network training time object";
      flags=;
      result_var=$30$;
      expr {
       expr="network.train_time";
       flags=;
       var_expr="$#0#$.train_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc="start timer to keep track of how long it takes to run entire training run";
      flags=;
      result_var=NULL;
      obj=$30$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MemberAssign @[2] {
      desc="set network's training mode to our local value";
      flags=;
      obj=$29$;
      path="train_mode";
      expr {
       expr="train_mode";
       flags=;
       var_expr="$#0#$";
       vars {
       };
       var_names{ train_mode;       };
       bad_vars{        };
      };
      update_after=0;
     };
     IfElse @[3] {
      desc=;
      flags=;
      cond {
       expr="no_prompts";
       flags=;
       var_expr="$#0#$";
       vars {
       };
       var_names{ no_prompts;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=;
	result_var=NULL;
	obj=$29$;
	method=Network::Init_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       PrintExpr @[1] {
	desc=;
	flags=;
	expr {
	 expr="network.name << \" Weights Initialized\"";
	 flags=;
	 var_expr="$#0#$.name << \" Weights Initialized\"";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     AssignExpr @[4] {
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=;
      result_var=.projects[0].programs.gp[0][1].vars[1]$32$;
      expr {
       expr="network.epoch";
       flags=;
       var_expr="$#0#$.epoch";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     WhileLoop @[5] {
      desc="main loop over epochs of training";
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc="run the epoch program (one epoch), passes our network and input_data";
	flags=;
	target=.projects[0].programs.gp[0][2]$33$;
	targ_ld_init="*LeabraEpoch*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the epoch counter (locally and on network)";
	flags=;
	network_var=$29$;
	local_ctr_var=$32$;
	counter=Network::epoch;
       };
       IfBreak @[2] {
	desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here instead)";
	flags=;
	cond {
	 expr="network.cnt_err <= err_stopcrit";
	 flags=;
	 var_expr="$#0#$.cnt_err <= $#1#$";
	 vars {
	 };
	 var_names{ network;err_stopcrit;	 };
	 bad_vars{ 	 };
	};
       };
      };
      test {
       expr="epoch < max_epoch";
       flags=;
       var_expr="$#0#$ < $#1#$";
       vars {
       };
       var_names{ epoch;max_epoch;       };
       bad_vars{        };
      };
     };
     MethodCall @[6] {
      desc="stop the timer -- time elapsed is now recorded in this object, and can be displayed or recorded to a data table";
      flags=;
      result_var=NULL;
      obj=$30$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[7] {
      desc=;
      flags=;
      target=.projects[0].programs[1]$34$;
      targ_ld_init="*ActBasedRField*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=bool;
	type="bool";
	name="final_rf";
	required=1;
	def_val=;
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[2] {
    name="LeabraEpoch";
    tags="Leabra, Std";
    desc="iterates over all of the items in a data table and calls LeabraTrial process on them";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="network to operate on";
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="table of patterns to present to the network, one row at a time";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="data_loop_order";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=DataLoop::Order;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="controls the order in which events (rows of the input data datatable) are presented to the network
(SEQUENTIAL, PERMUTED, RANDOM)";
     };
     ProgVar @[1] {
      name="trial";
      var_type=T_Int;
      int_val=5;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="current trial (event) within the epoch -- increments automatically";
     };
     ProgVar @[2] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$6$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data";
     };
     ProgVar @[3] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].epoch_time$35$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="timer to record time required to perform one epoch of processing (object is on network -- this is a pointer to it)";
     };
     ProgVar @[4] {
      name="data_loop_index";
      var_type=T_Int;
      int_val=6;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="index counter for the looping over items in the input_data datatable (not always the same as trial counter, depending on distributed memory computation)";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter (local variable and in the network)";
      flags=;
      network_var=.projects[0].programs.gp[0][2].args[0]$36$;
      local_ctr_var=.projects[0].programs.gp[0][2].vars[1]$37$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc="get pointer to epoch timer object on network";
      flags=;
      result_var=.projects[0].programs.gp[0][2].vars[3]$38$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter (local variable and in the network)";
      flags=;
      network_var=$36$;
      local_ctr_var=$37$;
      counter=Network::trial;
     };
     AssignExpr @[1] {
      desc="get pointer to epoch timer object on network";
      flags=;
      result_var=$38$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[2] {
      desc="start the epoch timer to record computation time per epoch";
      flags=;
      result_var=NULL;
      obj=$38$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn flags OFF to accumulate trial data across entire training run)";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][2].vars[2]$39$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetDataLoop @[4] {
      desc="iterates over the events/rows of input_data, according to data_loop_order variable";
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc="run the trial program, passing network and input_data";
	flags=;
	target=.projects[0].programs.gp[0][3]$40$;
	targ_ld_init="*LeabraTrial*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       IfElse @[1] {
	desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
	flags=;
	cond {
	 expr="network.Compute_Weights_Test(trial+1)";
	 flags=;
	 var_expr="$#0#$.Compute_Weights_Test($#1#$+1)";
	 vars {
	 };
	 var_names{ network;trial;	 };
	 bad_vars{ 	 };
	};
	true_code {
	 name=;
	 el_typ=MethodCall;
	 el_def=0;
	 MethodCall @[0] {
	  desc="update the weight values based on changes computed by trial program";
	  flags=;
	  result_var=NULL;
	  obj=$36$;
	  method=Network::Compute_Weights;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
	false_code {
	 name=;
	 el_typ=ProgEl;
	 el_def=0;
	};
       };
      };
      data_var=.projects[0].programs.gp[0][2].args[1]$41$;
      index_var=.projects[0].programs.gp[0][2].vars[4]$42$;
      order_var=.projects[0].programs.gp[0][2].vars[0]$43$;
      order=PERMUTED;
      item_idx_list{ 2;0;1;4;3;5;      };
      dmem_nprocs=1;
      dmem_this_proc=0;
     };
     IfElse @[5] {
      desc="if full batch mode, update only at end of epoch";
      flags=;
      cond {
       expr="network.wt_update == Network::BATCH";
       flags=;
       var_expr="$#0#$.wt_update == Network::BATCH";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="final update of weights based on accumulated changes";
	flags=;
	result_var=NULL;
	obj=$36$;
	method=Network::Compute_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     MethodCall @[6] {
      desc="network accumulates some core statistics over the epoch -- this finalizes that process and computes summary stats";
      flags=;
      result_var=NULL;
      obj=$36$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[7] {
      desc="run program that records data from network and possibly other sources about the epoch";
      flags=;
      target=.projects[0].programs.gp[0][8]$44$;
      targ_ld_init="*LeabraEpochMonitor*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[8] {
      desc="done with the computation in the epoch -- record time it took";
      flags=;
      result_var=NULL;
      obj=$38$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[3] {
    name="LeabraTrial";
    tags="Leabra, Std";
    desc="Leabra processing of a single input/toutput event or external information: typically runs a minus and a plus phase, then learns (unless testing)";
    flags=SHOW_STEP;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="network to operate on -- typically set by higher-level calling programs";
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="datatable containing training input/output patterns";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="phase_no";
      var_type=T_Int;
      int_val=2;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="local phase counting variable (0 is typically minus phase, 1 is typically plus -- depends on network settings)";
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="determines whether to update any network view displays after trial is completed";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize the local phase_no counter, and corresponding network one";
      flags=;
      network_var=.projects[0].programs.gp[0][3].args[0]$45$;
      local_ctr_var=.projects[0].programs.gp[0][3].vars[0]$46$;
      counter=LeabraNetwork::phase_no;
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize the local phase_no counter, and corresponding network one";
      flags=;
      network_var=$45$;
      local_ctr_var=$46$;
      counter=LeabraNetwork::phase_no;
     };
     MethodCall @[1] {
      desc="initializes various counters at start of trial";
      flags=;
      result_var=NULL;
      obj=$45$;
      method=LeabraNetwork::Trial_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WhileLoop @[2] {
      desc="loop over phases of settling in the network";
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc="run the settle program (which iterates over cyles of network activation updating) for each phase";
	flags=;
	target=$22$;
	targ_ld_init="*LeabraSettle*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ input_data;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment the phase number (also on network)";
	flags=;
	network_var=$45$;
	local_ctr_var=$46$;
	counter=LeabraNetwork::phase_no;
       };
       MethodCall @[2] {
	desc="increments other phase state information to prepare for the next phase of settling";
	flags=;
	result_var=NULL;
	obj=$45$;
	method=LeabraNetwork::Trial_UpdatePhase;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      test {
       expr="phase_no < network.phase_max";
       flags=;
       var_expr="$#0#$ < $#1#$.phase_max";
       vars {
       };
       var_names{ phase_no;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[3] {
      desc="after the trial is over, do final computations: Compute_dWt (learn weights), compute stats";
      flags=;
      result_var=NULL;
      obj=$45$;
      method=LeabraNetwork::Trial_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[4] {
      desc="records data about the trial-level processing to a datatable for graphing/processing";
      flags=;
      target=.projects[0].programs.gp[0][7]$47$;
      targ_ld_init="*LeabraTrialMonitor*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     NetUpdateView @[5] {
      desc="update the network view(s) (only if update_net_view is true)";
      flags=;
      network_var=$45$;
      update_var=.projects[0].programs.gp[0][3].vars[1]$48$;
     };
    };
   };
   Program @[4] {
    name="LeabraSettle";
    tags="Leabra, Std";
    desc="iterates over cycles of updating until network has settled into a stable state, or output activations have exceeded a threshold";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=15;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="current cycle of settling (local loop counter)";
     };
     ProgVar @[1] {
      name="min_cycles";
      var_type=T_Int;
      int_val=15;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="IMPORTANT: this value is obtained from the network min_cycles and min_cycles_phase2 -- change the value on the network object, not here in this program!
sets the minimum number of cycles to settle for, regardless of network state changes, etc";
     };
     ProgVar @[2] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="if true, will update network views at end of settling";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize local cycle counter and corresponding counter on network";
      flags=;
      network_var=.projects[0].programs.gp[0][4].args[0]$49$;
      local_ctr_var=.projects[0].programs.gp[0][4].vars[0]$50$;
      counter=Network::cycle;
     };
    };
    prog_code {
     name=;
     el_typ=NetCounterInit;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize local cycle counter and corresponding counter on network";
      flags=;
      network_var=$49$;
      local_ctr_var=$50$;
      counter=Network::cycle;
     };
     MethodCall @[1] {
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=;
      result_var=NULL;
      obj=$49$;
      method=Network::Init_InputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[2] {
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=;
      target=.projects[0].programs.gp[0][6]$51$;
      targ_ld_init="*ApplyInputs*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="initializes various counters at start of settling";
      flags=;
      result_var=NULL;
      obj=$49$;
      method=LeabraNetwork::Settle_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     IfElse @[4] {
      desc="get appropriate min_cycles value depending on which phase we're in";
      flags=;
      cond {
       expr="network.phase_no <= 1";
       flags=;
       var_expr="$#0#$.phase_no <= 1";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AssignExpr @[0] {
	desc="get minimum number of cycles from parameter on network (which is where you should change this value!)";
	flags=;
	result_var=.projects[0].programs.gp[0][4].vars[1]$52$;
	expr {
	 expr="network.min_cycles";
	 flags=;
	 var_expr="$#0#$.min_cycles";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       AssignExpr @[0] {
	desc="get minimum number of cycles from parameter on network (which is where you should change this value!)";
	flags=;
	result_var=$52$;
	expr {
	 expr="network.min_cycles_phase2";
	 flags=;
	 var_expr="$#0#$.min_cycles_phase2";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     WhileLoop @[5] {
      desc="the main loop over cycles of updating";
      flags=;
      loop_code {
       name=;
       el_typ=ProgramCall;
       el_def=0;
       ProgramCall @[0] {
	desc="run the cycle program, which computes one cycle of activations";
	flags=;
	target=.projects[0].programs.gp[0][5]$53$;
	targ_ld_init="*LeabraCycle*";
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	   flags=;
	   var_expr="$#0#$";
	   vars {
	   };
	   var_names{ network;	   };
	   bad_vars{ 	   };
	  };
	 };
	};
       };
       NetCounterIncr @[1] {
	desc="increment cycle counter (also on network)";
	flags=;
	network_var=$49$;
	local_ctr_var=$50$;
	counter=Network::cycle;
       };
       IfContinue @[2] {
	desc="avoid subsequent stopping criteria if below min_cycles";
	flags=;
	cond {
	 expr="cycle < min_cycles";
	 flags=;
	 var_expr="$#0#$ < $#1#$";
	 vars {
	 };
	 var_names{ cycle;min_cycles;	 };
	 bad_vars{ 	 };
	};
       };
       IfBreak @[3] {
	desc="stopping criterion for settling: based either on maximum change in activation (maxda) or on the maximum activation value in the network getting over threshold (which ever comes first).  Set either parmeter to values that are always false (e.g., trg_max_act_stopcrit = -1) to eliminate associated source of criterion for stopping settling.";
	flags=;
	cond {
	 expr="(network.maxda < network.maxda_stopcrit) ||
 (network.trg_max_act > network.trg_max_act_stopcrit)";
	 flags=;
	 var_expr="($#0#$.maxda < $#0#$.maxda_stopcrit) ||
 ($#0#$.trg_max_act > $#0#$.trg_max_act_stopcrit)";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
      test {
       expr="cycle < network.cycle_max";
       flags=;
       var_expr="$#0#$ < $#1#$.cycle_max";
       vars {
       };
       var_names{ cycle;network;       };
       bad_vars{        };
      };
     };
     MethodCall @[6] {
      desc="perform final operations at end of settling (storing final activations, etc)";
      flags=;
      result_var=NULL;
      obj=$49$;
      method=LeabraNetwork::Settle_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     IfElse @[7] {
      desc="only run trial-level statistics in minus phase (otherwise network may have correct answer clamped on!).  IMPORTANT: this assumes that you've got target activation values for output layers already
presented in the minus phase -- if this is not the case (values are computed on the fly), you may want to run this instead at the start of the plus phase, after ApplyInputs";
      flags=;
      cond {
       expr="network.phase == LeabraNetwork::MINUS_PHASE";
       flags=;
       var_expr="$#0#$.phase == LeabraNetwork::MINUS_PHASE";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=MethodCall;
       el_def=0;
       MethodCall @[0] {
	desc="compute trial-level statistics";
	flags=;
	result_var=NULL;
	obj=$49$;
	method=LeabraNetwork::Compute_TrialStats;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     IfElse @[8] {
      desc="this stat must be called in plus phase when reward information is avail";
      flags=;
      cond {
       expr="network.phase_no == 1";
       flags=;
       var_expr="$#0#$.phase_no == 1";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
      true_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
       MethodCall @[0] {
	desc="get external reward information";
	flags=;
	result_var=NULL;
	obj=$49$;
	method=LeabraNetwork::Compute_ExtRew;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      false_code {
       name=;
       el_typ=ProgEl;
       el_def=0;
      };
     };
     NetUpdateView @[9] {
      desc="update network views, if update_net_view == true";
      flags=;
      network_var=$49$;
      update_var=.projects[0].programs.gp[0][4].vars[2]$54$;
     };
    };
   };
   Program @[5] {
    name="LeabraCycle";
    tags="Leabra, Std";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="this does all the standard leabra processing for one cycle of activation updating";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][5].args[0]$55$;
      method=LeabraNetwork::Cycle_Run;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetUpdateView @[1] {
      desc="update network views if update_net_view == true";
      flags=;
      network_var=$55$;
      update_var=.projects[0].programs.gp[0][5].vars[0]$56$;
     };
    };
   };
   Program @[6] {
    name="ApplyInputs";
    tags="Network, InputData, Apply";
    desc="apply the current input data to the network as external input and target values";
    flags=;
    objs {
     name=;
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$2$;
      network=$1$;
      layer_data {
       name=;
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	chan_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=EXT;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[1] {
	chan_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=TARG;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[2] {
	chan_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	ext_flags=;
	noise {name="": type=NONE: mean=0: var=0.5: par=1: };
       };
      };
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="network to apply inputs to -- typically set by calling program";
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$2$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="input datatable containing input/output patterns";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="LayerWriter_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.projects[0].programs.gp[0][6].objs[0]$57$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc="this is a pointer to the LayerWriter object in objs -- edit that object to determine how information is presented to the network";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][6].vars[0]$58$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataBlock_ptr;
	type="DataBlock*";
	name="db";
	required=0;
	def_val=;
	expr {
	 expr="input_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ input_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc="check the configuration of the layer writer -- will emit warnings and errors for missing or misconfigured items";
      flags=;
      result_var=NULL;
      obj=$58$;
      method=taList_impl::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=;
      result_var=NULL;
      obj=$58$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[7] {
    name="LeabraTrialMonitor";
    tags="Leabra, Std, Monitor";
    desc="monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis ";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="phase_no";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="phase_no";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="cycle";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="minus_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[9] {
	name="Output_act";
	computed=0;
	object_type=LeabraLayer;
	object=.projects[0].networks[0].layers[2]$59$;
	variable="act";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="SimpleMathSpec": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="SimpleMathSpec": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="SimpleMathSpec": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=$6$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="network to record data from";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$6$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="data table to record trial-level data to (this program writes new data to this table!)";
     };
     ProgVar @[1] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][7].objs[0]$60$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="set the network and datatable for the NetMonitor";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[1]$61$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[1] {
      desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
      flags=;
      result_var=NULL;
      obj=$61$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc="update the monitor items and data schema based on current settings of the NetMonitor object";
      flags=;
      result_var=NULL;
      obj=$61$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[0]$62$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data from the network and other sources -- this does the main work";
      flags=;
      result_var=NULL;
      obj=$61$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[2] {
      desc="update views and other things after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$62$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[3] {
      desc="only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].args[0]$63$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	expr {
	 expr="trial_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ trial_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	expr {
	 expr="1";
	 flags=;
	 var_expr="1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     ProgramCall @[4] {
      desc=;
      flags=;
      target=$34$;
      targ_ld_init="*ActBasedRField*";
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=bool;
	type="bool";
	name="final_rf";
	required=1;
	def_val=;
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
   Program @[8] {
    name="LeabraEpochMonitor";
    tags="Leabra, Std, Monitor";
    desc="monitor epoch-level data from the network to a datatable (EpochOutputData typically) for use in graphing and viewing and further analysis";
    flags=;
    objs {
     name=;
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name=;
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$1$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="Hidden_Fm_Input_r_wt";
	computed=0;
	object_type=LeabraPrjn;
	object=.projects[0].networks[0].layers[1].projections[0]$64$;
	variable="r.wt";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	pre_proc_1 {name="SimpleMathSpec": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="SimpleMathSpec": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="SimpleMathSpec": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$1$;
      data=$5$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="network to get data from";
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$5$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="data table to write the epoch data to";
     };
     ProgVar @[1] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][8].objs[0]$65$;
      objs_ptr=1;
      flags=NULL_CHECK;
      desc="network monitor object that contains full specs for what to record and where to get it";
     };
     ProgVar @[2] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$35$;
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="pointer to the network's epoch-level timer, to record how long it took to process an epoch";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=AssignExpr;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     AssignExpr @[0] {
      desc="get the epoch timer from current network";
      flags=;
      result_var=.projects[0].programs.gp[0][8].vars[2]$66$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[1] {
      desc="set data and network on NetMonitor object";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[1]$67$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=0;
	def_val=;
	expr {
	 expr="epoch_mon_data";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ epoch_mon_data;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=0;
	def_val=;
	expr {
	 expr="network";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[2] {
      desc="check configuration and emit errors/warnings for problems";
      flags=;
      result_var=NULL;
      obj=$67$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[3] {
      desc="update the monitor items and data schema based on current settings of NetMonitor";
      flags=;
      result_var=NULL;
      obj=$67$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	 flags=;
	 var_expr="true";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[0]$68$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data and stor it into the data table -- this does the main job here";
      flags=;
      result_var=NULL;
      obj=$67$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     AssignExpr @[2] {
      desc="get the epoch timer from current network";
      flags=;
      result_var=$66$;
      expr {
       expr="network.epoch_time";
       flags=;
       var_expr="$#0#$.epoch_time";
       vars {
       };
       var_names{ network;       };
       bad_vars{        };
      };
     };
     MethodCall @[3] {
      desc="set the total time to compute the epoch (epoch_time_tot -- wall clock time) to time used data from network timer";
      flags=;
      result_var=NULL;
      obj=$68$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="epoch_timer.used.GetTotSecs()";
	 flags=;
	 var_expr="$#0#$.used.GetTotSecs()";
	 vars {
	 };
	 var_names{ epoch_timer;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"epoch_time_tot\"";
	 flags=;
	 var_expr="\"epoch_time_tot\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[4] {
      desc="set the user process time (cpu time for this process, epoch_time_usr) to time used data from network timer";
      flags=;
      result_var=NULL;
      obj=$68$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="const Variant&";
	name="val";
	required=0;
	def_val=;
	expr {
	 expr="epoch_timer.used.GetUsrSecs()";
	 flags=;
	 var_expr="$#0#$.used.GetUsrSecs()";
	 vars {
	 };
	 var_names{ epoch_timer;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="col_name";
	required=0;
	def_val="\"\"";
	expr {
	 expr="\"epoch_time_usr\"";
	 flags=;
	 var_expr="\"epoch_time_usr\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=0;
	def_val=;
	expr {
	 expr="-1";
	 flags=;
	 var_expr="-1";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc="update after writing new data to monitor data table";
      flags=;
      result_var=NULL;
      obj=$68$;
      method=DataBlock::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
   };
   Program @[9] {
    name="SaveWeights";
    tags="Network, Weights";
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    flags=;
    objs {
     name=;
     el_typ=taOBase;
     el_def=0;
    };
    types {
     name=;
     el_typ=ProgType;
     el_def=0;
    };
    args {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$1$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc=;
     };
    };
    vars {
     name=;
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="tag";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided tag (startup script will set this!)";
     };
     ProgVar @[1] {
      name="wts_subdir";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK;
      desc="user-provided subdirectory to save weights in";
     };
     ProgVar @[2] {
      name="fname";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK;
      desc="final generated file name -- do not edit!";
     };
     ProgVar @[3] {
      name="epoch_str";
      var_type=T_String;
      string_val="0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of epoch with leading zeros";
     };
     ProgVar @[4] {
      name="batch_str";
      var_type=T_String;
      string_val="03";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="string rep of batch with leading zeros";
     };
     ProgVar @[5] {
      name="final_tag";
      var_type=T_String;
      string_val=".03_0036";
      objs_ptr=0;
      flags=NULL_CHECK;
      desc="batch + epoch";
     };
    };
    functions {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    load_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    init_code {
     name=;
     el_typ=ProgEl;
     el_def=0;
    };
    prog_code {
     name=;
     el_typ=MethodCall;
     el_def=0;
     IfReturn @[0] {
      desc="do not save if not the first dmem process (only relevant for dmem = distributed memory processing)";
      flags=;
      cond {
       expr="taMisc::dmem_proc > 0";
       flags=;
       var_expr="taMisc::dmem_proc > 0";
       vars {
       };
       var_names{        };
       bad_vars{        };
      };
     };
     MiscCall @[1] {
      desc="get current batch counter for file name, with leading zeros to length 3";
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[4]$69$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.batch";
	 flags=;
	 var_expr="$#0#$.batch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="2";
	 flags=;
	 var_expr="2";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MiscCall @[2] {
      desc="get current epoch counter with leading zeros to length 4";
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[3]$70$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=0;
	def_val=;
	expr {
	 expr="network.epoch";
	 flags=;
	 var_expr="$#0#$.epoch";
	 vars {
	 };
	 var_names{ network;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=0;
	def_val=;
	expr {
	 expr="4";
	 flags=;
	 var_expr="4";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     AssignExpr @[3] {
      desc="string 'tag' to identify the batch, epoch, and other user id info for the weights";
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[5]$71$;
      expr {
       expr="tag + \".\" + batch_str + \"_\" + epoch_str";
       flags=;
       var_expr="$#0#$ + \".\" + batch_str + \"_\" + epoch_str";
       vars {
       };
       var_names{ tag;       };
       bad_vars{        };
      };
     };
     MethodCall @[4] {
      desc="get a file name based on the project's current file name, for saving the weights";
      flags=;
      result_var=.projects[0].programs.gp[0][9].vars[2]$72$;
      obj=.projects[0].programs.gp[0][9].args[0]$73$;
      method=taBase::GetFileNameFmProject;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="ext";
	required=1;
	def_val=;
	expr {
	 expr="\".wts.gz\"";
	 flags=;
	 var_expr="\".wts.gz\"";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="tag";
	required=0;
	def_val="\"\"";
	expr {
	 expr="final_tag";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ final_tag;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[2] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="subdir";
	required=0;
	def_val="\"\"";
	expr {
	 expr="wts_subdir";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ wts_subdir;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="dmem_proc_no";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	 flags=;
	 var_expr="false";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
     MethodCall @[5] {
      desc="save the weights to that file name";
      flags=;
      result_var=NULL;
      obj=$73$;
      method=Network::SaveWeights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="const taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	expr {
	 expr="fname";
	 flags=;
	 var_expr="$#0#$";
	 vars {
	 };
	 var_names{ fname;	 };
	 bad_vars{ 	 };
	};
       };
       ProgArg @[1] {
	arg_type=Network::WtSaveFormat;
	type="Network::WtSaveFormat";
	name="fmt";
	required=0;
	def_val="Network::NET_FMT";
	expr {
	 expr="Network::NET_FMT";
	 flags=;
	 var_expr="Network::NET_FMT";
	 vars {
	 };
	 var_names{ 	 };
	 bad_vars{ 	 };
	};
       };
      };
     };
    };
   };
  };
 };
 viewers {
  name=;
  el_typ=TopLevelViewer;
  el_def=0;
  MainWindowViewer @[0] {
   m_data=.projects[0]$74$;
   name="DefaultProjectBrowser";
   visible=1;
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   toolbars {
    name=;
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     m_data=NULL;
     name="Application";
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name=;
    el_typ=FrameViewer;
    el_def=0;
    tabBrowseViewer @[0] {
     m_data=NULL;
     name="Tree";
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$74$;
    };
    PanelViewer @[1] {
     m_data=NULL;
     name="Panels";
     visible=1;
    };
    T3DataViewer @[2] {
     m_data=NULL;
     name="DefaultViewer";
     visible=1;
     frames {
      name=;
      el_typ=T3DataViewFrame;
      el_def=0;
      T3DataViewFrame @[0] {
       m_data=NULL;
       name="DefaultFrame";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 NetView @[0] {
	  m_data=$1$;
FloatTransform @*(.m_transform) {scale={x=0.6753985: y=0.6753985: z=0.6753985: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  main_xform {scale={x=0.6753985: y=0.6753985: z=0.6753985: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  lay_disp_modes{ Input=0;Hidden=0;Output=0;	  };
	  scale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs[0]$75$;
	   auto_scale=0;
	  };
	  scale_ranges {
	   name=;
	   el_typ=ScaleRange;
	   el_def=0;
	   ScaleRange @[0] {
	    name="act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[1] {
	    name="targ";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[2] {
	    name="net";
	    auto_scale=0;
	    min=-0.5904;
	    max=0.5904;
	   };
	   ScaleRange @[3] {
	    name="bias_wt";
	    auto_scale=0;
	    min=-0.1503;
	    max=0.1503;
	   };
	   ScaleRange @[4] {
	    name="bias.wt";
	    auto_scale=0;
	    min=-0.4302;
	    max=0.4302;
	   };
	   ScaleRange @[5] {
	    name="r.wt";
	    auto_scale=0;
	    min=-0.81;
	    max=0.81;
	   };
	   ScaleRange @[6] {
	    name="anal1";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[7] {
	    name="anal2";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[8] {
	    name="wt_prjn";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	  };
	  display=1;
	  lay_mv=1;
	  ordered_uvg_list{ wt_prjn;	  };
	  unit_disp_mode=UDM_BLOCK;
	  unit_text_disp=UTD_NONE;
	  max_size {x=5: y=7: z=3: };
	  font_sizes {
	   net_name=0.05;
	   net_vals=0.05;
	   layer=0.04;
	   layer_vals=0.03;
	   prjn=0.01;
	   unit=0.02;
	   un_nm_len=3;
	  };
	  view_params {
	   xy_square=0;
	   unit_spacing=0.05;
	   prjn_disp=L_R_F;
	   prjn_name=0;
	   prjn_width=0.002;
	   prjn_trans=0.5;
	   lay_trans=0.5;
	   unit_trans=0.6;
	  };
	  wt_line_disp=1;
	  wt_line_width=4;
	  wt_line_thr=0.5;
	  wt_line_swt=1;
	  wt_prjn_lay=NULL;
	 };
	 GridTableView @[1] {
	  m_data=$6$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=-0.9999813: y=-0.0055778: z=0.00252403: rot=0.8499027: }: translate={x=0.8457018: y=-0.06940984: z=0.08394016: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].data.gp[1][0].data[0]$76$;
	    m_transform=NULL;
	    name="batch";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].data.gp[1][0].data[1]$77$;
	    m_transform=NULL;
	    name="epoch";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].data.gp[1][0].data[2]$78$;
	    m_transform=NULL;
	    name="trial";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[3] {
	    m_data=.projects[0].data.gp[1][0].data[3]$79$;
	    m_transform=NULL;
	    name="trial_name";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[4] {
	    m_data=.projects[0].data.gp[1][0].data[4]$80$;
	    m_transform=NULL;
	    name="group_name";
	    visible=0;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[5] {
	    m_data=.projects[0].data.gp[1][0].data[5]$81$;
	    m_transform=NULL;
	    name="phase_no";
	    visible=0;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[6] {
	    m_data=.projects[0].data.gp[1][0].data[6]$82$;
	    m_transform=NULL;
	    name="minus_cycles";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[7] {
	    m_data=.projects[0].data.gp[1][0].data[7]$83$;
	    m_transform=NULL;
	    name="sse";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[8] {
	    m_data=.projects[0].data.gp[1][0].data[8]$84$;
	    m_transform=NULL;
	    name="ext_rew";
	    visible=0;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[9] {
	    m_data=.projects[0].data.gp[1][0].data[9]$85$;
	    m_transform=NULL;
	    name="Output_act";
	    visible=1;
	    text_width=5;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=-0.9999813: y=-0.0055778: z=0.00252403: rot=0.8499027: }: translate={x=0.8457018: y=-0.06940984: z=0.08394016: }: };
	  view_rows=6;
	  view_range {min=0: max=5: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=5;
	  col_range {min=2: max=6: };
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$75$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0.2;
	  mat_rot=45;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.05: max=0.1: };
	 };
	 GridTableView @[2] {
	  m_data=$5$;
FloatTransform @*(.m_transform) {scale={x=0.8087503: y=0.80875: z=0.80875: }: rotate={x=-0.9999999: y=0: z=0: rot=0.4634896: }: translate={x=0.9402148: y=0.7504291: z=-0.673673: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].data.gp[1][1].data[0]$86$;
	    m_transform=NULL;
	    name="batch";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].data.gp[1][1].data[1]$87$;
	    m_transform=NULL;
	    name="epoch";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].data.gp[1][1].data[2]$88$;
	    m_transform=NULL;
	    name="avg_sse";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[3] {
	    m_data=.projects[0].data.gp[1][1].data[3]$89$;
	    m_transform=NULL;
	    name="cnt_err";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[4] {
	    m_data=.projects[0].data.gp[1][1].data[4]$90$;
	    m_transform=NULL;
	    name="avg_ext_rew";
	    visible=0;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[5] {
	    m_data=.projects[0].data.gp[1][1].data[5]$91$;
	    m_transform=NULL;
	    name="avg_cycles";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[6] {
	    m_data=.projects[0].data.gp[1][1].data[6]$92$;
	    m_transform=NULL;
	    name="epoch_time_tot";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[7] {
	    m_data=.projects[0].data.gp[1][1].data[7]$93$;
	    m_transform=NULL;
	    name="epoch_time_usr";
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[8] {
	    m_data=.projects[0].data.gp[1][1].data[8]$94$;
	    m_transform=NULL;
	    name="Hidden_Fm_Input_r_wt";
	    visible=1;
	    text_width=5;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=0.8087503: y=0.80875: z=0.80875: }: rotate={x=-0.9999999: y=0: z=0: rot=0.4634896: }: translate={x=0.9402148: y=0.7504291: z=-0.673673: }: };
	  view_rows=1;
	  view_range {min=5: max=5: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=1;
	  col_range {min=7: max=7: };
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$75$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0.2;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	 };
	 GraphTableView @[3] {
	  m_data=$5$;
FloatTransform @*(.m_transform) {scale={x=0.4119503: y=0.4119501: z=0.4119501: }: rotate={x=-1.000219: y=0: z=0: rot=0.005980202: }: translate={x=0.2203933: y=0.9595687: z=0.002735832: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=$86$;
	    m_transform=NULL;
	    name="batch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=$87$;
	    m_transform=NULL;
	    name="epoch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=$88$;
	    m_transform=NULL;
	    name="avg_sse";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=$89$;
	    m_transform=NULL;
	    name="cnt_err";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    m_data=$90$;
	    m_transform=NULL;
	    name="avg_ext_rew";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    m_data=$91$;
	    m_transform=NULL;
	    name="avg_cycles";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    m_data=$92$;
	    m_transform=NULL;
	    name="epoch_time_tot";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    m_data=$93$;
	    m_transform=NULL;
	    name="epoch_time_usr";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    m_data=$94$;
	    m_transform=NULL;
	    name="Hidden_Fm_Input_r_wt";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=0.4119503: y=0.4119501: z=0.4119501: }: rotate={x=-1.000219: y=0: z=0: rot=0.005980202: }: translate={x=0.2203933: y=0.9595687: z=0.002735832: }: };
	  view_rows=10000;
	  view_range {min=0: max=21: };
	  display_on=1;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="epoch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=21: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=21: };
	   range {min=0: max=21: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="batch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-07: max=6e-07: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="avg_sse";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=5.822705: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=5.822705: };
	   range {min=0: max=5.822705: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=LINE;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=VALUE_COLOR;
	  negative_draw=0;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=-1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$75$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=0.2978249: y=0.7716858: z=0.8988129: };
       camera_orient {x=-0.9679029: y=-0.2512102: z=0.00793116: rot=0.3947497: };
       camera_focdist=1.393428;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[1] {
       m_data=NULL;
       name="EpochOutputData";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GraphTableView @[0] {
	  m_data=$5$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    m_data=$86$;
	    m_transform=NULL;
	    name="batch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    m_data=$87$;
	    m_transform=NULL;
	    name="epoch";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    m_data=$88$;
	    m_transform=NULL;
	    name="avg_sse";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    m_data=$89$;
	    m_transform=NULL;
	    name="cnt_err";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    m_data=$90$;
	    m_transform=NULL;
	    name="avg_ext_rew";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    m_data=$91$;
	    m_transform=NULL;
	    name="avg_cycles";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    m_data=$92$;
	    m_transform=NULL;
	    name="epoch_time_tot";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    m_data=$93$;
	    m_transform=NULL;
	    name="epoch_time_usr";
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=21: };
	  display_on=1;
	  manip_ctrl_on=1;
	  x_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="epoch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=21: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=21: };
	   range {min=0: max=21: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="batch";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-07: max=6e-07: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="avg_sse";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=5.822705: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=5.822705: };
	   range {min=0: max=5.822705: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  plot_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	  };
	  plot_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	  };
	  plot_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="green": r=0: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	  };
	  plot_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   color {name="violet": r=0.9333333: g=0.509804: b=0.9333333: a=1: desc="": };
	   data_range {min=0: max=1: };
	   range {min=0: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	  };
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  graph_type=XY;
	  plot_style=LINE;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  color_mode=VALUE_COLOR;
	  negative_draw=0;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  label_spacing=-1;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  err_1 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_2 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_3 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_4 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_5 {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name=;
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$75$;
	   auto_scale=0;
	  };
	  raster_axis {
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  width=1;
	  depth=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       camera_pos {x=1.465061: y=0.4675: z=1.544333: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=2.054333;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[2] {
       m_data=NULL;
       name="SimpleLines5x5";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GridTableView @[0] {
	  m_data=$2$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].data.gp[0][0].data[0]$95$;
	    m_transform=NULL;
	    name="Name";
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].data.gp[0][0].data[1]$96$;
	    m_transform=NULL;
	    name="Input";
	    visible=1;
	    text_width=5;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].data.gp[0][0].data[2]$97$;
	    m_transform=NULL;
	    name="Output";
	    visible=1;
	    text_width=5;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10;
	  view_range {min=0: max=5: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=5;
	  col_range {min=0: max=2: };
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$75$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	 };
	};
       };
       camera_pos {x=1.5325: y=0.5175: z=1.443747: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=1.453747;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
      T3DataViewFrame @[3] {
       m_data=NULL;
       name="act_rf_data";
       visible=1;
       root_view {
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataView;
	 el_def=0;
	 GridTableView @[0] {
	  m_data=$16$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    m_data=.projects[0].programs[1].objs[1].data[0]$98$;
	    m_transform=NULL;
	    name="Input";
	    visible=1;
	    text_width=5;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    m_data=.projects[0].programs[1].objs[1].data[1]$99$;
	    m_transform=NULL;
	    name="Hidden";
	    visible=1;
	    text_width=5;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    m_data=.projects[0].programs[1].objs[1].data[2]$100$;
	    m_transform=NULL;
	    name="Output";
	    visible=1;
	    text_width=5;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10;
	  view_range {min=0: max=9: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=5;
	  col_range {min=0: max=2: };
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-0.9998999;
	   max=0.9998999;
	   range=0.9998999;
	   zero=0;
	   spec=$75$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	 };
	};
       };
       camera_pos {x=1.5325: y=0.5175: z=1.443747: };
       camera_orient {x=0: y=0: z=1: rot=0: };
       camera_focdist=1.453747;
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
      };
     };
    };
   };
   docks {
    name=;
    el_typ=DockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     m_data=NULL;
     name="Tools";
     visible=1;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 use_change_log=0;
 last_change_desc="Added test stuff to ProjectDocs, including Wiki formatting, some ta: links, and some external links.  very nice.  we need to figure out a syntax for downloaded wiki links..
";
 networks {
  name=;
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {
     name="DocLink";
     doc=.projects[0].docs[1]$101$;
    };
   };
   name="LeabraNetwork_0";
   desc=;
   specs {
    name=;
    el_typ=LeabraUnitSpec;
    el_def=0;
    LeabraUnitSpec @[0] {
     name="LeabraUnitSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs[3].children[0]$102$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: send_delta=0: i_thr=STD: };
     spike {decay=0.05: v_m_r=0: eq_gain=10: eq_dt=0.02: hard_gain=0.4: };
     depress {p_spike=P_NXX1: rec=0.2: asymp_act=0.5: depl=0.2105263: max_amp=2: };
     opt_thresh {send=0.1: delta=0.005: learn=0.01: updt_wts=1: phase_dif=0: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=1: range=1: scale=1: };
     v_m_init {name="": type=UNIFORM: mean=0.1500000059604645: var=0: par=1: };
     dt {vm=0.3: net=0.7: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
     g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
     e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
     hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
     acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
     act_reg {on=0: min=0: max=0.35: wt_dt=0.2: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     noise_type=NO_NOISE;
     noise {name="": type=GAUSSIAN: mean=0: var=0.001000000047497451: par=1: };
     noise_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=1;
      cur_val=0;
     };
    };
    LeabraLayerSpec @[1] {
     name="HiddenLayer";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraLayerSpec;
      el_def=0;
      LeabraLayerSpec @[0] {
       name="Input_Output";
       desc=;
       unique{ compute_i;i_kwta_pt;kwta;inhib;       };
       children {
	name=;
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       inhib_group=ENTIRE_LAYER;
       inhib {
	type=KWTA_INHIB;
	kwta_pt=0.25;
	min_i=0;
	comp_thr=0.5;
	comp_gain=2;
	gp_pt=0.2;
       };
       kwta {k_from=USE_PAT_K: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
       tie_brk {on=0: k_thr=1: diff_thr=0.2: };
       adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
       clamp {hard=1: gain=0.5: d_gain=0: };
       decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
       net_rescale {on=0: max_net=0.6: net_extra=0.2: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.05;
       };
      };
     };
     inhib_group=ENTIRE_LAYER;
     inhib {
      type=KWTA_AVG_INHIB;
      kwta_pt=0.6;
      min_i=0;
      comp_thr=0.5;
      comp_gain=2;
      gp_pt=0.2;
     };
     kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: d_gain=0: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
     net_rescale {on=0: max_net=0.6: net_extra=0.2: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.05;
     };
    };
    FullPrjnSpec @[2] {
     name="FullPrjnSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
    };
    LeabraConSpec @[3] {
     name="LeabraConSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraConSpec;
      el_def=0;
      LeabraBiasSpec @[0] {
       name="LeabraBiasSpec_0";
       desc=;
       unique{ rnd;wt_limits;wt_scale;wt_scale_init;       };
       children {
	name=;
	el_typ=LeabraBiasSpec;
	el_def=0;
       };
       rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
       wt_limits {type=NONE: min=-1: max=5: sym=0: };
       inhib=0;
       wt_scale {abs=1: rel=1: };
       wt_scale_init {init=0: abs=1: rel=1: };
       wt_sig {gain=6: off=1.25: };
       lrate=0.1;
       cur_lrate=0.1;
       lrs_value=EPOCH;
       lrate_sched {
	name=;
	el_typ=SchedItem;
	el_def=0;
	last_ctr=-1;
	default_val=1;
	interpolate=0;
	cur_val=0;
       };
       lmix {hebb=0.1: err=0.9: err_sb=1: };
       savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.05;
       };
       dwt_thresh=0.1;
      };
     };
     rnd {name="": type=UNIFORM: mean=0.5: var=0.25: par=1: };
     wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
     inhib=0;
     wt_scale {abs=1: rel=1: };
     wt_scale_init {init=0: abs=1: rel=1: };
     wt_sig {gain=6: off=1.25: };
     lrate=0.1;
     cur_lrate=0.1;
     lrs_value=EPOCH;
     lrate_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=0;
      cur_val=0;
     };
     lmix {hebb=0.1: err=0.9: err_sb=1: };
     savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.05;
     };
    };
   };
   layers {
    name=;
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    LeabraLayer @[0] {
     name="Input";
     flags=;
     layer_type=INPUT;
     pos {x=0: y=0: z=0: };
     un_geom {x=5: y=5: n_not_xy=0: n=25: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=0: y=0: };
     act_geom {x=5: y=5: n_not_xy=0: n=25: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[0];
     };
     units {
      name=;
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=.projects[0].networks[0].specs[0]$103$: };
     ext_flag=EXT;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0: max=0: max_i=-1: };
     i_thrs {avg=0: max=0: max_i=-1: };
     acts {avg=0.19: max=0.95: max_i=0: };
     acts_p {avg=0.19: max=0.95: max_i=0: };
     acts_m {avg=0.19: max=0.95: max_i=0: };
     phase_dif_ratio=1;
     kwta {k=5: pct=0.2: pct_c=0.8: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0.25: gp_g_i=0: g_i_orig=0.25: };
     un_g_i {avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0.04: i_kwta_pt=0.25: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1].children[0]$104$: };
     stm_gain=0.5;
     hard_clamped=1;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[1] {
     name="Hidden";
     flags=PROJECT_WTS_NEXT|PROJECT_WTS_DONE;
     layer_type=HIDDEN;
     pos {x=0: y=2: z=1: };
     un_geom {x=5: y=5: n_not_xy=0: n=25: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=0: y=0: };
     act_geom {x=5: y=5: n_not_xy=0: n=25: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Input";
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[0]$105$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs[2]$106$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs[3]$107$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Output";
       from_type=CUSTOM;
       from=$59$;
       spec {type=FullPrjnSpec: spec=$106$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$107$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[0];
     };
     units {
      name=;
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$103$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0.3737037: max=0.9228162: max_i=23: };
     i_thrs {avg=2.703682: max=6.82537: max_i=23: };
     acts {avg=0.2211428: max=0.965071: max_i=23: };
     acts_p {avg=0.2211428: max=0.965071: max_i=23: };
     acts_m {avg=0.2203319: max=0.9655114: max_i=23: };
     phase_dif_ratio=0.9963333;
     kwta {k=6: pct=0.24: pct_c=0.76: adth_k=1: k_ithr=6.15093: k1_ithr=1.615077: ithr_r=1.337221: ithr_diff=0.7374256: tie_brk=0: };
     i_val {kwta=4.336589: g_i=4.336589: gp_g_i=0: g_i_orig=4.336589: };
     un_g_i {avg=4.336588: max=4.336589: max_i=0: };
     adapt_i {avg_avg=0.220372: i_kwta_pt=0.6: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[1]$108$: };
     stm_gain=0.5;
     hard_clamped=0;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
    LeabraLayer @[2] {
     name="Output";
     flags=PROJECT_WTS_NEXT|PROJECT_WTS_DONE;
     layer_type=TARGET;
     pos {x=0: y=1: z=2: };
     un_geom {x=5: y=5: n_not_xy=0: n=25: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=0: y=0: };
     act_geom {x=5: y=5: n_not_xy=0: n=25: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       from_type=CUSTOM;
       from=$17$;
       spec {type=FullPrjnSpec: spec=$106$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$107$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       netin_avg=0;
       netin_rel=0;
       avg_netin_avg=0;
       avg_netin_avg_sum=0;
       avg_netin_rel=0;
       avg_netin_rel_sum=0;
       avg_netin_n=0;
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
	    Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[1];
     };
     units {
      name=;
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=5: y=5: n_not_xy=0: n=25: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$103$: };
     ext_flag=TARG|EXT;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {avg=0.2563245: max=0.8344428: max_i=15: };
     i_thrs {avg=1.812032: max=6.159471: max_i=15: };
     acts {avg=0.19: max=0.95: max_i=0: };
     acts_p {avg=0.19: max=0.95: max_i=0: };
     acts_m {avg=0.1998375: max=0.9836513: max_i=15: };
     phase_dif_ratio=1.051776;
     kwta {k=5: pct=0.2: pct_c=0.8: adth_k=1: k_ithr=2.713552: k1_ithr=2.568567: ithr_r=0.05491018: ithr_diff=0.05342987: tie_brk=0: };
     i_val {kwta=2.604813: g_i=0.25: gp_g_i=0: g_i_orig=0.25: };
     un_g_i {avg=2.604813: max=2.604813: max_i=0: };
     adapt_i {avg_avg=0.1153784: i_kwta_pt=-0.6499991: g_bar_i=1: g_bar_l=0.1: };
     spec {type=LeabraLayerSpec: spec=$104$: };
     stm_gain=0.5;
     hard_clamped=1;
     dav=0;
     net_rescale=1;
     avg_netin {avg=0: max=0: max_i=-1: };
     avg_netin_sum {avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     da_updt=0;
     misc_iar{      };
    };
   };
   flags=;
   auto_build=AUTO_BUILD;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=2;
   batch=0;
   epoch=22;
   trial=5;
   cycle=15;
   time=0;
   group_name=;
   trial_name="random";
   output_name=;
   sse_unit_avg=0;
   sse_sqrt=0;
   sse=0;
   sum_sse=0;
   avg_sse=0;
   cnt_err_tol=0;
   cnt_err=0;
   cur_sum_sse=0;
   avg_sse_n=0;
   cur_cnt_err=0;
   train_time {name="train_time": start={usr=1561: sys=135: tot=3174151731: }: end={usr=1569: sys=135: tot=3174151739: }: used={usr=8: sys=0: tot=8: }: n_used=1: };
   epoch_time {name="epoch_time": start={usr=1561: sys=135: tot=3174151731: }: end={usr=1569: sys=135: tot=3174151739: }: used={usr=8: sys=0: tot=8: }: n_used=1: };
   trial_time {name="trial_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   settle_time {name="settle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   cycle_time {name="cycle_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   wt_sync_time {name="wt_sync_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   misc_time {name="misc_time": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: n_used=0: };
   dmem_sync_level=DMEM_SYNC_NETWORK;
   dmem_nprocs=1;
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   lay_layout=THREE_D;
   n_units=75;
   n_cons=1875;
   max_size {x=5: y=7: z=3: };
   font_sizes {
    net_name=0.05;
    net_vals=0.05;
    layer=0.04;
    layer_vals=0.03;
    prjn=0.01;
    unit=0.02;
    un_nm_len=3;
   };
   view_params {
    xy_square=0;
    unit_spacing=0.05;
    prjn_disp=L_R_F;
    prjn_name=0;
    prjn_width=0.001;
    prjn_trans=0.5;
    lay_trans=0.5;
    unit_trans=0.9;
   };
   phase_order=MINUS_PLUS;
   no_plus_test=1;
   trial_init=DECAY_STATE;
   sequence_init=DO_NOTHING;
   first_plus_dwt=ONLY_FIRST_DWT;
   phase=PLUS_PHASE;
   phase_no=2;
   phase_max=2;
   cycle_max=60;
   min_cycles=15;
   min_cycles_phase2=35;
   minus_cycles=15;
   avg_cycles=15.83333;
   avg_cycles_sum=0;
   avg_cycles_n=0;
   netin_mod=1;
   send_delta=0;
   maxda_stopcrit=0.005;
   maxda=0.0006278157;
   trg_max_act_stopcrit=1;
   trg_max_act=0;
   ext_rew=0;
   avg_ext_rew=0;
   avg_ext_rew_sum=0;
   avg_ext_rew_n=0;
  };
 };
};
