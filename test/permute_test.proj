// ta_Dump File v3.0 -- code v8.0.3.0 rev10158
LeabraProject .projects["permute_test"] { 
 Doc_Group @.docs = [0] {
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @["LeabraWizard_0"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["NO_CLIP"] { };
    UserDataItem @["user_pinned"] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @["ControlPanel"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["user_pinned"] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };
  };
  ClusterRun @["ClusterRun"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["user_pinned"] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };

   DataTableCols @.jobs_running.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_running.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_running.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_done.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_done.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_done.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_deleted.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_deleted.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_deleted.control_panel_cells = [0] {
   };

   DataTableCols @.jobs_archive.data = [33] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["tag"] { };
    String_Data @["status"] { };
    String_Data @["label"] { };
    String_Data @["notes"] { };
    String_Data @["filename"] { };
    String_Data @["params"] { };
    String_Data @["status_info"] { };
    String_Data @["submit_time"] { };
    String_Data @["start_time"] { };
    String_Data @["end_time"] { };
    String_Data @["running_time"] { };
    String_Data @["job_no"] { };
    String_Data @["job_out"] { };
    String_Data @["job_out_file"] { };
    String_Data @["dat_files"] { };
    String_Data @["other_files"] { };
    int_Data @["command_id"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["command"] { };
    String_Data @["repo_url"] { };
    String_Data @["queue"] { };
    String_Data @["run_time"] { };
    int_Data @["ram_gb"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["n_threads"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["mpi_per_node"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_batches"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    int_Data @["pb_nodes"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
    String_Data @["submit_svn"] { };
    String_Data @["submit_job"] { };
    String_Data @["done_svn"] { };
    String_Data @["last_svn"] { };
   };

   DataOpList @.jobs_archive.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.jobs_archive.control_panel_cells = [0] {
   };

   DataTableCols @.file_list.data = [11] {
    String_Data @["cluster"] { };
    String_Data @["user"] { };
    String_Data @["file_name"] { };
    String_Data @["tag"] { };
    String_Data @["size"] { };
    String_Data @["kind"] { };
    String_Data @["date_modified"] { };
    String_Data @["date_created"] { };
    String_Data @["svn_file_path"] { };
    String_Data @["proj_file_path"] { };
    String_Data @["file_path"] { };
   };

   DataOpList @.file_list.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.file_list.control_panel_cells = [0] {
   };

   DataTableCols @.cluster_info.data = [6] {
    String_Data @["queue"] { };
    String_Data @["job_no"] { };
    String_Data @["user"] { };
    String_Data @["state"] { };
    String_Data @["procs"] { };
    String_Data @["start_time"] { };
   };

   DataOpList @.cluster_info.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.cluster_info.control_panel_cells = [0] {
   };

   DataTableCols @.clusterscript_timestamp.data = [2] {
    String_Data @["timestamp"] { };
    int_Data @["version"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["NARROW"] { };
     };
    };
   };

   DataOpList @.clusterscript_timestamp.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.clusterscript_timestamp.control_panel_cells = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.param_sets = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp["InputData"] { 
  };
  DataTable_Group @.gp["OutputData"] { 
  };
  DataTable_Group @.gp["AnalysisData"] { 
  };
 };

 Program_TopGroup @.programs = [2] {
  Program @["PermuteTest"] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @["DocLink"] { };
    UserDataItem @["user_pinned"] { };
   };

   ProgObjList @.objs = [7] {
    DataTable @["OrigTable"] { 
     DataTableCols @.data = [4] {
      int_Data @["orig_row_no"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["cur_row_no"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["categ"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["item"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["PermutedTable"] { 
     DataTableCols @.data = [5] {
      int_Data @["orig_row_no"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["cur_row_no"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["categ"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["item"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["regress_line"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["CatGroup"] { 
     DataTableCols @.data = [3] {
      int_Data @["categ_group"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["orig_row_no_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["cur_row_no_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["ItemGroup"] { 
     DataTableCols @.data = [3] {
      int_Data @["item_group"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["orig_row_no_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["cur_row_no_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    complex_float_Matrix @["fft_out"] { };
    DataTable @["FFTPlot"] { 
     DataTableCols @.data = [2] {
      int_Data @["freq"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["power"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    RndSeed_List @["rnd_seeds"] { 
     taList @.seeds = [25] {
      RndSeed @["RndSeed_1"] { };
      RndSeed @["RndSeed_2"] { };
      RndSeed @["RndSeed_3"] { };
      RndSeed @["RndSeed_4"] { };
      RndSeed @["RndSeed_5"] { };
      RndSeed @["RndSeed_6"] { };
      RndSeed @["RndSeed_7"] { };
      RndSeed @["RndSeed_8"] { };
      RndSeed @["RndSeed_9"] { };
      RndSeed @["RndSeed_10"] { };
      RndSeed @["RndSeed_11"] { };
      RndSeed @["RndSeed_12"] { };
      RndSeed @["RndSeed_13"] { };
      RndSeed @["RndSeed_14"] { };
      RndSeed @["RndSeed_15"] { };
      RndSeed @["RndSeed_16"] { };
      RndSeed @["RndSeed_17"] { };
      RndSeed @["RndSeed_18"] { };
      RndSeed @["RndSeed_19"] { };
      RndSeed @["RndSeed_20"] { };
      RndSeed @["RndSeed_21"] { };
      RndSeed @["RndSeed_22"] { };
      RndSeed @["RndSeed_23"] { };
      RndSeed @["RndSeed_24"] { };
      RndSeed @["RndSeed_25"] { };
     };
    };
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [12] {
    ProgVar @["orig_table"] { };
    ProgVar @["permuted_table"] { };
    ProgVar @["n_categs"] { };
    ProgVar @["n_items"] { };
    ProgVar @["cpy_fm_orig"] { };
    ProgVar @["init_rnd_seed"] { };
    ProgVar @["thr_no"] { };
    ProgVar @["cat_group"] { };
    ProgVar @["item_group"] { };
    ProgVar @["fft_out"] { };
    ProgVar @["fftplot"] { };
    ProgVar @["rnd_seeds"] { };
   };

   Function_List @.functions = [1] {
    Function @["MakeOrigData"] { 
     ProgVar_List @.args = [0] {
     };

     ProgEl_List @.fun_code = [4] {
      LocalVars @[0] { 
       ProgVar_List @.local_vars = [2] {
	ProgVar @["cat"] { };
	ProgVar @["itm"] { };
       };
      };
      MethodCall @[1] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
      ForLoop @[2] { 
       ProgEl_List @.loop_code = [1] {
	ForLoop @[0] { 
	 ProgEl_List @.loop_code = [3] {
	  MethodCall @[0] { 
	   ProgArg_List @.meth_args = [0] {
	   };
	  };
	  MatrixAssign @[1] { };
	  MatrixAssign @[2] { };
	 };
	};
       };
      };
      MethodCall @[3] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
     };
    };
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [13] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [1] {
      ProgVar @["cat"] { };
     };
    };
    If @[1] { 
     ProgEl_List @.true_code = [1] {
      FunctionCall @[0] { 
       ProgArg_List @.fun_args = [0] {
       };
      };
     };
    };
    If @[2] { 
     ProgEl_List @.true_code = [1] {
      MethodCall @[0] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
     };
    };
    If @[3] { 
     ProgEl_List @.true_code = [1] {
      MethodCall @[0] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
     };
    };
    MethodCall @[4] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[5] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    DataGroupProg @[6] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["categ_GROUP_0"] { };
      DataGroupEl @["orig_row_no_MEAN_1"] { };
      DataGroupEl @["cur_row_no_MEAN_2"] { };
     };
    };
    DataGroupProg @[7] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["item_GROUP_0"] { };
      DataGroupEl @["orig_row_no_MEAN_1"] { };
      DataGroupEl @["cur_row_no_MEAN_2"] { };
     };
    };
    DataAnalCall @[8] { 
     ProgArg_List @.meth_args = [4] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
     };
    };
    MathCall @[9] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MethodCall @[10] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    CssExpr @[11] { };
    MethodCall @[12] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
   };
  };
  Program @["ImagenetPermute"] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @["DocLink"] { };
   };

   ProgObjList @.objs = [12] {
    DataTable @["imagenet_1000"] { 
     DataTableCols @.data = [2] {
      String_Data @["category"] { };
      int_Data @["individual"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["imagenet_nums"] { 
     DataTableCols @.data = [2] {
      int_Data @["category"] { };
      String_Data @["individual"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["imagenet_categs"] { 
     DataTableCols @.data = [2] {
      String_Data @["category_group"] { };
      int_Data @["N"] { };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["ReAggList"] { 
     DataTableCols @.data = [5] {
      int_Data @["category"] { };
      String_Data @["individual"] { };
      int_Data @["cur_row"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["proc"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["cur_row_gp"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["ReAggList_sorted"] { 
     DataTableCols @.data = [5] {
      int_Data @["category"] { };
      String_Data @["individual"] { };
      int_Data @["cur_row"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["proc"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["cur_row_gp"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [6] {
      DataSortEl @["cur_row_gp_up_0"] { };
      DataSortEl @["category_up_1"] { };
      DataSortEl @["proc_up_2"] { };
      DataSortEl @["cur_row_gp_up_3"] { };
      DataSortEl @["cur_row_gp_up_4"] { };
      DataSortEl @["cur_row_gp_up_5"] { };
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["CatGroup"] { 
     DataTableCols @.data = [3] {
      int_Data @["category_group"] { };
      float_Data @["cur_row_gp_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["proc_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["RowGroup"] { 
     DataTableCols @.data = [3] {
      int_Data @["cur_row_gp_group"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      int_Data @["category_group"] { };
      float_Data @["proc_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["RowCatGroup"] { 
     DataTableCols @.data = [3] {
      int_Data @["cur_row_gp_group"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["category_mean"] { };
      float_Data @["proc_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["RowCatGroup_smooth"] { 
     DataTableCols @.data = [3] {
      int_Data @["cur_row_group"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
      float_Data @["category_mean"] { };
      float_Data @["proc_mean"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    DataTable @["ItemGroup"] { 
     DataTableCols @.data = [3] {
      int_Data @["category_group"] { };
      String_Data @["individual_group"] { };
      int_Data @["N"] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @["NARROW"] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };

     DataTableCell_List @.control_panel_cells = [0] {
     };
    };
    RndSeed_List @["rnd_seeds"] { 
     taList @.seeds = [25] {
      RndSeed @["RndSeed_1"] { };
      RndSeed @["RndSeed_2"] { };
      RndSeed @["RndSeed_3"] { };
      RndSeed @["RndSeed_4"] { };
      RndSeed @["RndSeed_5"] { };
      RndSeed @["RndSeed_6"] { };
      RndSeed @["RndSeed_7"] { };
      RndSeed @["RndSeed_8"] { };
      RndSeed @["RndSeed_9"] { };
      RndSeed @["RndSeed_10"] { };
      RndSeed @["RndSeed_11"] { };
      RndSeed @["RndSeed_12"] { };
      RndSeed @["RndSeed_13"] { };
      RndSeed @["RndSeed_14"] { };
      RndSeed @["RndSeed_15"] { };
      RndSeed @["RndSeed_16"] { };
      RndSeed @["RndSeed_17"] { };
      RndSeed @["RndSeed_18"] { };
      RndSeed @["RndSeed_19"] { };
      RndSeed @["RndSeed_20"] { };
      RndSeed @["RndSeed_21"] { };
      RndSeed @["RndSeed_22"] { };
      RndSeed @["RndSeed_23"] { };
      RndSeed @["RndSeed_24"] { };
      RndSeed @["RndSeed_25"] { };
     };
    };
    DataTable_Group @["splits"] = [16] { 
     DataTable @["proc0"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc1"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc2"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc3"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc4"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc5"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc6"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc7"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc8"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc9"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc10"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc11"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc12"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc13"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc14"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
     DataTable @["proc15"] { 
      DataTableCols @.data = [4] {
       int_Data @["category"] { };
       String_Data @["individual"] { };
       int_Data @["cur_row"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
       int_Data @["proc"] { 
	UserDataItem_List @*(.user_data_) {
	 UserDataItem @["NARROW"] { };
	};
       };
      };

      DataOpList @.last_sort_spec.ops = [0] {
      };

      DataTableCell_List @.control_panel_cells = [0] {
      };
     };
    };
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [16] {
    ProgVar @["imagenet_1000"] { };
    ProgVar @["imagenet_categs"] { };
    ProgVar @["rnd_seeds"] { };
    ProgVar @["splits"] { };
    ProgVar @["re_agg_list"] { };
    ProgVar @["n_procs"] { };
    ProgVar @["cat_group"] { };
    ProgVar @["row_group"] { };
    ProgVar @["item_group"] { };
    ProgVar @["row_cat_group"] { };
    ProgVar @["imagenet_nums"] { };
    ProgVar @["row_cat_group_smooth"] { };
    ProgVar @["cat_smooth_width"] { };
    ProgVar @["cat_smooth_sigma"] { };
    ProgVar @["group_n"] { };
    ProgVar @["re_agg_list_sorted"] { };
   };

   Function_List @.functions = [1] {
    Function @["CatToNums"] { 
     ProgVar_List @.args = [0] {
     };

     ProgEl_List @.fun_code = [5] {
      LocalVars @[0] { 
       ProgVar_List @.local_vars = [4] {
	ProgVar @["n_rows"] { };
	ProgVar @["i"] { };
	ProgVar @["cat"] { };
	ProgVar @["cat_no"] { };
       };
      };
      AssignExpr @[1] { };
      MethodCall @[2] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
      MemberMethodCall @[3] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
      ForLoop @[4] { 
       ProgEl_List @.loop_code = [4] {
	AssignExpr @[0] { };
	MemberMethodCall @[1] { 
	 ProgArg_List @.meth_args = [2] {
	  ProgArg @[0] { };
	  ProgArg @[1] { };
	 };
	};
	MatrixAssign @[2] { };
	MatrixAssign @[3] { };
       };
      };
     };
    };
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [16] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [4] {
      ProgVar @["pr"] { };
      ProgVar @["tab"] { };
      ProgVar @["n_rows"] { };
      ProgVar @["i"] { };
     };
    };
    DataGroupProg @[1] { 
     DataOpList @.group_spec.ops = [2] {
      DataGroupEl @["category_GROUP_0"] { };
      DataGroupEl @["individual_N_1"] { };
     };
    };
    FunctionCall @[2] { 
     ProgArg_List @.fun_args = [0] {
     };
    };
    MethodCall @[3] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[4] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    ForLoop @[5] { 
     ProgEl_List @.loop_code = [12] {
      AssignExpr @[0] { };
      MemberAssign @[1] { };
      PrintVar @[2] { };
      MethodCall @[3] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
      MethodCall @[4] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      MethodCall @[5] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
      MethodCall @[6] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      MethodCall @[7] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      MethodCall @[8] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
      MethodCall @[9] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      If @[10] { 
       ProgEl_List @.true_code = [1] {
	MethodCall @[0] { 
	 ProgArg_List @.meth_args = [1] {
	  ProgArg @[0] { };
	 };
	};
       };
      };
      Else @[11] { 
       ProgEl_List @.else_code = [1] {
	MethodCall @[0] { 
	 ProgArg_List @.meth_args = [1] {
	  ProgArg @[0] { };
	 };
	};
       };
      };
     };
    };
    MethodCall @[6] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MemberMethodCall @[7] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    CssExpr @[8] { };
    DataGroupProg @[9] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["category_GROUP_0"] { };
      DataGroupEl @["cur_row_gp_MEAN_1"] { };
      DataGroupEl @["proc_MEAN_3"] { };
     };
    };
    DataGroupProg @[10] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["cur_row_gp_GROUP_0"] { };
      DataGroupEl @["category_GROUP_1"] { };
      DataGroupEl @["proc_MEAN_3"] { };
     };
    };
    DataGroupProg @[11] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["cur_row_gp_GROUP_0"] { };
      DataGroupEl @["category_MEAN_1"] { };
      DataGroupEl @["proc_MEAN_3"] { };
     };
    };
    DataGroupProg @[12] { 
     DataOpList @.group_spec.ops = [3] {
      DataGroupEl @["category_GROUP_0"] { };
      DataGroupEl @["individual_GROUP_1"] { };
      DataGroupEl @["proc_N_2"] { };
     };
    };
    DataAnalCall @[13] { 
     ProgArg_List @.meth_args = [9] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
      ProgArg @[4] { };
      ProgArg @[5] { };
      ProgArg @[6] { };
      ProgArg @[7] { };
      ProgArg @[8] { };
     };
    };
    MethodCall @[14] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[15] { 
     ProgArg_List @.meth_args = [12] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
      ProgArg @[4] { };
      ProgArg @[5] { };
      ProgArg @[6] { };
      ProgArg @[7] { };
      ProgArg @[8] { };
      ProgArg @[9] { };
      ProgArg @[10] { };
      ProgArg @[11] { };
     };
    };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @["Browser2"] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @["view_win_lft"] { };
    UserDataItem @["view_win_top"] { };
    UserDataItem @["view_win_wd"] { };
    UserDataItem @["view_win_ht"] { };
    UserDataItem @["view_win_iconified"] { };
    UserDataItem @["view_splitter_state"] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @["Application"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_win_visible"] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @["Navigator"] { };
    PanelViewer @["Editor"] { };
    T3PanelViewer @["Visualizer"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_panel_selected"] { };
     };

     T3Panel_List @.panels = [9] {
      T3Panel @["PermutedTable"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["PermutedTable_Graph"] { 
	 T3DataView_List @.children = [5] {
	  GraphColView @["orig_row_no"] { };
	  GraphColView @["cur_row_no"] { };
	  GraphColView @["categ"] { };
	  GraphColView @["item"] { };
	  GraphColView @["regress_line"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["PermutedTable_Graph_plot_1"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_2"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_3"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_4"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_5"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["PermutedTable_Graph_err_1"] { };
	  GraphPlotView @["PermutedTable_Graph_err_2"] { };
	  GraphPlotView @["PermutedTable_Graph_err_3"] { };
	  GraphPlotView @["PermutedTable_Graph_err_4"] { };
	  GraphPlotView @["PermutedTable_Graph_err_5"] { };
	  GraphPlotView @["PermutedTable_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["CatGroup"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["CatGroup_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["categ_group"] { };
	  GraphColView @["orig_row_no_mean"] { };
	  GraphColView @["cur_row_no_mean"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["CatGroup_Graph_plot_1"] { };
	  GraphPlotView @["CatGroup_Graph_plot_2"] { };
	  GraphPlotView @["CatGroup_Graph_plot_3"] { };
	  GraphPlotView @["CatGroup_Graph_plot_4"] { };
	  GraphPlotView @["CatGroup_Graph_plot_5"] { };
	  GraphPlotView @["CatGroup_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["CatGroup_Graph_err_1"] { };
	  GraphPlotView @["CatGroup_Graph_err_2"] { };
	  GraphPlotView @["CatGroup_Graph_err_3"] { };
	  GraphPlotView @["CatGroup_Graph_err_4"] { };
	  GraphPlotView @["CatGroup_Graph_err_5"] { };
	  GraphPlotView @["CatGroup_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["FFTPlot"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["FFTPlot_Graph"] { 
	 T3DataView_List @.children = [2] {
	  GraphColView @["freq"] { };
	  GraphColView @["power"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["FFTPlot_Graph_plot_1"] { };
	  GraphPlotView @["FFTPlot_Graph_plot_2"] { };
	  GraphPlotView @["FFTPlot_Graph_plot_3"] { };
	  GraphPlotView @["FFTPlot_Graph_plot_4"] { };
	  GraphPlotView @["FFTPlot_Graph_plot_5"] { };
	  GraphPlotView @["FFTPlot_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["FFTPlot_Graph_err_1"] { };
	  GraphPlotView @["FFTPlot_Graph_err_2"] { };
	  GraphPlotView @["FFTPlot_Graph_err_3"] { };
	  GraphPlotView @["FFTPlot_Graph_err_4"] { };
	  GraphPlotView @["FFTPlot_Graph_err_5"] { };
	  GraphPlotView @["FFTPlot_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["ItemGroup"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["ItemGroup_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["item_group"] { };
	  GraphColView @["orig_row_no_mean"] { };
	  GraphColView @["cur_row_no_mean"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["ItemGroup_Graph_plot_1"] { };
	  GraphPlotView @["ItemGroup_Graph_plot_2"] { };
	  GraphPlotView @["ItemGroup_Graph_plot_3"] { };
	  GraphPlotView @["ItemGroup_Graph_plot_4"] { };
	  GraphPlotView @["ItemGroup_Graph_plot_5"] { };
	  GraphPlotView @["ItemGroup_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["ItemGroup_Graph_err_1"] { };
	  GraphPlotView @["ItemGroup_Graph_err_2"] { };
	  GraphPlotView @["ItemGroup_Graph_err_3"] { };
	  GraphPlotView @["ItemGroup_Graph_err_4"] { };
	  GraphPlotView @["ItemGroup_Graph_err_5"] { };
	  GraphPlotView @["ItemGroup_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["PermutedTable_4"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["PermutedTable_Graph"] { 
	 T3DataView_List @.children = [5] {
	  GraphColView @["orig_row_no"] { };
	  GraphColView @["cur_row_no"] { };
	  GraphColView @["categ"] { };
	  GraphColView @["item"] { };
	  GraphColView @["regress_line"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["PermutedTable_Graph_plot_1"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_2"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_3"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_4"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_5"] { };
	  GraphPlotView @["PermutedTable_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["PermutedTable_Graph_err_1"] { };
	  GraphPlotView @["PermutedTable_Graph_err_2"] { };
	  GraphPlotView @["PermutedTable_Graph_err_3"] { };
	  GraphPlotView @["PermutedTable_Graph_err_4"] { };
	  GraphPlotView @["PermutedTable_Graph_err_5"] { };
	  GraphPlotView @["PermutedTable_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["CatGroup_5"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["CatGroup_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["category_group"] { };
	  GraphColView @["cur_row_gp_mean"] { };
	  GraphColView @["proc_mean"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["CatGroup_Graph_plot_1"] { };
	  GraphPlotView @["CatGroup_Graph_plot_2"] { };
	  GraphPlotView @["CatGroup_Graph_plot_3"] { };
	  GraphPlotView @["CatGroup_Graph_plot_4"] { };
	  GraphPlotView @["CatGroup_Graph_plot_5"] { };
	  GraphPlotView @["CatGroup_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["CatGroup_Graph_err_1"] { };
	  GraphPlotView @["CatGroup_Graph_err_2"] { };
	  GraphPlotView @["CatGroup_Graph_err_3"] { };
	  GraphPlotView @["CatGroup_Graph_err_4"] { };
	  GraphPlotView @["CatGroup_Graph_err_5"] { };
	  GraphPlotView @["CatGroup_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["RowCatGroup"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["RowCatGroup_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["cur_row_gp_group"] { };
	  GraphColView @["category_mean"] { };
	  GraphColView @["proc_mean"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["RowCatGroup_Graph_plot_1"] { };
	  GraphPlotView @["RowCatGroup_Graph_plot_2"] { };
	  GraphPlotView @["RowCatGroup_Graph_plot_3"] { };
	  GraphPlotView @["RowCatGroup_Graph_plot_4"] { };
	  GraphPlotView @["RowCatGroup_Graph_plot_5"] { };
	  GraphPlotView @["RowCatGroup_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["RowCatGroup_Graph_err_1"] { };
	  GraphPlotView @["RowCatGroup_Graph_err_2"] { };
	  GraphPlotView @["RowCatGroup_Graph_err_3"] { };
	  GraphPlotView @["RowCatGroup_Graph_err_4"] { };
	  GraphPlotView @["RowCatGroup_Graph_err_5"] { };
	  GraphPlotView @["RowCatGroup_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["RowCatGroup_smooth"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["RowCatGroup_smooth_Graph"] { 
	 T3DataView_List @.children = [3] {
	  GraphColView @["cur_row_group"] { };
	  GraphColView @["category_mean"] { };
	  GraphColView @["proc_mean"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["RowCatGroup_smooth_Graph_plot_1"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_plot_2"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_plot_3"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_plot_4"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_plot_5"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["RowCatGroup_smooth_Graph_err_1"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_err_2"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_err_3"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_err_4"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_err_5"] { };
	  GraphPlotView @["RowCatGroup_smooth_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
      T3Panel @["ReAggList_sorted"] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @["ReAggList_sorted_Graph"] { 
	 T3DataView_List @.children = [5] {
	  GraphColView @["category"] { };
	  GraphColView @["individual"] { };
	  GraphColView @["cur_row"] { };
	  GraphColView @["proc"] { };
	  GraphColView @["cur_row_gp"] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @["ReAggList_sorted_Graph_plot_1"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_plot_2"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_plot_3"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_plot_4"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_plot_5"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_plot_6"] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @["ReAggList_sorted_Graph_err_1"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_err_2"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_err_3"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_err_4"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_err_5"] { };
	  GraphPlotView @["ReAggList_sorted_Graph_err_6"] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @["Vw_0"] { };
	T3SavedView @["Vw_1"] { };
	T3SavedView @["Vw_2"] { };
	T3SavedView @["Vw_3"] { };
	T3SavedView @["Vw_4"] { };
	T3SavedView @["Vw_5"] { };
	T3SavedView @["Vw_6"] { };
	T3SavedView @["Vw_7"] { };
	T3SavedView @["Vw_8"] { };
	T3SavedView @["Vw_9"] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @["Tools"] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @["view_win_lft"] { };
      UserDataItem @["view_win_top"] { };
      UserDataItem @["view_win_wd"] { };
      UserDataItem @["view_win_ht"] { };
      UserDataItem @["view_win_iconified"] { };
      UserDataItem @["view_visible"] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [0] {
 };
};
LeabraProject .projects["permute_test"] {
 name="permute_test";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=0;
 };
 author="Randall C. O'Reilly";
 email="emergent-users@grey.colorado.edu";
 license {
  license=GPLv2;
  owner_name="Regents of the University of Colorado";
  org="CCNLab at the University of Colorado Boulder";
  year="2016";
  custom=;
 };
 pub_cite=;
 wiki {
  wiki=;
  page_name=;
 };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @["LeabraWizard_0"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_6";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["NO_CLIP"] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  ControlPanel @["ControlPanel"] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="ControlPanel";
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
  ClusterRun @["ClusterRun"] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=0;
     val_type_fixed=0;
    };
   };
   name="ClusterRun";
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   jobs_running {
    name="jobs_running";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_done {
    name="jobs_done";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_deleted {
    name="jobs_deleted";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   jobs_archive {
    name="jobs_archive";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status"] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["label"] {
      name="label";
      desc="label for the job -- a brief description that you can use to label this job's results on your graph -- in general notes should have more general info and then label should JUST describe what is unique about the current run";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["notes"] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["filename"] {
      name="filename";
      desc="name of the specific project used for this job -- because multiple versions of a model are often run under the same project name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["params"] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["status_info"] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_time"] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["end_time"] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["running_time"] {
      name="running_time";
      desc="total running time in days/hours/minutes";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out"] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_out_file"] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["dat_files"] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["other_files"] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["command_id"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     String_Data @["command"] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["repo_url"] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["queue"] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["run_time"] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["ram_gb"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     int_Data @["n_threads"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of physical nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
     };
     int_Data @["mpi_per_node"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_per_node";
      desc="number of processes to use per MPI node to use for mpi run - total nodes is mpi_nodes * mpi_per_node";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=12;
      matrix_col_width=10;
     };
     int_Data @["pb_batches"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
     };
     int_Data @["pb_nodes"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="actually pb_n_batches_per -- re-using this parameter that was previously used for a different purpose -- number of batches to run sequentially within a single job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
     String_Data @["submit_svn"] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["submit_job"] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["done_svn"] {
      name="done_svn";
      desc="svn revision when this job was moved from running to done -- this will contain full set of files generated when running -- for deleted jobs can also recover to this";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["last_svn"] {
      name="last_svn";
      desc="last svn revision for command submission that affected this job in some significant way -- for deleted jobs, this is the svn revision that we recover to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=2;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   file_list {
    name="file_list";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["cluster"] {
      name="cluster";
      desc="cluster where this job was submitted / run";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      name="user";
      desc="user who ran this job";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["file_name"] {
      name="file_name";
      desc="name of file -- does not include any path information";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["tag"] {
      name="tag";
      desc="job tag associated with this file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["size"] {
      name="size";
      desc="size of file -- with typical suffixes (K = kilobytes, M = megabytes, G = gigabytes)";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["kind"] {
      name="kind";
      desc="type of file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["date_modified"] {
      name="date_modified";
      desc="timestamp for when the file was last modified";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["date_created"] {
      name="date_created";
      desc="timestamp for when the file was first created";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["svn_file_path"] {
      name="svn_file_path";
      desc="path to file in SVN repository, relative to root of svn_repo repository";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["proj_file_path"] {
      name="proj_file_path";
      desc="path to file relative to the parent project directory -- e.g., results/filename.dat";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["file_path"] {
      name="file_path";
      desc="full path to file on local file system, including all parent directories and name of file -- takes you directly to the file";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   cluster_info {
    name="cluster_info";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["queue"] {
      name="queue";
      desc="queue that this info relates to";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["job_no"] {
      name="job_no";
      desc="job number or total number of actve jobs";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["user"] {
      name="user";
      desc="user name";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["state"] {
      name="state";
      desc="current scheduler state -- or description of global state info";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["procs"] {
      name="procs";
      desc="number of processors for this job or for global state info";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     String_Data @["start_time"] {
      name="start_time";
      desc="timestamp for when the job was submitted or started running";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   clusterscript_timestamp {
    name="clusterscript_timestamp";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @["timestamp"] {
      name="timestamp";
      desc="Timestamp of last interaction from the cluster run script";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
     };
     int_Data @["version"] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @["NARROW"] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="version";
      desc="Version number of cluster run script ";
      col_flags=SAVE_DATA|READ_ONLY|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{       };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    control_panel_cells {
     name="control_panel_cells";
     el_typ=DataTableCell;
     el_def=0;
    };
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
 };
 param_sets {
  name="param_sets";
  el_typ=ParamSet;
  el_def=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp["InputData"] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["OutputData"] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp["AnalysisData"] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program @["PermuteTest"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_98";
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @["DocLink"] {
     name="DocLink";
     doc=.projects["permute_test"].programs["PermuteTest"].doc$$;
    };
    UserDataItem @["user_pinned"] {
     name="user_pinned";
     value 1 0=0;
     val_type_fixed=0;
    };
   };
   name="PermuteTest";
   short_nm="PrmTst";
   tags=;
   desc=;
   version {
    major=0;
    minor=0;
    step=0;
   };
   author="Randall C. O'Reilly";
   email="emergent-users@grey.colorado.edu";
   flags=NO_STOP_STEP;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=DataTable;
    el_def=0;
    DataTable @["OrigTable"] {
     name="OrigTable";
     desc=;
     data {
      name="data";
      el_typ=int_Data;
      el_def=0;
      int_Data @["orig_row_no"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="orig_row_no";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      int_Data @["cur_row_no"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_no";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      int_Data @["categ"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="categ";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      int_Data @["item"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="item";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["PermutedTable"] {
     name="PermutedTable";
     desc=;
     data {
      name="data";
      el_typ=int_Data;
      el_def=0;
      int_Data @["orig_row_no"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="orig_row_no";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      int_Data @["cur_row_no"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_no";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      int_Data @["categ"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="categ";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      int_Data @["item"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="item";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      float_Data @["regress_line"] {
       name="regress_line";
       desc="cur_row_no = -0.00743238 * orig_row_no + 40800.5; r = -0.00743238; r^2 = 5.52402e-05";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["CatGroup"] {
     name="CatGroup";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      int_Data @["categ_group"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="categ_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      float_Data @["orig_row_no_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="orig_row_no_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      float_Data @["cur_row_no_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_no_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["ItemGroup"] {
     name="ItemGroup";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      int_Data @["item_group"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="item_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      float_Data @["orig_row_no_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="orig_row_no_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
      float_Data @["cur_row_no_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_99";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_no_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    complex_float_Matrix @["fft_out"] {
     name="fft_out";
    [2 1000] 40499496;0;49504.848;-120212.25;-64062.633;-42707.812;89890.656;-22177.715;72827.547;-51942.805;
-27808.738;15448.691;77194.852;-120401.83;-52926.352;11022.023;77869.641;40030.688;22167.715;-44476.492;
56143.262;28108.336;10644.672;20237.027;-20604.961;18214.809;-16045.15;40858.605;76307.883;-57587.531;
-42154.199;63768.898;92955.391;16027.644;-21683.719;-49481.852;48510.711;9387.1445;9401.3672;34453.227;
16253.133;-101938.8;78012.852;-37681.672;18045.266;65477.969;2022.5977;35520.359;-32743.906;72514.016;
-7867.1514;-81862.578;-70715.375;31569.93;25223.766;-8052.623;-72457.328;131494.75;-32869.562;-31941.062;
58617.199;-24412.75;-43022.117;9968.4277;-64734.48;22768.705;29049.203;86173.047;31190.424;-14868.104;
-14851.145;-21226.119;60800.918;-469.28125;18301.766;26595.475;101863.26;84750.445;-80148;61028.086;
-28972.428;77837.953;-55775.672;42574.977;71492.992;61189.539;-36328.941;-49657.227;39579.094;18133.105;
-3917.2363;35568.617;10508.188;9660.0605;28182.281;41147.695;-7403.6846;-86455.891;-79843.789;-72995.977;
-32098.711;-93753.367;-10.771484;-8217.3926;28057.473;-76423.641;-73201.305;-70425.758;-92346.625;-23822.07;
62960.566;-23739.898;-49893.539;-70961.594;10242.227;-38747.227;70510.203;82070.398;-26415.059;92126.664;
10620.855;276.17383;-30346.822;-26463.242;-45569.285;20320.711;2054.0586;-42385.461;-10578.418;-109689.78;
-38993.242;38446.203;-51317.164;-24392.771;-6134.4297;72621.484;-1724.5684;51568.77;-71659.984;43521.32;
73017.633;-80084.953;-11626.943;35452.227;-2757.1523;-92780.297;2713.5605;-14593.91;124330.8;4891.3438;
19084.729;32738.062;46271.391;-41963.625;60943.125;-23009.912;-2620.6289;5225.0835;-4377.375;9464.0996;
44165.215;14894.133;54631.281;-37615.766;44981.98;75046.391;-71639.461;-18573.178;143378.86;13538.611;
-103270.3;26292.822;54429.672;-115378.07;-46172.484;8336.2832;-43456.027;4860.9727;-29884.955;53250.828;
-120389.38;4292.7646;22657.947;-43913.512;70878.977;-39413.082;24453.111;8939.9766;-72824.258;79463.969;
-11467.621;13508.125;112032.77;-23994.93;2854.8945;50650.066;-66083.438;146732.69;66259.016;50003.312;
-2134.9102;-23916.562;-26456.646;6742.375;-166560.5;-29661.865;1064.6748;53128.102;-41511.91;34204.086;
82377.281;-22877.805;8534.5576;-75787.094;5852.9023;-65323.691;160227.3;157640.84;25173.707;124047.39;
18966.332;97238.203;66533.93;116725.7;-3116.1953;-10231.812;66683.078;-25011.572;942.48438;39977.555;
-59183.023;59011.723;-14614.562;-35613.688;309.00391;-46005.938;42462.188;22340.32;-7040.8828;-25853.27;
-1087.1602;-53390.156;-22120.934;9676.1045;-42129.617;-2386.9263;-32709.049;38938.406;44192.988;-95576.062;
-25964.598;22347.5;-30373.15;25041.988;-100023.38;-77399.094;1203.5781;-52821.395;-15606.289;-31251.52;
110745.27;-28618.498;-4567.5156;42694.332;-67799.719;79019.734;-24318.789;7288.5859;-25759.504;-25457.535;
-14953.212;37099.516;76775.867;11886.805;38412.008;75022.422;-56055.148;-258.04688;81586.719;8343.7637;
10385.599;21617.957;27956.555;144663.56;-32855.715;-53981.367;-39484.199;-38575.68;-70299.031;8924.7344;
20610.109;10578.766;-36221.383;-60422.828;-28374.961;59989.523;-78325.562;-9734.5234;38101.863;121858.9;
46106.535;-17318.648;-4491.0039;-63619.891;-33120.391;-37705.941;-18534.078;51423.027;-32838.32;38567.68;
-4966.0117;-67880.539;-52966.668;69514.477;91477.562;-13632.543;-104263.41;-66863.312;-65953.719;104691.12;
77957.477;-79898.289;-55276.688;44982.461;41018.406;-79279.094;-45703.625;-11328.945;-64988.219;-73195.891;
-36732.469;-83819.039;23747.688;-13387.04;-47197.266;-76019.391;25305.264;55180.18;-71145.922;-93522.469;
-13990.568;50471.652;-18217.648;-10426.629;-36263.203;-6499.5347;63458.203;-83768.406;66815;-60646.492;
-2544.7412;-75180.375;-70854.477;58829.961;-20020.109;-42576.258;2779.5586;44994.418;-1483.3396;-74767.609;
3251.1719;-3724.2207;-32802.789;-66888.156;-52291.062;5349.5645;111519.41;-16181.988;61325.766;-8426.9102;
9302.3086;-60827.383;4063.75;-42222.023;-86360.891;369.85938;29616.516;-38092.602;57238.262;79889.805;
-58902.965;-17561.363;-97225.969;-19095.564;-19219.203;60036.691;55818.781;-33953.629;11944.211;-42400.773;
-17414.066;-65617.414;-10354.361;55939.387;-12485.19;17217.586;-5748.1841;-52939.984;3788.3691;-36374.688;
-47798.117;-3859.8867;-67383.367;6551.7305;69640.852;-23204.814;53036.938;19569.656;75825.367;68597.547;
-57792.547;10064.84;-233.84766;38475.68;-8467.6328;74144.602;32933.156;49458.281;-68895.727;67220;
-68959.656;-96061.609;-17336.941;-88005.578;62021.469;-20178.898;104759.4;47623.305;-39020.211;-39793.723;
-89561.172;42773.375;-5354.5273;63039.734;49690.852;47312.195;86410.125;-4520.3828;-69183.891;4986.5039;
32331.43;-39948.441;-58494.246;6666.3047;-13046.723;-51026.148;4092.2712;22705.461;99123.969;-16809.293;
19290.816;-42426.664;30146.008;21572.396;-44838.492;-50665.617;40362.875;77299.578;1129.9922;67052.844;
30906.928;-21417.279;-88773.5;-56697.945;-6149.8516;-32655.414;104392.16;31592.172;49663.453;-13214.571;
-64743.953;-13424.896;-28868.938;-20198.01;-27200.957;-15003.543;17120.799;-1657.1094;-56752.367;16512.895;
86521.469;-123575.3;71437.93;135536.61;-23709.322;-65292.68;36329.602;32922.047;69421.273;-125957.82;
-14328.798;-86368.219;-106833.63;8377.6133;12324.682;-83865.773;-85725.578;-29483.301;-119134.58;67058.242;
-86251;32310;128810.93;-38039.195;-22856.314;20921.486;43354.898;-61034.414;28913.867;50250.766;
-7814.6841;-15136.012;-18085.723;30031.531;-26027.117;-48890.734;-47772.055;-38150.02;42819.469;78258.555;
32766.25;109040.04;-9595.7461;-5796.0337;49900.312;-67258.281;14491.996;99643.883;-40452.961;-65580.961;
14544.535;24572.061;-54859.949;-205.2998;-100127.59;13677.338;-131363.31;13696.725;-134549.81;-64303.812;
-20305.316;-11860.496;-66908.031;83732.766;63853.5;9390.2383;23063.664;-11186.686;37278.297;27524.729;
58628.203;16070.568;131936.56;130963.8;4551.8193;-6237.9971;46617.383;-83802.602;101590.19;1389.3438;
-134164.97;-12735.056;3971.4062;-42121.898;3377.7852;39534.297;-90611.938;56356.16;-98564.883;70634.703;
-62676.922;160033.31;41074.996;-38769.219;-47061.156;91255.766;-30748.465;63674.75;46135.078;7813.6406;
-40711.555;-10645.934;76359.586;-76701.812;-9426.6797;25137.523;49407.227;12602.049;80023.656;-31887.918;
147.24414;76904.172;-69862.547;-54427.938;-13961.676;-2680.0146;15487.627;-23027.328;-42511.188;21152.609;
4645.1953;50744.133;-53245.215;-8946.8418;-13522.031;62630.098;-34838.328;32270.332;9415.0459;-52434.383;
23543.172;-16162.203;-63911.711;-33745.574;76968.594;-12600.863;89738.398;-22854.549;19984.672;53926.383;
91393.375;26585.996;-9756.8965;141787.03;-11465.259;71038.367;83973.523;70937.859;108128.39;-44085.039;
-6049.9541;-67788.961;21430.162;78676.641;-90565.953;76299.117;37115.859;-16218.769;29181.586;-49849.234;
84675.016;-5875.1904;-5094.6514;70354.891;-34049.609;14675.773;-2193.6016;72461.141;-5644.6016;-37378.875;
-8380.5469;29130.25;8178.9141;-48173.07;-27107.432;12920.984;-8385.418;-5776.1143;-43431.133;-66777.211;
-53532.969;-69484.211;18041.281;18240.551;-2248.707;-42903.578;34409.262;41253.836;4288.625;-26412.539;
-50423.961;-45959.16;82830.516;50891.461;-75648.922;-7806.7461;42884.859;16285.625;131974.12;-302.87695;
31592.168;102400.22;-144853.67;26438.039;-9862.1562;38904.375;64670.891;56353.184;41170.215;77118.484;
14054.955;-90799.055;-81720.641;27748.512;-10791.003;2318.4688;48335.051;-54709.262;-39128.805;-47009.969;
59056.523;25988.268;-1445.166;-42920.355;-23807.393;65577.742;90729.758;-71093.375;34170.605;-45728.867;
-96549.648;-79962.844;-33358.27;-83881.984;27187.107;159075.38;32991.492;10738.012;55471.715;47438.027;
19861.07;19839.316;47319.867;-55070.516;-70450.938;-80647.656;20801.969;91939.805;-1960.7695;-86774.672;
11575.096;-12063.048;-38648.18;-68176.945;46780.727;90196.5;76997.219;-16661.566;51957.535;-32775.844;
14053.461;32553.957;65919.523;-13705.562;69354.406;-37258.59;3887.2148;77145.602;-9115.6748;-12568.594;
-77047.406;-40316.5;54115.852;50920.336;67308.344;512.18359;59274.195;-3794.4341;-5941.4526;20138.223;
-40448.09;31300.941;-32941.352;-8232.376;-19395.723;-14658.257;-42945.211;55384.848;-79077.188;12700.024;
-37580.398;-56781.969;-799.40234;93246.422;-194146.06;5159.4131;-80448.414;-141563.47;-4482.3965;-55879.547;
-51050.129;46929.426;14646.758;1324.418;-36104.949;-92118.281;-77751.594;31766.918;37870.363;-33083.18;
48800.945;19664.473;-13542.667;-6500.5811;9818.9062;-29048.643;103884.57;56309.57;-11559.555;-62139.758;
-78255.531;-19644.801;-40460.445;-91108.273;-108325.37;-2721.8281;50748.059;34057.602;-23972.121;-68574.078;
-83251.75;83914.664;45094.582;135089.72;6455.5137;80.803223;39111.609;-5635.3574;76266.766;35268.754;
-40330.789;-27983.633;-2462.5332;91192.797;-33840.898;78533.75;14090.037;1248.6279;47955.852;26571.953;
-59064.234;-69932.133;45655.453;-46269.531;261.67578;-32517.486;-57150.352;102116.2;-39584.164;28728.436;
55840.473;52566.609;110886.05;-38474.609;83675.812;-20849.381;-29806.584;-29052.59;-29297.285;-16488.225;
-35107.344;-39094.906;59316.617;40742.289;-33657.383;-70034.07;-67471.062;69535.07;19592.674;-6687.6514;
61634.926;40324.316;72333.422;85337.055;-41723.5;97963.719;-49879.758;25327.256;-10027.834;38126.523;
-63654.047;-9744.1133;55650.695;-44657.383;52339.098;-59963.852;-23162.213;-85601.617;1570.1934;-124221.19;
-90496.305;28406.473;597.9834;12046.129;-78769.219;-77992.344;-123619.31;-7550.3936;-28513.057;-26360.754;
40052.699;-13162.976;32593.014;-60460.465;-20728.17;-97734.328;-2585.6201;-106980.93;3739.415;-50069.863;
-38846.902;-58574.391;80928.922;95169.688;-11995.941;50759.469;54871.625;-37082.684;-16252.273;-53832.641;
-60926.07;-10932.572;-34820.465;-59720.25;19760.506;-9532.2949;71661.25;82241.5;-37547.867;-42328.629;
41569.68;47021.969;176065.75;3848.7266;8982.6406;-22316.303;-140341.28;14546.082;-47141.57;53121.234;
-6641.0337;59255.102;-75064.438;3899.6348;38670.867;-13764.707;-12067.271;71510.961;-6069.9727;39972.055;
-25909.932;47820.621;91212.062;3055.1914;-6947.4648;7699.1562;40073.477;23586.531;-12534.672;-28754.799;
22489.982;35750.902;7693.0156;90423.109;-81886.266;-90471.164;-5703.6387;74260.781;-72112.039;-21021.854;
-120153.53;63333.367;24784.648;88880.922;-26369.727;-88468.938;8330.6807;-19077.191;-65009.113;-4456.2119;
-97676.297;-41638.453;95890.07;61633.656;-9819.6357;-35047.902;-84641.539;-121004.73;26099.656;-96890.047;
73960.664;-2931.8916;73489.188;-57323.617;-84386.141;-52253.102;422.92188;70331.07;-23346.883;64360.688;
41213.438;-10498.396;-28454.01;-10835.766;28693.131;92243.203;-55555.863;23711.875;61726.52;5515.6914;
-47930;0;61726.512;-5515.6992;-55555.867;-23711.869;28693.121;-92243.203;-28454.027;10835.766;
41213.449;10498.395;-23346.883;-64360.691;422.91992;-70331.078;-84386.156;52253.094;73489.188;57323.617;
73960.656;2931.8984;26099.648;96890.062;-84641.531;121004.73;-9819.6387;35047.895;95890.07;-61633.656;
-97676.297;41638.445;-65009.105;4456.2139;8330.6768;19077.193;-26369.725;88468.938;24784.641;-88880.914;
-120153.52;-63333.363;-72112.039;21021.863;-5703.6553;-74260.781;-81886.281;90471.172;7693.0156;-90423.109;
22489.98;-35750.906;-12534.676;28754.805;40073.492;-23586.545;-6947.4668;-7699.1641;91212.055;-3055.1953;
-25909.926;-47820.617;-6069.9746;-39972.055;-12067.285;-71510.977;38670.867;13764.723;-75064.43;-3899.6348;
-6641.0195;-59255.086;-47141.566;-53121.234;-140341.28;-14546.088;8982.6328;22316.312;176065.75;-3848.7402;
41569.664;-47021.965;-37547.867;42328.625;71661.242;-82241.492;19760.504;9532.2988;-34820.477;59720.254;
-60926.078;10932.572;-16252.271;53832.641;54871.617;37082.68;-11995.937;-50759.453;80928.93;-95169.68;
-38846.898;58574.398;3739.4082;50069.859;-2585.6279;106980.95;-20728.18;97734.32;32593.02;60460.469;
40052.699;13162.974;-28513.055;26360.779;-123619.32;7550.3867;-78769.219;77992.352;597.98828;-12046.133;
-90496.312;-28406.471;1570.1777;124221.2;-23162.207;85601.633;52339.105;59963.844;55650.707;44657.391;
-63654.039;9744.1006;-10027.838;-38126.539;-49879.746;-25327.262;-41723.484;-97963.719;72333.422;-85337.055;
61634.93;-40324.32;19592.67;6687.6475;-67471.078;-69535.078;-33657.383;70034.094;59316.609;-40742.297;
-35107.344;39094.906;-29297.281;16488.219;-29806.596;29052.568;83675.797;20849.375;110886.05;38474.602;
55840.473;-52566.617;-39584.164;-28728.451;-57150.363;-102116.2;261.67969;32517.482;45655.438;46269.539;
-59064.234;69932.141;47955.867;-26571.961;14090.047;-1248.6196;-33840.895;-78533.75;-2462.5254;-91192.797;
-40330.805;27983.633;76266.758;-35268.754;39111.609;5635.3633;6455.5293;-80.804688;45094.57;-135089.72;
-83251.734;-83914.656;-23972.125;68574.086;50748.074;-34057.59;-108325.38;2721.8438;-40460.441;91108.281;
-78255.531;19644.801;-11559.545;62139.758;103884.57;-56309.57;9818.9092;29048.631;-13542.676;6500.5781;
48800.941;-19664.477;37870.355;33083.172;-77751.594;-31766.934;-36104.953;92118.273;14646.762;-1324.4297;
-51050.137;-46929.434;-4482.3965;55879.547;-80448.43;141563.47;-194146.09;-5159.4141;-799.40625;-93246.43;
-37580.398;56781.965;-79077.172;-12700.02;-42945.219;-55384.844;-19395.719;14658.258;-32941.344;8232.3867;
-40448.09;-31300.943;-5941.4648;-20138.23;59274.195;3794.4409;67308.344;-512.17969;54115.855;-50920.344;
-77047.406;40316.5;-9115.666;12568.59;3887.2188;-77145.609;69354.406;37258.59;65919.523;13705.555;
14053.461;-32553.963;51957.539;32775.848;76997.219;16661.57;46780.719;-90196.5;-38648.188;68176.953;
11575.091;12063.052;-1960.7812;86774.688;20801.977;-91939.781;-70450.945;80647.672;47319.879;55070.523;
19861.074;-19839.324;55471.719;-47438;32991.48;-10738.018;27187.098;-159075.38;-33358.273;83881.984;
-96549.641;79962.844;34170.602;45728.859;90729.758;71093.383;-23807.391;-65577.75;-1445.1602;42920.352;
59056.52;-25988.266;-39128.812;47009.953;48335.055;54709.27;-10791.008;-2318.4766;-81720.625;-27748.508;
14054.965;90799.055;41170.223;-77118.492;64670.91;-56353.184;-9862.1523;-38904.375;-144853.66;-26438.031;
31592.148;-102400.24;131974.12;302.87695;42884.867;-16285.611;-75648.922;7806.7324;82830.531;-50891.469;
-50423.953;45959.164;4288.6328;26412.543;34409.273;-41253.84;-2248.6973;42903.578;18041.285;-18240.543;
-53532.961;69484.203;-43431.133;66777.203;-8385.4141;5776.1216;-27107.436;-12920.98;8178.9023;48173.078;
-8380.5479;-29130.254;-5644.6016;37378.883;-2193.6123;-72461.133;-34049.605;-14675.762;-5094.6504;-70354.891;
84675.016;5875.1855;29181.59;49849.254;37115.859;16218.76;-90565.93;-76299.109;21430.156;-78676.641;
-6049.957;67788.961;108128.39;44085.039;83973.531;-70937.875;-11465.273;-71038.352;-9756.8945;-141787;
91393.375;-26585.988;19984.656;-53926.375;89738.398;22854.543;76968.594;12600.864;-63911.719;33745.578;
23543.172;16162.195;9415.0371;52434.363;-34838.332;-32270.336;-13522.025;-62630.109;-53245.203;8946.8457;
4645.1934;-50744.129;-42511.188;-21152.621;15487.635;23027.33;-13961.664;2680.0166;-69862.539;54427.934;
147.23633;-76904.172;80023.656;31887.924;49407.219;-12602.047;-9426.6719;-25137.514;76359.586;76701.812;
-40711.559;10645.926;46135.074;-7813.6367;-30748.49;-63674.75;-47061.164;-91255.758;41074.977;38769.215;
-62676.918;-160033.31;-98564.891;-70634.703;-90611.93;-56356.156;3377.8008;-39534.289;3971.4102;42121.895;
-134164.94;12735.058;101590.19;-1389.3438;46617.379;83802.602;4551.8203;6237.9951;131936.56;-130963.8;
58628.199;-16070.568;37278.289;-27524.729;23063.664;11186.68;63853.5;-9390.2383;-66908.055;-83732.781;
-20305.311;11860.506;-134549.81;64303.82;-131363.31;-13696.746;-100127.59;-13677.343;-54859.953;205.29199;
14544.547;-24572.064;-40452.969;65580.961;14491.996;-99643.891;49900.305;67258.297;-9595.7598;5796.0273;
32766.262;-109040.05;42819.484;-78258.547;-47772.055;38150.023;-26027.119;48890.734;-18085.727;-30031.539;
-7814.6846;15136.02;28913.867;-50250.777;43354.898;61034.398;-22856.311;-20921.477;128810.94;38039.195;
-86251;-32310;-119134.57;-67058.227;-85725.578;29483.303;12324.689;83865.773;-106833.63;-8377.6016;
-14328.795;86368.203;69421.266;125957.83;36329.609;-32922.055;-23709.322;65292.691;71437.93;-135536.62;
86521.469;123575.29;-56752.355;-16512.912;17120.805;1657.1133;-27200.949;15003.555;-28868.93;20198.018;
-64743.965;13424.904;49663.457;13214.575;104392.15;-31592.162;-6149.8516;32655.408;-88773.508;56697.93;
30906.926;21417.277;1129.9961;-67052.844;40362.867;-77299.594;-44838.508;50665.625;30146.008;-21572.389;
19290.814;42426.664;99123.953;16809.277;4092.2568;-22705.469;-13046.725;51026.164;-58494.25;-6666.3047;
32331.434;39948.441;-69183.891;-4986.5039;86410.141;4520.3809;49690.848;-47312.191;-5354.5234;-63039.719;
-89561.172;-42773.383;-39020.223;39793.719;104759.41;-47623.312;62021.449;20178.885;-17336.941;88005.547;
-68959.664;96061.609;-68895.727;-67219.984;32933.16;-49458.273;-8467.6406;-74144.602;-233.85547;-38475.66;
-57792.547;-10064.855;75825.375;-68597.531;53036.949;-19569.66;69640.859;23204.805;-67383.359;-6551.7344;
-47798.121;3859.8828;3788.3711;36374.672;-5748.1797;52939.988;-12485.189;-17217.582;-10354.36;-55939.375;
-17414.059;65617.414;11944.209;42400.777;55818.797;33953.621;-19219.211;-60036.695;-97225.953;19095.557;
-58902.969;17561.355;57238.266;-79889.805;29616.508;38092.602;-86360.883;-369.87109;4063.7539;42222.023;
9302.3135;60827.398;61325.742;8426.918;111519.42;16181.975;-52291.062;-5349.5674;-32802.789;66888.141;
3251.168;3724.2217;-1483.333;74767.609;2779.5547;-44994.422;-20020.113;42576.258;-70854.477;-58829.969;
-2544.7422;75180.375;66815.008;60646.492;63458.211;83768.391;-36263.207;6499.5381;-18217.658;10426.633;
-13990.562;-50471.652;-71145.922;93522.484;25305.254;-55180.188;-47197.262;76019.406;23747.703;13387.05;
-36732.477;83819.047;-64988.223;73195.883;-45703.621;11328.949;41018.406;79279.086;-55276.688;-44982.469;
77957.484;79898.281;-65953.719;-104691.12;-104263.4;66863.312;91477.547;13632.551;-52966.66;-69514.469;
-4966.0059;67880.539;-32838.312;-38567.691;-18534.078;-51423.023;-33120.387;37705.941;-4490.998;63619.883;
46106.531;17318.646;38101.867;-121858.89;-78325.562;9734.5391;-28374.961;-59989.512;-36221.387;60422.836;
20610.117;-10578.762;-70299.031;-8924.7148;-39484.203;38575.691;-32855.727;53981.363;27956.551;-144663.56;
10385.601;-21617.961;81586.727;-8343.7539;-56055.152;258.03125;38412.008;-75022.43;76775.875;-11886.797;
-14953.209;-37099.516;-25759.521;25457.541;-24318.787;-7288.5938;-67799.719;-79019.734;-4567.5273;-42694.336;
110745.27;28618.504;-15606.289;31251.523;1203.582;52821.379;-100023.39;77399.086;-30373.137;-25041.977;
-25964.598;-22347.5;44192.992;95576.055;-32709.043;-38938.418;-42129.625;2386.9331;-22120.939;-9676.0938;
-1087.1602;53390.16;-7040.8916;25853.266;42462.191;-22340.328;309;46005.941;-14614.566;35613.688;
-59183.023;-59011.719;942.48828;-39977.551;66683.086;25011.57;-3116.2109;10231.805;66533.93;-116725.7;
18966.332;-97238.203;25173.703;-124047.39;160227.3;-157640.84;5852.9062;65323.691;8534.5508;75787.086;
82377.273;22877.793;-41511.902;-34204.082;1064.6665;-53128.109;-166560.48;29661.859;-26456.648;-6742.3906;
-2134.9102;23916.562;66259.023;-50003.32;-66083.414;-146732.69;2854.8789;-50650.078;112032.75;23994.934;
-11467.625;-13508.117;-72824.266;-79463.969;24453.115;-8939.9688;70878.977;39413.062;22657.949;43913.496;
-120389.37;-4292.7646;-29884.967;-53250.828;-43456.031;-4860.9688;-46172.492;-8336.2744;54429.68;115378.06;
-103270.3;-26292.818;143378.86;-13538.632;-71639.453;18573.17;44981.977;-75046.406;54631.273;37615.766;
44165.215;-14894.133;-4377.375;-9464.0996;-2620.6289;-5225.0918;60943.117;23009.91;46271.395;41963.625;
19084.729;-32738.064;124330.8;-4891.3379;2713.5791;14593.908;-2757.1641;92780.305;-11626.945;-35452.23;
73017.641;80084.953;-71659.969;-43521.305;-1724.5547;-51568.75;-6134.4277;-72621.477;-51317.156;24392.795;
-38993.234;-38446.215;-10578.428;109689.79;2054.0664;42385.461;-45569.281;-20320.709;-30346.826;26463.234;
10620.852;-276.15527;-26415.07;-92126.656;70510.203;-82070.391;10242.23;38747.23;-49893.547;70961.594;
62960.566;23739.902;-92346.617;23822.059;-73201.305;70425.75;28057.465;76423.633;-10.768555;8217.3789;
-32098.707;93753.359;-79843.797;72995.969;-7403.6958;86455.891;28182.275;-41147.699;10508.184;-9660.0684;
-3917.2383;-35568.625;39579.082;-18133.117;-36328.945;49657.219;71493;-61189.531;-55775.664;-42574.973;
-28972.43;-77837.969;-80148;-61028.078;101863.23;-84750.453;18301.75;-26595.469;60800.93;469.28125;
-14851.146;21226.119;31190.416;14868.111;29049.195;-86173.047;-64734.484;-22768.711;-43022.105;-9968.4219;
58617.195;24412.762;-32869.574;31941.082;-72457.328;-131494.75;25223.773;8052.6211;-70715.359;-31569.932;
-7867.1523;81862.578;-32743.902;-72514;2022.5898;-35520.367;18045.26;-65477.969;78012.852;37681.664;
16253.129;101938.79;9401.3828;-34453.223;48510.703;-9387.1523;-21683.73;49481.848;92955.383;-16027.649;
-42154.199;-63768.898;76307.883;57587.547;-16045.138;-40858.605;-20604.953;-18214.816;10644.664;-20237.031;
56143.262;-28108.328;22167.711;44476.484;77869.625;-40030.695;-52926.336;-11022.018;77194.836;120401.83;
-27808.734;-15448.689;72827.539;51942.797;89890.648;22177.715;-64062.621;42707.812;49504.855;120212.28;
    };
    DataTable @["FFTPlot"] {
     name="FFTPlot";
     desc=;
     data {
      name="data";
      el_typ=int_Data;
      el_def=0;
      int_Data @["freq"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_113";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="freq";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1000] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
       };
      };
      float_Data @["power"] {
       name="power";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1000] 40499496;49504.848;-64062.633;89890.656;72827.547;-27808.738;77194.852;-52926.352;77869.641;22167.715;
56143.262;10644.672;-20604.961;-16045.15;76307.883;-42154.199;92955.391;-21683.719;48510.711;9401.3672;
16253.133;78012.852;18045.266;2022.5977;-32743.906;-7867.1514;-70715.375;25223.766;-72457.328;-32869.562;
58617.199;-43022.117;-64734.48;29049.203;31190.424;-14851.145;60800.918;18301.766;101863.26;-80148;
-28972.428;-55775.672;71492.992;-36328.941;39579.094;-3917.2363;10508.188;28182.281;-7403.6846;-79843.789;
-32098.711;-10.771484;28057.473;-73201.305;-92346.625;62960.566;-49893.539;10242.227;70510.203;-26415.059;
10620.855;-30346.822;-45569.285;2054.0586;-10578.418;-38993.242;-51317.164;-6134.4297;-1724.5684;-71659.984;
73017.633;-11626.943;-2757.1523;2713.5605;124330.8;19084.729;46271.391;60943.125;-2620.6289;-4377.375;
44165.215;54631.281;44981.98;-71639.461;143378.86;-103270.3;54429.672;-46172.484;-43456.027;-29884.955;
-120389.38;22657.947;70878.977;24453.111;-72824.258;-11467.621;112032.77;2854.8945;-66083.438;66259.016;
-2134.9102;-26456.646;-166560.5;1064.6748;-41511.91;82377.281;8534.5576;5852.9023;160227.3;25173.707;
18966.332;66533.93;-3116.1953;66683.078;942.48438;-59183.023;-14614.562;309.00391;42462.188;-7040.8828;
-1087.1602;-22120.934;-42129.617;-32709.049;44192.988;-25964.598;-30373.15;-100023.38;1203.5781;-15606.289;
110745.27;-4567.5156;-67799.719;-24318.789;-25759.504;-14953.212;76775.867;38412.008;-56055.148;81586.719;
10385.599;27956.555;-32855.715;-39484.199;-70299.031;20610.109;-36221.383;-28374.961;-78325.562;38101.863;
46106.535;-4491.0039;-33120.391;-18534.078;-32838.32;-4966.0117;-52966.668;91477.562;-104263.41;-65953.719;
77957.477;-55276.688;41018.406;-45703.625;-64988.219;-36732.469;23747.688;-47197.266;25305.264;-71145.922;
-13990.568;-18217.648;-36263.203;63458.203;66815;-2544.7412;-70854.477;-20020.109;2779.5586;-1483.3396;
3251.1719;-32802.789;-52291.062;111519.41;61325.766;9302.3086;4063.75;-86360.891;29616.516;57238.262;
-58902.965;-97225.969;-19219.203;55818.781;11944.211;-17414.066;-10354.361;-12485.19;-5748.1841;3788.3691;
-47798.117;-67383.367;69640.852;53036.938;75825.367;-57792.547;-233.84766;-8467.6328;32933.156;-68895.727;
-68959.656;-17336.941;62021.469;104759.4;-39020.211;-89561.172;-5354.5273;49690.852;86410.125;-69183.891;
32331.43;-58494.246;-13046.723;4092.2712;99123.969;19290.816;30146.008;-44838.492;40362.875;1129.9922;
30906.928;-88773.5;-6149.8516;104392.16;49663.453;-64743.953;-28868.938;-27200.957;17120.799;-56752.367;
86521.469;71437.93;-23709.322;36329.602;69421.273;-14328.798;-106833.63;12324.682;-85725.578;-119134.58;
-86251;128810.93;-22856.314;43354.898;28913.867;-7814.6841;-18085.723;-26027.117;-47772.055;42819.469;
32766.25;-9595.7461;49900.312;14491.996;-40452.961;14544.535;-54859.949;-100127.59;-131363.31;-134549.81;
-20305.316;-66908.031;63853.5;23063.664;37278.297;58628.203;131936.56;4551.8193;46617.383;101590.19;
-134164.97;3971.4062;3377.7852;-90611.938;-98564.883;-62676.922;41074.996;-47061.156;-30748.465;46135.078;
-40711.555;76359.586;-9426.6797;49407.227;80023.656;147.24414;-69862.547;-13961.676;15487.627;-42511.188;
4645.1953;-53245.215;-13522.031;-34838.328;9415.0459;23543.172;-63911.711;76968.594;89738.398;19984.672;
91393.375;-9756.8965;-11465.259;83973.523;108128.39;-6049.9541;21430.162;-90565.953;37115.859;29181.586;
84675.016;-5094.6514;-34049.609;-2193.6016;-5644.6016;-8380.5469;8178.9141;-27107.432;-8385.418;-43431.133;
-53532.969;18041.281;-2248.707;34409.262;4288.625;-50423.961;82830.516;-75648.922;42884.859;131974.12;
31592.168;-144853.67;-9862.1562;64670.891;41170.215;14054.955;-81720.641;-10791.003;48335.051;-39128.805;
59056.523;-1445.166;-23807.393;90729.758;34170.605;-96549.648;-33358.27;27187.107;32991.492;55471.715;
19861.07;47319.867;-70450.938;20801.969;-1960.7695;11575.096;-38648.18;46780.727;76997.219;51957.535;
14053.461;65919.523;69354.406;3887.2148;-9115.6748;-77047.406;54115.852;67308.344;59274.195;-5941.4526;
-40448.09;-32941.352;-19395.723;-42945.211;-79077.188;-37580.398;-799.40234;-194146.06;-80448.414;-4482.3965;
-51050.129;14646.758;-36104.949;-77751.594;37870.363;48800.945;-13542.667;9818.9062;103884.57;-11559.555;
-78255.531;-40460.445;-108325.37;50748.059;-23972.121;-83251.75;45094.582;6455.5137;39111.609;76266.766;
-40330.789;-2462.5332;-33840.898;14090.037;47955.852;-59064.234;45655.453;261.67578;-57150.352;-39584.164;
55840.473;110886.05;83675.812;-29806.584;-29297.285;-35107.344;59316.617;-33657.383;-67471.062;19592.674;
61634.926;72333.422;-41723.5;-49879.758;-10027.834;-63654.047;55650.695;52339.098;-23162.213;1570.1934;
-90496.305;597.9834;-78769.219;-123619.31;-28513.057;40052.699;32593.014;-20728.17;-2585.6201;3739.415;
-38846.902;80928.922;-11995.941;54871.625;-16252.273;-60926.07;-34820.465;19760.506;71661.25;-37547.867;
41569.68;176065.75;8982.6406;-140341.28;-47141.57;-6641.0337;-75064.438;38670.867;-12067.271;-6069.9727;
-25909.932;91212.062;-6947.4648;40073.477;-12534.672;22489.982;7693.0156;-81886.266;-5703.6387;-72112.039;
-120153.53;24784.648;-26369.727;8330.6807;-65009.113;-97676.297;95890.07;-9819.6357;-84641.539;26099.656;
73960.664;73489.188;-84386.141;422.92188;-23346.883;41213.438;-28454.01;28693.131;-55555.863;61726.52;
-47930;61726.512;-55555.867;28693.121;-28454.027;41213.449;-23346.883;422.91992;-84386.156;73489.188;
73960.656;26099.648;-84641.531;-9819.6387;95890.07;-97676.297;-65009.105;8330.6768;-26369.725;24784.641;
-120153.52;-72112.039;-5703.6553;-81886.281;7693.0156;22489.98;-12534.676;40073.492;-6947.4668;91212.055;
-25909.926;-6069.9746;-12067.285;38670.867;-75064.43;-6641.0195;-47141.566;-140341.28;8982.6328;176065.75;
41569.664;-37547.867;71661.242;19760.504;-34820.477;-60926.078;-16252.271;54871.617;-11995.937;80928.93;
-38846.898;3739.4082;-2585.6279;-20728.18;32593.02;40052.699;-28513.055;-123619.32;-78769.219;597.98828;
-90496.312;1570.1777;-23162.207;52339.105;55650.707;-63654.039;-10027.838;-49879.746;-41723.484;72333.422;
61634.93;19592.67;-67471.078;-33657.383;59316.609;-35107.344;-29297.281;-29806.596;83675.797;110886.05;
55840.473;-39584.164;-57150.363;261.67969;45655.438;-59064.234;47955.867;14090.047;-33840.895;-2462.5254;
-40330.805;76266.758;39111.609;6455.5293;45094.57;-83251.734;-23972.125;50748.074;-108325.38;-40460.441;
-78255.531;-11559.545;103884.57;9818.9092;-13542.676;48800.941;37870.355;-77751.594;-36104.953;14646.762;
-51050.137;-4482.3965;-80448.43;-194146.09;-799.40625;-37580.398;-79077.172;-42945.219;-19395.719;-32941.344;
-40448.09;-5941.4648;59274.195;67308.344;54115.855;-77047.406;-9115.666;3887.2188;69354.406;65919.523;
14053.461;51957.539;76997.219;46780.719;-38648.188;11575.091;-1960.7812;20801.977;-70450.945;47319.879;
19861.074;55471.719;32991.48;27187.098;-33358.273;-96549.641;34170.602;90729.758;-23807.391;-1445.1602;
59056.52;-39128.812;48335.055;-10791.008;-81720.625;14054.965;41170.223;64670.91;-9862.1523;-144853.66;
31592.148;131974.12;42884.867;-75648.922;82830.531;-50423.953;4288.6328;34409.273;-2248.6973;18041.285;
-53532.961;-43431.133;-8385.4141;-27107.436;8178.9023;-8380.5479;-5644.6016;-2193.6123;-34049.605;-5094.6504;
84675.016;29181.59;37115.859;-90565.93;21430.156;-6049.957;108128.39;83973.531;-11465.273;-9756.8945;
91393.375;19984.656;89738.398;76968.594;-63911.719;23543.172;9415.0371;-34838.332;-13522.025;-53245.203;
4645.1934;-42511.188;15487.635;-13961.664;-69862.539;147.23633;80023.656;49407.219;-9426.6719;76359.586;
-40711.559;46135.074;-30748.49;-47061.164;41074.977;-62676.918;-98564.891;-90611.93;3377.8008;3971.4102;
-134164.94;101590.19;46617.379;4551.8203;131936.56;58628.199;37278.289;23063.664;63853.5;-66908.055;
-20305.311;-134549.81;-131363.31;-100127.59;-54859.953;14544.547;-40452.969;14491.996;49900.305;-9595.7598;
32766.262;42819.484;-47772.055;-26027.119;-18085.727;-7814.6846;28913.867;43354.898;-22856.311;128810.94;
-86251;-119134.57;-85725.578;12324.689;-106833.63;-14328.795;69421.266;36329.609;-23709.322;71437.93;
86521.469;-56752.355;17120.805;-27200.949;-28868.93;-64743.965;49663.457;104392.15;-6149.8516;-88773.508;
30906.926;1129.9961;40362.867;-44838.508;30146.008;19290.814;99123.953;4092.2568;-13046.725;-58494.25;
32331.434;-69183.891;86410.141;49690.848;-5354.5234;-89561.172;-39020.223;104759.41;62021.449;-17336.941;
-68959.664;-68895.727;32933.16;-8467.6406;-233.85547;-57792.547;75825.375;53036.949;69640.859;-67383.359;
-47798.121;3788.3711;-5748.1797;-12485.189;-10354.36;-17414.059;11944.209;55818.797;-19219.211;-97225.953;
-58902.969;57238.266;29616.508;-86360.883;4063.7539;9302.3135;61325.742;111519.42;-52291.062;-32802.789;
3251.168;-1483.333;2779.5547;-20020.113;-70854.477;-2544.7422;66815.008;63458.211;-36263.207;-18217.658;
-13990.562;-71145.922;25305.254;-47197.262;23747.703;-36732.477;-64988.223;-45703.621;41018.406;-55276.688;
77957.484;-65953.719;-104263.4;91477.547;-52966.66;-4966.0059;-32838.312;-18534.078;-33120.387;-4490.998;
46106.531;38101.867;-78325.562;-28374.961;-36221.387;20610.117;-70299.031;-39484.203;-32855.727;27956.551;
10385.601;81586.727;-56055.152;38412.008;76775.875;-14953.209;-25759.521;-24318.787;-67799.719;-4567.5273;
110745.27;-15606.289;1203.582;-100023.39;-30373.137;-25964.598;44192.992;-32709.043;-42129.625;-22120.939;
-1087.1602;-7040.8916;42462.191;309;-14614.566;-59183.023;942.48828;66683.086;-3116.2109;66533.93;
18966.332;25173.703;160227.3;5852.9062;8534.5508;82377.273;-41511.902;1064.6665;-166560.48;-26456.648;
-2134.9102;66259.023;-66083.414;2854.8789;112032.75;-11467.625;-72824.266;24453.115;70878.977;22657.949;
-120389.37;-29884.967;-43456.031;-46172.492;54429.68;-103270.3;143378.86;-71639.453;44981.977;54631.273;
44165.215;-4377.375;-2620.6289;60943.117;46271.395;19084.729;124330.8;2713.5791;-2757.1641;-11626.945;
73017.641;-71659.969;-1724.5547;-6134.4277;-51317.156;-38993.234;-10578.428;2054.0664;-45569.281;-30346.826;
10620.852;-26415.07;70510.203;10242.23;-49893.547;62960.566;-92346.617;-73201.305;28057.465;-10.768555;
-32098.707;-79843.797;-7403.6958;28182.275;10508.184;-3917.2383;39579.082;-36328.945;71493;-55775.664;
-28972.43;-80148;101863.23;18301.75;60800.93;-14851.146;31190.416;29049.195;-64734.484;-43022.105;
58617.195;-32869.574;-72457.328;25223.773;-70715.359;-7867.1523;-32743.902;2022.5898;18045.26;78012.852;
16253.129;9401.3828;48510.703;-21683.73;92955.383;-42154.199;76307.883;-16045.138;-20604.953;10644.664;
56143.262;22167.711;77869.625;-52926.336;77194.836;-27808.734;72827.539;89890.648;-64062.621;0;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      name="row_indexes";
     [1000] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
     };
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="control_panel_cells";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    RndSeed_List @["rnd_seeds"] {
     name="rnd_seeds";
     seeds {
      name="seeds";
      el_typ=RndSeed;
      el_def=0;
      RndSeed @["RndSeed_1"] {
       name="RndSeed_1";
       rnd_seed=820149272;
      };
      RndSeed @["RndSeed_2"] {
       name="RndSeed_2";
       rnd_seed=820149273;
      };
      RndSeed @["RndSeed_3"] {
       name="RndSeed_3";
       rnd_seed=820149274;
      };
      RndSeed @["RndSeed_4"] {
       name="RndSeed_4";
       rnd_seed=820149275;
      };
      RndSeed @["RndSeed_5"] {
       name="RndSeed_5";
       rnd_seed=820149276;
      };
      RndSeed @["RndSeed_6"] {
       name="RndSeed_6";
       rnd_seed=820149277;
      };
      RndSeed @["RndSeed_7"] {
       name="RndSeed_7";
       rnd_seed=820149278;
      };
      RndSeed @["RndSeed_8"] {
       name="RndSeed_8";
       rnd_seed=820149279;
      };
      RndSeed @["RndSeed_9"] {
       name="RndSeed_9";
       rnd_seed=820149280;
      };
      RndSeed @["RndSeed_10"] {
       name="RndSeed_10";
       rnd_seed=820149281;
      };
      RndSeed @["RndSeed_11"] {
       name="RndSeed_11";
       rnd_seed=820149282;
      };
      RndSeed @["RndSeed_12"] {
       name="RndSeed_12";
       rnd_seed=820149283;
      };
      RndSeed @["RndSeed_13"] {
       name="RndSeed_13";
       rnd_seed=820149284;
      };
      RndSeed @["RndSeed_14"] {
       name="RndSeed_14";
       rnd_seed=820149285;
      };
      RndSeed @["RndSeed_15"] {
       name="RndSeed_15";
       rnd_seed=820149286;
      };
      RndSeed @["RndSeed_16"] {
       name="RndSeed_16";
       rnd_seed=820149287;
      };
      RndSeed @["RndSeed_17"] {
       name="RndSeed_17";
       rnd_seed=820149288;
      };
      RndSeed @["RndSeed_18"] {
       name="RndSeed_18";
       rnd_seed=820149289;
      };
      RndSeed @["RndSeed_19"] {
       name="RndSeed_19";
       rnd_seed=820149290;
      };
      RndSeed @["RndSeed_20"] {
       name="RndSeed_20";
       rnd_seed=820149291;
      };
      RndSeed @["RndSeed_21"] {
       name="RndSeed_21";
       rnd_seed=820149292;
      };
      RndSeed @["RndSeed_22"] {
       name="RndSeed_22";
       rnd_seed=820149293;
      };
      RndSeed @["RndSeed_23"] {
       name="RndSeed_23";
       rnd_seed=820149294;
      };
      RndSeed @["RndSeed_24"] {
       name="RndSeed_24";
       rnd_seed=820149295;
      };
      RndSeed @["RndSeed_25"] {
       name="RndSeed_25";
       rnd_seed=820149296;
      };
     };
    };
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @["orig_table"] {
     name="orig_table";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["PermuteTest"].objs["OrigTable"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["permuted_table"] {
     name="permuted_table";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["n_categs"] {
     name="n_categs";
     var_type=T_Int;
     int_val=1000;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["n_items"] {
     name="n_items";
     var_type=T_Int;
     int_val=81;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["cpy_fm_orig"] {
     name="cpy_fm_orig";
     var_type=T_Bool;
     bool_val=1;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["init_rnd_seed"] {
     name="init_rnd_seed";
     var_type=T_Bool;
     bool_val=1;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["thr_no"] {
     name="thr_no";
     var_type=T_Int;
     int_val=1;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["cat_group"] {
     name="cat_group";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["PermuteTest"].objs["CatGroup"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["item_group"] {
     name="item_group";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["PermuteTest"].objs["ItemGroup"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["fft_out"] {
     name="fft_out";
     var_type=T_Object;
     object_type=complex_float_Matrix;
     object_val=.projects["permute_test"].programs["PermuteTest"].objs["fft_out"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["fftplot"] {
     name="fftplot";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["PermuteTest"].objs["FFTPlot"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["rnd_seeds"] {
     name="rnd_seeds";
     var_type=T_Object;
     object_type=RndSeed_List;
     object_val=.projects["permute_test"].programs["PermuteTest"].objs["rnd_seeds"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
    Function @["MakeOrigData"] {
     desc=;
     flags=0;
     code_string=;
     pre_compile_code_string="MakeOrigData() returns: int";
     name="MakeOrigData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name="ProgVar_List_1";
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name="ProgEl_List_51";
      el_typ=ProgCode;
      el_def=0;
      LocalVars @[0] {
       desc=;
       flags=0;
       code_string=;
       pre_compile_code_string="LocalVars (2 vars)";
       local_vars {
	name="local_vars";
	el_typ=ProgVar;
	el_def=0;
	ProgVar @["cat"] {
	 name="cat";
	 var_type=T_Int;
	 int_val=0;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @["itm"] {
	 name="itm";
	 var_type=T_Int;
	 int_val=0;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      MethodCall @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="orig_table.ResetData()";
       pre_compile_code_string="orig_table->ResetData()";
       result_var=NULL;
       obj=.projects["permute_test"].programs["PermuteTest"].vars["orig_table"]$$;
       method=DataTable::ResetData;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="void ResetData()";
       meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
      };
      ForLoop @[2] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="for(cat=0;cat<n_categs;cat++)";
       pre_compile_code_string="for (cat=0; cat<n_categs; cat++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="for(itm=0; itm<n_items; itm++)";
	 pre_compile_code_string="for (itm=0; itm<n_items; itm++)";
	 loop_code {
	  name="loop_code";
	  el_typ=ProgCode;
	  el_def=0;
	  MethodCall @[0] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   code_string="orig_table.AddBlankRow()";
	   pre_compile_code_string="orig_table->AddBlankRow()";
	   result_var=NULL;
	   obj=$.projects["permute_test"].programs["PermuteTest"].vars["orig_table"]$;
	   method=DataTable::AddBlankRow;
	   meth_args {
	    name="meth_args";
	    el_typ=ProgArg;
	    el_def=0;
	   };
	   meth_sig="int AddBlankRow()";
	   meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	  };
	  MatrixAssign @[1] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   code_string="orig_table[0][-1]=cat";
	   pre_compile_code_string="orig_table[2][-1] = cat";
	   variable=$.projects["permute_test"].programs["PermuteTest"].vars["orig_table"]$;
	   data_table=1;
	   col {
	    expr="2";
	   };
	   dim0 {
	    expr="-1";
	   };
	   dim1 {
	    expr=;
	   };
	   dim2 {
	    expr=;
	   };
	   dim3 {
	    expr=;
	   };
	   dim4 {
	    expr=;
	   };
	   dim5 {
	    expr=;
	   };
	   expr {
	    expr="cat";
	   };
	  };
	  MatrixAssign @[2] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   code_string="orig_table[0][-1]=cat";
	   pre_compile_code_string="orig_table[3][-1] = itm";
	   variable=$.projects["permute_test"].programs["PermuteTest"].vars["orig_table"]$;
	   data_table=1;
	   col {
	    expr="3";
	   };
	   dim0 {
	    expr="-1";
	   };
	   dim1 {
	    expr=;
	   };
	   dim2 {
	    expr=;
	   };
	   dim3 {
	    expr=;
	   };
	   dim4 {
	    expr=;
	   };
	   dim5 {
	    expr=;
	   };
	   expr {
	    expr="itm";
	   };
	  };
	 };
	 init {
	  expr="itm=0";
	 };
	 test {
	  expr="itm<n_items";
	 };
	 iter {
	  expr="itm++";
	 };
	};
       };
       init {
	expr="cat=0";
       };
       test {
	expr="cat<n_categs";
       };
       iter {
	expr="cat++";
       };
      };
      MethodCall @[3] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="orig_table.InitValsToRowNo(\"row_no\")";
       pre_compile_code_string="orig_table->InitValsToRowNo(\"orig_row_no\")";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["PermuteTest"].vars["orig_table"]$;
       method=DataTable::InitValsToRowNo;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="col";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"orig_row_no\"";
	 };
	};
       };
       meth_sig="bool InitValsToRowNo(Variant& col)";
       meth_desc=" initialize all values in given column to be equal to the row number -- only valid for scalar (not matrix) columns -- column can be specified as either integer index or a string that is then used to find the given column name";
      };
     };
    };
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=0;
     code_string=;
     pre_compile_code_string="LocalVars (1 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @["cat"] {
       name="cat";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    If @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if(orig_table.rows == 0)";
     pre_compile_code_string="if (orig_table.rows != n_categs * n_items)";
     cond {
      expr="orig_table.rows != n_categs * n_items";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      FunctionCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="MakeOrigData()";
       pre_compile_code_string="MakeOrigData()";
       result_var=NULL;
       fun=.projects["permute_test"].programs["PermuteTest"].functions["MakeOrigData"]$$;
       fun_args {
	name="fun_args";
	el_typ=ProgArg;
	el_def=0;
       };
      };
     };
    };
    If @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if(cpy_fm_orig)";
     pre_compile_code_string="if (cpy_fm_orig || permuted_table.rows == 0)";
     cond {
      expr="cpy_fm_orig || permuted_table.rows == 0";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MethodCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="PermutedTable.CopyFrom(OrigTable)";
       pre_compile_code_string="permuted_table->CopyFrom(orig_table)";
       result_var=NULL;
       obj=.projects["permute_test"].programs["PermuteTest"].vars["permuted_table"]$$;
       method=taBase::CopyFrom;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taBase_ptr;
	 type="taBase*";
	 name="cpy_from";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="orig_table";
	 };
	};
       };
       meth_sig="bool CopyFrom(taBase* cpy_from)";
       meth_desc=" Copy from given object into this object (this is a safe interface to UnSafeCopy)";
      };
     };
    };
    If @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if(init_rnd_seed)";
     pre_compile_code_string="if (init_rnd_seed)";
     cond {
      expr="init_rnd_seed";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MethodCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="rnd_seeds.UseSeed(0)";
       pre_compile_code_string="rnd_seeds->UseSeed(0)";
       result_var=NULL;
       obj=.projects["permute_test"].programs["PermuteTest"].vars["rnd_seeds"]$$;
       method=RndSeed_List::UseSeed;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="idx";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
       };
       meth_sig="void UseSeed(int idx)";
       meth_desc=" use seed at given index in the list (does OldSeed on it); wraps around (modulus) if idx is > list size (issues warning)";
      };
     };
    };
    MethodCall @[4] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="permuted_table.Permute()";
     pre_compile_code_string="permuted_table->PermuteRows(thr_no)";
     result_var=NULL;
     obj=$.projects["permute_test"].programs["PermuteTest"].vars["permuted_table"]$;
     method=DataTable::PermuteRows;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=int;
       type="int";
       name="thr_no";
       required=0;
       def_val="-1";
       prev_expr=;
       expr {
	expr="thr_no";
       };
      };
     };
     meth_sig="void PermuteRows(int thr_no = -1)";
     meth_desc=" permute the order of rows in the data table -- randomly shuffles the rows -- this is very efficiently implemented by shuffling the row_indexes lookup table, not the actual rows in memory. Note: you can instantly recover the original full set of rows, unsorted and unfiltered, by using ShowAllRows on the DataTable -- see that function for more details -- to be be able to undo just this Permute you would need to run Flatten first -- (0 <= thr_no < 100) specifies thread or dmem proc number for parallel safe random sequences (-1 = taMisc::dmem_proc for auto-safe dmem)";
    };
    MethodCall @[5] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="orig_table.InitValsToRowNo(\"row_no\")";
     pre_compile_code_string="permuted_table->InitValsToRowNo(\"cur_row_no\")";
     result_var=NULL;
     obj=$.projects["permute_test"].programs["PermuteTest"].vars["permuted_table"]$;
     method=DataTable::InitValsToRowNo;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_Variant_ref;
       type="Variant&";
       name="col";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"cur_row_no\"";
       };
      };
     };
     meth_sig="bool InitValsToRowNo(Variant& col)";
     meth_desc=" initialize all values in given column to be equal to the row number -- only valid for scalar (not matrix) columns -- column can be specified as either integer index or a string that is then used to find the given column name";
    };
    DataGroupProg @[6] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="group";
     pre_compile_code_string="Group from:  src table = permuted_table dest table = cat_group";
     src_data_var=$.projects["permute_test"].programs["PermuteTest"].vars["permuted_table"]$;
     dest_data_var=.projects["permute_test"].programs["PermuteTest"].vars["cat_group"]$$;
     group_spec {
      name="group_spec";
      ops {
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["categ_GROUP_0"] {
	col_name="categ";
	name="categ_GROUP_0";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["orig_row_no_MEAN_1"] {
	col_name="orig_row_no";
	name="orig_row_no_MEAN_1";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["cur_row_no_MEAN_2"] {
	col_name="cur_row_no";
	name="cur_row_no_MEAN_2";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataGroupProg @[7] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="group";
     pre_compile_code_string="Group from:  src table = permuted_table dest table = item_group";
     src_data_var=$.projects["permute_test"].programs["PermuteTest"].vars["permuted_table"]$;
     dest_data_var=.projects["permute_test"].programs["PermuteTest"].vars["item_group"]$$;
     group_spec {
      name="group_spec";
      ops {
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["item_GROUP_0"] {
	col_name="item";
	name="item_GROUP_0";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["orig_row_no_MEAN_1"] {
	col_name="orig_row_no";
	name="orig_row_no_MEAN_1";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["cur_row_no_MEAN_2"] {
	col_name="cur_row_no";
	name="cur_row_no_MEAN_2";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataAnalCall @[8] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="taDataAnal::RegressLinear()";
     pre_compile_code_string="taDataAnal::RegressLinear(permuted_table, \"orig_row_no\", \"cur_row_no\", true)";
     result_var=NULL;
     object_type=taDataAnal;
     method=taDataAnal::RegressLinear;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="src_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="permuted_table";
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="taString&";
       name="x_data_col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"orig_row_no\"";
       };
      };
      ProgArg @[2] {
       arg_type=const_taString_ref;
       type="taString&";
       name="y_data_col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"cur_row_no\"";
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="render_line";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr="true";
       };
      };
     };
    };
    MathCall @[9] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="taMath_float::fft_real()";
     pre_compile_code_string="taMath_float::fft_real(fft_out, cat_group.data.cur_row_no_mean.ar)";
     result_var=NULL;
     object_type=taMath_float;
     method=taMath_float::fft_real;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=complex_float_Matrix_ptr;
       type="complex_float_Matrix*";
       name="out_mat";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="fft_out";
       };
      };
      ProgArg @[1] {
       arg_type=const_float_Matrix_ptr;
       type="float_Matrix*";
       name="in_mat";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="cat_group.data.cur_row_no_mean.ar";
       };
      };
     };
    };
    MethodCall @[10] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="fftplot.EnforceRows(fft_out.dim(1))";
     pre_compile_code_string="fftplot->EnforceRows(fft_out.dim(1))";
     result_var=NULL;
     obj=.projects["permute_test"].programs["PermuteTest"].vars["fftplot"]$$;
     method=DataTable::EnforceRows;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=int;
       type="int";
       name="n_rows";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="fft_out.dim(1)";
       };
      };
     };
     meth_sig="void EnforceRows(int n_rows)";
     meth_desc=" ensure that there are exactly n_rows in the table, removing or adding as needed";
    };
    CssExpr @[11] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="fftplot[\"power\"][:} = fft_out[0,:];";
     pre_compile_code_string="fftplot[\"power\"][:] = fft_out[0,:];";
     expr {
      expr="fftplot[\"power\"][:] = fft_out[0,:];";
     };
    };
    MethodCall @[12] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="fftplot.InitValsToRowNo(\"freq\")";
     pre_compile_code_string="fftplot->InitValsToRowNo(\"freq\")";
     result_var=NULL;
     obj=$.projects["permute_test"].programs["PermuteTest"].vars["fftplot"]$;
     method=DataTable::InitValsToRowNo;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_Variant_ref;
       type="Variant&";
       name="col";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"freq\"";
       };
      };
     };
     meth_sig="bool InitValsToRowNo(Variant& col)";
     meth_desc=" initialize all values in given column to be equal to the row number -- only valid for scalar (not matrix) columns -- column can be specified as either integer index or a string that is then used to find the given column name";
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
    html_text="<html>
<head></head>
<body>
<h2> Enter Title Here </h2>
</body>
</html>
";
   };
  };
  Program @["ImagenetPermute"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_114";
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @["DocLink"] {
     name="DocLink";
     doc=.projects["permute_test"].programs["ImagenetPermute"].doc$$;
    };
   };
   name="ImagenetPermute";
   short_nm="mgnPrm";
   tags=;
   desc=;
   version {
    major=0;
    minor=0;
    step=0;
   };
   author="Randall C. O'Reilly";
   email="emergent-users@grey.colorado.edu";
   flags=NO_STOP_STEP;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=DataTable;
    el_def=0;
    DataTable @["imagenet_1000"] {
     name="imagenet_1000";
     desc=;
     data {
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @["category"] {
       name="category";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["individual"] {
       name="individual";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file="imagenet_1000_tst.dat";
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="DataSortSpec_48";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="DataTableCell_List_46";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["imagenet_nums"] {
     name="imagenet_nums";
     desc=;
     data {
      name="data";
      el_typ=String_Data;
      el_def=0;
      int_Data @["category"] {
       name="category";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      String_Data @["individual"] {
       name="individual";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file="imagenet_1000_nums.dat";
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name=;
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name=;
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["imagenet_categs"] {
     name="imagenet_categs";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      String_Data @["category_group"] {
       name="category_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["N"] {
       name="N";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="DataSortSpec_49";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="DataTableCell_List_47";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["ReAggList"] {
     name="ReAggList";
     desc=;
     data {
      name="data";
      el_typ=String_Data;
      el_def=0;
      int_Data @["category"] {
       name="category";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      String_Data @["individual"] {
       name="individual";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["cur_row"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["proc"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_157";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="proc";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["cur_row_gp"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_gp";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file="imagenet_1000_nums.dat";
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="DataSortSpec_261";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="DataTableCell_List_259";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["ReAggList_sorted"] {
     name="ReAggList_sorted";
     desc=;
     data {
      name="data";
      el_typ=String_Data;
      el_def=0;
      int_Data @["category"] {
       name="category";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      String_Data @["individual"] {
       name="individual";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["cur_row"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["proc"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_157";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="proc";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["cur_row_gp"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_gp";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file="imagenet_1000_nums.dat";
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="DataSortSpec_74";
      ops {
       name="DataOpList_167";
       el_typ=DataSortEl;
       el_def=0;
       DataSortEl @["cur_row_gp_up_0"] {
	col_name="cur_row_gp";
	name="cur_row_gp_up_0";
	order=ASCENDING;
       };
       DataSortEl @["category_up_1"] {
	col_name="category";
	name="category_up_1";
	order=ASCENDING;
       };
       DataSortEl @["proc_up_2"] {
	col_name="proc";
	name="proc_up_2";
	order=ASCENDING;
       };
       DataSortEl @["cur_row_gp_up_3"] {
	col_name="cur_row_gp";
	name="cur_row_gp_up_3";
	order=ASCENDING;
       };
       DataSortEl @["cur_row_gp_up_4"] {
	col_name="cur_row_gp";
	name="cur_row_gp_up_4";
	order=ASCENDING;
       };
       DataSortEl @["cur_row_gp_up_5"] {
	col_name="cur_row_gp";
	name="cur_row_gp_up_5";
	order=ASCENDING;
       };
      };
     };
     control_panel_cells {
      name=;
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["CatGroup"] {
     name="CatGroup";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      int_Data @["category_group"] {
       name="category_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      float_Data @["cur_row_gp_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_gp_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      float_Data @["proc_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_157";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="proc_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name="DataSortSpec_51";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name="DataTableCell_List_49";
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["RowGroup"] {
     name="RowGroup";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      int_Data @["cur_row_gp_group"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_gp_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["category_group"] {
       name="category_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      float_Data @["proc_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_157";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="proc_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name=;
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name=;
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["RowCatGroup"] {
     name="RowCatGroup";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      int_Data @["cur_row_gp_group"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_gp_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      float_Data @["category_mean"] {
       name="category_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      float_Data @["proc_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_157";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="proc_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name=;
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name=;
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["RowCatGroup_smooth"] {
     name="RowCatGroup_smooth";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      int_Data @["cur_row_group"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_156";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="cur_row_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      float_Data @["category_mean"] {
       name="category_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      float_Data @["proc_mean"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_157";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="proc_mean";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name=;
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name=;
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    DataTable @["ItemGroup"] {
     name="ItemGroup";
     desc=;
     data {
      name="data";
      el_typ=DataColT;
      el_def=0;
      int_Data @["category_group"] {
       name="category_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      String_Data @["individual_group"] {
       name="individual_group";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
      int_Data @["N"] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_157";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @["NARROW"] {
	 name="NARROW";
	 value 1 0=1;
	 val_type_fixed=0;
	};
       };
       name="N";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=0;
       matrix_col_width=10;
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     last_sort_spec {
      name=;
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     control_panel_cells {
      name=;
      el_typ=DataTableCell;
      el_def=0;
     };
    };
    RndSeed_List @["rnd_seeds"] {
     name="rnd_seeds";
     seeds {
      name="seeds";
      el_typ=RndSeed;
      el_def=0;
      RndSeed @["RndSeed_1"] {
       name="RndSeed_1";
       rnd_seed=820149272;
      };
      RndSeed @["RndSeed_2"] {
       name="RndSeed_2";
       rnd_seed=820149273;
      };
      RndSeed @["RndSeed_3"] {
       name="RndSeed_3";
       rnd_seed=820149274;
      };
      RndSeed @["RndSeed_4"] {
       name="RndSeed_4";
       rnd_seed=820149275;
      };
      RndSeed @["RndSeed_5"] {
       name="RndSeed_5";
       rnd_seed=820149276;
      };
      RndSeed @["RndSeed_6"] {
       name="RndSeed_6";
       rnd_seed=820149277;
      };
      RndSeed @["RndSeed_7"] {
       name="RndSeed_7";
       rnd_seed=820149278;
      };
      RndSeed @["RndSeed_8"] {
       name="RndSeed_8";
       rnd_seed=820149279;
      };
      RndSeed @["RndSeed_9"] {
       name="RndSeed_9";
       rnd_seed=820149280;
      };
      RndSeed @["RndSeed_10"] {
       name="RndSeed_10";
       rnd_seed=820149281;
      };
      RndSeed @["RndSeed_11"] {
       name="RndSeed_11";
       rnd_seed=820149282;
      };
      RndSeed @["RndSeed_12"] {
       name="RndSeed_12";
       rnd_seed=820149283;
      };
      RndSeed @["RndSeed_13"] {
       name="RndSeed_13";
       rnd_seed=820149284;
      };
      RndSeed @["RndSeed_14"] {
       name="RndSeed_14";
       rnd_seed=820149285;
      };
      RndSeed @["RndSeed_15"] {
       name="RndSeed_15";
       rnd_seed=820149286;
      };
      RndSeed @["RndSeed_16"] {
       name="RndSeed_16";
       rnd_seed=820149287;
      };
      RndSeed @["RndSeed_17"] {
       name="RndSeed_17";
       rnd_seed=820149288;
      };
      RndSeed @["RndSeed_18"] {
       name="RndSeed_18";
       rnd_seed=820149289;
      };
      RndSeed @["RndSeed_19"] {
       name="RndSeed_19";
       rnd_seed=820149290;
      };
      RndSeed @["RndSeed_20"] {
       name="RndSeed_20";
       rnd_seed=820149291;
      };
      RndSeed @["RndSeed_21"] {
       name="RndSeed_21";
       rnd_seed=820149292;
      };
      RndSeed @["RndSeed_22"] {
       name="RndSeed_22";
       rnd_seed=820149293;
      };
      RndSeed @["RndSeed_23"] {
       name="RndSeed_23";
       rnd_seed=820149294;
      };
      RndSeed @["RndSeed_24"] {
       name="RndSeed_24";
       rnd_seed=820149295;
      };
      RndSeed @["RndSeed_25"] {
       name="RndSeed_25";
       rnd_seed=820149296;
      };
     };
    };
    DataTable_Group @["splits"] {
     name="splits";
     el_typ=DataTable;
     el_def=0;
     save_tables=1;
     DataTable @["proc0"] {
      name="proc0";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_52";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_50";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc1"] {
      name="proc1";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_53";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_51";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc2"] {
      name="proc2";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_54";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_52";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc3"] {
      name="proc3";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_55";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_53";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc4"] {
      name="proc4";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_56";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_54";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc5"] {
      name="proc5";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_57";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_55";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc6"] {
      name="proc6";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_58";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_56";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc7"] {
      name="proc7";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_59";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_57";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc8"] {
      name="proc8";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_60";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_58";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc9"] {
      name="proc9";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_61";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_59";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc10"] {
      name="proc10";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_62";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_60";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc11"] {
      name="proc11";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_63";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_61";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc12"] {
      name="proc12";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_64";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_62";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc13"] {
      name="proc13";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_65";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_63";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc14"] {
      name="proc14";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_66";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_64";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
     DataTable @["proc15"] {
      name="proc15";
      desc=;
      data {
       name="data";
       el_typ=String_Data;
       el_def=0;
       int_Data @["category"] {
	name="category";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       String_Data @["individual"] {
	name="individual";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["cur_row"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_156";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="cur_row";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
       int_Data @["proc"] {
	UserDataItem_List @*(.user_data_) {
	 name="UserDataItem_List_157";
	 el_typ=UserDataItem;
	 el_def=0;
	 UserDataItem @["NARROW"] {
	  name="NARROW";
	  value 1 0=1;
	  val_type_fixed=0;
	 };
	};
	name="proc";
	col_flags=SAVE_DATA|AUTO_WIDTH;
	is_matrix=0;
	cell_geom{ 1;	};
	calc_expr {
	 expr=;
	};
	dim_names {
	 name="dim_names";
	[0] 	};
	width=0;
	matrix_col_width=10;
       };
      };
      data_flags=AUTO_CALC;
      auto_load=NO_AUTO_LOAD;
      auto_load_file="imagenet_1000_nums.dat";
      row_height=1;
      max_col_width=50;
      keygen 4 0=0;
      last_sort_spec {
       name="DataSortSpec_67";
       ops {
	name="ops";
	el_typ=DataSortEl;
	el_def=0;
       };
      };
      control_panel_cells {
       name="DataTableCell_List_65";
       el_typ=DataTableCell;
       el_def=0;
      };
     };
    };
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @["imagenet_1000"] {
     name="imagenet_1000";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["imagenet_1000"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["imagenet_categs"] {
     name="imagenet_categs";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["imagenet_categs"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["rnd_seeds"] {
     name="rnd_seeds";
     var_type=T_Object;
     object_type=RndSeed_List;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["rnd_seeds"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["splits"] {
     name="splits";
     var_type=T_Object;
     object_type=DataTable_Group;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["splits"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["re_agg_list"] {
     name="re_agg_list";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["n_procs"] {
     name="n_procs";
     var_type=T_Int;
     int_val=16;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["cat_group"] {
     name="cat_group";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["CatGroup"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["row_group"] {
     name="row_group";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["RowGroup"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["item_group"] {
     name="item_group";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["ItemGroup"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["row_cat_group"] {
     name="row_cat_group";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["imagenet_nums"] {
     name="imagenet_nums";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["imagenet_nums"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["row_cat_group_smooth"] {
     name="row_cat_group_smooth";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup_smooth"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["cat_smooth_width"] {
     name="cat_smooth_width";
     var_type=T_Int;
     int_val=64;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["cat_smooth_sigma"] {
     name="cat_smooth_sigma";
     var_type=T_Real;
     real_val=32;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["group_n"] {
     name="group_n";
     var_type=T_Int;
     int_val=64;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @["re_agg_list_sorted"] {
     name="re_agg_list_sorted";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList_sorted"]$$;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
    Function @["CatToNums"] {
     desc=;
     flags=0;
     code_string=;
     pre_compile_code_string="CatToNums() returns: int";
     name="CatToNums";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name="ProgVar_List_1";
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name="ProgEl_List_70";
      el_typ=ProgCode;
      el_def=0;
      LocalVars @[0] {
       desc=;
       flags=0;
       code_string=;
       pre_compile_code_string=;
       local_vars {
	name="local_vars";
	el_typ=ProgVar;
	el_def=0;
	ProgVar @["n_rows"] {
	 name="n_rows";
	 var_type=T_Int;
	 int_val=0;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @["i"] {
	 name="i";
	 var_type=T_Int;
	 int_val=0;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @["cat"] {
	 name="cat";
	 var_type=T_String;
	 string_val=;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @["cat_no"] {
	 name="cat_no";
	 var_type=T_Int;
	 int_val=0;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="n_rows = imagenet_1000.rows";
       pre_compile_code_string="n_rows = imagenet_1000.rows";
       result_var=.projects["permute_test"].programs["ImagenetPermute"].functions["CatToNums"].fun_code[0].local_vars["n_rows"]$$;
       expr {
	expr="imagenet_1000.rows";
       };
      };
      MethodCall @[2] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="imagenet_nums.EnforceRows(image";
       pre_compile_code_string="imagenet_nums->EnforceRows(n_rows)";
       result_var=NULL;
       obj=.projects["permute_test"].programs["ImagenetPermute"].vars["imagenet_nums"]$$;
       method=DataTable::EnforceRows;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="n_rows";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="n_rows";
	 };
	};
       };
       meth_sig="void EnforceRows(int n_rows)";
       meth_desc=" ensure that there are exactly n_rows in the table, removing or adding as needed";
      };
      MemberMethodCall @[3] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="imagenet_categs.data.category_group.BuildHashTable()";
       pre_compile_code_string="imagenet_categs.data.category_group.BuildHashTable()";
       obj=.projects["permute_test"].programs["ImagenetPermute"].vars["imagenet_categs"]$$;
       path="data.category_group";
       result_var=NULL;
       method=DataCol::BuildHashTable;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig=;
       meth_desc=;
      };
      ForLoop @[4] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="for(i=0; i<n_rows; i++)";
       pre_compile_code_string=;
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="cat = imagenet_1000[0][i]";
	 pre_compile_code_string="cat = imagenet_1000[0][i]";
	 result_var=.projects["permute_test"].programs["ImagenetPermute"].functions["CatToNums"].fun_code[0].local_vars["cat"]$$;
	 expr {
	  expr="imagenet_1000[0][i]";
	 };
	};
	MemberMethodCall @[1] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="cat_no = imagenet_categs.data.category_group.FindVal()";
	 pre_compile_code_string="cat_no = imagenet_categs.data.category_group.FindVal(cat, 0)";
	 obj=$.projects["permute_test"].programs["ImagenetPermute"].vars["imagenet_categs"]$;
	 path="data.category_group";
	 result_var=.projects["permute_test"].programs["ImagenetPermute"].functions["CatToNums"].fun_code[0].local_vars["cat_no"]$$;
	 method=DataCol::FindVal;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=const_Variant_ref;
	   type="Variant&";
	   name="val";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="cat";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=int;
	   type="int";
	   name="st_row";
	   required=0;
	   def_val="0";
	   prev_expr=;
	   expr {
	    expr="0";
	   };
	  };
	 };
	 meth_sig=;
	 meth_desc=;
	};
	MatrixAssign @[2] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="imagenet_nums[0][i] = cat_no";
	 pre_compile_code_string="imagenet_nums[0][i] = cat_no";
	 variable=$.projects["permute_test"].programs["ImagenetPermute"].vars["imagenet_nums"]$;
	 data_table=1;
	 col {
	  expr="0";
	 };
	 dim0 {
	  expr="i";
	 };
	 dim1 {
	  expr=;
	 };
	 dim2 {
	  expr=;
	 };
	 dim3 {
	  expr=;
	 };
	 dim4 {
	  expr=;
	 };
	 dim5 {
	  expr=;
	 };
	 expr {
	  expr="cat_no";
	 };
	};
	MatrixAssign @[3] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="imagenet_nums[0][i] = cat_no";
	 pre_compile_code_string="imagenet_nums[1][i] = imagenet_1000[1][i]";
	 variable=$.projects["permute_test"].programs["ImagenetPermute"].vars["imagenet_nums"]$;
	 data_table=1;
	 col {
	  expr="1";
	 };
	 dim0 {
	  expr="i";
	 };
	 dim1 {
	  expr=;
	 };
	 dim2 {
	  expr=;
	 };
	 dim3 {
	  expr=;
	 };
	 dim4 {
	  expr=;
	 };
	 dim5 {
	  expr=;
	 };
	 expr {
	  expr="imagenet_1000[1][i]";
	 };
	};
       };
       init {
	expr="i=0";
       };
       test {
	expr="i<n_rows";
       };
       iter {
	expr="i++";
       };
      };
     };
    };
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=0;
     code_string=;
     pre_compile_code_string=;
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @["pr"] {
       name="pr";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @["tab"] {
       name="tab";
       var_type=T_Object;
       object_type=DataTable;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @["n_rows"] {
       name="n_rows";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @["i"] {
       name="i";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    DataGroupProg @[1] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="group";
     pre_compile_code_string="Group from:  src table = imagenet_1000 dest table = imagenet_categs";
     src_data_var=.projects["permute_test"].programs["ImagenetPermute"].vars["imagenet_1000"]$$;
     dest_data_var=$.projects["permute_test"].programs["ImagenetPermute"].vars["imagenet_categs"]$;
     group_spec {
      name="group_spec";
      ops {
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["category_GROUP_0"] {
	col_name="category";
	name="category_GROUP_0";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["individual_N_1"] {
	col_name="individual";
	name="individual_N_1";
	agg {name="agg": op=N: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    FunctionCall @[2] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="CatToNums()";
     pre_compile_code_string="CatToNums()";
     result_var=NULL;
     fun=.projects["permute_test"].programs["ImagenetPermute"].functions["CatToNums"]$$;
     fun_args {
      name="fun_args";
      el_typ=ProgArg;
      el_def=0;
     };
    };
    MethodCall @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="rnd_seeds.UseSeed(0)";
     pre_compile_code_string="rnd_seeds->UseSeed(0)";
     result_var=NULL;
     obj=.projects["permute_test"].programs["ImagenetPermute"].vars["rnd_seeds"]$$;
     method=RndSeed_List::UseSeed;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=int;
       type="int";
       name="idx";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="0";
       };
      };
     };
     meth_sig="void UseSeed(int idx)";
     meth_desc=" use seed at given index in the list (does OldSeed on it); wraps around (modulus) if idx is > list size (issues warning)";
    };
    MethodCall @[4] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="splits.SetSize(n_procs)";
     pre_compile_code_string="splits->SetSize(n_procs)";
     result_var=NULL;
     obj=.projects["permute_test"].programs["ImagenetPermute"].vars["splits"]$$;
     method=taList_impl::SetSize;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=int;
       type="int";
       name="sz";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="n_procs";
       };
      };
     };
     meth_sig="void SetSize(int sz)";
     meth_desc=" add or remove elements to force list to be of given size";
    };
    ForLoop @[5] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="for(pr=0; pr<n_procs; pr++)";
     pre_compile_code_string="for (pr=0; pr<n_procs; pr++)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      AssignExpr @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab = splits[pr]";
       pre_compile_code_string="tab = splits[pr]";
       result_var=.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$$;
       expr {
	expr="splits[pr]";
       };
      };
      MemberAssign @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->name = \"proc\"+pr";
       pre_compile_code_string="tab.name = \"proc\"+pr";
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       path="name";
       expr {
	expr="\"proc\"+pr";
       };
       update_after=0;
      };
      PrintVar @[2] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="print pr";
       pre_compile_code_string="Print  pr";
       message=;
       print_var=.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["pr"]$$;
       print_var2=NULL;
       print_var3=NULL;
       print_var4=NULL;
       print_var5=NULL;
       print_var6=NULL;
       debug=0;
      };
      MethodCall @[3] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->CopyFrom(imagenet_1000)";
       pre_compile_code_string="tab->CopyFrom(imagenet_nums)";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       method=taBase::CopyFrom;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taBase_ptr;
	 type="taBase*";
	 name="cpy_from";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="imagenet_nums";
	 };
	};
       };
       meth_sig="bool CopyFrom(taBase* cpy_from)";
       meth_desc=" Copy from given object into this object (this is a safe interface to UnSafeCopy)";
      };
      MethodCall @[4] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->FilterRowNumbers()";
       pre_compile_code_string="tab->FilterRowNumbers([pr:tab.rows:n_procs].Expand(), true)";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       method=DataTable::FilterRowNumbers;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_int_Matrix_ptr;
	 type="int_Matrix*";
	 name="row_list";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="[pr:tab.rows:n_procs].Expand()";
	 };
	};
	ProgArg @[1] {
	 arg_type=bool;
	 type="bool";
	 name="include_rows";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="true";
	 };
	};
       };
       meth_sig="void FilterRowNumbers(int_Matrix* row_list, bool include_rows)";
       meth_desc=" filter table by a list of row numbers to either include or exclude";
      };
      MethodCall @[5] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->PermuteRows(pr)";
       pre_compile_code_string="tab->PermuteRows(pr)";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       method=DataTable::PermuteRows;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="thr_no";
	 required=0;
	 def_val="-1";
	 prev_expr=;
	 expr {
	  expr="pr";
	 };
	};
       };
       meth_sig="void PermuteRows(int thr_no = -1)";
       meth_desc=" permute the order of rows in the data table -- randomly shuffles the rows -- this is very efficiently implemented by shuffling the row_indexes lookup table, not the actual rows in memory. Note: you can instantly recover the original full set of rows, unsorted and unfiltered, by using ShowAllRows on the DataTable -- see that function for more details -- to be be able to undo just this Permute you would need to run Flatten first -- (0 <= thr_no < 100) specifies thread or dmem proc number for parallel safe random sequences (-1 = taMisc::dmem_proc for auto-safe dmem)";
      };
      MethodCall @[6] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->FindMakeCol()";
       pre_compile_code_string="tab->FindMakeCol(\"cur_row\", taBase::VT_INT)";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       method=DataTable::FindMakeCol;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="col_nm";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"cur_row\"";
	 };
	};
	ProgArg @[1] {
	 arg_type=taBase::ValType;
	 type="taBase::ValType";
	 name="val_type";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="taBase::VT_INT";
	 };
	};
       };
       meth_sig="DataCol_ptr FindMakeCol(taString& col_nm, taBase::ValType val_type)";
       meth_desc=" insures that a scalar column of the given name and val type exists, and return that col.";
      };
      MethodCall @[7] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->FindMakeCol()";
       pre_compile_code_string="tab->FindMakeCol(\"proc\", taBase::VT_INT)";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       method=DataTable::FindMakeCol;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="col_nm";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"proc\"";
	 };
	};
	ProgArg @[1] {
	 arg_type=taBase::ValType;
	 type="taBase::ValType";
	 name="val_type";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="taBase::VT_INT";
	 };
	};
       };
       meth_sig="DataCol_ptr FindMakeCol(taString& col_nm, taBase::ValType val_type)";
       meth_desc=" insures that a scalar column of the given name and val type exists, and return that col.";
      };
      MethodCall @[8] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->InitValsToRowNo(\"cur_row\")";
       pre_compile_code_string="tab->InitValsToRowNo(\"cur_row\")";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       method=DataTable::InitValsToRowNo;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="col";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"cur_row\"";
	 };
	};
       };
       meth_sig="bool InitValsToRowNo(Variant& col)";
       meth_desc=" initialize all values in given column to be equal to the row number -- only valid for scalar (not matrix) columns -- column can be specified as either integer index or a string that is then used to find the given column name";
      };
      MethodCall @[9] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="tab->InitVals()";
       pre_compile_code_string="tab->InitVals(pr, \"proc\")";
       result_var=NULL;
       obj=$.projects["permute_test"].programs["ImagenetPermute"].prog_code[0].local_vars["tab"]$;
       method=DataTable::InitVals;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="init_val";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="pr";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="col";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"proc\"";
	 };
	};
       };
       meth_sig="bool InitVals(Variant& init_val, Variant& col)";
       meth_desc=" initialize all values in given column to given value -- column can be specified as either integer index or a string that is then used to find the given column name";
      };
      If @[10] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="if(pr == 0)";
       pre_compile_code_string="if (pr == 0)";
       cond {
	expr="pr == 0";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	MethodCall @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="re_agg_list.CopyFrom(tab)";
	 pre_compile_code_string="re_agg_list->CopyFrom(tab)";
	 result_var=NULL;
	 obj=.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$$;
	 method=taBase::CopyFrom;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=const_taBase_ptr;
	   type="taBase*";
	   name="cpy_from";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="tab";
	   };
	  };
	 };
	 meth_sig="bool CopyFrom(taBase* cpy_from)";
	 meth_desc=" Copy from given object into this object (this is a safe interface to UnSafeCopy)";
	};
       };
      };
      Else @[11] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="else";
       pre_compile_code_string=;
       else_code {
	name="else_code";
	el_typ=ProgCode;
	el_def=0;
	MethodCall @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="re_agg_list.AppendRows(tab)";
	 pre_compile_code_string="re_agg_list->AppendRows(tab)";
	 result_var=NULL;
	 obj=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$;
	 method=DataTable::AppendRows;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=DataTable_ptr;
	   type="DataTable*";
	   name="append_from";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="tab";
	   };
	  };
	 };
	 meth_sig="bool AppendRows(DataTable* append_from)";
	 meth_desc=" append rows from another data table -- this is also available in taDataProc and in the GUI as a drag-and-drop action (appends rows of dropped item onto dropped item)";
	};
       };
      };
     };
     init {
      expr="pr=0";
     };
     test {
      expr="pr<n_procs";
     };
     iter {
      expr="pr++";
     };
    };
    MethodCall @[6] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="re_agg_list.FindMakeCol(\"cur_row_gp\", taBase::VT_INT)";
     pre_compile_code_string="re_agg_list->FindMakeCol(\"cur_row_gp\", taBase::VT_INT)";
     result_var=NULL;
     obj=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$;
     method=DataTable::FindMakeCol;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"cur_row_gp\"";
       };
      };
      ProgArg @[1] {
       arg_type=taBase::ValType;
       type="taBase::ValType";
       name="val_type";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="taBase::VT_INT";
       };
      };
     };
     meth_sig="DataCol_ptr FindMakeCol(taString& col_nm, taBase::ValType val_type)";
     meth_desc=" insures that a scalar column of the given name and val type exists, and return that col.";
    };
    MemberMethodCall @[7] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="re_agg_list.data.cur_row_gp.CopyFromCol_Robust()";
     pre_compile_code_string="re_agg_list.data.cur_row_gp.CopyFromCol_Robust(re_agg_list.data.cur_row)";
     obj=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$;
     path="data.cur_row_gp";
     result_var=NULL;
     method=DataCol::CopyFromCol_Robust;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_DataCol_ref;
       type="DataCol&";
       name="cp";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="re_agg_list.data.cur_row";
       };
      };
     };
     meth_sig="void CopyFromCol_Robust(DataCol& cp)";
     meth_desc=" copy col, but don't change schema; robust to differences in type and format of the cells";
    };
    CssExpr @[8] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="re_agg_list.data.cur_row_gp.ar /= group_n;";
     pre_compile_code_string="re_agg_list.data.cur_row_gp.ar /= group_n;";
     expr {
      expr="re_agg_list.data.cur_row_gp.ar /= group_n;";
     };
    };
    DataGroupProg @[9] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="group";
     pre_compile_code_string="Group from:  src table = re_agg_list dest table = cat_group";
     src_data_var=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$;
     dest_data_var=.projects["permute_test"].programs["ImagenetPermute"].vars["cat_group"]$$;
     group_spec {
      name="group_spec";
      ops {
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["category_GROUP_0"] {
	col_name="category";
	name="category_GROUP_0";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["cur_row_gp_MEAN_1"] {
	col_name="cur_row_gp";
	name="cur_row_gp_MEAN_1";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["proc_MEAN_3"] {
	col_name="proc";
	name="proc_MEAN_3";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataGroupProg @[10] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="group";
     pre_compile_code_string="Group from:  src table = re_agg_list dest table = row_group";
     src_data_var=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$;
     dest_data_var=.projects["permute_test"].programs["ImagenetPermute"].vars["row_group"]$$;
     group_spec {
      name="group_spec";
      ops {
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["cur_row_gp_GROUP_0"] {
	col_name="cur_row_gp";
	name="cur_row_gp_GROUP_0";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["category_GROUP_1"] {
	col_name="category";
	name="category_GROUP_1";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["proc_MEAN_3"] {
	col_name="proc";
	name="proc_MEAN_3";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataGroupProg @[11] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="group";
     pre_compile_code_string="Group from:  src table = re_agg_list dest table = row_cat_group";
     src_data_var=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$;
     dest_data_var=.projects["permute_test"].programs["ImagenetPermute"].vars["row_cat_group"]$$;
     group_spec {
      name="group_spec";
      ops {
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["cur_row_gp_GROUP_0"] {
	col_name="cur_row_gp";
	name="cur_row_gp_GROUP_0";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["category_MEAN_1"] {
	col_name="category";
	name="category_MEAN_1";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["proc_MEAN_3"] {
	col_name="proc";
	name="proc_MEAN_3";
	agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataGroupProg @[12] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="group";
     pre_compile_code_string="Group from:  src table = re_agg_list dest table = item_group";
     src_data_var=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list"]$;
     dest_data_var=.projects["permute_test"].programs["ImagenetPermute"].vars["item_group"]$$;
     group_spec {
      name="group_spec";
      ops {
       name="ops";
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @["category_GROUP_0"] {
	col_name="category";
	name="category_GROUP_0";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["individual_GROUP_1"] {
	col_name="individual";
	name="individual_GROUP_1";
	agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
       DataGroupEl @["proc_N_2"] {
	col_name="proc";
	name="proc_N_2";
	agg {name="agg": op=N: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataAnalCall @[13] {
     desc=;
     flags=OFF|CAN_REVERT_TO_CODE;
     code_string="taDataAnal::SmoothGauss()";
     pre_compile_code_string="taDataAnal::SmoothGauss(row_cat_group_smooth, false, row_cat_group, cat_smooth_width, cat_smooth_sigma, , , , )";
     result_var=NULL;
     object_type=taDataAnal;
     method=taDataAnal::SmoothGauss;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="smooth_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="row_cat_group_smooth";
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="view";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="false";
       };
      };
      ProgArg @[2] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="src_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="row_cat_group";
       };
      };
      ProgArg @[3] {
       arg_type=int;
       type="int";
       name="kern_half_wd";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="cat_smooth_width";
       };
      };
      ProgArg @[4] {
       arg_type=float;
       type="float";
       name="kern_sigma";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="cat_smooth_sigma";
       };
      };
      ProgArg @[5] {
       arg_type=bool;
       type="bool";
       name="neg_tail";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[6] {
       arg_type=bool;
       type="bool";
       name="pos_tail";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[7] {
       arg_type=bool;
       type="bool";
       name="keep_edges";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[8] {
       arg_type=bool;
       type="bool";
       name="float_only";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
     };
    };
    MethodCall @[14] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="re_agg_list_sorted.CopyFrom(re_agg_list)";
     pre_compile_code_string="re_agg_list_sorted->CopyFrom(re_agg_list)";
     result_var=NULL;
     obj=.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list_sorted"]$$;
     method=taBase::CopyFrom;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taBase_ptr;
       type="taBase*";
       name="cpy_from";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="re_agg_list";
       };
      };
     };
     meth_sig="bool CopyFrom(taBase* cpy_from)";
     meth_desc=" Copy from given object into this object (this is a safe interface to UnSafeCopy)";
    };
    MethodCall @[15] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="re_agg_list_sorted.Sort()";
     pre_compile_code_string="re_agg_list_sorted->Sort(\"cur_row_gp\", true, \"category\", true, \"proc\", true, , , , , , )";
     result_var=NULL;
     obj=$.projects["permute_test"].programs["ImagenetPermute"].vars["re_agg_list_sorted"]$;
     method=DataTable::Sort;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_Variant_ref;
       type="Variant&";
       name="col1";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"cur_row_gp\"";
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="ascending1";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr="true";
       };
      };
      ProgArg @[2] {
       arg_type=Variant;
       type="Variant";
       name="col2";
       required=0;
       def_val="-1";
       prev_expr=;
       expr {
	expr="\"category\"";
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="ascending2";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr="true";
       };
      };
      ProgArg @[4] {
       arg_type=Variant;
       type="Variant";
       name="col3";
       required=0;
       def_val="-1";
       prev_expr=;
       expr {
	expr="\"proc\"";
       };
      };
      ProgArg @[5] {
       arg_type=bool;
       type="bool";
       name="ascending3";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr="true";
       };
      };
      ProgArg @[6] {
       arg_type=Variant;
       type="Variant";
       name="col4";
       required=0;
       def_val="-1";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[7] {
       arg_type=bool;
       type="bool";
       name="ascending4";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[8] {
       arg_type=Variant;
       type="Variant";
       name="col5";
       required=0;
       def_val="-1";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[9] {
       arg_type=bool;
       type="bool";
       name="ascending5";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[10] {
       arg_type=Variant;
       type="Variant";
       name="col6";
       required=0;
       def_val="-1";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[11] {
       arg_type=bool;
       type="bool";
       name="ascending6";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
     };
     meth_sig="void Sort(Variant& col1, bool ascending1 = true, Variant col2 = -1, bool ascending2 = true, Variant col3 = -1, bool ascending3 = true, Variant col4 = -1, bool ascending4 = true, Variant col5 = -1, bool ascending5 = true, Variant col6 = -1, bool ascending6 = true)";
     meth_desc=" sort table according to selected columns of data. Note: you can instantly recover the original full set of rows, unsorted and unfiltered, by using ShowAllRows on the DataTable -- see that function for more details -- to be be able to undo just this sort you would need to run Flatten first";
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
    html_text=;
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @["Browser2"] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_46";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @["view_win_lft"] {
     name="view_win_lft";
     value 8 0=0.002903907;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_top"] {
     name="view_win_top";
     value 8 0=0.06223678;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_wd"] {
     name="view_win_wd";
     value 8 0=0.9981521;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_ht"] {
     name="view_win_ht";
     value 8 0=0.7992513;
     val_type_fixed=0;
    };
    UserDataItem @["view_win_iconified"] {
     name="view_win_iconified";
     value 1 0=0;
     val_type_fixed=0;
    };
    UserDataItem @["view_splitter_state"] {
     name="view_splitter_state";
     value 9 0="AAAA/wAAAAEAAAADAAABLwAAA48AAAmmAQAAAAcBAAAAAQE=";
     val_type_fixed=0;
    };
   };
   name="Browser2";
   m_data=.projects["permute_test"]$$;
   cur_font_size=12;
   visible=1;
   win_name=".projects[\"permute_test\"] - permute_test.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   revert_to_tab_no=-1;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @["Application"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_47";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_win_visible"] {
       name="view_win_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Application";
     m_data=NULL;
     cur_font_size=12;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @["Navigator"] {
     name="Navigator";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.projects["permute_test"]$;
    };
    PanelViewer @["Editor"] {
     name="Editor";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
    };
    T3PanelViewer @["Visualizer"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_48";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_panel_selected"] {
       name="view_panel_selected";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Visualizer";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @["PermutedTable"] {
       name="PermutedTable";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["PermutedTable_Graph"] {
	  name="PermutedTable_Graph";
	  m_data=$.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["orig_row_no"] {
	    name="orig_row_no";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["orig_row_no"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=80999: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["cur_row_no"] {
	    name="cur_row_no";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["cur_row_no"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=80999: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["categ"] {
	    name="categ";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["categ"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["item"] {
	    name="item";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["item"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=80: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["regress_line"] {
	    name="regress_line";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["regress_line"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=1000000;
	  view_range {min=0: max=80999: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=POINTS;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.001;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="orig_row_no";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=80999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name="categ";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["PermutedTable_Graph_plot_1"] {
	    name="PermutedTable_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="cur_row_no";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=80999: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_2"] {
	    name="PermutedTable_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="regress_line";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=40198.49: fix_max=0: max=40800.51: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_3"] {
	    name="PermutedTable_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_4"] {
	    name="PermutedTable_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_5"] {
	    name="PermutedTable_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_6"] {
	    name="PermutedTable_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["PermutedTable_Graph_err_1"] {
	    name="PermutedTable_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_2"] {
	    name="PermutedTable_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_3"] {
	    name="PermutedTable_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_4"] {
	    name="PermutedTable_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_5"] {
	    name="PermutedTable_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_6"] {
	    name="PermutedTable_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=BY_VARIABLE;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="categ";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs["C_ColdHot"]$$<ColorScaleSpec,C_ColdHot>;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.425: y=0.481: z=1.531345: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.521345;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["CatGroup"] {
       name="CatGroup";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["CatGroup_Graph"] {
	  name="CatGroup_Graph";
	  m_data=$.projects["permute_test"].programs["PermuteTest"].objs["CatGroup"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["categ_group"] {
	    name="categ_group";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["CatGroup"].data["categ_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["orig_row_no_mean"] {
	    name="orig_row_no_mean";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["CatGroup"].data["orig_row_no_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["cur_row_no_mean"] {
	    name="cur_row_no_mean";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["CatGroup"].data["cur_row_no_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=999: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=2;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="categ_group";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=2;
	   row_num=0;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["CatGroup_Graph_plot_1"] {
	    name="CatGroup_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="cur_row_no_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=80000: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_2"] {
	    name="CatGroup_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="orig_row_no_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=40: fix_max=0: max=80959: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_3"] {
	    name="CatGroup_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_4"] {
	    name="CatGroup_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_5"] {
	    name="CatGroup_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_6"] {
	    name="CatGroup_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["CatGroup_Graph_err_1"] {
	    name="CatGroup_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_2"] {
	    name="CatGroup_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_3"] {
	    name="CatGroup_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_4"] {
	    name="CatGroup_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_5"] {
	    name="CatGroup_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_6"] {
	    name="CatGroup_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.4406909: y=0.459: z=1.564404: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.554404;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["FFTPlot"] {
       name="FFTPlot";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["FFTPlot_Graph"] {
	  name="FFTPlot_Graph";
	  m_data=$.projects["permute_test"].programs["PermuteTest"].objs["FFTPlot"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["freq"] {
	    name="freq";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["FFTPlot"].data["freq"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["power"] {
	    name="power";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["FFTPlot"].data["power"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=-500000: fix_max=1: max=500000: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=999: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=2;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="freq";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=2;
	   row_num=0;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["FFTPlot_Graph_plot_1"] {
	    name="FFTPlot_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="power";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=-500000: fix_max=1: max=500000: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_plot_2"] {
	    name="FFTPlot_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_plot_3"] {
	    name="FFTPlot_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_plot_4"] {
	    name="FFTPlot_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_plot_5"] {
	    name="FFTPlot_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_plot_6"] {
	    name="FFTPlot_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["FFTPlot_Graph_err_1"] {
	    name="FFTPlot_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_err_2"] {
	    name="FFTPlot_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_err_3"] {
	    name="FFTPlot_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_err_4"] {
	    name="FFTPlot_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_err_5"] {
	    name="FFTPlot_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["FFTPlot_Graph_err_6"] {
	    name="FFTPlot_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.917066: y=0.42: z=1.927901: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.917902;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["ItemGroup"] {
       name="ItemGroup";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["ItemGroup_Graph"] {
	  name="ItemGroup_Graph";
	  m_data=$.projects["permute_test"].programs["PermuteTest"].objs["ItemGroup"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["item_group"] {
	    name="item_group";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["ItemGroup"].data["item_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["orig_row_no_mean"] {
	    name="orig_row_no_mean";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["ItemGroup"].data["orig_row_no_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["cur_row_no_mean"] {
	    name="cur_row_no_mean";
	    m_data=.projects["permute_test"].programs["PermuteTest"].objs["ItemGroup"].data["cur_row_no_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=80: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="item_group";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=80: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["ItemGroup_Graph_plot_1"] {
	    name="ItemGroup_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="orig_row_no_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=40459.48: fix_max=0: max=40539.47: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_plot_2"] {
	    name="ItemGroup_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="cur_row_no_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=0: max=41805.49: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_plot_3"] {
	    name="ItemGroup_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_plot_4"] {
	    name="ItemGroup_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_plot_5"] {
	    name="ItemGroup_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_plot_6"] {
	    name="ItemGroup_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["ItemGroup_Graph_err_1"] {
	    name="ItemGroup_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_err_2"] {
	    name="ItemGroup_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_err_3"] {
	    name="ItemGroup_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_err_4"] {
	    name="ItemGroup_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_err_5"] {
	    name="ItemGroup_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ItemGroup_Graph_err_6"] {
	    name="ItemGroup_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.425: y=0.4789999: z=1.546542: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.536542;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["PermutedTable_4"] {
       name="PermutedTable_4";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="T3DataViewRoot_1";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="T3DataView_List_1";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["PermutedTable_Graph"] {
	  name="PermutedTable_Graph";
	  m_data=$.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="T3DataView_List_1";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["orig_row_no"] {
	    name="orig_row_no";
	    m_data=$.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["orig_row_no"]$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=80999: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["cur_row_no"] {
	    name="cur_row_no";
	    m_data=$.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["cur_row_no"]$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=80999: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["categ"] {
	    name="categ";
	    m_data=$.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["categ"]$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["item"] {
	    name="item";
	    m_data=$.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["item"]$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=80: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["regress_line"] {
	    name="regress_line";
	    m_data=$.projects["permute_test"].programs["PermuteTest"].objs["PermutedTable"].data["regress_line"]$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=40198.5: fix_max=0: max=40800.5: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="T3Annotation_List_12";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="T3DataView_List_1";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=1000;
	  view_range {min=0: max=999: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.001;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="GraphAxisView_26";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="cur_row_no";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   name="GraphAxisView_27";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name="categ";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["PermutedTable_Graph_plot_1"] {
	    name="PermutedTable_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="categ";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_2"] {
	    name="PermutedTable_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_3"] {
	    name="PermutedTable_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_4"] {
	    name="PermutedTable_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_5"] {
	    name="PermutedTable_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_plot_6"] {
	    name="PermutedTable_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["PermutedTable_Graph_err_1"] {
	    name="PermutedTable_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_2"] {
	    name="PermutedTable_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_3"] {
	    name="PermutedTable_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_4"] {
	    name="PermutedTable_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_5"] {
	    name="PermutedTable_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["PermutedTable_Graph_err_6"] {
	    name="PermutedTable_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=BY_VARIABLE;
	  color_axis {
	   name="GraphAxisView_28";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="categ";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale_1";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="GraphAxisView_30";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="T3SavedView_List_10";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.4261279: y=0.42: z=1.525783: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.532032;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["CatGroup_5"] {
       name="CatGroup_5";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="T3DataViewRoot_1";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="T3DataView_List_1";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["CatGroup_Graph"] {
	  name="CatGroup_Graph";
	  m_data=$.projects["permute_test"].programs["ImagenetPermute"].objs["CatGroup"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="T3DataView_List_1";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["category_group"] {
	    name="category_group";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["CatGroup"].data["category_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["cur_row_gp_mean"] {
	    name="cur_row_gp_mean";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["CatGroup"].data["cur_row_gp_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["proc_mean"] {
	    name="proc_mean";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["CatGroup"].data["proc_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="T3Annotation_List_13";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="T3DataView_List_1";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=100000;
	  view_range {min=0: max=999: };
	  page_rows=4;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="GraphAxisView_31";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="category_group";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name="GraphAxisView_32";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["CatGroup_Graph_plot_1"] {
	    name="CatGroup_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="proc_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=7.472414: fix_max=0: max=7.535433: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_2"] {
	    name="CatGroup_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name="cur_row_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=37595.4: fix_max=0: max=42037.8: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_3"] {
	    name="CatGroup_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_4"] {
	    name="CatGroup_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_5"] {
	    name="CatGroup_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_plot_6"] {
	    name="CatGroup_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["CatGroup_Graph_err_1"] {
	    name="CatGroup_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_2"] {
	    name="CatGroup_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_3"] {
	    name="CatGroup_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_4"] {
	    name="CatGroup_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_5"] {
	    name="CatGroup_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["CatGroup_Graph_err_6"] {
	    name="CatGroup_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="GraphAxisView_33";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale_1";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="GraphAxisView_35";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="T3SavedView_List_12";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.5072557: y=0.408: z=1.634507: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.624507;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["RowCatGroup"] {
       name="RowCatGroup";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="T3DataViewRoot_1";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="T3DataView_List_1";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["RowCatGroup_Graph"] {
	  name="RowCatGroup_Graph";
	  m_data=$.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="T3DataView_List_1";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["cur_row_gp_group"] {
	    name="cur_row_gp_group";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup"].data["cur_row_gp_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["category_mean"] {
	    name="category_mean";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup"].data["category_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=471.14: fix_max=0: max=525.827: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["proc_mean"] {
	    name="proc_mean";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup"].data["proc_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=5.5: fix_max=0: max=7.5: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="T3Annotation_List_14";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="T3DataView_List_1";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=1250: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="GraphAxisView_36";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1250: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   name="GraphAxisView_37";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["RowCatGroup_Graph_plot_1"] {
	    name="RowCatGroup_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="category_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=471.1396: fix_max=0: max=525.8271: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_plot_2"] {
	    name="RowCatGroup_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name="proc_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=5.5: fix_max=0: max=7.5: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_plot_3"] {
	    name="RowCatGroup_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_plot_4"] {
	    name="RowCatGroup_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_plot_5"] {
	    name="RowCatGroup_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_plot_6"] {
	    name="RowCatGroup_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["RowCatGroup_Graph_err_1"] {
	    name="RowCatGroup_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_err_2"] {
	    name="RowCatGroup_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_err_3"] {
	    name="RowCatGroup_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_err_4"] {
	    name="RowCatGroup_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_err_5"] {
	    name="RowCatGroup_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_Graph_err_6"] {
	    name="RowCatGroup_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="GraphAxisView_38";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale_1";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="GraphAxisView_40";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="T3SavedView_List_14";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.5072558: y=0.408: z=1.618782: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.625032;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["RowCatGroup_smooth"] {
       name="RowCatGroup_smooth";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="T3DataViewRoot_1";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="T3DataView_List_1";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["RowCatGroup_smooth_Graph"] {
	  name="RowCatGroup_smooth_Graph";
	  m_data=$.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup_smooth"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="T3DataView_List_1";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["cur_row_group"] {
	    name="cur_row_group";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup_smooth"].data["cur_row_group"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["category_mean"] {
	    name="category_mean";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup_smooth"].data["category_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["proc_mean"] {
	    name="proc_mean";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["RowCatGroup_smooth"].data["proc_mean"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="T3Annotation_List_15";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="T3DataView_List_1";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=9999: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="GraphAxisView_41";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="cur_row_group";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=9999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   name="GraphAxisView_42";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["RowCatGroup_smooth_Graph_plot_1"] {
	    name="RowCatGroup_smooth_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="category_mean";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=474.6758: fix_max=0: max=523.5107: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_plot_2"] {
	    name="RowCatGroup_smooth_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_plot_3"] {
	    name="RowCatGroup_smooth_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_plot_4"] {
	    name="RowCatGroup_smooth_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_plot_5"] {
	    name="RowCatGroup_smooth_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_plot_6"] {
	    name="RowCatGroup_smooth_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["RowCatGroup_smooth_Graph_err_1"] {
	    name="RowCatGroup_smooth_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_err_2"] {
	    name="RowCatGroup_smooth_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_err_3"] {
	    name="RowCatGroup_smooth_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_err_4"] {
	    name="RowCatGroup_smooth_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_err_5"] {
	    name="RowCatGroup_smooth_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["RowCatGroup_smooth_Graph_err_6"] {
	    name="RowCatGroup_smooth_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="GraphAxisView_43";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale_1";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="GraphAxisView_45";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="T3SavedView_List_16";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.5072558: y=0.408: z=1.618782: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.625032;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @["ReAggList_sorted"] {
       name="ReAggList_sorted";
       m_data=NULL;
       cur_font_size=14;
       visible=1;
       root_view {
	name="T3DataViewRoot_1";
	m_data=NULL;
	cur_font_size=14;
	m_transform=NULL;
	children {
	 name="T3DataView_List_1";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @["ReAggList_sorted_Graph"] {
	  name="ReAggList_sorted_Graph";
	  m_data=$.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList_sorted"]$;
	  cur_font_size=14;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="T3DataView_List_1";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @["category"] {
	    name="category";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList_sorted"].data["category"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["individual"] {
	    name="individual";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList_sorted"].data["individual"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["cur_row"] {
	    name="cur_row";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList_sorted"].data["cur_row"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["proc"] {
	    name="proc";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList_sorted"].data["proc"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @["cur_row_gp"] {
	    name="cur_row_gp";
	    m_data=.projects["permute_test"].programs["ImagenetPermute"].objs["ReAggList_sorted"].data["cur_row_gp"]$$;
	    cur_font_size=14;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=100: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="T3Annotation_List_16";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="T3DataView_List_1";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=100000;
	  view_range {min=0: max=99999: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=POINTS;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.001;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=2;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="GraphAxisView_46";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="cur_row_gp";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=1: min=0: fix_max=1: max=100: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=2;
	   row_num=0;
	  };
	  z_axis {
	   name="GraphAxisView_47";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name="proc";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=6;
	  plots {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["ReAggList_sorted_Graph_plot_1"] {
	    name="ReAggList_sorted_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="category";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=100: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_plot_2"] {
	    name="ReAggList_sorted_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_plot_3"] {
	    name="ReAggList_sorted_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_plot_4"] {
	    name="ReAggList_sorted_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_plot_5"] {
	    name="ReAggList_sorted_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_plot_6"] {
	    name="ReAggList_sorted_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="GraphPlotView_List_1";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @["ReAggList_sorted_Graph_err_1"] {
	    name="ReAggList_sorted_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_err_2"] {
	    name="ReAggList_sorted_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_err_3"] {
	    name="ReAggList_sorted_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_err_4"] {
	    name="ReAggList_sorted_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_err_5"] {
	    name="ReAggList_sorted_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @["ReAggList_sorted_Graph_err_6"] {
	    name="ReAggList_sorted_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=14;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_axis {
	   name="GraphAxisView_48";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="category";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=999: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale_1";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="GraphAxisView_50";
	   m_data=NULL;
	   cur_font_size=14;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {
	field_of_view=45;
	near_distance=0.1;
	focal=5;
	far_distance=1000;
       };
       stereo_view=STEREO_NONE;
       saved_views {
	name="T3SavedView_List_18";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @["Vw_0"] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.911256: y=0.4080001: z=1.800496: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.806746;
	};
	T3SavedView @["Vw_1"] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_2"] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_3"] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_4"] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_5"] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_6"] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_7"] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_8"] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @["Vw_9"] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @["Tools"] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_49";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @["view_win_lft"] {
       name="view_win_lft";
       value 8 0=0;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_top"] {
       name="view_win_top";
       value 8 0=0.00655124;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_wd"] {
       name="view_win_wd";
       value 8 0=0.02164731;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_ht"] {
       name="view_win_ht";
       value 8 0=0.7618156;
       val_type_fixed=0;
      };
      UserDataItem @["view_win_iconified"] {
       name="view_win_iconified";
       value 1 0=0;
       val_type_fixed=0;
      };
      UserDataItem @["view_visible"] {
       name="view_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Tools";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc=;
 tree_state{ .;.docs;.wizards;.ctrl_panels;.param_sets;.data;.data.gp[0];.data.gp[1];.data.gp[2];.programs;.programs[0].objs;.programs[0].prog_code;.programs[1];.programs[1].objs;.programs[1].functions;.programs[1].prog_code[0];.programs[1].prog_code[1];.programs[1].prog_code[1].group_spec;.viewers[0];.viewers[0].frames[2];.networks; };
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
 };
};
