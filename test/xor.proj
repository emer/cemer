// ta_Dump File v2.0
BpProject .projects[0] {
TypeDefault_Group .projects[0].defaults { 
TypeDefault_Group .projects[0].defaults = [2] {
TypeDefault @[0] { 
taBase_List @.active_membs = [4] {
NameValue @[0] { };
NameValue @[1] { };
NameValue @[2] { };
NameValue @[3] { };
};
};
TypeDefault @[1] { 
taBase_List @.active_membs = [2] {
NameValue @[0] { };
NameValue @[1] { };
};
};
};
  };
TypeDefault_Group .projects[0].defaults {
name=;
el_typ=TypeDefault;
el_def=0;
TypeDefault @[0] {
name="Projection";
default_type=Projection;
active_membs {
name="taBase_Group_6";
el_typ=NameValue;
el_def=0;
NameValue @[0] {
name="spec";
value="{type=FullPrjnSpec: spec=NULL: }";
};
NameValue @[1] {
name="con_type";
value="BpCon";
};
NameValue @[2] {
name="con_gp_type";
value="BpCon_Group";
};
NameValue @[3] {
name="con_spec";
value="{type=BpConSpec: spec=NULL: }";
};
};
};
TypeDefault @[1] {
name="Layer";
default_type=Layer;
active_membs {
name="taBase_Group_1";
el_typ=NameValue;
el_def=0;
NameValue @[0] {
name="units";
value="Size: 0 (BpUnit)";
};
NameValue @[1] {
name="unit_spec";
value="{type=BpUnitSpec: spec=NULL: }";
};
};
};
};

Wizard_Group @.wizards = [1] {
BpWizard @[0] { 
taBase_List @.layer_cfg = [3] {
LayerWizEl @[0] { };
LayerWizEl @[1] { };
LayerWizEl @[2] { };
};
};
};

BaseSpec_Group @.specs = [3] {
BpUnitSpec @[0] { };
BpConSpec @[1] { };
FullPrjnSpec @[2] { };
};

Network_Group @.networks = [1] {
BpNetwork @[0] { 
Layer_Group @.layers = [3] {
Layer @[0] { };
Layer @[1] { 
Projection_Group @.projections = [1] {
Projection @[0] { };
};
};
Layer @[2] { 
Projection_Group @.projections = [1] {
Projection @[0] { };
};
};
};
};
};

DataTable_Group @.data = [2] {
DataTable @[0] { 
DataTableCols @.data = [3] {
String_Data @[0] { };
float_Data @[1] { };
float_Data @[2] { };
};
};
DataTable @[1] { 
DataTableCols @.data = [13] {
int_Data @[0] { };
int_Data @[1] { };
int_Data @[2] { };
float_Data @[3] { };
float_Data @[4] { };
float_Data @[5] { };
float_Data @[6] { };
float_Data @[7] { };
float_Data @[8] { };
float_Data @[9] { };
float_Data @[10] { };
float_Data @[11] { };
float_Data @[12] { };
};
};
};

Script_Group @.scripts = [3] {
Script @[0] { };
Script @[1] { };
Script @[2] { };
};

DataViewer_List @.viewers = [1] {
pdpDataViewer @[0] { 
ToolBar_List @.toolbars = [1] {
ToolBar @[0] { };
};

T3DataView_List @.children = [1] {
NetView @[0] { 
T3DataView_List @.children = [5] {
LayerView @[0] { };
LayerView @[1] { };
LayerView @[2] { };
PrjnView @[3] { };
PrjnView @[4] { };
};

ScaleRange_List @.scale_ranges = [4] {
ScaleRange @[0] { };
ScaleRange @[1] { };
ScaleRange @[2] { };
ScaleRange @[3] { };
};
};
};
};
};

taBase_List @.test_objs = [1] {
ImageReader @[0] { };
};

RGBA_List @.view_colors = [20] {
RGBA @[0] { };
RGBA @[1] { };
RGBA @[2] { };
RGBA @[3] { };
RGBA @[4] { };
RGBA @[5] { };
RGBA @[6] { };
RGBA @[7] { };
RGBA @[8] { };
RGBA @[9] { };
RGBA @[10] { };
RGBA @[11] { };
RGBA @[12] { };
RGBA @[13] { };
RGBA @[14] { };
RGBA @[15] { };
RGBA @[16] { };
RGBA @[17] { };
RGBA @[18] { };
RGBA @[19] { };
};
};
BpProject .projects[0] {
name="ViewTest_xor";
wizards {
name=;
el_typ=BpWizard;
el_def=0;
BpWizard @[0] {
name="BpWizard_0";
auto_open=0;
n_layers=3;
layer_cfg {
name=;
el_typ=LayerWizEl;
el_def=0;
LayerWizEl @[0] {
name=;
n_units=10;
io_type=213;
};
LayerWizEl @[1] {
name=;
n_units=10;
io_type=144807888;
};
LayerWizEl @[2] {
name=;
n_units=10;
io_type=325;
};
};
connectivity=FEEDFORWARD;
event_type=Event;
};
};
specs {
name=;
el_typ=BaseSpec;
el_def=0;
BpUnitSpec @[0] {
   unique 	    = {};
name="XORUnitSpec";
unique=unsigned_long_ary;
children {
name=;
el_typ=BpUnitSpec;
el_def=0;
};
act_range {min=0: max=1: range=1: scale=1: };
bias_con_type=BpCon;
bias_spec {type=BpConSpec: spec=.projects[0].specs[1]$0$: };
sig {off=0: gain=1: };
err_tol=0;
err_fun=Bp_Squared_Error;
};
BpConSpec @[1] {
   unique 	    = {};
name="XORConSpec";
unique=unsigned_long_ary;
children {
name=;
el_typ=BpConSpec;
el_def=0;
};
rnd {type=UNIFORM: mean=0: var=0.5: par=1: };
wt_limits {type=NONE: min=-1: max=1: sym=0: };
lrate=0.5;
cur_lrate=0.5;
lrate_sched {
name=;
el_typ=SchedItem;
el_def=0;
last_ctr=-1;
default_val=1;
interpolate=0;
cur_val=1;
};
momentum=0.89999998;
momentum_type=AFTER_LRATE;
momentum_c=0.10000002;
decay=0;
decay_fun=NULL;
};
FullPrjnSpec @[2] {
   unique 	    = {};
name="XORPrjnSpec";
unique=unsigned_long_ary;
children {
name=;
el_typ=FullPrjnSpec;
el_def=0;
};
self_con=0;
init_wts=0;
};
};
networks {
name=;
el_typ=Network;
el_def=0;
BpNetwork @[0] {
name="XOR";
layers {
name=;
el_typ=Layer;
el_def=0;
pos {x=0: y=0: z=0: };
Layer @[0] {
name="input";
layer_type=INPUT;
n_units=2;
geom {x=2: y=1: z=1: };
pos {x=2: y=0: z=0: };
gp_geom {x=0: y=0: z=0: };
gp_spc {x=0: y=0: z=0: };
act_geom {x=2: y=1: z=1: };
projections {
name=;
el_typ=Projection;
el_def=0;
};
send_prjns {
name=;
el_typ=Projection;
el_def=0;
Projection_Group @. = [0] = Projection .projects[0].networks[0].layers[1].projections[0];
};
unit_spec {type=BpUnitSpec: spec=.projects[0].specs[0]$1$: };
lesion=0;
ext_flag=TARG_EXT;
dmem_dist=DMEM_DIST_DEFAULT;
};
Layer @[1] {
name="hidden";
layer_type=HIDDEN;
n_units=2;
geom {x=2: y=1: z=1: };
pos {x=2: y=0: z=1: };
gp_geom {x=0: y=0: z=0: };
gp_spc {x=0: y=0: z=0: };
act_geom {x=2: y=1: z=1: };
projections {
name=;
el_typ=Projection;
el_def=0;
Projection @[0] {
name="Fm_input";
from_type=CUSTOM;
from=.projects[0].networks[0].layers[0]$2$;
spec {type=FullPrjnSpec: spec=.projects[0].specs[2]$3$: };
con_type=BpCon;
con_gp_type=BpCon_Group;
con_spec {type=BpConSpec: spec=$0$: };
recv_idx=0;
send_idx=0;
recv_n=1;
send_n=1;
projected=1;
};
};
send_prjns {
name=;
el_typ=Projection;
el_def=0;
Projection_Group @. = [0] = Projection .projects[0].networks[0].layers[2].projections[0];
};
unit_spec {type=BpUnitSpec: spec=$1$: };
lesion=0;
ext_flag=DEFAULT;
dmem_dist=DMEM_DIST_DEFAULT;
};
Layer @[2] {
name="output";
layer_type=6;
n_units=1;
geom {x=1: y=1: z=1: };
pos {x=2: y=0: z=2: };
gp_geom {x=0: y=0: z=0: };
gp_spc {x=0: y=0: z=0: };
act_geom {x=1: y=1: z=1: };
projections {
name=;
el_typ=Projection;
el_def=0;
Projection @[0] {
name="Fm_hidden";
from_type=CUSTOM;
from=.projects[0].networks[0].layers[1]$4$;
spec {type=FullPrjnSpec: spec=$3$: };
con_type=BpCon;
con_gp_type=BpCon_Group;
con_spec {type=BpConSpec: spec=$0$: };
recv_idx=0;
send_idx=0;
recv_n=1;
send_n=1;
projected=1;
};
};
send_prjns {
name=;
el_typ=Projection;
el_def=0;
};
unit_spec {type=BpUnitSpec: spec=$1$: };
lesion=0;
ext_flag=TARG;
dmem_dist=DMEM_DIST_DEFAULT;
};
};
context=0;
wt_update=ON_LINE;
batch_n=10;
batch=0;
epoch=50;
trial=4;
phase=0;
cycle=0;
re_init=0;
dmem_sync_level=DMEM_SYNC_NETWORK;
dmem_nprocs=1;
usr1_save_fmt=FULL_NET;
wt_save_fmt=TEXT;
lay_layout=THREE_D;
n_units=5;
n_cons=6;
max_size {x=4: y=2: z=3: };
bp_to_inputs=0;
};
};
data {
name=;
el_typ=DataTable;
el_def=0;
DataTable @[0] {
name="XOR Patterns";
save_data=1;
data {
name=;
el_typ=float_Data;
el_def=0;
String_Data @[0] {
name="name";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=0;
cell_geom{ 1;};
ar{ [4] "00->0";"01->1";"10->1";"11->0";};
};
float_Data @[1] {
name="input";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;1;};
ar{ [2 1 4] 0;0;0;1;1;0;1;1;};
};
float_Data @[2] {
name="output";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 1;1;};
ar{ [1 1 4] 0;1;1;0;};
};
};
};
DataTable @[1] {
name="Monitor Data";
save_data=0;
data {
name=;
el_typ=int_Data;
el_def=0;
int_Data @[0] {
name="XOR.epoch";
disp_opts=" NARROW,";
pin=0;
save_to_file=1;
is_matrix=0;
cell_geom{ 1;};
};
int_Data @[1] {
name="XOR.trial";
disp_opts=" NARROW,";
pin=0;
save_to_file=1;
is_matrix=0;
cell_geom{ 1;};
};
int_Data @[2] {
name="XOR.n_units";
disp_opts=" NARROW,";
pin=0;
save_to_file=1;
is_matrix=0;
cell_geom{ 1;};
};
float_Data @[3] {
name="input.act";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;1;};
};
float_Data @[4] {
name="hidden.act";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;1;};
};
float_Data @[5] {
name="output.act";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 1;1;};
};
float_Data @[6] {
name="input.[0].send.wt";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;};
};
float_Data @[7] {
name="input.[1].send.wt";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;};
};
float_Data @[8] {
name="hidden.[0].send.wt";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 1;};
};
float_Data @[9] {
name="hidden.[1].send.wt";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 1;};
};
float_Data @[10] {
name="hidden.[0].recv.wt";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;};
};
float_Data @[11] {
name="hidden.[1].recv.wt";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;};
};
float_Data @[12] {
name="output.[0].recv.wt";
disp_opts=;
pin=0;
save_to_file=1;
is_matrix=1;
cell_geom{ 2;};
};
};
};
};
logs {
name=;
el_typ=PDPLog;
el_def=0;
};
programs {
name=;
el_typ=Program;
el_def=0;
global_vars {
name=;
el_typ=ProgVar;
el_def=0;
};
Program_Group @.gp[0] {
name="StdBpTrain";
el_typ=Program;
el_def=0;
global_vars {
name=;
el_typ=ProgVar;
el_def=0;
ProgVar @[0] {
name="net";
var_type=T_Object;
object_type=BpNetwork;
object_val=.projects[0].networks[0]$5$;
};
ProgVar @[1] {
name="context";
var_type=T_HardEnum;
int_val=1;
hard_enum_type=Network::NetContext;
};
};
Program @[0] {
name="BpTrain";
flags=PF_NONE;
objs {
name=;
el_typ=taOBase;
el_def=0;
};
args {
name=;
el_typ=ProgVar;
el_def=0;
};
vars {
name=;
el_typ=ProgVar;
el_def=0;
ProgVar @[0] {
name="max_epoch";
var_type=T_Int;
int_val=50;
};
ProgVar @[1] {
name="epoch";
var_type=T_Int;
int_val=50;
};
};
init_code {
name=;
el_typ=NetCounterInit;
el_def=0;
NetCounterInit @[0] {
desc="initialize epoch counter";
off=0;
network_var=.projects[0].programs.gp[0].global_vars[0]$6$;
local_ctr_var=.projects[0].programs.gp[0][0].vars[1]$7$;
counter="epoch";
};
};
prog_code {
name=;
el_typ=WhileLoop;
el_def=0;
WhileLoop @[0] {
desc=;
off=0;
loop_code {
name=;
el_typ=ProgramCall;
el_def=0;
ProgramCall @[0] {
desc=;
off=0;
target=.projects[0].programs.gp[0][1]$8$;
prog_args {
name=;
el_typ=ProgArg;
el_def=0;
};
};
NetCounterIncr @[1] {
desc="increment the epoch counter";
off=0;
network_var=$6$;
local_ctr_var=$7$;
counter="epoch";
};
};
loop_var_type=;
loop_var="(epoch < max_epoch)";
init_val=;
};
};
};
Program @[1] {
name="BpEpoch";
flags=PF_NONE;
objs {
name=;
el_typ=taOBase;
el_def=0;
};
args {
name=;
el_typ=ProgVar;
el_def=0;
};
vars {
name=;
el_typ=ProgVar;
el_def=0;
ProgVar @[0] {
name="trial";
var_type=T_Int;
int_val=4;
};
ProgVar @[1] {
name="train_data";
var_type=T_Object;
object_type=DataTable;
object_val=.projects[0].data[0]$9$;
};
ProgVar @[2] {
name="has_data";
var_type=T_Int;
int_val=1;
};
};
init_code {
name=;
el_typ=NetCounterInit;
el_def=0;
NetCounterInit @[0] {
desc="initialize trial counter: note also needs to do this in regular running program";
off=0;
network_var=$6$;
local_ctr_var=.projects[0].programs.gp[0][1].vars[0]$10$;
counter="trial";
};
};
prog_code {
name=;
el_typ=NetCounterInit;
el_def=0;
NetCounterInit @[0] {
desc="initialize trial counter";
off=0;
network_var=$6$;
local_ctr_var=$10$;
counter="trial";
};
BasicDataLoop @[1] {
desc=;
off=0;
loop_code {
name=;
el_typ=ProgramCall;
el_def=0;
ProgramCall @[0] {
desc=;
off=0;
target=.projects[0].programs.gp[0][2]$11$;
prog_args {
name=;
el_typ=ProgArg;
el_def=0;
};
};
NetCounterIncr @[1] {
desc="increment trial counter";
off=0;
network_var=$6$;
local_ctr_var=$10$;
counter="trial";
};
};
loop_var_type="int";
loop_var="counter";
init_val="0";
data_var=.projects[0].programs.gp[0][1].vars[1]$12$;
order=PERMUTED;
cur_item_idx=1;
item_idx_list{ 3;0;2;1;};
};
};
};
Program @[2] {
name="BpTrial";
flags=PF_NONE;
objs {
name=;
el_typ=taOBase;
el_def=0;
};
args {
name=;
el_typ=ProgVar;
el_def=0;
};
vars {
name=;
el_typ=ProgVar;
el_def=0;
};
init_code {
name=;
el_typ=ProgEl;
el_def=0;
};
prog_code {
name=;
el_typ=MethodCall;
el_def=0;
MethodCall @[0] {
desc="Brad: What is this??  comment on fun is not helpful";
off=0;
result_var=;
method_spec {
script_obj=$6$;
method=taBase::DataUpdate;
};
args{ true;};
{ bool begin;};
};
MethodCall @[1] {
desc=;
off=0;
result_var=;
method_spec {
script_obj=$6$;
method=Network::InitExterns;
};
args{ };
{ };
};
ProgramCall @[2] {
desc=;
off=0;
target=.projects[0].programs.gp[0][3]$13$;
prog_args {
name=;
el_typ=ProgArg;
el_def=0;
};
};
MethodCall @[3] {
desc="updates all the activations";
off=0;
result_var=;
method_spec {
script_obj=$6$;
method=BpNetwork::Trial_Run;
};
args{ };
{ };
};
IfElse @[4] {
desc="compute weight changes or error, depending on testing vs. training";
off=0;
cond_test="context == Network::TRAIN";
true_code {
name=;
el_typ=MethodCall;
el_def=0;
MethodCall @[0] {
desc="compute weight changes, for training";
off=0;
result_var=;
method_spec {
script_obj=$6$;
method=Network::Compute_dWt;
};
args{ };
{ };
};
};
false_code {
name=;
el_typ=MethodCall;
el_def=0;
MethodCall @[0] {
desc="compute the error for display purposes only, during testing";
off=0;
result_var=;
method_spec {
script_obj=$6$;
method=BpNetwork::Compute_Error;
};
args{ };
{ };
};
};
};
ProgramCall @[5] {
desc=;
off=0;
target=.projects[0].programs.gp[0][4]$14$;
prog_args {
name=;
el_typ=ProgArg;
el_def=0;
};
};
MethodCall @[6] {
desc="Do we really need this??";
off=0;
result_var=;
method_spec {
script_obj=$6$;
method=taBase::DataUpdate;
};
args{ false;};
{ bool begin;};
};
MethodCall @[7] {
desc=;
off=0;
result_var=;
method_spec {
script_obj=$6$;
method=taBase::UpdateAllViews;
};
args{ };
{ };
};
UserScript @[8] {
desc=;
off=0;
user_script="cerr << net->epoch << \", \" << net->trial << endl;";
};
UserScript @[9] {
desc="busy loop!";
off=1;
user_script="for(int j=0;j<1000;j++) { j; }";
};
};
};
Program @[3] {
name="ApplyInputs";
flags=PF_NONE;
objs {
name=;
el_typ=LayerWriter_List;
el_def=0;
LayerWriter_List @[0] {
name="lw_list";
el_typ=LayerWriter;
el_def=0;
LayerWriter @[0] {
data_block=$9$;
chan_name="input";
layer=$2$;
offset {x=0: y=0: };
ext_flags=TARG_EXT;
noise {type=NONE: mean=0: var=0.5: par=1: };
value_names{ };
};
LayerWriter @[1] {
data_block=$9$;
chan_name="output";
layer=.projects[0].networks[0].layers[2]$15$;
offset {x=0: y=0: };
ext_flags=TARG;
noise {type=NONE: mean=0: var=0.5: par=1: };
value_names{ };
};
};
};
args {
name=;
el_typ=ProgVar;
el_def=0;
};
vars {
name=;
el_typ=ProgVar;
el_def=0;
};
init_code {
name=;
el_typ=UserScript;
el_def=0;
};
prog_code {
name=;
el_typ=UserScript;
el_def=0;
UserScript @[0] {
desc="this is hack until we can pick objects (objs) for the MethodCall function!
";
off=0;
user_script="objs.lw_list.ApplyData(context);

";
};
MethodCall @[1] {
desc="this should be activated when MethodCall can pick an obj directly to call a method on, instead of going through vars";
off=1;
result_var=;
method_spec {
script_obj=NULL;
method=LayerWriter_List::ApplyData;
};
args{ context;};
{ int context;};
};
};
};
Program @[4] {
name="MonitorNet";
flags=PF_NONE;
objs {
name=;
el_typ=NetMonitor;
el_def=0;
NetMonitor @[0] {
name="Monitor1";
items {
name=;
el_typ=NetMonItem;
el_def=0;
NetMonItem @[0] {
name="NetMonItem.XOR_epoch";
object=$5$;
variable="epoch";
pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
};
NetMonItem @[1] {
name="NetMonItem.XOR_trial";
object=$5$;
variable="trial";
pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
};
NetMonItem @[2] {
name="NetMonItem.XOR_n_units";
object=$5$;
variable="n_units";
pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
};
NetMonItem @[3] {
name="NetMonItem.XOR_act";
object=$5$;
variable="act";
pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
};
NetMonItem @[4] {
name="NetMonItem.XOR_s.wt";
object=$5$;
variable="s.wt";
pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
};
NetMonItem @[5] {
name="NetMonItem.XOR_r.wt";
object=$5$;
variable="r.wt";
pre_proc_1 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_2 {opr=NONE: arg=0: lw=-1: hi=1: };
pre_proc_3 {opr=NONE: arg=0: lw=-1: hi=1: };
};
};
data=.projects[0].data[1]$16$;
rmv_orphan_cols=1;
};
};
args {
name=;
el_typ=ProgVar;
el_def=0;
};
vars {
name=;
el_typ=ProgVar;
el_def=0;
ProgVar @[0] {
name="mon_data";
var_type=T_Object;
object_type=DataTable;
object_val=$16$;
};
};
init_code {
name=;
el_typ=MethodCall;
el_def=0;
MethodCall @[0] {
desc="Initialize monitoring data (get rid of any existing)";
off=1;
result_var=;
method_spec {
script_obj=.projects[0].programs.gp[0][4].vars[0]$17$;
method=DataTable::ResetData;
};
args{ };
{ };
};
MethodCall @[1] {
desc="update the monitor items and data schema: again, not doing until MethodCall can work on objs.";
off=1;
result_var=;
method_spec {
script_obj=$17$;
method=NetMonitor::UpdateMonitors;
};
args{ };
{ };
};
UserScript @[2] {
desc="temporary until MethodCall works on objs..";
off=0;
user_script="objs.Monitor1.UpdateMonitors();";
};
};
prog_code {
name=;
el_typ=MethodCall;
el_def=0;
MethodCall @[0] {
desc="add a new blank row to the data";
off=0;
result_var=;
method_spec {
ProgVar @*(.script_obj) {
name="mon_data";
var_type=T_Int;
int_val=0;
};
method=DataTable::AddBlankRow;
};
args{ };
{ };
};
MethodCall @[1] {
desc="get the new monitor data.  Note this is inactive until MethodCall can work on objs";
off=1;
result_var=;
method_spec {
script_obj=NULL;
method=NetMonitor::UpdateMonVals;
};
args{ };
{ };
};
UserScript @[2] {
desc="This is a hack until MethodCall can operate directly on objs.";
off=0;
user_script="objs.Monitor1.UpdateMonVals();";
};
MethodCall @[3] {
desc="todo: what is this again??";
off=0;
result_var=;
method_spec {
ProgVar @*(.script_obj) {
name="mon_data";
var_type=T_Int;
int_val=0;
};
method=DataBlock::WriteDone;
};
args{ };
{ };
};
};
};
};
};
scripts {
name=;
el_typ=Script;
el_def=0;
Script @[0] {
name="Script_0";
script_file=taFiler_ptr;
script_string=;
auto_run=0;
s_args{ };
{ };
};
Script @[1] {
name="Script_1";
script_file=taFiler_ptr;
script_string=;
auto_run=0;
s_args{ };
{ };
};
Script @[2] {
name="Script_2";
script_file=taFiler_ptr;
script_string=;
auto_run=0;
s_args{ };
{ };
};
};
edits {
name=;
el_typ=SelectEdit;
el_def=0;
};
viewers {
name=;
el_typ=DataViewer;
el_def=0;
pdpDataViewer @[0] {
m_data=.projects[0]$18$;
name="pdpDataViewer_0";
ta_menus {
};
menu=taiMenuBar_ptr;
file_name=;
win_pos {lft=0: top=0: wd=0.75: ht=0.80000001: };
iconified=0;
display_toggle=1;
toolbars {
name=;
el_typ=taBase;
el_def=0;
ToolBar @[0] {
name="Application";
lft=0;
top=0;
o=Horizontal;
mapped=0;
};
};
root_view {
m_data=NULL;
m_transform=NULL;
children {
name=;
el_typ=T3DataView;
el_def=0;
NetView @[0] {
m_data=$5$;
m_transform=NULL;
children {
name=;
el_typ=T3DataView;
el_def=0;
LayerView @[0] {
m_data=$2$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=2: y=0.5: z=0: }: };
};
LayerView @[1] {
m_data=$4$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=2: y=1.5: z=0: }: };
};
LayerView @[2] {
m_data=$15$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=2: y=2.5: z=0: }: };
};
PrjnView @[3] {
m_data=.projects[0].networks[0].layers[1].projections[0]$19$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=2: y=0.5: z=-0: }: };
children {
name=;
el_typ=T3DataView;
el_def=0;
};
};
PrjnView @[4] {
m_data=.projects[0].networks[0].layers[2].projections[0]$20$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=2: y=1.5: z=-0: }: };
children {
name=;
el_typ=T3DataView;
el_def=0;
};
};
};
scale {
name=;
chunks=133;
min=0;
max=1;
range=0.5;
zero=0.5;
spec=.colorspecs[0]$21$;
auto_scale=1;
};
scale_ranges {
name=;
el_typ=ScaleRange;
el_def=0;
ScaleRange @[0] {
name="act";
auto_scale=1;
min=0;
max=1;
};
ScaleRange @[1] {
name="targ";
auto_scale=0;
min=-1;
max=1;
};
ScaleRange @[2] {
name="ext";
auto_scale=0;
min=-1;
max=1;
};
ScaleRange @[3] {
name="net";
auto_scale=0;
min=-1;
max=1;
};
};
display=1;
ordered_uvg_list{ 8;};
unit_disp_mode=UDM_BLOCK;
unit_text_disp=UTD_VALUES;
};
};
host=ISelectableHost_ptr;
};
};
};
test_objs {
name=;
el_typ=ImageReader;
el_def=0;
ImageReader @[0] {
name="ImageReader_0";
color_mode=CM_RGB;
img_format=IF_AUTO;
};
};
save_rmv_units=1;
use_sim_log=0;
prev_file_nm="/home/shadow/oreilly/pdp4.0/trunk/test/xor_new.proj";
desc1=;
desc2=;
desc3=;
desc4=;
view_colors {
name=;
el_typ=RGBA;
el_def=0;
RGBA @[0] {name="black": r=0: g=0: b=0: a=1: desc="Text": };
RGBA @[1] {name="": r=0.75294101: g=0.76862699: b=0.82745099: a=1: desc="Background": };
RGBA @[2] {name="VioletRed1": r=1: g=0.24313726: b=0.58823532: a=1: desc="Network": };
RGBA @[3] {name="DarkOliveGreen3": r=0.63529414: g=0.80392158: b=0.35294119: a=1: desc="Env": };
RGBA @[4] {name="yellow": r=1: g=1: b=0: a=1: desc="SchedProc": };
RGBA @[5] {name="LightSteelBlue2": r=0.73725492: g=0.82352942: b=0.93333334: a=1: desc="StatGroup": };
RGBA @[6] {name="wheat": r=0.96078432: g=0.87058824: b=0.7019608: a=1: desc="SubProcGroup": };
RGBA @[7] {name="SlateBlue1": r=0.51372552: g=0.43529412: b=1: a=1: desc="Stat": };
RGBA @[8] {name="gold": r=1: g=0.84313726: b=0: a=1: desc="Process": };
RGBA @[9] {name="burlywood2": r=0.93333334: g=0.77254903: b=0.56862748: a=1: desc="Log": };
RGBA @[10] {name="aquamarine": r=0.49803922: g=1: b=0.83137256: a=1: desc="Agg Highlite": };
RGBA @[11] {name="grey64": r=0.63921571: g=0.63921571: b=0.63921571: a=1: desc="Group": };
RGBA @[12] {name="grey75": r=0.74901962: g=0.74901962: b=0.74901962: a=1: desc="Inactive": };
RGBA @[13] {name="red": r=1: g=0: b=0: a=1: desc="Stopping Stat": };
RGBA @[14] {name="SlateBlue3": r=0.41176471: g=0.34901962: b=0.80392158: a=1: desc="Agging Stat": };
RGBA @[15] {name="SpringGreen": r=0: g=1: b=0.49803922: a=1: desc="ConSpec": };
RGBA @[16] {name="violet": r=0.93333334: g=0.50980395: b=0.93333334: a=1: desc="UnitSpec": };
RGBA @[17] {name="orange": r=1: g=0.64705884: b=0: a=1: desc="PrjnSpec": };
RGBA @[18] {name="MediumPurple1": r=0.67058825: g=0.50980395: b=1: a=1: desc="LayerSpec": };
RGBA @[19] {name="azure": r=0.94117647: g=1: b=1: a=1: desc="Wizard": };
};
};
