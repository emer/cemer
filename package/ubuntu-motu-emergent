#!/bin/bash
set -e

REV="$1"
if [ -z $REV ]; then
  read -p "Enter the svn revision number to retrieve: [HEAD] " REV
  if [ -z $REV ]; then REV="HEAD"; fi
fi
echo "Building Emergent from Subversion rev $REV on "
cat /etc/issue || echo "Unknown platform"

#NUM_PROCS=`grep "^processor\s*:\s*[0-9]*$" /proc/cpuinfo |wc -l`
#MAKEFLAGS="${MAKEFLAGS} -j${NUM_PROCS}"

DEBEMAIL='brian.mingus@colorado.edu'
DEBFULLNAME='Brian Mingus'
REPONAME=`lsb_release -cs` # e.g., "maverick"

EMERGENT_TMP_DIR=emergent_TMP
cd /tmp && rm -rf emergent_*
svn checkout --username anonymous --password emergent -r ${REV} http://grey.colorado.edu/svn/emergent/emergent/trunk ${EMERGENT_TMP_DIR}
# config.h is a generated file, so can't do this:
#EMERGENT_VERSION=`sed -n '/VERSION/s/.*"\(.*\)".*/\1/p' < ${EMERGENT_TMP_DIR}/config.h`
EMERGENT_VERSION_MAJOR=`sed -n '/set(EMERGENT_VERSION_MAJOR/s/.*"\(.*\)".*/\1/p' < ${EMERGENT_TMP_DIR}/CMakeLists.txt`
EMERGENT_VERSION_MINOR=`sed -n '/set(EMERGENT_VERSION_MINOR/s/.*"\(.*\)".*/\1/p' < ${EMERGENT_TMP_DIR}/CMakeLists.txt`
EMERGENT_VERSION_PATCH=`sed -n '/set(EMERGENT_VERSION_PATCH/s/.*"\(.*\)".*/\1/p' < ${EMERGENT_TMP_DIR}/CMakeLists.txt`
EMERGENT_VERSION="${EMERGENT_VERSION_MAJOR}.${EMERGENT_VERSION_MINOR}.${EMERGENT_VERSION_PATCH}"
EMERGENT_BLD_DIR=emergent-${EMERGENT_VERSION}
mv ${EMERGENT_TMP_DIR} ${EMERGENT_BLD_DIR}
echo "Building Emergent version ${EMERGENT_VERSION}"
# wget ftp://grey.colorado.edu/pub/emergent/emergent-5.tar.gz
# tar -xzf emergent-5.tar.gz
# mv emergent ${EMERGENT_BLD_DIR}
tar -czf emergent_${EMERGENT_VERSION}.orig.tar.gz ${EMERGENT_BLD_DIR}
cd ${EMERGENT_BLD_DIR}
mkdir -p debian

#################################################
# Create debian/changelog
#################################################
cat > debian/changelog <<Emergent
emergent (${EMERGENT_VERSION}-0ubuntu1) ${REPONAME}; urgency=low

  * Initial release (LP: #364748)

 -- ${DEBFULLNAME} <${DEBEMAIL}>  $(date -R)
Emergent

#################################################
# Create debian/control
#################################################
cat > debian/control <<Emergent
Source: emergent
Section: science
Priority: extra
Maintainer: Ubuntu MOTU Developers <ubuntu-motu@lists.ubuntu.com>
XSBC-Original-Maintainer: ${DEBFULLNAME} <${DEBEMAIL}>
Build-Depends: debhelper (>= 7.0.17), cmake, g++, libqt4-dev, libcoin60-dev, libreadline6-dev, libgsl0-dev, libode-sp-dev, libpng-dev, libjpeg-dev, zlib1g-dev, libquarter0
Standards-Version: 3.9.1
Homepage: http://grey.colorado.edu/emergent

Package: emergent
Architecture: any
Depends: \${shlibs:Depends}, \${misc:Depends}
Description: Emergent Neural Network Simulation System
 Emergent (a major rewrite of PDP++) is a comprehensive
 simulation environment for creating complex, sophisticated models
 of the brain and cognitive processes using neural network
 models. These same networks can also be used for all kinds of
 other more pragmatic tasks, like predicting the stock market or
 analyzing data. It includes a full GUI environment for
 constructing networks and the input/output patterns for the
 networks to process, and many different analysis tools for
 understanding what the networks are doing. It has a new
 tabbed-browser style interface with full 3D graphics (via OpenGL
 and Open Inventor/Coin3D), and powerful new GUI programming tools
 and data processing and analysis capabilities.

Emergent

#################################################
# Create debian/copyright
#################################################
cat > debian/copyright <<Emergent
This package was debianized by:

    ${DEBFULLNAME} <${DEBEMAIL}> on $(date -R)

It was downloaded from:

    http://grey.colorado.edu

Upstream Author(s):

    Randy OReilly <oreilly@grey.colorado.edu>, 
    Brad Aisa <Brad.Aisa@colorado.edu>,
    Brian Mingus <Brian.Mingus@colorado.edu>

Copyright:

    Copyright 1995-2009 Regents of the University of Colorado, 
    Carnegie Mellon University, Princeton University

License:

    This file is part of The Emergent Toolkit

    Emergent is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    Emergent is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this package; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

The Debian packaging is:

    Copyright 2009, ${DEBFULLNAME} <${DEBEMAIL}>

and is licensed under the GPL, see above.

X-Comment: On Debian GNU/Linux systems, the complete text of the GNU General
 Public License can be found in the /usr/share/common-licenses/GPL-2 file.

Emergent

#################################################
# Create debian/rules makefile
#################################################
cat > debian/rules <<Emergent
#!/usr/bin/make -f

build: build-stamp
build-stamp:
	dh build
	touch build-stamp

# There is no test target, so override to do nothing.
override_dh_auto_test:

clean:
	rm -f CMakeFiles/CMakeDetermineCompilerABI_C.bin CMakeDetermineCompilerABI_CXX.bin CompilerIdC/a.out CompilerIdCXX/a.out CMakeCache.txt
	dh clean

install: build install-stamp
install-stamp:
	dh install
	touch install-stamp

binary-arch: install
	dh binary-arch

binary-indep: install
	dh binary-indep

binary: binary-arch binary-indep
Emergent

#################################################
# START Create debian/compat 
#################################################
cat > debian/compat <<Emergent
7
Emergent

#################################################
# START Create debian/emergent.1
#################################################
# cat > debian/emergent.1 <<Emergent
#
# .\" Process this file with
# .\" groff -man -Tascii foo.1
# .\"
# .TH FOO 1 "MARCH 1995" Linux "User Manuals"
# .SH NAME
# emergent \- Neural Network Simulation System
# .SH DESCRIPTION
# emergent (http://grey.colorado.edu) is a comprehensive simulation
# environment for creating complex, sophisticated models of the brain
# and cognitive processes using neural network models. These same
# networks can also be used for all kinds of other more pragmatic tasks,
# like predicting the stock market or analyzing data. It includes a full
# GUI environment for constructing networks and the input/output
# patterns for the networks to process, and many different analysis
# tools for understanding what the networks are doing. It has a new
# tabbed-browser style interface with full 3D graphics (via OpenGL and
# Open Inventor/Coin3D), and powerful new GUI programming tools and data
# processing and analysis capabilities.
# .SH AUTHOR
# Randy OReilly <oreilly at grey dot colorado dot edu>
#
# Emergent

#debuild -S -us -uc
debuild -i -b -us -uc

