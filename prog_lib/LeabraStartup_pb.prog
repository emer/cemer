// ta_Dump File v2.0
Program .projects[2].programs[0] { 
  ProgVar_List @.vars = [9] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
    ProgVar @[6] { };
    ProgVar @[7] { };
    ProgVar @[8] { };
  };

  ProgEl_List @.prog_code = [28] {
    IfReturn @[0] { };
    Comment @[1] { };
    MiscCall @[2] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[3] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[4] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[5] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[6] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[7] { };
    Comment @[8] { };
    PrintExpr @[9] { };
    MethodCall @[10] { };
    MiscCall @[11] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MiscCall @[12] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MiscCall @[13] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    VarIncr @[14] { };
    MiscCall @[15] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MethodCall @[16] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    MethodCall @[17] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    MethodCall @[18] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    Comment @[19] { };
    If @[20] { 
      ProgEl_List @.true_code = [2] {
	MethodCall @[0] { 
	  ProgArg_List @.meth_args = [4] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	    ProgArg @[3] { };
	  };
	};
	MiscCall @[1] { 
	  ProgArg_List @.meth_args = [1] {
	    ProgArg @[0] { };
	  };
	};
      };
    };
    MethodCall @[21] { 
      ProgArg_List @.meth_args = [4] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
      };
    };
    MethodCall @[22] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    MethodCall @[23] { 
      ProgArg_List @.meth_args = [4] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
      };
    };
    MethodCall @[24] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    OtherProgramVar @[25] { };
    PrintExpr @[26] { };
    ProgramCall @[27] { 
      ProgArg_List @.prog_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
  };
};
Program .projects[2].programs[0] {
 name="LeabraStartup_pb";
 tags="Leabra, Startup, Parallel Batch";
 desc="run project in the background (replaces leabra_startup.css) -- parallel batch version for running on a cluster";
 flags=STARTUP_RUN;
 objs {
  name=;
  el_typ=taNBase;
  el_def=0;
 };
 types {
  name=;
  el_typ=ProgType;
  el_def=0;
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="train";
   var_type=T_Object;
   object_type=Program;
   object_val=.projects[2].programs.gp[0][1]$0$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc="set this to point to your train process";
  };
  ProgVar @[1] {
   name="batch";
   var_type=T_Object;
   object_type=Program;
   object_val=.projects[2].programs.gp[0][0]$1$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc="set this to point to your batch process";
  };
  ProgVar @[2] {
   name="tag";
   var_type=T_String;
   string_val="_gui";
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc=;
  };
  ProgVar @[3] {
   name="batch_str";
   var_type=T_String;
   string_val="00";
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc="batch number as a string (leading zeros)";
  };
  ProgVar @[4] {
   name="log_dir";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc="log file directory";
  };
  ProgVar @[5] {
   name="log_file_nm";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc="name of log file";
  };
  ProgVar @[6] {
   name="batch_start";
   var_type=T_Int;
   int_val=0;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc="batch starting number";
  };
  ProgVar @[7] {
   name="EpochOutputData";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[2].data.gp[1][1]$2$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc=;
  };
  ProgVar @[8] {
   name="TrialOutputData";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[2].data.gp[1][0]$3$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED;
   reference=0;
   desc=;
  };
 };
 functions {
  name=;
  el_typ=Function;
  el_def=0;
 };
 load_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 prog_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
  IfReturn @[0] {
   desc="don't run if running in the gui!";
   flags=;
   cond {
    expr="taMisc::gui_active";
   };
  };
  Comment @[1] {
   desc="add our special args from command line";
   flags=;
  };
  MiscCall @[2] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"tag=\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"FileTag\"";
     };
    };
   };
  };
  MiscCall @[3] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"logdir=\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"LogDir\"";
     };
    };
   };
  };
  MiscCall @[4] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"epochs=\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"EpochMax\"";
     };
    };
   };
  };
  MiscCall @[5] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"b_start=\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"BatchStart\"";
     };
    };
   };
  };
  MiscCall @[6] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"b_end=\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"BatchEnd\"";
     };
    };
   };
  };
  MiscCall @[7] {
   desc="key step: actually process args!";
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::UpdateArgs;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
  Comment @[8] {
   desc="Initialize and set variables from args";
   flags=;
  };
  PrintExpr @[9] {
   desc=;
   flags=;
   expr {
    expr="\"Loaded project: \" << .projects[0].file_name";
   };
  };
  MethodCall @[10] {
   desc=;
   flags=;
   result_var=NULL;
   obj=.projects[2].programs[0].vars[1]$4$;
   method=Program::Init;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
  MiscCall @[11] {
   desc=;
   flags=;
   result_var=.projects[2].programs[0].vars[2]$5$;
   object_type=taMisc;
   method=taMisc::FindArgByName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="nm";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"FileTag\"";
     };
    };
   };
  };
  MiscCall @[12] {
   desc=;
   flags=;
   result_var=.projects[2].programs[0].vars[6]$6$;
   object_type=taMisc;
   method=taMisc::FindArgByName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="nm";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"BatchStart\"";
     };
    };
   };
  };
  MiscCall @[13] {
   desc=;
   flags=;
   result_var=.projects[2].programs[0].vars[3]$7$;
   object_type=taMisc;
   method=taMisc::LeadingZeros;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=int;
     type="int";
     name="num";
     required=0;
     def_val=;
     expr {
      expr="batch_start";
     };
    };
    ProgArg @[1] {
     arg_type=int;
     type="int";
     name="len";
     required=0;
     def_val=;
     expr {
      expr="2";
     };
    };
   };
  };
  VarIncr @[14] {
   desc=;
   flags=;
   var=$5$;
   expr {
    expr="\".\" + batch_str";
   };
  };
  MiscCall @[15] {
   desc=;
   flags=;
   result_var=.projects[2].programs[0].vars[4]$8$;
   object_type=taMisc;
   method=taMisc::FindArgByName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="nm";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"LogDir\"";
     };
    };
   };
  };
  MethodCall @[16] {
   desc=;
   flags=;
   result_var=NULL;
   obj=.projects[2].programs[0].vars[0]$9$;
   method=Program::SetVarFmArg;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="arg_nm";
     required=1;
     def_val=;
     expr {
      expr="\"EpochMax\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="var_nm";
     required=1;
     def_val=;
     expr {
      expr="\"max_epoch\"";
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="quiet";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
   };
  };
  MethodCall @[17] {
   desc=;
   flags=;
   result_var=NULL;
   obj=$4$;
   method=Program::SetVarFmArg;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="arg_nm";
     required=1;
     def_val=;
     expr {
      expr="\"BatchStart\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="var_nm";
     required=1;
     def_val=;
     expr {
      expr="\"batch\"";
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="quiet";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
   };
  };
  MethodCall @[18] {
   desc=;
   flags=;
   result_var=NULL;
   obj=$4$;
   method=Program::SetVarFmArg;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="arg_nm";
     required=1;
     def_val=;
     expr {
      expr="\"BatchEnd\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="var_nm";
     required=1;
     def_val=;
     expr {
      expr="\"max_batch\"";
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="quiet";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
   };
  };
  Comment @[19] {
   desc="Set log files";
   flags=;
  };
  If @[20] {
   desc="save startup args: only for first job";
   flags=;
   cond {
    expr="batch_start == 0";
   };
   true_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    MethodCall @[0] {
     desc="save args to file: last arg is to include dmem proc number";
     flags=;
     result_var=.projects[2].programs[0].vars[5]$10$;
     obj=.projects[2].programs[0].vars[7]$11$;
     method=taBase::GetFileNameFmProject;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="ext";
       required=1;
       def_val=;
       expr {
	expr="\".args\"";
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="tag";
       required=0;
       def_val="\"\"";
       expr {
	expr="tag.before(\".00\",-1)";
       };
      };
      ProgArg @[2] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="subdir";
       required=0;
       def_val="\"\"";
       expr {
	expr="log_dir";
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="dmem_proc_no";
       required=0;
       def_val="false";
       expr {
	expr="false";
       };
      };
     };
    };
    MiscCall @[1] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taMisc;
     method=taMisc::FullArgStringToFile;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       expr {
	expr="log_file_nm";
       };
      };
     };
    };
   };
  };
  MethodCall @[21] {
   desc="last arg is to include dmem proc number";
   flags=;
   result_var=$10$;
   obj=$11$;
   method=taBase::GetFileNameFmProject;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="ext";
     required=1;
     def_val=;
     expr {
      expr="\".epc.dat\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="tag";
     required=0;
     def_val="\"\"";
     expr {
      expr="tag";
     };
    };
    ProgArg @[2] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="subdir";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_dir";
     };
    };
    ProgArg @[3] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_no";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
   };
  };
  MethodCall @[22] {
   desc="last arg is to restrict log to dmem_proc = 0";
   flags=;
   result_var=NULL;
   obj=$11$;
   method=DataTable::SaveDataLog;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="fname";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_file_nm";
     };
    };
    ProgArg @[1] {
     arg_type=bool;
     type="bool";
     name="append";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_0";
     required=0;
     def_val="true";
     expr {
      expr="true";
     };
    };
   };
  };
  MethodCall @[23] {
   desc="last arg is to include dmem proc number";
   flags=OFF;
   result_var=$10$;
   obj=.projects[2].programs[0].vars[8]$12$;
   method=taBase::GetFileNameFmProject;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="ext";
     required=1;
     def_val=;
     expr {
      expr="\".trl.dat\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="tag";
     required=0;
     def_val="\"\"";
     expr {
      expr="tag";
     };
    };
    ProgArg @[2] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="subdir";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_dir";
     };
    };
    ProgArg @[3] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_no";
     required=0;
     def_val="false";
     expr {
      expr="true";
     };
    };
   };
  };
  MethodCall @[24] {
   desc="last arg is to restrict log to dmem_proc = 0";
   flags=OFF;
   result_var=NULL;
   obj=$12$;
   method=DataTable::SaveDataLog;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="fname";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_file_nm";
     };
    };
    ProgArg @[1] {
     arg_type=bool;
     type="bool";
     name="append";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_0";
     required=0;
     def_val="true";
     expr {
      expr="false";
     };
    };
   };
  };
  OtherProgramVar @[25] {
   desc=;
   flags=;
   other_prog=.projects[2].programs.gp[0][9]$13$;
   set_other=1;
   var_1=$5$;
   var_2=NULL;
   var_3=NULL;
   var_4=NULL;
  };
  PrintExpr @[26] {
   desc=;
   flags=;
   expr {
    expr="\"Running: \" << batch.name";
   };
  };
  ProgramCall @[27] {
   desc=;
   flags=;
   target=$1$;
   targ_ld_init="*LeabraBatch*";
   prog_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=LeabraNetwork;
     type="LeabraNetwork*";
     name="network";
     required=1;
     def_val=;
     expr {
      expr=;
     };
    };
    ProgArg @[1] {
     arg_type=DataTable;
     type="DataTable*";
     name="input_data";
     required=1;
     def_val=;
     expr {
      expr=;
     };
    };
   };
  };
 };
};
