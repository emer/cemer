// ta_Dump File v2.0
Program .projects[0].programs.gp[0][0] { 
  ProgVar_List @.args = [3] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
  };

  ProgVar_List @.vars = [1] {
    ProgVar @[0] { };
  };

  ProgEl_List @.init_code = [1] {
    NetCounterInit @[0] { };
  };

  ProgEl_List @.prog_code = [2] {
    NetCounterInit @[0] { };
    WhileLoop @[1] { 
      ProgEl_List @.loop_code = [2] {
	ProgramCall @[0] { 
	  ProgArg_List @.prog_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	NetCounterIncr @[1] { };
      };
    };
  };
};
Program .projects[0].programs.gp[0][0] {
 name="LeabraBatch";
 desc="Iterate over training runs";
 flags=;
 objs {
  name=;
  el_typ=taOBase;
  el_def=0;
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="network";
   var_type=T_Object;
   object_type=LeabraNetwork;
   object_val=.projects[0].networks[0]$0$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
  ProgVar @[1] {
   name="input_data";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[0][0]$1$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
  ProgVar @[2] {
   name="max_batch";
   var_type=T_Int;
   int_val=10;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="batch";
   var_type=T_Int;
   int_val=0;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="batch counter";
  };
 };
 functions {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 load_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=NetCounterInit;
  el_def=0;
  NetCounterInit @[0] {
   desc=;
   flags=;
   network_var=.projects[0].programs.gp[0][0].args[0]$2$;
   local_ctr_var=.projects[0].programs.gp[0][0].vars[0]$3$;
   counter=Network::batch;
  };
 };
 prog_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
  NetCounterInit @[0] {
   desc=;
   flags=;
   network_var=$2$;
   local_ctr_var=$3$;
   counter=Network::batch;
  };
  WhileLoop @[1] {
   desc=;
   flags=;
   loop_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    ProgramCall @[0] {
     desc=;
     flags=;
     target=.projects[0].programs.gp[0][1]$4$;
     targ_ld_init="*LeabraTrain*";
     call_init=0;
     prog_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=LeabraNetwork;
       type="LeabraNetwork*";
       name="network";
       expr {
	expr="network";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ network;	};
	bad_vars{ 	};
       };
      };
      ProgArg @[1] {
       arg_type=DataTable;
       type="DataTable*";
       name="input_data";
       expr {
	expr="input_data";
	flags=;
	var_expr="$#0#$";
	vars {
	};
	var_names{ input_data;	};
	bad_vars{ 	};
       };
      };
     };
    };
    NetCounterIncr @[1] {
     desc=;
     flags=;
     network_var=$2$;
     local_ctr_var=$3$;
     counter=Network::batch;
    };
   };
   test {
    expr="batch < max_batch";
    flags=;
    var_expr="$#0#$ < $#1#$";
    vars {
    };
    var_names{ batch;max_batch;    };
    bad_vars{     };
   };
  };
 };
};
