// ta_Dump File v3.0 -- code v5.0.2.0
Program .projects[0].programs.gp[0][5] { 
  ProgObjList @.objs = [0] {
  };

  ProgType_List @.types = [0] {
  };

  ProgVar_List @.args = [1] {
    ProgVar @[0] { };
  };

  ProgVar_List @.vars = [1] {
    ProgVar @[0] { };
  };

  Function_List @.functions = [0] {
  };

  ProgEl_List @.load_code = [0] {
  };

  ProgEl_List @.init_code = [0] {
  };

  ProgEl_List @.prog_code = [2] {
    MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
    };
    NetUpdateView @[1] { };
  };
};
Program .projects[0].programs.gp[0][5] {
 name="LeabraCycle";
 short_nm="Cycle";
 tags="Leabra, Std";
 desc="runs one cycle of leabra processing (updating net inputs and activations)";
 flags=;
 objs {
  name=;
  el_typ=taOBase;
  el_def=0;
 };
 types {
  name=;
  el_typ=ProgType;
  el_def=0;
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="network";
   var_type=T_Object;
   object_type=LeabraNetwork;
   object_val=.projects[0].networks[0]$$<LeabraNetwork,Network_0>;
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="update_net_view";
   var_type=T_Bool;
   bool_val=0;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)";
   init_from=NULL;
  };
 };
 functions {
  name=;
  el_typ=Function;
  el_def=0;
 };
 load_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 prog_code {
  name=;
  el_typ=MethodCall;
  el_def=0;
  MethodCall @[0] {
   desc="this does all the standard leabra processing for one cycle of activation updating";
   flags=;
   result_var=NULL;
   obj=.projects[0].programs.gp[0][5].args[0]$$;
   method=LeabraNetwork::Cycle_Run;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
  NetUpdateView @[1] {
   desc="update network views if update_net_view == true";
   flags=;
   network_var=$.projects[0].programs.gp[0][5].args[0]$;
   update_var=.projects[0].programs.gp[0][5].vars[0]$$;
  };
 };
 step_prog=NULL;
 step_n=1;
};
