// ta_Dump File v3.0 -- code v5.1.0.0
Program .projects[0].programs.gp[0][9] { 
  ProgObjList @.objs = [6] {
    NetMonitor @[0] { 
      NetMonItem_List @.items = [11] {
	NetMonItem @[0] { };
	NetMonItem @[1] { };
	NetMonItem @[2] { };
	NetMonItem @[3] { };
	NetMonItem @[4] { };
	NetMonItem @[5] { };
	NetMonItem @[6] { };
	NetMonItem @[7] { };
	NetMonItem @[8] { };
	NetMonItem @[9] { };
	NetMonItem @[10] { };
      };
    };
    DataTable @[1] { 
      DataTableCols @.data = [1] {
	String_Data @[0] { };
      };
    };
    DataTable @[2] { 
      DataTableCols @.data = [11] {
	int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
	int_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
	int_Data @[2] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
	String_Data @[3] { };
	String_Data @[4] { };
	int_Data @[5] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
	float_Data @[6] { };
	float_Data @[7] { };
	float_Data @[8] { };
	float_Data @[9] { };
	float_Data @[10] { };
      };
    };
    DataTable @[3] { 
      DataTableCols @.data = [2] {
	int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
	float_Data @[1] { };
      };
    };
    DataTable @[4] { 
      DataTableCols @.data = [2] {
	int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
	float_Data @[1] { };
      };
    };
    DataTable @[5] { 
      DataTableCols @.data = [2] {
	int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
	float_Data @[1] { };
      };
    };
  };

  ProgType_List @.types = [1] {
    DynEnumType @[0] { 
      DynEnumItem_List @.enums = [3] {
	DynEnumItem @[0] { };
	DynEnumItem @[1] { };
	DynEnumItem @[2] { };
      };
    };
  };

  ProgVar_List @.args = [2] {
    ProgVar @[0] { };
    ProgVar @[1] { };
  };

  ProgVar_List @.vars = [15] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
    ProgVar @[6] { };
    ProgVar @[7] { };
    ProgVar @[8] { };
    ProgVar @[9] { };
    ProgVar @[10] { };
    ProgVar @[11] { };
    ProgVar @[12] { };
    ProgVar @[13] { };
    ProgVar @[14] { };
  };

  Function_List @.functions = [0] {
  };

  ProgEl_List @.load_code = [0] {
  };

  ProgEl_List @.init_code = [12] {
    MemberMethodCall @[0] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    VarIncr @[1] { };
    ForLoop @[2] { 
      ProgEl_List @.loop_code = [2] {
	MethodCall @[0] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	IfElse @[1] { 
	  ProgEl_List @.true_code = [1] {
	    MethodCall @[0] { 
	      ProgArg_List @.meth_args = [2] {
		ProgArg @[0] { };
		ProgArg @[1] { };
	      };
	    };
	  };

	  ProgEl_List @.false_code = [2] {
	    AssignExpr @[0] { };
	    MemberAssign @[1] { };
	  };
	};
      };
    };
    MethodCall @[3] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MethodCall @[5] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MethodCall @[6] { 
      ProgArg_List @.meth_args = [0] {
      };
    };
    MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
    };
    MethodCall @[8] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    ForLoop @[9] { 
      ProgEl_List @.loop_code = [3] {
	ProgVars @[0] { 
	  ProgVar_List @.local_vars = [2] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	  };
	};
	MethodCall @[1] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
	MethodCall @[2] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
      };
    };
    MethodCall @[10] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    ResetDataRows @[11] { };
  };

  ProgEl_List @.prog_code = [1] {
    Switch @[0] { 
      ProgEl_List @.cases = [3] {
	CaseBlock @[0] { 
	  ProgEl_List @.prog_code = [3] {
	    MethodCall @[0] { 
	      ProgArg_List @.meth_args = [0] {
	      };
	    };
	    MethodCall @[1] { 
	      ProgArg_List @.meth_args = [0] {
	      };
	    };
	    MethodCall @[2] { 
	      ProgArg_List @.meth_args = [0] {
	      };
	    };
	  };
	};
	CaseBlock @[1] { 
	  ProgEl_List @.prog_code = [7] {
	    IfElse @[0] { 
	      ProgEl_List @.true_code = [1] {
		AssignExpr @[0] { };
	      };

	      ProgEl_List @.false_code = [1] {
		AssignExpr @[0] { };
	      };
	    };
	    MethodCall @[1] { 
	      ProgArg_List @.meth_args = [1] {
		ProgArg @[0] { };
	      };
	    };
	    MethodCall @[2] { 
	      ProgArg_List @.meth_args = [1] {
		ProgArg @[0] { };
	      };
	    };
	    ForLoop @[3] { 
	      ProgEl_List @.loop_code = [5] {
		ProgVars @[0] { 
		  ProgVar_List @.local_vars = [2] {
		    ProgVar @[0] { };
		    ProgVar @[1] { };
		  };
		};
		MethodCall @[1] { 
		  ProgArg_List @.meth_args = [2] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		  };
		};
		MethodCall @[2] { 
		  ProgArg_List @.meth_args = [2] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		  };
		};
		MethodCall @[3] { 
		  ProgArg_List @.meth_args = [2] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		  };
		};
		ForLoop @[4] { 
		  ProgEl_List @.loop_code = [3] {
		    MethodCall @[0] { 
		      ProgArg_List @.meth_args = [2] {
			ProgArg @[0] { };
			ProgArg @[1] { };
		      };
		    };
		    MathCall @[1] { 
		      ProgArg_List @.meth_args = [3] {
			ProgArg @[0] { };
			ProgArg @[1] { };
			ProgArg @[2] { };
		      };
		    };
		    MethodCall @[2] { 
		      ProgArg_List @.meth_args = [2] {
			ProgArg @[0] { };
			ProgArg @[1] { };
		      };
		    };
		  };
		};
	      };
	    };
	    ResetDataRows @[4] { };
	    DoneWritingDataRow @[5] { };
	    DataProcCall @[6] { 
	      ProgArg_List @.meth_args = [2] {
		ProgArg @[0] { };
		ProgArg @[1] { };
	      };
	    };
	  };
	};
	CaseBlock @[2] { 
	  ProgEl_List @.prog_code = [1] {
	    DataGroupProg @[0] { 
	      DataOpList @.ops = [2] {
		DataGroupEl @[0] { };
		DataGroupEl @[1] { };
	      };
	    };
	  };
	};
      };
    };
  };
};
Program .projects[0].programs.gp[0][9] {
 name="CycleTrajStat";
 short_nm="CycTraj";
 tags="leabra, cycle, trajectory, statistic, settling";
 desc=;
 flags=NO_STOP_STEP;
 objs {
  name=;
  el_typ=DataTable;
  el_def=0;
  NetMonitor @[0] {
   name="cyctraj_netmon";
   items {
    name=;
    el_typ=NetMonItem;
    el_def=0;
    NetMonItem @[0] {
     name="batch";
     computed=0;
     object_type=LeabraNetwork;
     object=.projects[0].networks[0]$$<LeabraNetwork,ObjrecNet>;
     variable="batch";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[1] {
     name="epoch";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="epoch";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[2] {
     name="trial";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="trial";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[3] {
     name="trial_name";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="trial_name";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[4] {
     name="group_name";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="group_name";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[5] {
     name="phase_no";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="phase_no";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[6] {
     name="minus_cycles";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="minus_cycles";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[7] {
     name="sse";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="sse";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[8] {
     name="norm_err";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="norm_err";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[9] {
     name="ext_rew";
     computed=0;
     object_type=LeabraNetwork;
     object=$.projects[0].networks[0]$;
     variable="ext_rew";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="": op=NONE: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="": opr=NONE: arg=0: lw=-1: hi=1: };
    };
    NetMonItem @[10] {
     name="V4_IT_act_eq";
     computed=0;
     object_type=LeabraLayer;
     object=.projects[0].networks[0].layers[2]$$<LeabraLayer,V4_IT>;
     variable="act_eq";
     var_label=;
     name_style=AUTO_NAME;
     max_name_len=6;
     val_type=VT_FLOAT;
     matrix=0;
     matrix_geom{      };
     data_agg=0;
     data_src=NULL;
     agg_col {
      col_name=;
     };
     agg {name="AggregateSpec_62": op=NONE: rel={name="Relation_62": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
     select_rows=0;
     select_spec {
      col_name=;
      on=1;
      rel=EQUAL;
      use_var=0;
      cmp 0 1;
      var=NULL;
      enable_var=NULL;
     };
     pre_proc_1 {name="SimpleMathSpec_177": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_2 {name="SimpleMathSpec_178": opr=NONE: arg=0: lw=-1: hi=1: };
     pre_proc_3 {name="SimpleMathSpec_179": opr=NONE: arg=0: lw=-1: hi=1: };
    };
   };
   network=$.projects[0].networks[0]$;
   data=.projects[0].programs.gp[0][9].objs[2]$$;
   rmv_orphan_cols=1;
  };
  DataTable @[1] {
   name="LayerNames";
   desc="list of layer names to record from";
   data {
    name="data";
    el_typ=String_Data;
    el_def=0;
    String_Data @[0] {
     name="Layer";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
     ar {
      name=;
	  [1] "V4_IT";     };
    };
   };
   data_flags=SAVE_ROWS|AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   keygen 4 0=0;
  };
  DataTable @[2] {
   name="CycleTrajRaw";
   desc=;
   data {
    name="data";
    el_typ=int_Data;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="batch";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    int_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="epoch";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    int_Data @[2] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="trial";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    String_Data @[3] {
     name="trial_name";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    String_Data @[4] {
     name="group_name";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    int_Data @[5] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="phase_no";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    float_Data @[6] {
     name="minus_cycles";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    float_Data @[7] {
     name="sse";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    float_Data @[8] {
     name="norm_err";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    float_Data @[9] {
     name="ext_rew";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    float_Data @[10] {
     name="V4_IT_act_eq";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=1;
     cell_geom{ 20;20;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [2] ;;     };
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   keygen 4 0=0;
  };
  DataTable @[3] {
   name="CycleTraj";
   desc=;
   data {
    name="data";
    el_typ=int_Data;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="cycle";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
     ar {
      name=;
	  [350] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
     };
    };
    float_Data @[1] {
     name="V4_IT_p";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
     ar {
      name=;
	  [350] 0.01681426;0.016580207;0.016060321;0.015753711;0.015458282;0.015342181;0.01522666;0.015176288;0.015133413;0.018905668;
0.018732402;0.02253144;0.021947445;0.025528723;0.025010202;0.03199571;0.03119581;0.030856397;0.030515505;0.030008415;
0.029688515;0.03349359;0.040656094;0.051609244;0.069934599;0.07710354;0.10310198;0.12821925;0.14031778;0.15392105;
0.15748365;0.16879684;0.17205052;0.1714986;0.19154052;0.28425834;0.35752407;0.39471468;0.4005045;0.42160583;
0.43560553;0.44415429;0.44837615;0.45967135;0.46170703;0.47416443;0.47358903;0.47302476;0.5176686;0.60107923;
0.63399148;0.64533752;0.66133451;0.67047566;0.6719051;0.67728072;0.67914027;0.68482679;0.6858415;0.69407505;
0.69393092;0.7111426;0.76487368;0.79012442;0.79416144;0.80487233;0.80903882;0.81230128;0.81296879;0.81557447;
0.81702852;0.81715834;0.82057399;0.82301646;0.82897061;0.86259049;0.88012975;0.88261735;0.88940394;0.891734;
0.89284956;0.89399898;0.89487314;0.89509773;0.89608145;0.89629668;0.89650738;0.9020673;0.91789395;0.93094528;
0.9319942;0.93717778;0.93847412;0.93879122;0.93921846;0.93990749;0.94048071;0.94067883;0.94087291;0.94106233;
0.94217646;0.95172805;0.95900506;0.9599371;0.96282184;0.96385098;0.96397758;0.96400297;0.96415287;0.96429867;
0.96493423;0.96507275;0.96520734;0.96526664;0.97067076;0.97586793;0.9764998;0.97863698;0.97870213;0.97862399;
0.97850382;0.97860277;0.97869802;0.97879231;0.97897637;0.97872555;0.97886628;0.98009199;0.98367411;0.98483258;
0.98686415;0.98663008;0.98630899;0.98637938;0.98643696;0.98621321;0.98626697;0.98631972;0.98619831;0.98657858;
0.98671973;0.98970717;0.99016261;0.99200654;0.99167269;0.99153817;0.991696;0.99139899;0.99159181;0.99162376;
0.99165595;0.9909237;0.9905948;0.98974437;0.99223948;0.99240774;0.99402821;0.99368107;0.99357468;0.9933998;
0.99341547;0.99342984;0.99344432;0.99350846;0.99352169;0.99381596;0.9924798;0.99427378;0.99482083;0.99642611;
0.99617279;0.99600327;0.99551308;0.99551862;0.99557;0.99557614;0.99558109;0.9955864;0.99476188;0.99318498;
0.99456477;0.99483627;0.99672514;0.99656314;0.99647403;0.99629265;0.99629426;0.9965027;0.99627298;0.99627638;
0.99627912;0.99607855;0.99445415;0.99579668;0.99629909;0.99762291;0.99687767;0.9966433;0.99653995;0.99653637;
0.9965325;0.99652857;0.99652481;0.99652058;0.99584275;0.99455667;0.99568278;0.99617428;0.9977541;0.997244;
0.9970724;0.99668145;0.99673623;0.996728;0.99672008;0.99657583;0.99656856;0.99656117;0.99483025;0.99610734;
0.9963606;0.99784154;0.99788493;0.99788368;0.99735647;0.99735236;0.99734801;0.99713147;0.99712664;0.99678886;
0.99678683;0.9951604;0.99617904;0.99631214;0.99735647;0.99696916;0.9973101;0.99749434;0.99748296;0.99756622;
0.99730575;0.99729484;0.99728715;0.99695063;0.99526435;0.99642617;0.99701238;0.99812365;0.99771357;0.99735206;
0.99716115;0.99712497;0.99711066;0.99716783;0.99718088;0.99723583;0.99650121;0.99529225;0.99671656;0.99671113;
0.9976396;0.99784261;0.99741495;0.99707562;0.99710447;0.99709523;0.99701059;0.99700171;0.99699324;0.99703747;
0.99526095;0.99782646;0.9977423;0.99826717;0.99803734;0.99758053;0.99712759;0.99683022;0.99681288;0.99679607;
0.9967795;0.99676299;0.99653625;0.99431801;0.99657798;0.99822223;0.99911243;0.99814439;0.99813855;0.99757433;
0.99756539;0.99720746;0.99719673;0.99689329;0.99688232;0.99673641;0.99484146;0.99615425;0.99687189;1;
0.99978799;0.99888015;0.99868333;0.99803704;0.99753255;0.99734217;0.99714196;0.99678421;0.99678069;0.99485612;
0.99572289;0.9965986;0.99829471;0.99825251;0.99882025;0.99880272;0.99879497;0.99805373;0.99772882;0.99771756;
0.997706;0.99709958;0.9968586;0.99559331;0.99355608;0.99445713;0.99622875;0.99721003;0.99737728;0.99744689;
0.99744457;0.99761212;0.9976114;0.99694431;0.99693948;0.99645305;0.99557561;0.99409109;0.99335462;0.99357104;
0.99479914;0.99495649;0.99604583;0.99602789;0.99601495;0.9960016;0.99598855;0.99609959;0.99660426;0.99489921;
     };
    };
   };
   data_flags=SAVE_ROWS|AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   keygen 4 0=0;
  };
  DataTable @[4] {
   name="CycleTrajAgg";
   desc=;
   data {
    name="data";
    el_typ=DataColTp;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="cycle";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
    float_Data @[1] {
     name="V4_IT_p";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   keygen 4 0=0;
  };
  DataTable @[5] {
   name="CycleTriajAvg";
   desc=;
   data {
    name="data";
    el_typ=DataColTp;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="cycle";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
     ar {
      name=;
	  [0]      };
    };
    float_Data @[1] {
     name="V4_IT_p";
     col_flags=SAVE_ROWS|SAVE_DATA;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name=;
	  [0]      };
     ar {
      name=;
	  [0]      };
    };
   };
   data_flags=SAVE_ROWS|AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   keygen 4 0=0;
  };
 };
 types {
  name=;
  el_typ=DynEnumType;
  el_def=0;
  DynEnumType @[0] {
   name="CalcMode";
   desc="what mode to run in: cycle update, end of trial, epoch average";
   enums {
    name=;
    el_typ=DynEnumItem;
    el_def=0;
    DynEnumItem @[0] {
     name="CYCLE_UPDT";
     value=0;
     desc=;
    };
    DynEnumItem @[1] {
     name="TRIAL_END";
     value=1;
     desc=;
    };
    DynEnumItem @[2] {
     name="EPOCH_END";
     value=2;
     desc=;
    };
   };
   bits=0;
  };
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="network";
   var_type=T_Object;
   object_type=LeabraNetwork;
   object_val=$.projects[0].networks[0]$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="network to record data from";
   init_from=NULL;
  };
  ProgVar @[1] {
   name="mode";
   var_type=T_DynEnum;
   dyn_enum_val {
    enum_type=.projects[0].programs.gp[0][9].types[0]$$;
    value=0;
   };
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="if true, this is a cycle computation, else ";
   init_from=NULL;
  };
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="CycleTrajRaw";
   var_type=T_Object;
   object_type=DataTable;
   object_val=$.projects[0].programs.gp[0][9].objs[2]$;
   objs_ptr=1;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[1] {
   name="CycleTraj";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[0][9].objs[3]$$;
   objs_ptr=1;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[2] {
   name="cyctraj_netmon";
   var_type=T_Object;
   object_type=NetMonitor;
   object_val=.projects[0].programs.gp[0][9].objs[0]$$;
   objs_ptr=1;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[3] {
   name="trial_mon_data";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[1][0]$$<DataTable,TrialOutputData>;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|EDIT_VAL;
   reference=0;
   desc="data table to record trial-level data to (this program writes new data to this table!)";
   init_from=NULL;
  };
  ProgVar @[4] {
   name="CycleTrajAgg";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[0][9].objs[4]$$;
   objs_ptr=1;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[5] {
   name="CycleTriajAvg";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[0][9].objs[5]$$;
   objs_ptr=1;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[6] {
   name="LayerNames";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[0][9].objs[1]$$;
   objs_ptr=1;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[7] {
   name="i";
   var_type=T_Int;
   int_val=1;
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[8] {
   name="st_idx";
   var_type=T_Int;
   int_val=10;
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[9] {
   name="plus_idx";
   var_type=T_Int;
   int_val=299;
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[10] {
   name="laynm";
   var_type=T_String;
   string_val="V4_IT";
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[11] {
   name="monitm";
   var_type=T_Object;
   object_type=NetMonItem;
   object_val=.projects[0].programs.gp[0][9].objs[0].items[10]$$;
   objs_ptr=0;
   flags=USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[12] {
   name="destcol";
   var_type=T_Object;
   object_type=DataColTp;
   object_val=.projects[0].programs.gp[0][9].objs[3].data[1]$$;
   objs_ptr=0;
   flags=USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[13] {
   name="dist";
   var_type=T_Real;
   real_val=0.994899;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[14] {
   name="j";
   var_type=T_Int;
   int_val=350;
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
 };
 functions {
  name=;
  el_typ=Function;
  el_def=0;
 };
 load_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
  MemberMethodCall @[0] {
   desc=;
   flags=;
   obj=.projects[0].programs.gp[0][9].vars[2]$$;
   path="items";
   result_var=.projects[0].programs.gp[0][9].vars[8]$$;
   method=taList_impl::FindNameIdx;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="it";
     required=1;
     def_val=;
     expr {
      expr="\"ext_rew\"";
     };
    };
   };
  };
  VarIncr @[1] {
   desc=;
   flags=;
   var=$.projects[0].programs.gp[0][9].vars[8]$;
   expr {
    expr="1";
   };
  };
  ForLoop @[2] {
   desc=;
   flags=;
   loop_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    MethodCall @[0] {
     desc=;
     flags=;
     result_var=.projects[0].programs.gp[0][9].vars[10]$$;
     obj=.projects[0].programs.gp[0][9].vars[6]$$;
     method=DataTable::GetVal;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=Variant;
       type="Variant";
       name="col";
       required=1;
       def_val=;
       expr {
	expr="0";
       };
      };
      ProgArg @[1] {
       arg_type=int;
       type="int";
       name="row";
       required=1;
       def_val=;
       expr {
	expr="i";
       };
      };
     };
    };
    IfElse @[1] {
     desc=;
     flags=;
     cond {
      expr="cyctraj_netmon.items.size <= i + st_idx";
     };
     true_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      MethodCall @[0] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$.projects[0].programs.gp[0][9].vars[2]$;
       method=NetMonitor::AddLayer;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=Layer_ptr;
	 type="Layer*";
	 name="lay";
	 required=1;
	 def_val=;
	 expr {
	  expr="network.FindLayer(laynm)";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="variable";
	 required=1;
	 def_val=;
	 expr {
	  expr="\"act_eq\"";
	 };
	};
       };
      };
     };
     false_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      AssignExpr @[0] {
       desc=;
       flags=;
       result_var=.projects[0].programs.gp[0][9].vars[11]$$;
       expr {
	expr="cyctraj_netmon.items[st_idx + i ]";
       };
      };
      MemberAssign @[1] {
       desc=;
       flags=;
       obj=$.projects[0].programs.gp[0][9].vars[11]$;
       path="object";
       expr {
	expr="network.FindLayer(laynm)";
       };
       update_after=0;
      };
     };
    };
   };
   init {
    expr="i = 0";
   };
   test {
    expr="i < LayerNames.rows";
   };
   iter {
    expr="i++";
   };
  };
  MethodCall @[3] {
   desc="set the network and datatable for the NetMonitor";
   flags=;
   result_var=NULL;
   obj=$.projects[0].programs.gp[0][9].vars[2]$;
   method=NetMonitor::SetDataNetwork;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=DataTable_ptr;
     type="DataTable*";
     name="dt";
     required=1;
     def_val=;
     expr {
      expr="CycleTrajRaw";
     };
    };
    ProgArg @[1] {
     arg_type=Network_ptr;
     type="Network*";
     name="net";
     required=1;
     def_val=;
     expr {
      expr="network";
     };
    };
   };
  };
  MethodCall @[4] {
   desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
   flags=;
   result_var=NULL;
   obj=$.projects[0].programs.gp[0][9].vars[2]$;
   method=taBase::CheckConfig;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=bool;
     type="bool";
     name="quiet";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
   };
  };
  MethodCall @[5] {
   desc="update the monitor items and data schema based on current settings of the NetMonitor object";
   flags=;
   result_var=NULL;
   obj=$.projects[0].programs.gp[0][9].vars[2]$;
   method=NetMonitor::UpdateMonitors;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=bool;
     type="bool";
     name="reset_first";
     required=0;
     def_val="false";
     expr {
      expr="true";
     };
    };
   };
  };
  MethodCall @[6] {
   desc="update the monitor items and data schema based on current settings of the NetMonitor object";
   flags=;
   result_var=NULL;
   obj=$.projects[0].programs.gp[0][9].vars[2]$;
   method=NetMonitor::ResetDataTableCols;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
  MethodCall @[7] {
   desc=;
   flags=;
   result_var=NULL;
   obj=.projects[0].programs.gp[0][9].vars[1]$$;
   method=DataTable::RemoveAllCols;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
  MethodCall @[8] {
   desc=;
   flags=;
   result_var=NULL;
   obj=$.projects[0].programs.gp[0][9].vars[1]$;
   method=DataTable::FindMakeCol;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="col_nm";
     required=1;
     def_val=;
     expr {
      expr="\"cycle\"";
     };
    };
    ProgArg @[1] {
     arg_type=taBase::ValType;
     type="taBase::ValType";
     name="val_type";
     required=1;
     def_val=;
     expr {
      expr="taBase::VT_INT";
     };
    };
   };
  };
  ForLoop @[9] {
   desc=;
   flags=;
   loop_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    ProgVars @[0] {
     desc=;
     flags=;
     local_vars {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="plus_mtx";
       var_type=T_Object;
       object_type=float_Matrix;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="cur_mtx";
       var_type=T_Object;
       object_type=float_Matrix;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    MethodCall @[1] {
     desc=;
     flags=;
     result_var=$.projects[0].programs.gp[0][9].vars[10]$;
     obj=$.projects[0].programs.gp[0][9].vars[6]$;
     method=DataTable::GetVal;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=Variant;
       type="Variant";
       name="col";
       required=1;
       def_val=;
       expr {
	expr="0";
       };
      };
      ProgArg @[1] {
       arg_type=int;
       type="int";
       name="row";
       required=1;
       def_val=;
       expr {
	expr="i";
       };
      };
     };
    };
    MethodCall @[2] {
     desc=;
     flags=;
     result_var=NULL;
     obj=$.projects[0].programs.gp[0][9].vars[1]$;
     method=DataTable::FindMakeCol;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="col_nm";
       required=1;
       def_val=;
       expr {
	expr="laynm + \"_p\"";
       };
      };
      ProgArg @[1] {
       arg_type=taBase::ValType;
       type="taBase::ValType";
       name="val_type";
       required=1;
       def_val=;
       expr {
	expr="taBase::VT_FLOAT";
       };
      };
     };
    };
   };
   init {
    expr="i = 0";
   };
   test {
    expr="i < LayerNames.rows";
   };
   iter {
    expr="i++";
   };
  };
  MethodCall @[10] {
   desc=;
   flags=;
   result_var=NULL;
   obj=.projects[0].programs.gp[0][9].vars[4]$$;
   method=DataTable::Copy_NoData;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_DataTable_ref;
     type="const DataTable&";
     name="cp";
     required=1;
     def_val=;
     expr {
      expr="CycleTraj";
     };
    };
   };
  };
  ResetDataRows @[11] {
   desc=;
   flags=;
   data_var=.projects[0].programs.gp[0][9].vars[5]$$;
  };
 };
 prog_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
  Switch @[0] {
   desc=;
   flags=;
   switch_var=.projects[0].programs.gp[0][9].args[1]$$;
   cases {
    name=;
    el_typ=CaseBlock;
    el_def=0;
    CaseBlock @[0] {
     desc=;
     flags=;
     prog_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      MethodCall @[0] {
       desc="add a new blank row to the data";
       flags=;
       result_var=NULL;
       obj=.projects[0].programs.gp[0][9].vars[0]$$;
       method=DataTable::AddBlankRow;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
       };
      };
      MethodCall @[1] {
       desc="get the new monitor data from the network and other sources -- this does the main work";
       flags=;
       result_var=NULL;
       obj=$.projects[0].programs.gp[0][9].vars[2]$;
       method=NetMonitor::GetMonVals;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
       };
      };
      MethodCall @[2] {
       desc="update views and other things after writing new data to monitor data table";
       flags=;
       result_var=NULL;
       obj=$.projects[0].programs.gp[0][9].vars[0]$;
       method=DataBlock::WriteClose;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
       };
      };
     };
     case_val {
      expr="CYCLE_UPDT";
     };
    };
    CaseBlock @[1] {
     desc=;
     flags=;
     prog_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      IfElse @[0] {
       desc=;
       flags=;
       cond {
	expr="network.learn_rule == LeabraNetwork::LEABRA_CHL";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs.gp[0][9].vars[9]$$;
	 expr {
	  expr="network.ct_cycle-1";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=$.projects[0].programs.gp[0][9].vars[9]$;
	 expr {
	  expr="network.ct_time.minus + network.ct_time.plus-1";
	 };
	};
       };
      };
      MethodCall @[1] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$.projects[0].programs.gp[0][9].vars[1]$;
       method=DataTable::EnforceRows;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="n_rows";
	 required=1;
	 def_val=;
	 expr {
	  expr="CycleTrajRaw.rows";
	 };
	};
       };
      };
      MethodCall @[2] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$.projects[0].programs.gp[0][9].vars[1]$;
       method=DataTable::InitValsToRowNoColName;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="col_name";
	 required=1;
	 def_val=;
	 expr {
	  expr="\"cycle\"";
	 };
	};
       };
      };
      ForLoop @[3] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ProgVars @[0] {
	 desc=;
	 flags=;
	 local_vars {
	  name=;
	  el_typ=ProgVar;
	  el_def=0;
	  ProgVar @[0] {
	   name="plus_mtx";
	   var_type=T_Object;
	   object_type=float_Matrix;
	   object_val=NULL;
	   objs_ptr=0;
	   flags=LOCAL_VAR|USED;
	   reference=0;
	   desc=;
	   init_from=NULL;
	  };
	  ProgVar @[1] {
	   name="cur_mtx";
	   var_type=T_Object;
	   object_type=float_Matrix;
	   object_val=NULL;
	   objs_ptr=0;
	   flags=LOCAL_VAR|USED;
	   reference=0;
	   desc=;
	   init_from=NULL;
	  };
	 };
	};
	MethodCall @[1] {
	 desc=;
	 flags=;
	 result_var=$.projects[0].programs.gp[0][9].vars[10]$;
	 obj=$.projects[0].programs.gp[0][9].vars[6]$;
	 method=DataTable::GetVal;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=Variant;
	   type="Variant";
	   name="col";
	   required=1;
	   def_val=;
	   expr {
	    expr="0";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=int;
	   type="int";
	   name="row";
	   required=1;
	   def_val=;
	   expr {
	    expr="i";
	   };
	  };
	 };
	};
	MethodCall @[2] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs.gp[0][9].vars[12]$$;
	 obj=$.projects[0].programs.gp[0][9].vars[1]$;
	 method=DataTable::FindMakeCol;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="col_nm";
	   required=1;
	   def_val=;
	   expr {
	    expr="laynm + \"_p\"";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=taBase::ValType;
	   type="taBase::ValType";
	   name="val_type";
	   required=1;
	   def_val=;
	   expr {
	    expr="taBase::VT_FLOAT";
	   };
	  };
	 };
	};
	MethodCall @[3] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs.gp[0][9].init_code[9].loop_code[0].local_vars[0]$$;
	 obj=$.projects[0].programs.gp[0][9].vars[0]$;
	 method=DataTable::GetValAsMatrix;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=Variant;
	   type="Variant";
	   name="col";
	   required=1;
	   def_val=;
	   expr {
	    expr="st_idx+i";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=int;
	   type="int";
	   name="row";
	   required=1;
	   def_val=;
	   expr {
	    expr="plus_idx";
	   };
	  };
	 };
	};
	ForLoop @[4] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  MethodCall @[0] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs.gp[0][9].init_code[9].loop_code[0].local_vars[1]$$;
	   obj=$.projects[0].programs.gp[0][9].vars[0]$;
	   method=DataTable::GetValAsMatrix;
	   meth_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=Variant;
	     type="Variant";
	     name="col";
	     required=1;
	     def_val=;
	     expr {
	      expr="st_idx+i";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=int;
	     type="int";
	     name="row";
	     required=1;
	     def_val=;
	     expr {
	      expr="j";
	     };
	    };
	   };
	  };
	  MathCall @[1] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs.gp[0][9].vars[13]$$;
	   object_type=taMath_float;
	   method=taMath_float::vec_inner_prod;
	   meth_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=const_float_Matrix_ptr;
	     type="const float_Matrix*";
	     name="vec";
	     required=1;
	     def_val=;
	     expr {
	      expr="plus_mtx";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=const_float_Matrix_ptr;
	     type="const float_Matrix*";
	     name="oth_vec";
	     required=1;
	     def_val=;
	     expr {
	      expr="cur_mtx";
	     };
	    };
	    ProgArg @[2] {
	     arg_type=bool;
	     type="bool";
	     name="norm";
	     required=0;
	     def_val="false";
	     expr {
	      expr="true";
	     };
	    };
	   };
	  };
	  MethodCall @[2] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   obj=$.projects[0].programs.gp[0][9].vars[12]$;
	   method=DataCol::SetVal;
	   meth_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=const_Variant_ref;
	     type="const Variant&";
	     name="val";
	     required=1;
	     def_val=;
	     expr {
	      expr="dist";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=int;
	     type="int";
	     name="row";
	     required=1;
	     def_val=;
	     expr {
	      expr="j";
	     };
	    };
	   };
	  };
	 };
	 init {
	  expr="j = 0";
	 };
	 test {
	  expr="j < CycleTrajRaw.rows";
	 };
	 iter {
	  expr="j++";
	 };
	};
       };
       init {
	expr="i = 0";
       };
       test {
	expr="i < LayerNames.rows";
       };
       iter {
	expr="i++";
       };
      };
      ResetDataRows @[4] {
       desc=;
       flags=;
       data_var=$.projects[0].programs.gp[0][9].vars[0]$;
      };
      DoneWritingDataRow @[5] {
       desc=;
       flags=;
       data_var=$.projects[0].programs.gp[0][9].vars[1]$;
      };
      DataProcCall @[6] {
       desc=;
       flags=;
       result_var=NULL;
       object_type=taDataProc;
       method=taDataProc::AppendRows;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="dest";
	 required=1;
	 def_val=;
	 expr {
	  expr="CycleTrajAgg";
	 };
	};
	ProgArg @[1] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="src";
	 required=1;
	 def_val=;
	 expr {
	  expr="CycleTraj";
	 };
	};
       };
      };
     };
     case_val {
      expr="TRIAL_END";
     };
    };
    CaseBlock @[2] {
     desc=;
     flags=;
     prog_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      DataGroupProg @[0] {
       desc=;
       flags=;
       src_data_var=$.projects[0].programs.gp[0][9].vars[4]$;
       dest_data_var=$.projects[0].programs.gp[0][9].vars[5]$;
       group_spec {
	name="group_spec";
	ops {
	 name=;
	 el_typ=DataGroupEl;
	 el_def=0;
	 DataGroupEl @[0] {
	  col_name="cycle";
	  agg {name="AggregateSpec_63": op=GROUP: rel={name="Relation_63": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[1] {
	  col_name="V4_IT_p";
	  agg {name="AggregateSpec_63": op=MEAN: rel={name="": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	};
	append_agg_name=0;
       };
      };
     };
     case_val {
      expr="EPOCH_END";
     };
    };
   };
  };
 };
 step_prog=NULL;
 step_n=1;
};
