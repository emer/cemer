// ta_Dump File v3.0 -- code v8.0.3.0 rev10270
Program .projects[0].programs.gp[4].gp[0][3] { 
 UserDataItem_List @*(.user_data_) {
  UserData_DocLink @[0] { };
 };

 ProgObjList @.objs = [7] {
  DataTable @[0] { 
   DataTableCols @.data = [42] {
    int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    String_Data @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[3] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[4] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[5] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    float_Data @[6] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[7] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[8] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[9] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[10] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[11] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[12] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[13] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[14] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[15] { };
    float_Data @[16] { };
    float_Data @[17] { };
    float_Data @[18] { };
    float_Data @[19] { };
    float_Data @[20] { };
    float_Data @[21] { };
    float_Data @[22] { };
    float_Data @[23] { };
    float_Data @[24] { };
    float_Data @[25] { };
    float_Data @[26] { };
    float_Data @[27] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[28] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[29] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[30] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[31] { };
    float_Data @[32] { };
    float_Data @[33] { };
    float_Data @[34] { };
    float_Data @[35] { };
    float_Data @[36] { };
    float_Data @[37] { };
    float_Data @[38] { };
    float_Data @[39] { };
    float_Data @[40] { };
    float_Data @[41] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.control_panel_cells = [0] {
   };
  };
  DataTable @[1] { 
   DataTableCols @.data = [42] {
    int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    String_Data @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[3] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[4] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[5] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    float_Data @[6] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[7] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[8] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[9] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[10] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[11] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[12] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[13] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[14] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[15] { };
    float_Data @[16] { };
    float_Data @[17] { };
    float_Data @[18] { };
    float_Data @[19] { };
    float_Data @[20] { };
    float_Data @[21] { };
    float_Data @[22] { };
    float_Data @[23] { };
    float_Data @[24] { };
    float_Data @[25] { };
    float_Data @[26] { };
    float_Data @[27] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[28] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[29] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[30] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[31] { };
    float_Data @[32] { };
    float_Data @[33] { };
    float_Data @[34] { };
    float_Data @[35] { };
    float_Data @[36] { };
    float_Data @[37] { };
    float_Data @[38] { };
    float_Data @[39] { };
    float_Data @[40] { };
    float_Data @[41] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.control_panel_cells = [0] {
   };
  };
  DataTable @[2] { 
   DataTableCols @.data = [42] {
    int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    String_Data @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[3] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[4] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[5] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    float_Data @[6] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[7] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[8] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[9] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[10] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[11] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[12] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[13] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[14] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[15] { };
    float_Data @[16] { };
    float_Data @[17] { };
    float_Data @[18] { };
    float_Data @[19] { };
    float_Data @[20] { };
    float_Data @[21] { };
    float_Data @[22] { };
    float_Data @[23] { };
    float_Data @[24] { };
    float_Data @[25] { };
    float_Data @[26] { };
    float_Data @[27] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[28] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[29] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[30] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[31] { };
    float_Data @[32] { };
    float_Data @[33] { };
    float_Data @[34] { };
    float_Data @[35] { };
    float_Data @[36] { };
    float_Data @[37] { };
    float_Data @[38] { };
    float_Data @[39] { };
    float_Data @[40] { };
    float_Data @[41] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.control_panel_cells = [0] {
   };
  };
  DataTable @[3] { 
   DataTableCols @.data = [34] {
    int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    float_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[3] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[4] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[5] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[6] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[7] { };
    float_Data @[8] { };
    float_Data @[9] { };
    float_Data @[10] { };
    float_Data @[11] { };
    float_Data @[12] { };
    float_Data @[13] { };
    float_Data @[14] { };
    float_Data @[15] { };
    float_Data @[16] { };
    float_Data @[17] { };
    float_Data @[18] { };
    float_Data @[19] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[20] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[21] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[22] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[23] { };
    float_Data @[24] { };
    float_Data @[25] { };
    float_Data @[26] { };
    float_Data @[27] { };
    float_Data @[28] { };
    float_Data @[29] { };
    float_Data @[30] { };
    float_Data @[31] { };
    float_Data @[32] { };
    float_Data @[33] { };
   };

   DataOpList @.last_sort_spec.ops = [6] {
    DataSortEl @[0] { };
    DataSortEl @[1] { };
    DataSortEl @[2] { };
    DataSortEl @[3] { };
    DataSortEl @[4] { };
    DataSortEl @[5] { };
   };

   DataTableCell_List @.control_panel_cells = [0] {
   };
  };
  DataTable @[4] { 
   DataTableCols @.data = [134] {
    int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[2] { };
    float_Data @[3] { };
    float_Data @[4] { };
    float_Data @[5] { };
    float_Data @[6] { };
    float_Data @[7] { };
    float_Data @[8] { };
    float_Data @[9] { };
    float_Data @[10] { };
    float_Data @[11] { };
    float_Data @[12] { };
    float_Data @[13] { };
    float_Data @[14] { };
    float_Data @[15] { };
    float_Data @[16] { };
    float_Data @[17] { };
    float_Data @[18] { };
    float_Data @[19] { };
    float_Data @[20] { };
    float_Data @[21] { };
    float_Data @[22] { };
    float_Data @[23] { };
    float_Data @[24] { };
    float_Data @[25] { };
    float_Data @[26] { };
    float_Data @[27] { };
    float_Data @[28] { };
    float_Data @[29] { };
    float_Data @[30] { };
    float_Data @[31] { };
    float_Data @[32] { };
    float_Data @[33] { };
    float_Data @[34] { };
    float_Data @[35] { };
    float_Data @[36] { };
    float_Data @[37] { };
    float_Data @[38] { };
    float_Data @[39] { };
    float_Data @[40] { };
    float_Data @[41] { };
    float_Data @[42] { };
    float_Data @[43] { };
    float_Data @[44] { };
    float_Data @[45] { };
    float_Data @[46] { };
    float_Data @[47] { };
    float_Data @[48] { };
    float_Data @[49] { };
    float_Data @[50] { };
    float_Data @[51] { };
    float_Data @[52] { };
    float_Data @[53] { };
    float_Data @[54] { };
    float_Data @[55] { };
    float_Data @[56] { };
    float_Data @[57] { };
    float_Data @[58] { };
    float_Data @[59] { };
    float_Data @[60] { };
    float_Data @[61] { };
    float_Data @[62] { };
    float_Data @[63] { };
    float_Data @[64] { };
    float_Data @[65] { };
    float_Data @[66] { };
    float_Data @[67] { };
    float_Data @[68] { };
    float_Data @[69] { };
    float_Data @[70] { };
    float_Data @[71] { };
    float_Data @[72] { };
    float_Data @[73] { };
    float_Data @[74] { };
    float_Data @[75] { };
    float_Data @[76] { };
    float_Data @[77] { };
    float_Data @[78] { };
    float_Data @[79] { };
    float_Data @[80] { };
    float_Data @[81] { };
    float_Data @[82] { };
    float_Data @[83] { };
    float_Data @[84] { };
    float_Data @[85] { };
    float_Data @[86] { };
    float_Data @[87] { };
    float_Data @[88] { };
    float_Data @[89] { };
    float_Data @[90] { };
    float_Data @[91] { };
    float_Data @[92] { };
    float_Data @[93] { };
    float_Data @[94] { };
    float_Data @[95] { };
    float_Data @[96] { };
    float_Data @[97] { };
    float_Data @[98] { };
    float_Data @[99] { };
    float_Data @[100] { };
    float_Data @[101] { };
    float_Data @[102] { };
    float_Data @[103] { };
    float_Data @[104] { };
    float_Data @[105] { };
    float_Data @[106] { };
    float_Data @[107] { };
    float_Data @[108] { };
    float_Data @[109] { };
    float_Data @[110] { };
    float_Data @[111] { };
    float_Data @[112] { };
    float_Data @[113] { };
    float_Data @[114] { };
    float_Data @[115] { };
    float_Data @[116] { };
    float_Data @[117] { };
    float_Data @[118] { };
    float_Data @[119] { };
    float_Data @[120] { };
    float_Data @[121] { };
    float_Data @[122] { };
    float_Data @[123] { };
    float_Data @[124] { };
    float_Data @[125] { };
    float_Data @[126] { };
    float_Data @[127] { };
    float_Data @[128] { };
    float_Data @[129] { };
    float_Data @[130] { };
    float_Data @[131] { };
    float_Data @[132] { };
    float_Data @[133] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.control_panel_cells = [0] {
   };
  };
  DataTable @[5] { 
   DataTableCols @.data = [42] {
    int_Data @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    String_Data @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[3] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[4] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    int_Data @[5] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
     };
    };
    float_Data @[6] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[7] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[8] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[9] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[10] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[11] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[12] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[13] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[14] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[15] { };
    float_Data @[16] { };
    float_Data @[17] { };
    float_Data @[18] { };
    float_Data @[19] { };
    float_Data @[20] { };
    float_Data @[21] { };
    float_Data @[22] { };
    float_Data @[23] { };
    float_Data @[24] { };
    float_Data @[25] { };
    float_Data @[26] { };
    float_Data @[27] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[28] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[29] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[30] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[31] { };
    float_Data @[32] { };
    float_Data @[33] { };
    float_Data @[34] { };
    float_Data @[35] { };
    float_Data @[36] { };
    float_Data @[37] { };
    float_Data @[38] { };
    float_Data @[39] { };
    float_Data @[40] { };
    float_Data @[41] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };

   DataTableCell_List @.control_panel_cells = [0] {
   };
  };
  DataGroupSpec @[6] { 
   DataOpList @.ops = [34] {
    DataGroupEl @[0] { };
    DataGroupEl @[1] { };
    DataGroupEl @[2] { };
    DataGroupEl @[3] { };
    DataGroupEl @[4] { };
    DataGroupEl @[5] { };
    DataGroupEl @[6] { };
    DataGroupEl @[7] { };
    DataGroupEl @[8] { };
    DataGroupEl @[9] { };
    DataGroupEl @[10] { };
    DataGroupEl @[11] { };
    DataGroupEl @[12] { };
    DataGroupEl @[13] { };
    DataGroupEl @[14] { };
    DataGroupEl @[15] { };
    DataGroupEl @[16] { };
    DataGroupEl @[17] { };
    DataGroupEl @[18] { };
    DataGroupEl @[19] { };
    DataGroupEl @[20] { };
    DataGroupEl @[21] { };
    DataGroupEl @[22] { };
    DataGroupEl @[23] { };
    DataGroupEl @[24] { };
    DataGroupEl @[25] { };
    DataGroupEl @[26] { };
    DataGroupEl @[27] { };
    DataGroupEl @[28] { };
    DataGroupEl @[29] { };
    DataGroupEl @[30] { };
    DataGroupEl @[31] { };
    DataGroupEl @[32] { };
    DataGroupEl @[33] { };
   };
  };
 };

 ProgType_List @.types = [0] {
 };

 ProgVar_List @.args = [0] {
 };

 ProgVar_List @.vars = [14] {
  ProgVar @[0] { };
  ProgVar @[1] { };
  ProgVar @[2] { };
  ProgVar @[3] { };
  ProgVar @[4] { };
  ProgVar @[5] { };
  ProgVar @[6] { };
  ProgVar @[7] { };
  ProgVar @[8] { };
  ProgVar @[9] { };
  ProgVar @[10] { };
  ProgVar @[11] { };
  ProgVar @[12] { };
  ProgVar @[13] { };
 };

 Function_List @.functions = [6] {
  Function @[0] { 
   ProgVar_List @.args = [0] {
   };

   ProgEl_List @.fun_code = [6] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [2] {
      ProgVar @[0] { };
      ProgVar @[1] { };
     };
    };
    AssignExpr @[1] { };
    If @[2] { 
     ProgEl_List @.true_code = [2] {
      AssignExpr @[0] { };
      FunctionCall @[1] { 
       ProgArg_List @.fun_args = [0] {
       };
      };
     };
    };
    Else @[3] { 
     ProgEl_List @.true_code = [1] {
      AssignExpr @[0] { };
     };
    };
    If @[4] { 
     ProgEl_List @.true_code = [2] {
      MethodCall @[0] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
      MethodCall @[1] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
     };
    };
    Else @[5] { 
     ProgEl_List @.true_code = [3] {
      AssignExpr @[0] { };
      If @[1] { 
       ProgEl_List @.true_code = [1] {
	MethodCall @[0] { 
	 ProgArg_List @.meth_args = [2] {
	  ProgArg @[0] { };
	  ProgArg @[1] { };
	 };
	};
       };
      };
      MethodCall @[2] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
     };
    };
   };
  };
  Function @[1] { 
   ProgVar_List @.args = [0] {
   };

   ProgEl_List @.fun_code = [4] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [0] {
     };
    };
    FunctionCall @[1] { 
     ProgArg_List @.fun_args = [0] {
     };
    };
    MethodCall @[2] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    MethodCall @[3] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
   };
  };
  Function @[2] { 
   ProgVar_List @.args = [0] {
   };

   ProgEl_List @.fun_code = [5] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [1] {
      ProgVar @[0] { };
     };
    };
    MemberMethodCall @[1] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    MethodCall @[2] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    WhileLoop @[3] { 
     ProgEl_List @.loop_code = [1] {
      MemberMethodCall @[0] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
     };
    };
    ForeachLoop @[4] { 
     ProgEl_List @.loop_code = [2] {
      If @[0] { 
       ProgEl_List @.true_code = [1] {
	MemberAssign @[0] { };
       };
      };
      Else @[1] { 
       ProgEl_List @.true_code = [1] {
	MemberAssign @[0] { };
       };
      };
     };
    };
   };
  };
  Function @[3] { 
   ProgVar_List @.args = [0] {
   };

   ProgEl_List @.fun_code = [3] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [0] {
     };
    };
    DataProcCall @[1] { 
     ProgArg_List @.meth_args = [3] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
     };
    };
    FunctionCall @[2] { 
     ProgArg_List @.fun_args = [1] {
      ProgArg @[0] { };
     };
    };
   };
  };
  Function @[4] { 
   ProgVar_List @.args = [0] {
   };

   ProgEl_List @.fun_code = [7] {
    FunctionCall @[0] { 
     ProgArg_List @.fun_args = [0] {
     };
    };
    MethodCall @[1] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    Comment @[2] { };
    MethodCall @[3] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[4] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    LocalVars @[5] { 
     ProgVar_List @.local_vars = [3] {
      ProgVar @[0] { };
      ProgVar @[1] { };
      ProgVar @[2] { };
     };
    };
    ForLoop @[6] { 
     ProgEl_List @.loop_code = [6] {
      ForLoop @[0] { 
       ProgEl_List @.loop_code = [1] {
	MethodCall @[0] { 
	 ProgArg_List @.meth_args = [3] {
	  ProgArg @[0] { };
	  ProgArg @[1] { };
	  ProgArg @[2] { };
	 };
	};
       };
      };
      DataProcCall @[1] { 
       ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
       };
      };
      FunctionCall @[2] { 
       ProgArg_List @.fun_args = [1] {
	ProgArg @[0] { };
       };
      };
      Comment @[3] { };
      AssignExpr @[4] { };
      MethodCall @[5] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
     };
    };
   };
  };
  Function @[5] { 
   ProgVar_List @.args = [1] {
    ProgVar @[0] { };
   };

   ProgEl_List @.fun_code = [11] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [4] {
      ProgVar @[0] { };
      ProgVar @[1] { };
      ProgVar @[2] { };
      ProgVar @[3] { };
     };
    };
    MethodCall @[1] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    If @[2] { 
     ProgEl_List @.true_code = [2] {
      MethodCall @[0] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
      AssignExpr @[1] { };
     };
    };
    If @[3] { 
     ProgEl_List @.true_code = [1] {
      MethodCall @[0] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
     };
    };
    MethodCall @[4] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MethodCall @[5] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    If @[6] { 
     ProgEl_List @.true_code = [3] {
      MethodCall @[0] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
      MethodCall @[1] { 
       ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
       };
      };
      MethodCall @[2] { 
       ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
       };
      };
     };
    };
    AssignExpr @[7] { };
    ForLoop @[8] { 
     ProgEl_List @.loop_code = [1] {
      ForLoop @[0] { 
       ProgEl_List @.loop_code = [3] {
	AssignExpr @[0] { };
	MethodCall @[1] { 
	 ProgArg_List @.meth_args = [2] {
	  ProgArg @[0] { };
	  ProgArg @[1] { };
	 };
	};
	If @[2] { 
	 ProgEl_List @.true_code = [1] {
	  MethodCall @[0] { 
	   ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	   };
	  };
	 };
	};
       };
      };
     };
    };
    MethodCall @[9] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[10] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
   };
  };
 };

 ProgEl_List @.init_code = [2] {
  If @[0] { 
   ProgEl_List @.true_code = [2] {
    MethodCall @[0] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    AssignExpr @[1] { };
   };
  };
  MethodCall @[1] { 
   ProgArg_List @.meth_args = [1] {
    ProgArg @[0] { };
   };
  };
 };

 ProgEl_List @.prog_code = [3] {
  LocalVars @[0] { 
   ProgVar_List @.local_vars = [0] {
   };
  };
  If @[1] { 
   ProgEl_List @.true_code = [1] {
    FunctionCall @[0] { 
     ProgArg_List @.fun_args = [0] {
     };
    };
   };
  };
  Else @[2] { 
   ProgEl_List @.true_code = [2] {
    If @[0] { 
     ProgEl_List @.true_code = [1] {
      FunctionCall @[0] { 
       ProgArg_List @.fun_args = [0] {
       };
      };
     };
    };
    If @[1] { 
     ProgEl_List @.true_code = [1] {
      FunctionCall @[0] { 
       ProgArg_List @.fun_args = [0] {
       };
      };
     };
    };
   };
  };
 };
};
Program .projects[0].programs.gp[4].gp[0][3] {
 UserDataItem_List @*(.user_data_) {
  name=;
  el_typ=UserData_DocLink;
  el_def=0;
  UserData_DocLink @[0] {
   name="DocLink";
   doc=.projects[0].programs.gp[4].gp[0][3].doc$$;
  };
 };
 name="TickAnalysis";
 short_nm="Tcknly";
 tags="Analysis, Statistic, Monitor, Errors, Trial, Tick";
 desc="Analyze trial-level data grouping according to ticks, which are used for organizing sequences of trials over time -- allows you to see all the results in aggregate for each tick in an epoch-level log, which is very convenient for analyzing overall network behavior as a function of time ticks.";
 version {
  major=0;
  minor=1;
  step=0;
 };
 author="Randall C. O'Reilly";
 email="emergent-users@grey.colorado.edu";
 flags=NO_STOP_STEP;
 stop_step_cond {
  expr=;
 };
 objs {
  name="objs";
  el_typ=DataTable;
  el_def=0;
  DataTable @[0] {
   name="AllTrialData";
   desc=;
   data {
    name="data";
    el_typ=int_Data;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="batch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_110";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="epoch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_100";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="train_mode";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    int_Data @[3] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_70";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[4] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_111";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[5] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_112";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="tick";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[6] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_101";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="time";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[7] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_102";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[8] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_103";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[9] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_104";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="output_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[10] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_105";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="rt_cycles";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=9;
     matrix_col_width=10;
    };
    float_Data @[11] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_106";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[12] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_107";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[13] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_108";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[14] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="ext_rew";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[15] {
     name="OutputFeatures_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[16] {
     name="OutputWhole_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[17] {
     name="OutputFeatures_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[18] {
     name="OutputWhole_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
    float_Data @[19] {
     name="OutputFeatures_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[20] {
     name="OutputWhole_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[21] {
     name="OutputFeatures_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[22] {
     name="OutputWhole_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[23] {
     name="Hidden_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=17;
     matrix_col_width=10;
    };
    float_Data @[24] {
     name="HiddenDeep_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[25] {
     name="OutputFeatures_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[26] {
     name="OutputWhole_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[27] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_115";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=12;
     matrix_col_width=10;
    };
    float_Data @[28] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_116";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=18;
     matrix_col_width=10;
    };
    float_Data @[29] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[30] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="Hidden_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=15;
     matrix_col_width=10;
    };
    float_Data @[31] {
     name="HiddenDeep_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[32] {
     name="OutputFeatures_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[33] {
     name="OutputWhole_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=20;
     matrix_col_width=10;
    };
    float_Data @[34] {
     name="Hidden_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[35] {
     name="HiddenDeep_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[36] {
     name="OutputFeatures_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=29;
     matrix_col_width=10;
    };
    float_Data @[37] {
     name="OutputWhole_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[38] {
     name="Hidden_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[39] {
     name="HiddenDeep_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[40] {
     name="OutputFeatures_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[41] {
     name="OutputWhole_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=50;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
   control_panel_cells {
    name="control_panel_cells";
    el_typ=DataTableCell;
    el_def=0;
   };
  };
  DataTable @[1] {
   name="AllTrialData_train";
   desc=;
   data {
    name="data";
    el_typ=int_Data;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="batch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_110";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="epoch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_100";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="train_mode";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    int_Data @[3] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_70";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[4] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_111";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[5] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_112";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="tick";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[6] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_101";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="time";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[7] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_102";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[8] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_103";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[9] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_104";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="output_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[10] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_105";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="rt_cycles";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=9;
     matrix_col_width=10;
    };
    float_Data @[11] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_106";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[12] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_107";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[13] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_108";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[14] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="ext_rew";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[15] {
     name="OutputFeatures_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[16] {
     name="OutputWhole_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[17] {
     name="OutputFeatures_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[18] {
     name="OutputWhole_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
    float_Data @[19] {
     name="OutputFeatures_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[20] {
     name="OutputWhole_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[21] {
     name="OutputFeatures_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[22] {
     name="OutputWhole_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[23] {
     name="Hidden_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=17;
     matrix_col_width=10;
    };
    float_Data @[24] {
     name="HiddenDeep_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[25] {
     name="OutputFeatures_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[26] {
     name="OutputWhole_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[27] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_115";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=12;
     matrix_col_width=10;
    };
    float_Data @[28] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_116";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=18;
     matrix_col_width=10;
    };
    float_Data @[29] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[30] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="Hidden_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=15;
     matrix_col_width=10;
    };
    float_Data @[31] {
     name="HiddenDeep_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[32] {
     name="OutputFeatures_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[33] {
     name="OutputWhole_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=20;
     matrix_col_width=10;
    };
    float_Data @[34] {
     name="Hidden_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[35] {
     name="HiddenDeep_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[36] {
     name="OutputFeatures_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=29;
     matrix_col_width=10;
    };
    float_Data @[37] {
     name="OutputWhole_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[38] {
     name="Hidden_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[39] {
     name="HiddenDeep_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[40] {
     name="OutputFeatures_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[41] {
     name="OutputWhole_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=50;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
   control_panel_cells {
    name="control_panel_cells";
    el_typ=DataTableCell;
    el_def=0;
   };
  };
  DataTable @[2] {
   name="AllTrialData_test";
   desc=;
   data {
    name="data";
    el_typ=int_Data;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="batch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_110";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="epoch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_100";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="train_mode";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    int_Data @[3] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_70";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[4] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_111";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[5] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_112";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="tick";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[6] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_101";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="time";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[7] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_102";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[8] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_103";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[9] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_104";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="output_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[10] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_105";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="rt_cycles";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=9;
     matrix_col_width=10;
    };
    float_Data @[11] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_106";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[12] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_107";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[13] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_108";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[14] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="ext_rew";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[15] {
     name="OutputFeatures_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[16] {
     name="OutputWhole_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[17] {
     name="OutputFeatures_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[18] {
     name="OutputWhole_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
    float_Data @[19] {
     name="OutputFeatures_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[20] {
     name="OutputWhole_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[21] {
     name="OutputFeatures_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[22] {
     name="OutputWhole_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[23] {
     name="Hidden_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=17;
     matrix_col_width=10;
    };
    float_Data @[24] {
     name="HiddenDeep_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[25] {
     name="OutputFeatures_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[26] {
     name="OutputWhole_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[27] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_115";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=12;
     matrix_col_width=10;
    };
    float_Data @[28] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_116";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=18;
     matrix_col_width=10;
    };
    float_Data @[29] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[30] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="Hidden_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=15;
     matrix_col_width=10;
    };
    float_Data @[31] {
     name="HiddenDeep_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[32] {
     name="OutputFeatures_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[33] {
     name="OutputWhole_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=20;
     matrix_col_width=10;
    };
    float_Data @[34] {
     name="Hidden_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[35] {
     name="HiddenDeep_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[36] {
     name="OutputFeatures_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=29;
     matrix_col_width=10;
    };
    float_Data @[37] {
     name="OutputWhole_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[38] {
     name="Hidden_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[39] {
     name="HiddenDeep_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[40] {
     name="OutputFeatures_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[41] {
     name="OutputWhole_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=50;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
   control_panel_cells {
    name="control_panel_cells";
    el_typ=DataTableCell;
    el_def=0;
   };
  };
  DataTable @[3] {
   name="TickData";
   desc=;
   data {
    name="data";
    el_typ=DataColT;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_112";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="tick";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_101";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="time";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_105";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="rt_cycles";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=9;
     matrix_col_width=10;
    };
    float_Data @[3] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_106";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[4] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_107";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[5] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_108";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[6] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="ext_rew";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[7] {
     name="OutputFeatures_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[8] {
     name="OutputWhole_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[9] {
     name="OutputFeatures_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[10] {
     name="OutputWhole_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
    float_Data @[11] {
     name="OutputFeatures_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[12] {
     name="OutputWhole_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[13] {
     name="OutputFeatures_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[14] {
     name="OutputWhole_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[15] {
     name="Hidden_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=17;
     matrix_col_width=10;
    };
    float_Data @[16] {
     name="HiddenDeep_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[17] {
     name="OutputFeatures_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[18] {
     name="OutputWhole_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[19] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_115";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=12;
     matrix_col_width=10;
    };
    float_Data @[20] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_116";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=18;
     matrix_col_width=10;
    };
    float_Data @[21] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[22] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="Hidden_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=15;
     matrix_col_width=10;
    };
    float_Data @[23] {
     name="HiddenDeep_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[24] {
     name="OutputFeatures_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[25] {
     name="OutputWhole_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=20;
     matrix_col_width=10;
    };
    float_Data @[26] {
     name="Hidden_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[27] {
     name="HiddenDeep_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[28] {
     name="OutputFeatures_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=29;
     matrix_col_width=10;
    };
    float_Data @[29] {
     name="OutputWhole_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[30] {
     name="Hidden_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[31] {
     name="HiddenDeep_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[32] {
     name="OutputFeatures_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[33] {
     name="OutputWhole_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=50;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
     DataSortEl @[0] {
      col_name="sse_count";
      name="sse_count_dn_0";
      order=DESCENDING;
     };
     DataSortEl @[1] {
      col_name="trial_name_group";
      name="trial_name_group_up_1";
      order=ASCENDING;
     };
     DataSortEl @[2] {
      col_name="sse_count";
      name="sse_count_up_2";
      order=ASCENDING;
     };
     DataSortEl @[3] {
      col_name="sse_count";
      name="sse_count_up_3";
      order=ASCENDING;
     };
     DataSortEl @[4] {
      col_name="sse_count";
      name="sse_count_up_4";
      order=ASCENDING;
     };
     DataSortEl @[5] {
      col_name="sse_count";
      name="sse_count_up_5";
      order=ASCENDING;
     };
    };
   };
   row_with_hilite=-1;
   control_panel_cells {
    name="control_panel_cells";
    el_typ=DataTableCell;
    el_def=0;
   };
  };
  DataTable @[4] {
   name="TickDataLog";
   desc="log of top n error trials over epochs";
   data {
    name="data";
    el_typ=int_Data;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_300";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="batch";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    int_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_301";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="epoch";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[2] {
     name="time_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[3] {
     name="time_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[4] {
     name="time_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[5] {
     name="time_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[6] {
     name="rt_cycles_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[7] {
     name="rt_cycles_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[8] {
     name="rt_cycles_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[9] {
     name="rt_cycles_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[10] {
     name="sse_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[11] {
     name="sse_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[12] {
     name="sse_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[13] {
     name="sse_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[14] {
     name="norm_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[15] {
     name="norm_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[16] {
     name="norm_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[17] {
     name="norm_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[18] {
     name="cos_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[19] {
     name="cos_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[20] {
     name="cos_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[21] {
     name="cos_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[22] {
     name="ext_rew_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[23] {
     name="ext_rew_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[24] {
     name="ext_rew_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[25] {
     name="ext_rew_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[26] {
     name="OutputFeatures_lay_sse_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[27] {
     name="OutputFeatures_lay_sse_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[28] {
     name="OutputFeatures_lay_sse_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[29] {
     name="OutputFeatures_lay_sse_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[30] {
     name="OutputWhole_lay_sse_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[31] {
     name="OutputWhole_lay_sse_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[32] {
     name="OutputWhole_lay_sse_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[33] {
     name="OutputWhole_lay_sse_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[34] {
     name="OutputFeatures_lay_norm_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[35] {
     name="OutputFeatures_lay_norm_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[36] {
     name="OutputFeatures_lay_norm_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[37] {
     name="OutputFeatures_lay_norm_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[38] {
     name="OutputWhole_lay_norm_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[39] {
     name="OutputWhole_lay_norm_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[40] {
     name="OutputWhole_lay_norm_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[41] {
     name="OutputWhole_lay_norm_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[42] {
     name="OutputFeatures_lay_bin_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[43] {
     name="OutputFeatures_lay_bin_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[44] {
     name="OutputFeatures_lay_bin_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[45] {
     name="OutputFeatures_lay_bin_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[46] {
     name="OutputWhole_lay_bin_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[47] {
     name="OutputWhole_lay_bin_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[48] {
     name="OutputWhole_lay_bin_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[49] {
     name="OutputWhole_lay_bin_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[50] {
     name="OutputFeatures_lay_cos_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[51] {
     name="OutputFeatures_lay_cos_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[52] {
     name="OutputFeatures_lay_cos_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[53] {
     name="OutputFeatures_lay_cos_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[54] {
     name="OutputWhole_lay_cos_err_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[55] {
     name="OutputWhole_lay_cos_err_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[56] {
     name="OutputWhole_lay_cos_err_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[57] {
     name="OutputWhole_lay_cos_err_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[58] {
     name="Hidden_lay_net_sd_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[59] {
     name="Hidden_lay_net_sd_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[60] {
     name="Hidden_lay_net_sd_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[61] {
     name="Hidden_lay_net_sd_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[62] {
     name="HiddenDeep_lay_net_sd_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[63] {
     name="HiddenDeep_lay_net_sd_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[64] {
     name="HiddenDeep_lay_net_sd_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[65] {
     name="HiddenDeep_lay_net_sd_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[66] {
     name="OutputFeatures_lay_net_sd_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[67] {
     name="OutputFeatures_lay_net_sd_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[68] {
     name="OutputFeatures_lay_net_sd_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[69] {
     name="OutputFeatures_lay_net_sd_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[70] {
     name="OutputWhole_lay_net_sd_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[71] {
     name="OutputWhole_lay_net_sd_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[72] {
     name="OutputWhole_lay_net_sd_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[73] {
     name="OutputWhole_lay_net_sd_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[74] {
     name="net_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[75] {
     name="net_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[76] {
     name="net_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[77] {
     name="net_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[78] {
     name="net_trial_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[79] {
     name="net_trial_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[80] {
     name="net_trial_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[81] {
     name="net_trial_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[82] {
     name="net_avg_act_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[83] {
     name="net_avg_act_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[84] {
     name="net_avg_act_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[85] {
     name="net_avg_act_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[86] {
     name="Hidden_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[87] {
     name="Hidden_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[88] {
     name="Hidden_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[89] {
     name="Hidden_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[90] {
     name="HiddenDeep_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[91] {
     name="HiddenDeep_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[92] {
     name="HiddenDeep_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[93] {
     name="HiddenDeep_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[94] {
     name="OutputFeatures_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[95] {
     name="OutputFeatures_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[96] {
     name="OutputFeatures_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[97] {
     name="OutputFeatures_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[98] {
     name="OutputWhole_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[99] {
     name="OutputWhole_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[100] {
     name="OutputWhole_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[101] {
     name="OutputWhole_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[102] {
     name="Hidden_trial_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[103] {
     name="Hidden_trial_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[104] {
     name="Hidden_trial_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[105] {
     name="Hidden_trial_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[106] {
     name="HiddenDeep_trial_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[107] {
     name="HiddenDeep_trial_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[108] {
     name="HiddenDeep_trial_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[109] {
     name="HiddenDeep_trial_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[110] {
     name="OutputFeatures_trial_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[111] {
     name="OutputFeatures_trial_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[112] {
     name="OutputFeatures_trial_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[113] {
     name="OutputFeatures_trial_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[114] {
     name="OutputWhole_trial_cos_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[115] {
     name="OutputWhole_trial_cos_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[116] {
     name="OutputWhole_trial_cos_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[117] {
     name="OutputWhole_trial_cos_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[118] {
     name="Hidden_avg_act_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[119] {
     name="Hidden_avg_act_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[120] {
     name="Hidden_avg_act_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[121] {
     name="Hidden_avg_act_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[122] {
     name="HiddenDeep_avg_act_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[123] {
     name="HiddenDeep_avg_act_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[124] {
     name="HiddenDeep_avg_act_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[125] {
     name="HiddenDeep_avg_act_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[126] {
     name="OutputFeatures_avg_act_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[127] {
     name="OutputFeatures_avg_act_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[128] {
     name="OutputFeatures_avg_act_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[129] {
     name="OutputFeatures_avg_act_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[130] {
     name="OutputWhole_avg_act_diff_0";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[131] {
     name="OutputWhole_avg_act_diff_1";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[132] {
     name="OutputWhole_avg_act_diff_2";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[133] {
     name="OutputWhole_avg_act_diff_3";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{      };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=0;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=50;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
   control_panel_cells {
    name="control_panel_cells";
    el_typ=DataTableCell;
    el_def=0;
   };
  };
  DataTable @[5] {
   name="OneEpochTrialData";
   desc=;
   data {
    name="data";
    el_typ=DataColT;
    el_def=0;
    int_Data @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="batch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_110";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="epoch";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_100";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="train_mode";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    int_Data @[3] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_70";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[4] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_111";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    int_Data @[5] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_112";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="NARROW";
       value 1 0=1;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="tick";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[6] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_101";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="time";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    String_Data @[7] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_102";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="trial_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[8] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_103";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="group_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    String_Data @[9] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_104";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="output_name";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[10] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_105";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="rt_cycles";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=9;
     matrix_col_width=10;
    };
    float_Data @[11] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_106";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[12] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_107";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[13] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_108";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[14] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_109";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="ext_rew";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
    };
    float_Data @[15] {
     name="OutputFeatures_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[16] {
     name="OutputWhole_lay_sse";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[17] {
     name="OutputFeatures_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[18] {
     name="OutputWhole_lay_norm_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
    float_Data @[19] {
     name="OutputFeatures_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[20] {
     name="OutputWhole_lay_bin_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[21] {
     name="OutputFeatures_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[22] {
     name="OutputWhole_lay_cos_err";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[23] {
     name="Hidden_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=17;
     matrix_col_width=10;
    };
    float_Data @[24] {
     name="HiddenDeep_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[25] {
     name="OutputFeatures_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[26] {
     name="OutputWhole_lay_net_sd";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=22;
     matrix_col_width=10;
    };
    float_Data @[27] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_115";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=12;
     matrix_col_width=10;
    };
    float_Data @[28] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_116";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=18;
     matrix_col_width=10;
    };
    float_Data @[29] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="net_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
    };
    float_Data @[30] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_117";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_wd";
       value 8 0=0.1328021;
       val_type_fixed=0;
      };
     };
     name="Hidden_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=15;
     matrix_col_width=10;
    };
    float_Data @[31] {
     name="HiddenDeep_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[32] {
     name="OutputFeatures_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[33] {
     name="OutputWhole_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=20;
     matrix_col_width=10;
    };
    float_Data @[34] {
     name="Hidden_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=21;
     matrix_col_width=10;
    };
    float_Data @[35] {
     name="HiddenDeep_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=25;
     matrix_col_width=10;
    };
    float_Data @[36] {
     name="OutputFeatures_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=29;
     matrix_col_width=10;
    };
    float_Data @[37] {
     name="OutputWhole_trial_cos_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=26;
     matrix_col_width=10;
    };
    float_Data @[38] {
     name="Hidden_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=19;
     matrix_col_width=10;
    };
    float_Data @[39] {
     name="HiddenDeep_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=23;
     matrix_col_width=10;
    };
    float_Data @[40] {
     name="OutputFeatures_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=27;
     matrix_col_width=10;
    };
    float_Data @[41] {
     name="OutputWhole_avg_act_diff";
     col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=24;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=50;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
   control_panel_cells {
    name="control_panel_cells";
    el_typ=DataTableCell;
    el_def=0;
   };
  };
  DataGroupSpec @[6] {
   name="TickGroupSpec";
   ops {
    name="ops";
    el_typ=DataGroupEl;
    el_def=0;
    DataGroupEl @[0] {
     col_name="tick";
     name="tick_MEAN_4";
     agg {name="agg": op=GROUP: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[1] {
     col_name="time";
     name="time_MEAN_5";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[2] {
     col_name="rt_cycles";
     name="rt_cycles_MEAN_6";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[3] {
     col_name="sse";
     name="sse_MEAN_7";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[4] {
     col_name="norm_err";
     name="norm_err_MEAN_8";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[5] {
     col_name="cos_err";
     name="cos_err_MEAN_9";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[6] {
     col_name="ext_rew";
     name="ext_rew_MEAN_10";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[7] {
     col_name="OutputFeatures_lay_sse";
     name="OutputFeatures_lay_sse_MEAN_11";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[8] {
     col_name="OutputWhole_lay_sse";
     name="OutputWhole_lay_sse_MEAN_12";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[9] {
     col_name="OutputFeatures_lay_norm_err";
     name="OutputFeatures_lay_norm_err_MEAN_13";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[10] {
     col_name="OutputWhole_lay_norm_err";
     name="OutputWhole_lay_norm_err_MEAN_14";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[11] {
     col_name="OutputFeatures_lay_bin_err";
     name="OutputFeatures_lay_bin_err_MEAN_15";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[12] {
     col_name="OutputWhole_lay_bin_err";
     name="OutputWhole_lay_bin_err_MEAN_16";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[13] {
     col_name="OutputFeatures_lay_cos_err";
     name="OutputFeatures_lay_cos_err_MEAN_17";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[14] {
     col_name="OutputWhole_lay_cos_err";
     name="OutputWhole_lay_cos_err_MEAN_18";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[15] {
     col_name="Hidden_lay_net_sd";
     name="Hidden_lay_net_sd_MEAN_19";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[16] {
     col_name="HiddenDeep_lay_net_sd";
     name="HiddenDeep_lay_net_sd_MEAN_20";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[17] {
     col_name="OutputFeatures_lay_net_sd";
     name="OutputFeatures_lay_net_sd_MEAN_21";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[18] {
     col_name="OutputWhole_lay_net_sd";
     name="OutputWhole_lay_net_sd_MEAN_22";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[19] {
     col_name="net_cos_diff";
     name="net_cos_diff_MEAN_23";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[20] {
     col_name="net_trial_cos_diff";
     name="net_trial_cos_diff_MEAN_24";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[21] {
     col_name="net_avg_act_diff";
     name="net_avg_act_diff_MEAN_25";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[22] {
     col_name="Hidden_cos_diff";
     name="Hidden_cos_diff_MEAN_26";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[23] {
     col_name="HiddenDeep_cos_diff";
     name="HiddenDeep_cos_diff_MEAN_27";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[24] {
     col_name="OutputFeatures_cos_diff";
     name="OutputFeatures_cos_diff_MEAN_28";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[25] {
     col_name="OutputWhole_cos_diff";
     name="OutputWhole_cos_diff_MEAN_29";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[26] {
     col_name="Hidden_trial_cos_diff";
     name="Hidden_trial_cos_diff_MEAN_30";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[27] {
     col_name="HiddenDeep_trial_cos_diff";
     name="HiddenDeep_trial_cos_diff_MEAN_31";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[28] {
     col_name="OutputFeatures_trial_cos_diff";
     name="OutputFeatures_trial_cos_diff_MEAN_32";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[29] {
     col_name="OutputWhole_trial_cos_diff";
     name="OutputWhole_trial_cos_diff_MEAN_33";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[30] {
     col_name="Hidden_avg_act_diff";
     name="Hidden_avg_act_diff_MEAN_34";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[31] {
     col_name="HiddenDeep_avg_act_diff";
     name="HiddenDeep_avg_act_diff_MEAN_35";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[32] {
     col_name="OutputFeatures_avg_act_diff";
     name="OutputFeatures_avg_act_diff_MEAN_36";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
    DataGroupEl @[33] {
     col_name="OutputWhole_avg_act_diff";
     name="OutputWhole_avg_act_diff_MEAN_37";
     agg {name="agg": op=MEAN: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
    };
   };
   append_agg_name=0;
  };
 };
 types {
  name="types";
  el_typ=DynEnumType;
  el_def=0;
 };
 args {
  name="args";
  el_typ=ProgVar;
  el_def=0;
 };
 vars {
  name="vars";
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="trial_output_data";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[1][0]$$<DataTable,TrialOutputData>;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="this is the trial output data to analyze";
   init_from=NULL;
  };
  ProgVar @[1] {
   name="existing_data_analysis";
   var_type=T_Bool;
   bool_val=0;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[2] {
   name="interactive_run";
   var_type=T_Bool;
   bool_val=0;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="click this to true if you want to run this program interactively on already-collected data to test out new analyses, etc";
   init_from=NULL;
  };
  ProgVar @[3] {
   name="do_analysis";
   var_type=T_Bool;
   bool_val=1;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="whether to run analysis or not -- sometimes you just want to collect the data.. (especially when changing the analysis stream)";
   init_from=NULL;
  };
  ProgVar @[4] {
   name="first_run";
   var_type=T_Bool;
   bool_val=0;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="true for first run -- does some initialization on first run..";
   init_from=NULL;
  };
  ProgVar @[5] {
   name="n_trials";
   var_type=T_Int;
   int_val=100;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="number of trials of data to analyze -- aggregates this amount over epochs as needed -- if trial data has more than this, all of trial data is used (no point in throwing data away!)";
   init_from=NULL;
  };
  ProgVar @[6] {
   name="max_ticks_to_log";
   var_type=T_Int;
   int_val=4;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="maximum number of ticks to record in log";
   init_from=NULL;
  };
  ProgVar @[7] {
   name="all_trial_data";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[4].gp[0][3].objs[0]$$;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[8] {
   name="tick_data";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[4].gp[0][3].objs[3]$$;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[9] {
   name="tick_data_log";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[4].gp[0][3].objs[4]$$;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[10] {
   name="tick_group_spec";
   var_type=T_Object;
   object_type=DataGroupSpec;
   object_val=.projects[0].programs.gp[4].gp[0][3].objs[6]$$;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[11] {
   name="all_trial_data_test";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[4].gp[0][3].objs[2]$$;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[12] {
   name="all_trial_data_train";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[4].gp[0][3].objs[1]$$;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[13] {
   name="one_epoch_trial_data";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].programs.gp[4].gp[0][3].objs[5]$$;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
 };
 functions {
  name="functions";
  el_typ=Function;
  el_def=0;
  Function @[0] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="GetNewData() returns: int";
   name="GetNewData";
   return_type=T_Int;
   object_type=taOBase;
   args {
    name="ProgVar_List_1";
    el_typ=ProgVar;
    el_def=0;
   };
   fun_code {
    name="ProgEl_List_168";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (2 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="trl_rows";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="old_rows";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    AssignExpr @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="trl_rows = trial_output_data.rows";
     result_var=.projects[0].programs.gp[4].gp[0][3].functions[0].fun_code[0].local_vars[0]$$;
     expr {
      expr="trial_output_data.rows";
     };
    };
    If @[2] {
     desc="first integration, do some init";
     flags=CAN_REVERT_TO_CODE;
     code_string="if (AllTrialData.rows == 0)";
     cond {
      expr="all_trial_data.rows == 0";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      AssignExpr @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="first_run = true";
       result_var=.projects[0].programs.gp[4].gp[0][3].vars[4]$$;
       expr {
	expr="true";
       };
      };
      FunctionCall @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="ConfigGroupSpec()";
       result_var=NULL;
       fun=.projects[0].programs.gp[4].gp[0][3].functions[2]$$;
       fun_args {
	name="fun_args";
	el_typ=ProgArg;
	el_def=0;
       };
      };
     };
    };
    Else @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="else";
     cond {
      expr=;
     };
     true_code {
      name="else_code";
      el_typ=ProgCode;
      el_def=0;
      AssignExpr @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="first_run = false";
       result_var=$.projects[0].programs.gp[4].gp[0][3].vars[4]$;
       expr {
	expr="false";
       };
      };
     };
    };
    If @[4] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (trl_rows > n_trials || AllTrialData.rows == 0)";
     cond {
      expr="trl_rows > n_trials || all_trial_data.rows == 0";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MethodCall @[0] {
       desc="just get it all";
       flags=CAN_REVERT_TO_CODE;
       code_string="AllTrialData->CopyFrom(trial_output_data)";
       result_var=NULL;
       obj=.projects[0].programs.gp[4].gp[0][3].vars[7]$$;
       method=taBase::CopyFrom;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taBase_ptr;
	 type="taBase*";
	 name="cpy_from";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="trial_output_data";
	 };
	};
       };
       meth_sig="bool CopyFrom(taBase* cpy_from)";
       meth_desc=" Copy from given object into this object (this is a safe interface to UnSafeCopy)";
      };
      MethodCall @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="AllTrialData->ClearDataFlag(DataTable::SAVE_ROWS)";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[7]$;
       method=DataTable::ClearDataFlag;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable::DataFlags;
	 type="DataTable::DataFlags";
	 name="flg";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="DataTable::SAVE_ROWS";
	 };
	};
       };
       meth_sig="void ClearDataFlag(DataTable::DataFlags flg)";
       meth_desc=" clear data table flag state (set off)";
      };
     };
    };
    Else @[5] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="else";
     cond {
      expr=;
     };
     true_code {
      name="else_code";
      el_typ=ProgCode;
      el_def=0;
      AssignExpr @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="old_rows = n_trials - trl_rows";
       result_var=.projects[0].programs.gp[4].gp[0][3].functions[0].fun_code[0].local_vars[1]$$;
       expr {
	expr="n_trials - trl_rows";
       };
      };
      If @[1] {
       desc="make room for new data";
       flags=CAN_REVERT_TO_CODE;
       code_string="if (AllTrialData.rows > old_rows)";
       cond {
	expr="all_trial_data.rows > old_rows";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	MethodCall @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="AllTrialData->RemoveRows(0, AllTrialData.rows - old_rows)";
	 result_var=NULL;
	 obj=$.projects[0].programs.gp[4].gp[0][3].vars[7]$;
	 method=DataTable::RemoveRows;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="st_row";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="0";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=int;
	   type="int";
	   name="n_rows";
	   required=0;
	   def_val="1";
	   prev_expr=;
	   expr {
	    expr="all_trial_data.rows - old_rows";
	   };
	  };
	 };
	 meth_sig="bool RemoveRows(int st_row, int n_rows = 1)";
	 meth_desc=" Remove n rows of data, starting at st_row. st_row = -1 means last row, and n_rows = -1 means remove from starting row to end, n_rows = -2 means remove upto and including the next to last row, etc.";
	};
       };
      };
      MethodCall @[2] {
       desc="get the new data";
       flags=CAN_REVERT_TO_CODE;
       code_string="AllTrialData->AppendRows(trial_output_data)";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[7]$;
       method=DataTable::AppendRows;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="append_from";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="trial_output_data";
	 };
	};
       };
       meth_sig="bool AppendRows(DataTable* append_from)";
       meth_desc=" append rows from another data table -- this is also available in taDataProc and in the GUI as a drag-and-drop action (appends rows of dropped item onto dropped item)";
      };
     };
    };
   };
  };
  Function @[1] {
   desc="use this function if the data has already been collected - maybe from a cluster run";
   flags=CAN_REVERT_TO_CODE;
   code_string="GetNewData() returns: int";
   name="GetExistingData";
   return_type=T_Int;
   object_type=taOBase;
   args {
    name="ProgVar_List_1";
    el_typ=ProgVar;
    el_def=0;
   };
   fun_code {
    name="ProgEl_List_168";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (2 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
     };
    };
    FunctionCall @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="ConfigGroupSpec()";
     result_var=NULL;
     fun=$.projects[0].programs.gp[4].gp[0][3].functions[2]$;
     fun_args {
      name="fun_args";
      el_typ=ProgArg;
      el_def=0;
     };
    };
    MethodCall @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="all_trial_data->Reset()";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[7]$;
     method=DataTable::Reset;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void Reset()";
     meth_desc=" remove all columns (and data) -- this cannot be undone!";
    };
    MethodCall @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="all_trial_data->CopyFrom()";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[7]$;
     method=taBase::CopyFrom;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taBase_ptr;
       type="taBase*";
       name="cpy_from";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="trial_output_data";
       };
      };
     };
     meth_sig="bool CopyFrom(taBase* cpy_from)";
     meth_desc=" Copy from given object into this object (this is a safe interface to UnSafeCopy)";
    };
   };
  };
  Function @[2] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="ConfigGroupSpec() returns: int";
   name="ConfigGroupSpec";
   return_type=T_Int;
   object_type=taOBase;
   args {
    name="ProgVar_List_1";
    el_typ=ProgVar;
    el_def=0;
   };
   fun_code {
    name="ProgEl_List_1108";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (1 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="op";
       var_type=T_Object;
       object_type=DataGroupEl;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    MemberMethodCall @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="TickGroupSpec.ops.Reset()";
     obj=.projects[0].programs.gp[4].gp[0][3].vars[10]$$;
     path="ops";
     result_var=NULL;
     method=taList_impl::Reset;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void Reset()";
     meth_desc=" reset the list (remove all elements)";
    };
    MethodCall @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="TickGroupSpec->AddAllColumns(trial_output_data)";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[10]$;
     method=DataOpBaseSpec::AddAllColumns;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="dt";
       required=1;
       def_val=;
       prev_expr="trial_output_data";
       expr {
	expr="trial_output_data";
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="exclude_strings";
       required=0;
       def_val="false";
       prev_expr=;
       expr {
	expr="true";
       };
      };
     };
     meth_sig="void AddAllColumns(DataTable* dt, bool exclude_strings = false)";
     meth_desc=" add all columns from given data table -- optionally excluding string-valued columns";
    };
    WhileLoop @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="while (TickGroupSpec.ops[0].col_name != \"tick\")";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      MemberMethodCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="TickGroupSpec.ops.RemoveIdx(0)";
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[10]$;
       path="ops";
       result_var=NULL;
       method=taList_impl::RemoveIdx;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="idx";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
       };
       meth_sig="bool RemoveIdx(int idx)";
       meth_desc=" remove (and delete) element from list at index";
      };
     };
     test {
      expr="tick_group_spec.ops[0].col_name != \"tick\"";
     };
    };
    ForeachLoop @[4] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="foreach(op in TickGroupSpec.ops)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      If @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="if (op.col_name == \"tick\")";
       cond {
	expr="op.col_name == \"tick\"";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	MemberAssign @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="op.agg.op = Aggregate::GROUP";
	 obj=.projects[0].programs.gp[4].gp[0][3].functions[2].fun_code[0].local_vars[0]$$;
	 path="agg.op";
	 expr {
	  expr="Aggregate::GROUP";
	 };
	 update_after=0;
	};
       };
      };
      Else @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="else";
       cond {
	expr=;
       };
       true_code {
	name="else_code";
	el_typ=ProgCode;
	el_def=0;
	MemberAssign @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="op.agg.op = Aggregate::MEAN";
	 obj=$.projects[0].programs.gp[4].gp[0][3].functions[2].fun_code[0].local_vars[0]$;
	 path="agg.op";
	 expr {
	  expr="Aggregate::MEAN";
	 };
	 update_after=0;
	};
       };
      };
     };
     el_var=$.projects[0].programs.gp[4].gp[0][3].functions[2].fun_code[0].local_vars[0]$;
     in {
      expr="tick_group_spec.ops";
     };
    };
   };
  };
  Function @[3] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="AnalyzeTicks() returns: int";
   name="AnalyzeTicks";
   return_type=T_Int;
   object_type=taOBase;
   args {
    name="ProgVar_List_1";
    el_typ=ProgVar;
    el_def=0;
   };
   fun_code {
    name="ProgEl_List_174";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (1 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
     };
    };
    DataProcCall @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="taDataProc::Group(TickData, AllTrialData, TickGroupSpec)";
     result_var=NULL;
     object_type=taDataProc;
     method=taDataProc::Group;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="dest";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="tick_data";
       };
      };
      ProgArg @[1] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="src";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="all_trial_data";
       };
      };
      ProgArg @[2] {
       arg_type=DataGroupSpec_ptr;
       type="DataGroupSpec*";
       name="spec";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="tick_group_spec";
       };
      };
     };
    };
    FunctionCall @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LogTickData(false)";
     result_var=NULL;
     fun=.projects[0].programs.gp[4].gp[0][3].functions[5]$$;
     fun_args {
      name="fun_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=bool;
       type="bool";
       name="init_only";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="false";
       };
      };
     };
    };
   };
  };
  Function @[4] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="AnalyzeTicks() returns: int";
   name="AnalyzeTicksExistingData";
   return_type=T_Int;
   object_type=taOBase;
   args {
    name="ProgVar_List_1";
    el_typ=ProgVar;
    el_def=0;
   };
   fun_code {
    name="ProgEl_List_174";
    el_typ=ProgCode;
    el_def=0;
    FunctionCall @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="GetNewData()";
     result_var=NULL;
     fun=.projects[0].programs.gp[4].gp[0][3].functions[1]$$;
     fun_args {
      name="fun_args";
      el_typ=ProgArg;
      el_def=0;
     };
    };
    MethodCall @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="tick_data_log->RemoveAllRows()";
     result_var=NULL;
     obj=.projects[0].programs.gp[4].gp[0][3].vars[9]$$;
     method=DataTable::RemoveAllRows;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void RemoveAllRows()";
     meth_desc=" remove all of the rows of data, but keep the column structure";
    };
    Comment @[2] {
     desc="go through one epoch at a time as if we were doing this as the data were collected";
     flags=CAN_REVERT_TO_CODE|NO_CODE;
     code_string="// go through one epoch at a time as if we were doing this as the data were collected";
    };
    MethodCall @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="one_epoch_trial_data.Copy_NoData()";
     result_var=NULL;
     obj=.projects[0].programs.gp[4].gp[0][3].vars[13]$$;
     method=DataTable::Copy_NoData;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_DataTable_ref;
       type="DataTable&";
       name="cp";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="all_trial_data";
       };
      };
     };
     meth_sig="void Copy_NoData(DataTable& cp)";
     meth_desc=" copy only the column structure, but no data, from other data table";
    };
    MethodCall @[4] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="one_epoch_trial_data->AddRows()";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[13]$;
     method=DataTable::AddRows;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=int;
       type="int";
       name="n";
       required=0;
       def_val="1";
       prev_expr=;
       expr {
	expr="n_trials";
       };
      };
     };
     meth_sig="bool AddRows(int n = 1)";
     meth_desc=" add n rows, returns true if successfully added";
    };
    LocalVars @[5] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (1 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="i";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="j";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="epoch";
       var_type=T_Object;
       object_type=DataCol;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    ForLoop @[6] {
     desc="n_trials is per epoch";
     flags=CAN_REVERT_TO_CODE;
     code_string="for (i=0; i<trial_output_data.rows/n_trials; i++)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      ForLoop @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="for (j=0; j<n_trials; j++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	MethodCall @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="one_epoch_trial_data.CopyFromRow()";
	 result_var=NULL;
	 obj=$.projects[0].programs.gp[4].gp[0][3].vars[13]$;
	 method=DataTable::CopyFromRow;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="dest_row";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="j";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=const_DataTable_ref;
	   type="DataTable&";
	   name="cp";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="all_trial_data";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=int;
	   type="int";
	   name="src_row";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="i*n_trials + j";
	   };
	  };
	 };
	 meth_sig="void CopyFromRow(int dest_row, DataTable& cp, int src_row)";
	 meth_desc=" copy one row from source to given row in this object: source must have exact same column structure as this!!";
	};
       };
       init {
	expr="j=0";
       };
       test {
	expr="j<n_trials";
       };
       iter {
	expr="j++";
       };
      };
      DataProcCall @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="taDataProc::Group(TickData, AllTrialData, TickGroupSpec)";
       result_var=NULL;
       object_type=taDataProc;
       method=taDataProc::Group;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="dest";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="tick_data";
	 };
	};
	ProgArg @[1] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="src";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="one_epoch_trial_data";
	 };
	};
	ProgArg @[2] {
	 arg_type=DataGroupSpec_ptr;
	 type="DataGroupSpec*";
	 name="spec";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="tick_group_spec";
	 };
	};
       };
      };
      FunctionCall @[2] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="LogTickData(false)";
       result_var=NULL;
       fun=$.projects[0].programs.gp[4].gp[0][3].functions[5]$;
       fun_args {
	name="fun_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=bool;
	 type="bool";
	 name="init_only";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="false";
	 };
	};
       };
      };
      Comment @[3] {
       desc="fix the values in the epoch column";
       flags=CAN_REVERT_TO_CODE|NO_CODE;
       code_string="// fix the values in the epoch column";
      };
      AssignExpr @[4] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="epoch = tick_data_log.data.epoch";
       result_var=.projects[0].programs.gp[4].gp[0][3].functions[4].fun_code[5].local_vars[2]$$;
       expr {
	expr="tick_data_log->data.epoch";
       };
      };
      MethodCall @[5] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="epoch->InitValsToRowNo()";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].functions[4].fun_code[5].local_vars[2]$;
       method=DataCol::InitValsToRowNo;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="bool InitValsToRowNo()";
       meth_desc=" initialize all values in this column to be equal to the row number -- only valid for scalar (not matrix) columns";
      };
     };
     init {
      expr="i=0";
     };
     test {
      expr="i<trial_output_data.rows/n_trials";
     };
     iter {
      expr="i++";
     };
    };
   };
  };
  Function @[5] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="LogTickData(bool init_only) returns: int";
   name="LogTickData";
   return_type=T_Int;
   object_type=taOBase;
   args {
    name="ProgVar_List_1";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="init_only";
     var_type=T_Bool;
     bool_val=0;
     flags=LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   fun_code {
    name="ProgEl_List_177";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (3 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="i";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="trnm";
       var_type=T_String;
       string_val=;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="j";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="max_rows";
       var_type=T_Int;
       int_val=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    MethodCall @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="tick_data_log.StructUpdate(true)";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
     method=taBase::StructUpdate;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=bool;
       type="bool";
       name="begin";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="true";
       };
      };
     };
     meth_sig="void StructUpdate(bool begin)";
     meth_desc=" bracket structural changes with (nestable) true/false calls;";
    };
    If @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if(first_run)";
     cond {
      expr="first_run";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MethodCall @[0] {
       desc="clear out potentially old columns";
       flags=CAN_REVERT_TO_CODE;
       code_string="tick_data_log.Reset()";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
       method=DataTable::Reset;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="void Reset()";
       meth_desc=" remove all columns (and data) -- this cannot be undone!";
      };
      AssignExpr @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="first_run = false";
       result_var=$.projects[0].programs.gp[4].gp[0][3].vars[4]$;
       expr {
	expr="false";
       };
      };
     };
    };
    If @[3] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (init_only)";
     cond {
      expr="init_only";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MethodCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="TickDataLog->ResetData()";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
       method=DataTable::ResetData;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="void ResetData()";
       meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
      };
     };
    };
    MethodCall @[4] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="TickDataLog->FindMakeCol(\"batch\", taBase::VT_INT)";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
     method=DataTable::FindMakeCol;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"batch\"";
       };
      };
      ProgArg @[1] {
       arg_type=taBase::ValType;
       type="taBase::ValType";
       name="val_type";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="taBase::VT_INT";
       };
      };
     };
     meth_sig="DataCol_ptr FindMakeCol(taString& col_nm, taBase::ValType val_type)";
     meth_desc=" insures that a scalar column of the given name and val type exists, and return that col.";
    };
    MethodCall @[5] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="TickDataLog->FindMakeCol(\"epoch\", taBase::VT_INT)";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
     method=DataTable::FindMakeCol;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"epoch\"";
       };
      };
      ProgArg @[1] {
       arg_type=taBase::ValType;
       type="taBase::ValType";
       name="val_type";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="taBase::VT_INT";
       };
      };
     };
     meth_sig="DataCol_ptr FindMakeCol(taString& col_nm, taBase::ValType val_type)";
     meth_desc=" insures that a scalar column of the given name and val type exists, and return that col.";
    };
    If @[6] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (!init_only)";
     cond {
      expr="!init_only";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MethodCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="TickDataLog->AddBlankRow()";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
       method=DataTable::AddBlankRow;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="int AddBlankRow()";
       meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
      };
      MethodCall @[1] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="TickDataLog->SetVal(AllTrialData.GetVal(\"batch\", -1), \"batch\", -1)";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
       method=DataTable::SetVal;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="val";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="all_trial_data.GetVal(\"batch\", -1)";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="col";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"batch\"";
	 };
	};
	ProgArg @[2] {
	 arg_type=int;
	 type="int";
	 name="row";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="-1";
	 };
	};
       };
       meth_sig="bool SetVal(Variant& val, Variant& col, int row)";
       meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column, row -- column can be specified as either integer index or a string that is then used to find the given column name; returns 'true' if valid access and set is successful";
      };
      MethodCall @[2] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="TickDataLog->SetVal(AllTrialData.GetVal(\"epoch\", -1), \"epoch\", -1)";
       result_var=NULL;
       obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
       method=DataTable::SetVal;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="val";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="all_trial_data.GetVal(\"epoch\", -1)";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="col";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"epoch\"";
	 };
	};
	ProgArg @[2] {
	 arg_type=int;
	 type="int";
	 name="row";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="-1";
	 };
	};
       };
       meth_sig="bool SetVal(Variant& val, Variant& col, int row)";
       meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column, row -- column can be specified as either integer index or a string that is then used to find the given column name; returns 'true' if valid access and set is successful";
      };
     };
    };
    AssignExpr @[7] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="max_rows = MIN(tick_data.rows, trials_per_obj)";
     result_var=.projects[0].programs.gp[4].gp[0][3].functions[5].fun_code[0].local_vars[3]$$;
     expr {
      expr="MIN(tick_data.rows, max_ticks_to_log)";
     };
    };
    ForLoop @[8] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="for (j = 1; j < TickData.data.size; j++)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      ForLoop @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="for (i=0; i<trials_per_obj; i++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="trnm = TickData.data[j].name + \"_\" + i";
	 result_var=.projects[0].programs.gp[4].gp[0][3].functions[5].fun_code[0].local_vars[1]$$;
	 expr {
	  expr="tick_data.data[j].name + \"_\" + i";
	 };
	};
	MethodCall @[1] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="TickDataLog->FindMakeCol(trnm, taBase::VT_FLOAT)";
	 result_var=NULL;
	 obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
	 method=DataTable::FindMakeCol;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=const_taString_ref;
	   type="taString&";
	   name="col_nm";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="trnm";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=taBase::ValType;
	   type="taBase::ValType";
	   name="val_type";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="taBase::VT_FLOAT";
	   };
	  };
	 };
	 meth_sig="DataCol_ptr FindMakeCol(taString& col_nm, taBase::ValType val_type)";
	 meth_desc=" insures that a scalar column of the given name and val type exists, and return that col.";
	};
	If @[2] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="if (!init_only)";
	 cond {
	  expr="!init_only";
	 };
	 true_code {
	  name="true_code";
	  el_typ=ProgCode;
	  el_def=0;
	  MethodCall @[0] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   code_string="TickDataLog->SetVal(TickData.GetVal(j, i), trnm, -1)";
	   result_var=NULL;
	   obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
	   method=DataTable::SetVal;
	   meth_args {
	    name="meth_args";
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=const_Variant_ref;
	     type="Variant&";
	     name="val";
	     required=1;
	     def_val=;
	     prev_expr=;
	     expr {
	      expr="tick_data.GetVal(j, i)";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=const_Variant_ref;
	     type="Variant&";
	     name="col";
	     required=1;
	     def_val=;
	     prev_expr=;
	     expr {
	      expr="trnm";
	     };
	    };
	    ProgArg @[2] {
	     arg_type=int;
	     type="int";
	     name="row";
	     required=1;
	     def_val=;
	     prev_expr=;
	     expr {
	      expr="-1";
	     };
	    };
	   };
	   meth_sig="bool SetVal(Variant& val, Variant& col, int row)";
	   meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column, row -- column can be specified as either integer index or a string that is then used to find the given column name; returns 'true' if valid access and set is successful";
	  };
	 };
	};
       };
       init {
	expr="i=0";
       };
       test {
	expr="i<max_rows";
       };
       iter {
	expr="i++";
       };
      };
     };
     init {
      expr="j = 1";
     };
     test {
      expr="j < tick_data.data.size";
     };
     iter {
      expr="j++";
     };
    };
    MethodCall @[9] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="tick_data_log.StructUpdate(true)";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
     method=taBase::StructUpdate;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=bool;
       type="bool";
       name="begin";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="false";
       };
      };
     };
     meth_sig="void StructUpdate(bool begin)";
     meth_desc=" bracket structural changes with (nestable) true/false calls;";
    };
    MethodCall @[10] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="tick_data_log.StructUpdate(true)";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[9]$;
     method=DataTable::WriteClose;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void WriteClose()";
     meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
    };
   };
  };
 };
 init_code {
  name="init_code";
  el_typ=ProgCode;
  el_def=0;
  If @[0] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="if (!interactive_run)";
   cond {
    expr="!interactive_run";
   };
   true_code {
    name="true_code";
    el_typ=ProgCode;
    el_def=0;
    MethodCall @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="AllTrialData->ResetData()";
     result_var=NULL;
     obj=$.projects[0].programs.gp[4].gp[0][3].vars[7]$;
     method=DataTable::ResetData;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void ResetData()";
     meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
    };
    AssignExpr @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="first_run = true";
     result_var=$.projects[0].programs.gp[4].gp[0][3].vars[4]$;
     expr {
      expr="true";
     };
    };
   };
  };
  MethodCall @[1] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="AllTrialData->ClearDataFlag(DataTable::SAVE_ROWS)";
   result_var=NULL;
   obj=$.projects[0].programs.gp[4].gp[0][3].vars[7]$;
   method=DataTable::ClearDataFlag;
   meth_args {
    name="meth_args";
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=DataTable::DataFlags;
     type="DataTable::DataFlags";
     name="flg";
     required=1;
     def_val=;
     prev_expr=;
     expr {
      expr="DataTable::SAVE_ROWS";
     };
    };
   };
   meth_sig="void ClearDataFlag(DataTable::DataFlags flg)";
   meth_desc=" clear data table flag state (set off)";
  };
 };
 prog_code {
  name="prog_code";
  el_typ=ProgCode;
  el_def=0;
  LocalVars @[0] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="LocalVars (0 vars)";
   local_vars {
    name="local_vars";
    el_typ=ProgVar;
    el_def=0;
   };
  };
  If @[1] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="if (existing_data_analysis)";
   cond {
    expr="existing_data_analysis";
   };
   true_code {
    name="true_code";
    el_typ=ProgCode;
    el_def=0;
    FunctionCall @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="AnalyzeTicksExistingData()";
     result_var=NULL;
     fun=.projects[0].programs.gp[4].gp[0][3].functions[4]$$;
     fun_args {
      name="fun_args";
      el_typ=ProgArg;
      el_def=0;
     };
    };
   };
  };
  Else @[2] {
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="else";
   cond {
    expr=;
   };
   true_code {
    name="true_code";
    el_typ=ProgCode;
    el_def=0;
    If @[0] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (!interactive_run)";
     cond {
      expr="!interactive_run";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      FunctionCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="GetNewData()";
       result_var=NULL;
       fun=.projects[0].programs.gp[4].gp[0][3].functions[0]$$;
       fun_args {
	name="fun_args";
	el_typ=ProgArg;
	el_def=0;
       };
      };
     };
    };
    If @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (do_analysis)";
     cond {
      expr="do_analysis";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      FunctionCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="AnalyzeTicks()";
       result_var=NULL;
       fun=.projects[0].programs.gp[4].gp[0][3].functions[3]$$;
       fun_args {
	name="fun_args";
	el_typ=ProgArg;
	el_def=0;
       };
      };
     };
    };
   };
  };
 };
 step_prog=NULL;
 step_n=1;
 doc {
  name="doc";
  desc=;
  web_doc=0;
  wiki=;
  url="local";
  full_url="local";
  text_size=1;
  text=;
  html_text=;
 };
};
