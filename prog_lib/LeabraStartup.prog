// ta_Dump File v2.0
Program .projects[0].programs[0] { 
  ProgVar_List @.vars = [9] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
    ProgVar @[6] { };
    ProgVar @[7] { };
    ProgVar @[8] { };
  };

  ProgEl_List @.prog_code = [27] {
    IfReturn @[0] { };
    Comment @[1] { };
    MiscCall @[2] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[3] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[4] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[5] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[6] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[7] { };
    Comment @[8] { };
    PrintExpr @[9] { };
    MethodCall @[10] { };
    MiscCall @[11] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MiscCall @[12] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MiscCall @[13] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    VarIncr @[14] { };
    MiscCall @[15] { 
      ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
      };
    };
    MethodCall @[16] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    MethodCall @[17] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    MethodCall @[18] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    Comment @[19] { };
    MethodCall @[20] { 
      ProgArg_List @.meth_args = [4] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
      };
    };
    MethodCall @[21] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    MethodCall @[22] { 
      ProgArg_List @.meth_args = [4] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
      };
    };
    MethodCall @[23] { 
      ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
      };
    };
    OtherProgramVar @[24] { };
    PrintExpr @[25] { };
    ProgramCall @[26] { };
  };
};
Program .projects[0].programs[0] {
 name="LeabraStartup_pb";
 tags="Leabra, Startup, Parallel Batch";
 desc="run project in the background (replaces leabra_startup.css) -- parallel batch version for running on a cluster";
 flags=STARTUP_RUN;
 objs {
  name=;
  el_typ=taNBase;
  el_def=0;
 };
 types {
  name=;
  el_typ=ProgType;
  el_def=0;
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="train";
   var_type=T_Object;
   object_type=Program;
   object_val=.projects[0].programs.gp[0][1]$0$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="set this to point to your train process";
  };
  ProgVar @[1] {
   name="batch";
   var_type=T_Object;
   object_type=Program;
   object_val=.projects[0].programs.gp[0][0]$1$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="set this to point to your batch process";
  };
  ProgVar @[2] {
   name="tag";
   var_type=T_String;
   string_val="_gui";
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
  ProgVar @[3] {
   name="batch_str";
   var_type=T_String;
   string_val="00";
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="batch number as a string (leading zeros)";
  };
  ProgVar @[4] {
   name="log_dir";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="log file directory";
  };
  ProgVar @[5] {
   name="log_file_nm";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="name of log file";
  };
  ProgVar @[6] {
   name="batch_start";
   var_type=T_Int;
   int_val=0;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="batch starting number";
  };
  ProgVar @[7] {
   name="EpochOutputData";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[1][1]$2$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
  ProgVar @[8] {
   name="TrialOutputData";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[1][0]$3$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
 };
 functions {
  name=;
  el_typ=Function;
  el_def=0;
 };
 load_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 prog_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
  IfReturn @[0] {
   desc="don't run if running in the gui!";
   flags=;
   cond {
    expr="taMisc::gui_active";
    flags=;
    var_expr="taMisc::gui_active";
    vars {
    };
    var_names{     };
    bad_vars{     };
   };
  };
  Comment @[1] {
   desc="add our special args from command line";
   flags=;
  };
  MiscCall @[2] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"tag=\"";
      flags=;
      var_expr="\"tag=\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"FileTag\"";
      flags=;
      var_expr="\"FileTag\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[3] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"logdir=\"";
      flags=;
      var_expr="\"logdir=\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"LogDir\"";
      flags=;
      var_expr="\"LogDir\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[4] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"epochs=\"";
      flags=;
      var_expr="\"epochs=\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"EpochMax\"";
      flags=;
      var_expr="\"EpochMax\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[5] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"b_start=\"";
      flags=;
      var_expr="\"b_start=\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"BatchStart\"";
      flags=;
      var_expr="\"BatchStart\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[6] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::AddArgName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="flag";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"b_end=\"";
      flags=;
      var_expr="\"b_end=\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="name";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"BatchEnd\"";
      flags=;
      var_expr="\"BatchEnd\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[7] {
   desc="key step: actually process args!";
   flags=;
   result_var=NULL;
   object_type=taMisc;
   method=taMisc::UpdateArgs;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
  Comment @[8] {
   desc="Initialize and set variables from args";
   flags=;
  };
  PrintExpr @[9] {
   desc=;
   flags=;
   expr {
    expr="\"Loaded project: \" << .projects[0].file_name";
    flags=;
    var_expr="\"Loaded project: \" << .projects[0].file_name";
    vars {
    };
    var_names{     };
    bad_vars{     };
   };
  };
  MethodCall @[10] {
   desc=;
   flags=;
   result_var=NULL;
   obj=.projects[0].programs[0].vars[1]$4$;
   method=Program::Init;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
  MiscCall @[11] {
   desc=;
   flags=;
   result_var=.projects[0].programs[0].vars[2]$5$;
   object_type=taMisc;
   method=taMisc::FindArgByName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="nm";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"FileTag\"";
      flags=;
      var_expr="\"FileTag\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[12] {
   desc=;
   flags=;
   result_var=.projects[0].programs[0].vars[6]$6$;
   object_type=taMisc;
   method=taMisc::FindArgByName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="nm";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"BatchStart\"";
      flags=;
      var_expr="\"BatchStart\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[13] {
   desc=;
   flags=;
   result_var=.projects[0].programs[0].vars[3]$7$;
   object_type=taMisc;
   method=taMisc::LeadingZeros;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=int;
     type="int";
     name="num";
     required=0;
     def_val=;
     expr {
      expr="batch_start";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ batch_start;      };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=int;
     type="int";
     name="len";
     required=0;
     def_val=;
     expr {
      expr="2";
      flags=;
      var_expr="2";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  VarIncr @[14] {
   desc=;
   flags=;
   var=$5$;
   expr {
    expr="\".\" + batch_str";
    flags=;
    var_expr="\".\" + batch_str";
    vars {
    };
    var_names{     };
    bad_vars{     };
   };
  };
  MiscCall @[15] {
   desc=;
   flags=;
   result_var=.projects[0].programs[0].vars[4]$8$;
   object_type=taMisc;
   method=taMisc::FindArgByName;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="nm";
     required=0;
     def_val="\"\"";
     expr {
      expr="\"LogDir\"";
      flags=;
      var_expr="\"LogDir\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MethodCall @[16] {
   desc=;
   flags=;
   result_var=NULL;
   obj=.projects[0].programs[0].vars[0]$9$;
   method=Program::SetVarFmArg;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="arg_nm";
     required=1;
     def_val=;
     expr {
      expr="\"EpochMax\"";
      flags=;
      var_expr="\"EpochMax\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="var_nm";
     required=1;
     def_val=;
     expr {
      expr="\"max_epoch\"";
      flags=;
      var_expr="\"max_epoch\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="quiet";
     required=0;
     def_val="false";
     expr {
      expr="false";
      flags=;
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MethodCall @[17] {
   desc=;
   flags=;
   result_var=NULL;
   obj=$4$;
   method=Program::SetVarFmArg;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="arg_nm";
     required=1;
     def_val=;
     expr {
      expr="\"BatchStart\"";
      flags=;
      var_expr="\"BatchStart\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="var_nm";
     required=1;
     def_val=;
     expr {
      expr="\"batch\"";
      flags=;
      var_expr="\"batch\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="quiet";
     required=0;
     def_val="false";
     expr {
      expr="false";
      flags=;
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MethodCall @[18] {
   desc=;
   flags=;
   result_var=NULL;
   obj=$4$;
   method=Program::SetVarFmArg;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="arg_nm";
     required=1;
     def_val=;
     expr {
      expr="\"BatchEnd\"";
      flags=;
      var_expr="\"BatchEnd\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="var_nm";
     required=1;
     def_val=;
     expr {
      expr="\"max_batch\"";
      flags=;
      var_expr="\"max_batch\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="quiet";
     required=0;
     def_val="false";
     expr {
      expr="false";
      flags=;
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  Comment @[19] {
   desc="Set log files";
   flags=;
  };
  MethodCall @[20] {
   desc="last arg is to include dmem proc number";
   flags=;
   result_var=.projects[0].programs[0].vars[5]$10$;
   obj=.projects[0].programs[0].vars[7]$11$;
   method=taBase::GetFileNameFmProject;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="ext";
     required=1;
     def_val=;
     expr {
      expr="\".epc.dat\"";
      flags=;
      var_expr="\".epc.dat\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="tag";
     required=0;
     def_val="\"\"";
     expr {
      expr="tag";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ tag;      };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="subdir";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_dir";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ log_dir;      };
      bad_vars{       };
     };
    };
    ProgArg @[3] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_no";
     required=0;
     def_val="false";
     expr {
      expr="false";
      flags=;
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MethodCall @[21] {
   desc="last arg is to restrict log to dmem_proc = 0";
   flags=;
   result_var=NULL;
   obj=$11$;
   method=DataTable::SaveDataLog;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="fname";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_file_nm";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ log_file_nm;      };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=bool;
     type="bool";
     name="append";
     required=0;
     def_val="false";
     expr {
      expr="false";
      flags=;
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_0";
     required=0;
     def_val="true";
     expr {
      expr="true";
      flags=;
      var_expr="true";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MethodCall @[22] {
   desc="last arg is to include dmem proc number";
   flags=OFF;
   result_var=$10$;
   obj=.projects[0].programs[0].vars[8]$12$;
   method=taBase::GetFileNameFmProject;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="ext";
     required=1;
     def_val=;
     expr {
      expr="\".trl.dat\"";
      flags=;
      var_expr="\".trl.dat\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="tag";
     required=0;
     def_val="\"\"";
     expr {
      expr="tag";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ tag;      };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="subdir";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_dir";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ log_dir;      };
      bad_vars{       };
     };
    };
    ProgArg @[3] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_no";
     required=0;
     def_val="false";
     expr {
      expr="true";
      flags=;
      var_expr="true";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MethodCall @[23] {
   desc="last arg is to restrict log to dmem_proc = 0";
   flags=OFF;
   result_var=NULL;
   obj=$12$;
   method=DataTable::SaveDataLog;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="fname";
     required=0;
     def_val="\"\"";
     expr {
      expr="log_file_nm";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ log_file_nm;      };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=bool;
     type="bool";
     name="append";
     required=0;
     def_val="false";
     expr {
      expr="false";
      flags=;
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_0";
     required=0;
     def_val="true";
     expr {
      expr="false";
      flags=;
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  OtherProgramVar @[24] {
   desc=;
   flags=;
   other_prog=.projects[0].programs.gp[0][9]$13$;
   set_other=1;
   var_1=$5$;
   var_2=NULL;
   var_3=NULL;
   var_4=NULL;
  };
  PrintExpr @[25] {
   desc=;
   flags=;
   expr {
    expr="\"Running: \" << batch.name";
    flags=;
    var_expr="\"Running: \" << batch.name";
    vars {
    };
    var_names{     };
    bad_vars{     };
   };
  };
  ProgramCall @[26] {
   desc=;
   flags=;
   target=$1$;
   targ_ld_init="*LeabraBatch*";
   prog_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
   };
  };
 };
};
