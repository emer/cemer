// ta_Dump File v2.0
Program .projects[0].programs.gp[0][9] { 
  ProgVar_List @.args = [1] {
    ProgVar @[0] { };
  };

  ProgVar_List @.vars = [6] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
  };

  ProgEl_List @.prog_code = [6] {
    IfElse @[0] { 
      ProgEl_List @.true_code = [1] {
	UserScript @[0] { };
      };
    };
    MiscCall @[1] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[2] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    AssignExpr @[3] { };
    MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
      };
    };
    MethodCall @[5] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
  };
};
Program .projects[0].programs.gp[0][9] {
 name="SaveWeights";
 desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
 flags=PF_NONE;
 objs {
  name=;
  el_typ=taOBase;
  el_def=0;
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="network";
   var_type=T_Object;
   object_type=LeabraNetwork;
   object_val=.projects[0].networks[0]$0$;
   objs_ptr=0;
   flags=PV_NONE;
   desc=;
  };
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="tag";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=PV_NONE;
   desc="user-provided tag (startup script will set this!)";
  };
  ProgVar @[1] {
   name="wts_subdir";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=PV_NONE;
   desc="user-provided subdirectory to save weights in";
  };
  ProgVar @[2] {
   name="fname";
   var_type=T_String;
   string_val="/Users/oreilly/pdp4.0/trunk/test/leabra_ra.03_0036.wts.gz";
   objs_ptr=0;
   flags=PV_NONE;
   desc=;
  };
  ProgVar @[3] {
   name="epoch_str";
   var_type=T_String;
   string_val="0036";
   objs_ptr=0;
   flags=NO_CTRL_PANEL;
   desc="string rep of epoch with leading zeros";
  };
  ProgVar @[4] {
   name="batch_str";
   var_type=T_String;
   string_val="03";
   objs_ptr=0;
   flags=NO_CTRL_PANEL;
   desc="string rep of batch with leading zeros";
  };
  ProgVar @[5] {
   name="final_tag";
   var_type=T_String;
   string_val=".03_0036";
   objs_ptr=0;
   flags=NO_CTRL_PANEL;
   desc="batch + epoch";
  };
 };
 functions {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 prog_code {
  name=;
  el_typ=MethodCall;
  el_def=0;
  IfElse @[0] {
   desc="don't save if not first dmem process";
   flags=PEF_NONE;
   condition="taMisc::dmem_proc > 0";
   true_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    UserScript @[0] {
     desc=;
     flags=PEF_NONE;
     user_script="return;";
    };
   };
   false_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
  };
  MiscCall @[1] {
   desc=;
   flags=PEF_NONE;
   result_var=.projects[0].programs.gp[0][9].vars[4]$1$;
   object_type=taMisc;
   method=taMisc::LeadingZeros;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=int;
     type="int";
     name="num";
     expr {
      expr="network.batch";
      var_expr="$#0.batch";
      vars {
      };
      var_names{ network;      };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=int;
     type="int";
     name="len";
     expr {
      expr="2";
      var_expr="2";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MiscCall @[2] {
   desc=;
   flags=PEF_NONE;
   result_var=.projects[0].programs.gp[0][9].vars[3]$2$;
   object_type=taMisc;
   method=taMisc::LeadingZeros;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=int;
     type="int";
     name="num";
     expr {
      expr="network.epoch";
      var_expr="$#0.epoch";
      vars {
      };
      var_names{ network;      };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=int;
     type="int";
     name="len";
     expr {
      expr="4";
      var_expr="4";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  AssignExpr @[3] {
   desc=;
   flags=PEF_NONE;
   result_var=.projects[0].programs.gp[0][9].vars[5]$3$;
   expr_val {
    expr="tag + \".\" + batch_str + \"_\" + epoch_str";
    var_expr="$#0 + \".\" + batch_str + \"_\" + epoch_str";
    vars {
    };
    var_names{ tag;    };
    bad_vars{     };
   };
  };
  MethodCall @[4] {
   desc=;
   flags=PEF_NONE;
   result_var=.projects[0].programs.gp[0][9].vars[2]$4$;
   obj=.projects[0].programs.gp[0][9].args[0]$5$;
   method=taBase::GetFileNameFmProject;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=NULL;
     type="const taString&";
     name="ext";
     expr {
      expr="\".wts.gz\"";
      var_expr="\".wts.gz\"";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=NULL;
     type="const taString&";
     name="tag";
     expr {
      expr="final_tag";
      var_expr="$#0";
      vars {
      };
      var_names{ final_tag;      };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=NULL;
     type="const taString&";
     name="subdir";
     expr {
      expr="wts_subdir";
      var_expr="$#0";
      vars {
      };
      var_names{ wts_subdir;      };
      bad_vars{       };
     };
    };
    ProgArg @[3] {
     arg_type=NULL;
     type="bool";
     name="dmem_proc_no";
     expr {
      expr="false";
      var_expr="false";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
  MethodCall @[5] {
   desc=;
   flags=PEF_NONE;
   result_var=NULL;
   obj=$5$;
   method=Network::SaveWeights;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=NULL;
     type="const taString&";
     name="fname";
     expr {
      expr="fname";
      var_expr="$#0";
      vars {
      };
      var_names{ fname;      };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=NULL;
     type="Network::WtSaveFormat";
     name="fmt";
     expr {
      expr="Network::NET_FMT";
      var_expr="Network::NET_FMT";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
 };
};
