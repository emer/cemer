// ta_Dump File v3.0 -- code v8.0.9.0 rev10783
Program .projects[0].programs.gp[2][16] { 
 UserDataItem_List @*(.user_data_) {
  UserData_DocLink @[0] { };
 };

 ProgObjList @.objs = [8] {
  DataTable @[0] { 
   DataTableCols @.data = [3] {
    float_Data @[0] { };
    float_Data @[1] { };
    int_Data @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };
  };
  WtBasedRF @[1] { };
  DataTable @[2] { 
   DataTableCols @.data = [1] {
    float_Data @[0] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };
  };
  DataTable @[3] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   DataTableCols @.data = [1] {
    float_Data @[0] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };
  };
  DataTable @[4] { 
   DataTableCols @.data = [1] {
    float_Data @[0] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };
  };
  DataTable @[5] { 
   DataTableCols @.data = [1] {
    float_Data @[0] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };
  };
  DataTable @[6] { 
   DataTableCols @.data = [1] {
    float_Data @[0] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };
  };
  DataTable @[7] { 
   DataTableCols @.data = [3] {
    String_Data @[0] { };
    int_Data @[1] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    float_Data @[2] { };
   };

   DataOpList @.last_sort_spec.ops = [0] {
   };
  };
 };

 ProgType_List @.types = [0] {
 };

 ProgVar_List @.args = [0] {
 };

 ProgVar_List @.vars = [14] {
  ProgVar @[0] { };
  ProgVar @[1] { };
  ProgVar @[2] { };
  ProgVar @[3] { };
  ProgVar @[4] { };
  ProgVar @[5] { };
  ProgVar @[6] { };
  ProgVar @[7] { };
  ProgVar @[8] { };
  ProgVar @[9] { };
  ProgVar @[10] { };
  ProgVar @[11] { };
  ProgVar @[12] { };
  ProgVar @[13] { };
 };

 Function_List @.functions = [1] {
  Function @[0] { 
   ProgVar_List @.args = [0] {
   };

   ProgEl_List @.fun_code = [10] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [19] {
      ProgVar @[0] { };
      ProgVar @[1] { };
      ProgVar @[2] { };
      ProgVar @[3] { };
      ProgVar @[4] { };
      ProgVar @[5] { };
      ProgVar @[6] { };
      ProgVar @[7] { };
      ProgVar @[8] { };
      ProgVar @[9] { };
      ProgVar @[10] { };
      ProgVar @[11] { };
      ProgVar @[12] { };
      ProgVar @[13] { };
      ProgVar @[14] { };
      ProgVar @[15] { };
      ProgVar @[16] { };
      ProgVar @[17] { };
      ProgVar @[18] { };
     };
    };
    AssignExpr @[1] { };
    AssignExpr @[2] { };
    AssignExpr @[3] { };
    AssignExpr @[4] { };
    MethodCall @[5] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    If @[6] { 
     ProgEl_List @.true_code = [2] {
      MethodCall @[0] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
      MethodCall @[1] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
     };
    };
    MethodCall @[7] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    If @[8] { 
     ProgEl_List @.true_code = [25] {
      AssignExpr @[0] { };
      AssignExpr @[1] { };
      AssignExpr @[2] { };
      AssignExpr @[3] { };
      AssignExpr @[4] { };
      AssignExpr @[5] { };
      MethodCall @[6] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
      MethodCall @[7] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      MethodCall @[8] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      AssignExpr @[9] { };
      MethodCall @[10] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      PrintVar @[11] { };
      MemberMethodCall @[12] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      PrintVar @[13] { };
      Comment @[14] { };
      ForLoop @[15] { 
       ProgEl_List @.loop_code = [1] {
	ForLoop @[0] { 
	 ProgEl_List @.loop_code = [1] {
	  ForLoop @[0] { 
	   ProgEl_List @.loop_code = [1] {
	    ForLoop @[0] { 
	     ProgEl_List @.loop_code = [5] {
	      AssignExpr @[0] { };
	      MethodCall @[1] { 
	       ProgArg_List @.meth_args = [3] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
	       };
	      };
	      MethodCall @[2] { 
	       ProgArg_List @.meth_args = [3] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
	       };
	      };
	      AssignExpr @[3] { };
	      MethodCall @[4] { 
	       ProgArg_List @.meth_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	       };
	      };
	     };
	    };
	   };
	  };
	 };
	};
       };
      };
      Comment @[16] { };
      MethodCall @[17] { 
       ProgArg_List @.meth_args = [3] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
       };
      };
      MethodCall @[18] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
      MethodCall @[19] { 
       ProgArg_List @.meth_args = [10] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
	ProgArg @[4] { };
	ProgArg @[5] { };
	ProgArg @[6] { };
	ProgArg @[7] { };
	ProgArg @[8] { };
	ProgArg @[9] { };
       };
      };
      MethodCall @[20] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
      MethodCall @[21] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
      MethodCall @[22] { 
       ProgArg_List @.meth_args = [10] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
	ProgArg @[4] { };
	ProgArg @[5] { };
	ProgArg @[6] { };
	ProgArg @[7] { };
	ProgArg @[8] { };
	ProgArg @[9] { };
       };
      };
      ForLoop @[23] { 
       ProgEl_List @.loop_code = [4] {
	MethodCall @[0] { 
	 ProgArg_List @.meth_args = [3] {
	  ProgArg @[0] { };
	  ProgArg @[1] { };
	  ProgArg @[2] { };
	 };
	};
	MethodCall @[1] { 
	 ProgArg_List @.meth_args = [0] {
	 };
	};
	MethodCall @[2] { 
	 ProgArg_List @.meth_args = [3] {
	  ProgArg @[0] { };
	  ProgArg @[1] { };
	  ProgArg @[2] { };
	 };
	};
	AssignExpr @[3] { };
       };
      };
      MethodCall @[24] { 
       ProgArg_List @.meth_args = [4] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
       };
      };
     };
    };
    Else @[9] { 
     ProgEl_List @.true_code = [1] {
      PrintExpr @[0] { };
     };
    };
   };
  };
 };

 ProgEl_List @.init_code = [1] {
  LocalVars @[0] { 
   ProgVar_List @.local_vars = [0] {
   };
  };
 };

 ProgEl_List @.prog_code = [2] {
  LocalVars @[0] { 
   ProgVar_List @.local_vars = [0] {
   };
  };
  MethodCall @[1] { 
   ProgArg_List @.meth_args = [6] {
    ProgArg @[0] { };
    ProgArg @[1] { };
    ProgArg @[2] { };
    ProgArg @[3] { };
    ProgArg @[4] { };
    ProgArg @[5] { };
   };
  };
 };
};
Program .projects[0].programs.gp[2][16] {
 UserDataItem_List @*(.user_data_) {
  name=;
  el_typ=UserData_DocLink;
  el_def=0;
  UserData_DocLink @[0] {name="DocLink": doc=.doc$$: };
 };
 name="WtBasedRField_V3";
 short_nm="WBsRFl";
 tags="Statistic, Receptive Field";
 desc="Computes a weight based receptive field (RF) using WtBasedRF object type -- The calculation is based on V3 or V4 wts that are developed during training in combination with the RF data previously generated for layer V2 (see the program WtBasedRField_V2)";
 version {
  major=0;
  minor=0;
  step=0;
 };
 author="John Rohrlich";
 email="john.rohrlich@colorado.edu";
 flags=0;
 stop_step_cond {
  expr=;
 };
 objs {
  name="objs";
  el_typ=ActBasedRF;
  el_def=0;
  DataTable @[0] {
   name="WtRFData";
   desc="receptive field data -- could move this into AnalysisData if you want..";
   data {
    name="data";
    el_typ=float_Data;
    el_def=0;
    float_Data @[0] {
     name="values";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 128;128;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=0;
     matrix_col_width=10;
    };
    float_Data @[1] {
     name="values_x_act";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 128;128;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=0;
     matrix_col_width=10;
    };
    int_Data @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_1";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
     };
     name="count";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 128;128;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=0;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=128;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
  };
  WtBasedRF @[1] {
   name="WtBasedRF_Analysis";
   network=.networks["LVisNet"]$$<LeabraNetwork,LVisNet>;
   trg_layer=.networks["LVisNet"].layers.gp["V4"]["V4F16"]$$<LeabraLayer,V4F16>;
   snd_layer=.networks["LVisNet"].layers.gp["V2"]["V2mF16"]$$<LeabraLayer,V2mF16>;
   dt_trg_rf=.objs[0]$$;
   dt_snd_rf=.programs.gp["AnalysisProgs"]["WtBasedRField_V2"].objs["WtRFData"]$$<DataTable,WtRFData>;
   trg_wt_threshold=0;
  };
  DataTable @[2] {
   name="trg_layer_wts";
   desc=;
   data {
    name="data";
    el_typ=float_Data;
    el_def=0;
    float_Data @[0] {
     name="V2mF16";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 80;80;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=0;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=80;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
  };
  DataTable @[3] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_271";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=0: val_type_fixed=0: };
   };
   name="TrgLayerActivations";
   desc=;
   data {
    name="data";
    el_typ=float_Data;
    el_def=0;
    float_Data @[0] {
     name="V4F16_act";
     col_flags=PIN|SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 10;10;4;4;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [4] ;;;;     };
     width=0;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=50;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
  };
  DataTable @[4] {
   name="Composite";
   desc=;
   data {
    name="data";
    el_typ=float_Data;
    el_def=0;
    float_Data @[0] {
     name="values";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 128;128;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=0;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=128;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
  };
  DataTable @[5] {
   name="drum_set";
   desc=;
   data {
    name="data";
    el_typ=float_Data;
    el_def=0;
    float_Data @[0] {
     name="values";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 128;128;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=128;
     matrix_col_width=10;
     ar {
      name="ar";
     [128 128 0]      };
    };
   };
   data_flags=SAVE_ROWS|AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=128;
   keygen 4 0=0;
   row_indexes {
    name="row_indexes";
   [0]    };
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
  };
  DataTable @[6] {
   name="Individuals";
   desc=;
   data {
    name="data";
    el_typ=float_Data;
    el_def=0;
    float_Data @[0] {
     name="values";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 128;128;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=0;
     matrix_col_width=10;
    };
   };
   data_flags=AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=128;
   keygen 4 0=0;
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
  };
  DataTable @[7] {
   name="Individuals_high_act";
   desc=;
   data {
    name="data";
    el_typ=float_Data;
    el_def=0;
    String_Data @[0] {
     name="image";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=16;
     matrix_col_width=10;
     ar {
      name="ar";
     [1] "drum_set";     };
    };
    int_Data @[1] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_1";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
     };
     name="unit_no";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=0;
     cell_geom{ 1;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [0]      };
     width=8;
     matrix_col_width=10;
     ar {
      name="ar";
     [1] 555;     };
    };
    float_Data @[2] {
     name="values";
     col_flags=SAVE_DATA|AUTO_WIDTH;
     is_matrix=1;
     cell_geom{ 128;128;     };
     calc_expr {
      expr=;
     };
     dim_names {
      name="dim_names";
     [2] ;;     };
     width=128;
     matrix_col_width=10;
     ar {
      name="ar";
     [128 128 1] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;2.4342501e-07;1.76581e-07;8.1195601e-08;-2.5045299e-08;-1.21347e-07;-1.90126e-07;0;
0;3.1954599e-07;3.1853699e-07;3.0941399e-07;2.9475501e-07;2.7641801e-07;2.55207e-07;0;0;-1.5499501e-07;
-1.04124e-07;-3.3083101e-08;4.5373302e-08;1.16228e-07;1.66691e-07;0;0;0;0;0;
0;0;0;0;0;-7.8344998e-14;-6.5370601e-14;-4.8414299e-14;-2.9858701e-14;-1.20136e-14;
3.28658e-15;0;0;-1.65952e-08;2.0847899e-08;6.78343e-08;1.17504e-07;1.61656e-07;1.92893e-07;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;4.8779901e-07;5.6629801e-07;
3.6702801e-07;3.3401901e-07;2.5329999e-07;1.3636399e-07;4.8924198e-09;-1.15477e-07;1.48469e-07;1.75837e-07;2.16072e-07;2.8673901e-07;
5.1414298e-07;5.1272002e-07;4.9494503e-07;4.6333e-07;1.5331401e-07;6.0820902e-08;2.5018599e-07;1.871e-07;-1.26944e-07;-3.89748e-08;
5.79914e-08;1.45366e-07;2.07345e-07;2.35367e-07;3.9545199e-07;3.41597e-07;0;0;0;0;
4.9558602e-15;-1.31797e-15;-4.49354e-16;8.2306496e-15;2.39079e-14;4.4462701e-14;6.6947899e-14;8.8224302e-14;-1.38556e-08;-1.2442e-08;
-1.88034e-08;1.64531e-08;6.7109603e-08;1.27479e-07;1.88396e-07;2.3941499e-07;2.71586e-07;2.7983199e-07;5.2811998e-07;4.5750301e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;5.1791301e-07;6.5761799e-07;7.6101497e-07;4.9544201e-07;4.5914101e-07;
3.63753e-07;2.22899e-07;6.2691697e-08;2.5105899e-07;2.6210199e-07;3.2298399e-07;3.9708999e-07;5.0910899e-07;6.1327103e-07;7.90885e-07;
7.7159501e-07;4.7321799e-07;3.2721999e-07;1.87691e-07;4.3534999e-07;3.14875e-07;2.4296301e-07;-4.49736e-08;7.2389e-08;1.7787799e-07;
2.5237401e-07;2.85581e-07;4.7848903e-07;4.1203e-07;3.1671499e-07;0;0;1.8547901e-13;1.83331e-13;1.83745e-13;
1.89369e-13;2.0163e-13;2.20279e-13;2.43371e-13;2.6766799e-13;-6.03502e-09;-5.8237699e-09;-1.51354e-09;2.55671e-08;7.4777397e-08;
1.40322e-07;2.1428799e-07;2.8495299e-07;3.3964699e-07;3.6820799e-07;3.65765e-07;6.6769002e-07;5.5903399e-07;4.26144e-07;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;5.1731001e-07;7.00513e-07;8.7869e-07;1.01308e-06;6.61944e-07;6.2351802e-07;5.1292602e-07;3.46024e-07;
4.0716799e-07;3.7966001e-07;4.14966e-07;5.1694701e-07;6.3354997e-07;7.98109e-07;9.47025e-07;1.05e-06;9.17313e-07;7.5748397e-07;
5.6103602e-07;3.6373601e-07;6.8573001e-07;4.9152601e-07;3.6335999e-07;3.0210899e-07;8.8031697e-08;2.12736e-07;3.0040101e-07;3.38912e-07;
5.6628301e-07;4.86082e-07;3.7206499e-07;2.53172e-07;4.39602e-13;4.6342498e-13;4.8194001e-13;4.9790798e-13;5.1424099e-13;5.3306301e-13;
5.5493397e-13;5.7852399e-13;5.3563101e-09;5.8199401e-09;9.2421102e-09;1.7612299e-08;9.7415104e-08;1.62343e-07;2.4296e-07;3.28856e-07;
4.0576199e-07;4.5914001e-07;4.7826302e-07;4.5928201e-07;8.1226699e-07;6.5815101e-07;4.8309698e-07;3.1323501e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;4.9458498e-07;
6.9599201e-07;9.2480701e-07;1.14761e-06;1.31825e-06;8.6349201e-07;8.2390198e-07;6.9761097e-07;6.3996202e-07;5.6150401e-07;5.37701e-07;
5.9659101e-07;7.42353e-07;9.0598002e-07;1.13074e-06;1.33232e-06;1.32532e-06;1.28076e-06;1.08961e-06;8.3908901e-07;5.78033e-07;
9.9040199e-07;7.1226901e-07;5.1942902e-07;4.16034e-07;3.8419901e-07;2.4844701e-07;3.4952399e-07;3.9332599e-07;6.5556799e-07;5.6105699e-07;
4.2776901e-07;2.8941699e-07;1.70447e-07;8.4969298e-13;9.0178001e-13;9.4357399e-13;9.7754704e-13;1.00622e-12;1.03111e-12;1.78319e-08;
2.0079399e-08;2.4181601e-08;3.1948701e-08;4.52963e-08;1.9649499e-07;2.77022e-07;3.7063799e-07;4.6447499e-07;5.4212097e-07;5.8788697e-07;
5.9138898e-07;5.5067898e-07;9.45544e-07;7.4282298e-07;5.26159e-07;3.2556301e-07;1.6197301e-07;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;4.5552099e-07;6.5040501e-07;8.9668401e-07;1.17479e-06;
1.44557e-06;1.65506e-06;1.08548e-06;1.04481e-06;9.4094901e-07;8.2705299e-07;7.3037398e-07;7.0218198e-07;7.7752202e-07;9.6207896e-07;
1.17044e-06;1.45641e-06;1.62845e-06;1.72644e-06;1.68305e-06;1.50127e-06;1.12403e-06;8.0157901e-07;1.31528e-06;9.5465896e-07;
6.9793202e-07;5.5270198e-07;4.9860301e-07;4.97776e-07;3.9745601e-07;4.4644401e-07;7.42623e-07;6.33985e-07;4.8176702e-07;3.2439701e-07;
1.89613e-07;9.0803603e-08;1.40436e-12;1.48052e-12;1.53768e-12;1.57826e-12;2.83431e-08;3.33226e-08;3.95166e-08;4.8171099e-08;
6.0972603e-08;7.9574399e-08;3.1445001e-07;4.0765599e-07;5.0940798e-07;6.0485502e-07;6.7628201e-07;7.0789099e-07;6.9063998e-07;6.2523799e-07;
1.0441501e-06;7.9640103e-07;5.4507001e-07;3.2239399e-07;1.48767e-07;3.1002099e-08;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;4.0100201e-07;5.7094297e-07;8.02643e-07;1.09293e-06;1.4191201e-06;1.7362401e-06;1.98256e-06;
1.3003e-06;1.24906e-06;1.14621e-06;1.00236e-06;8.7669201e-07;8.3086502e-07;9.0803002e-07;1.11694e-06;1.35911e-06;1.65933e-06;
1.91354e-06;2.0432101e-06;2.0079999e-06;1.80871e-06;1.48716e-06;9.86896e-07;1.60129e-06;1.17589e-06;8.69225e-07;6.91872e-07;
6.21163e-07;6.1352199e-07;6.2147097e-07;4.95763e-07;8.2362101e-07;7.0189401e-07;5.3207401e-07;3.5703999e-07;2.0761e-07;9.8518001e-08;
3.0458398e-08;2.0186799e-12;2.1000901e-12;3.4295098e-08;4.1966999e-08;5.0819501e-08;6.1448603e-08;7.49097e-08;9.2577601e-08;1.15675e-07;
4.33548e-07;5.3315199e-07;6.3535703e-07;7.2430498e-07;7.8219199e-07;7.94313e-07;7.5386203e-07;6.6454498e-07;1.07977e-06;7.9888298e-07;
5.2697698e-07;2.9625099e-07;1.2471401e-07;1.543e-08;-4.0124402e-08;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;4.64972e-07;6.5858598e-07;9.2100998e-07;1.24831e-06;1.61478e-06;1.9700501e-06;2.24519e-06;1.47067e-06;1.43046e-06;
1.29994e-06;1.11701e-06;9.4922399e-07;8.6815902e-07;9.2560299e-07;1.13508e-06;1.39132e-06;1.72367e-06;2.0140899e-06;2.17402e-06;
2.15561e-06;1.95654e-06;1.6205501e-06;1.0748701e-06;1.77194e-06;1.31763e-06;9.8999794e-07;8.0132901e-07;7.2702801e-07;7.19338e-07;
7.2625897e-07;5.3892802e-07;8.9500401e-07;7.6206499e-07;5.7692199e-07;3.86426e-07;2.2414901e-07;1.06019e-07;3.26228e-08;2.4292901e-12;
2.5288901e-12;4.38108e-08;5.4758999e-08;6.7426797e-08;8.2177401e-08;9.9697203e-08;1.2088501e-07;1.46438e-07;5.2852801e-07;6.2504e-07;
7.1789998e-07;7.9163902e-07;8.2979699e-07;8.1987099e-07;7.5779701e-07;6.50049e-07;1.0247099e-06;7.3085403e-07;4.5883701e-07;2.38317e-07;
8.3302503e-08;-7.4854203e-09;-4.6229601e-08;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;2.4289301e-07;
3.4644199e-07;4.8708e-07;6.62503e-07;8.5857602e-07;1.0478e-06;1.19273e-06;7.7912699e-07;6.4177698e-07;5.7412001e-07;4.8625299e-07;
4.07611e-07;3.6918101e-07;3.93862e-07;4.7571501e-07;5.9766597e-07;7.9057702e-07;9.36047e-07;1.00915e-06;9.8964404e-07;8.8272702e-07;
7.1632002e-07;5.0455998e-07;8.7570101e-07;6.2514198e-07;4.5885901e-07;3.55596e-07;3.0646601e-07;2.9194501e-07;2.8985599e-07;2.8698099e-07;
4.7689201e-07;4.0677699e-07;3.0786899e-07;2.06048e-07;1.19313e-07;5.6203302e-08;1.7037801e-08;1.2884399e-12;1.34033e-12;2.29898e-08;
2.8510801e-08;3.48582e-08;4.2168399e-08;5.07092e-08;6.0832903e-08;8.1900303e-08;2.8601801e-07;3.5614201e-07;3.82856e-07;3.9910501e-07;
3.9767099e-07;3.7302101e-07;3.24073e-07;2.8427201e-07;4.3030701e-07;2.8999699e-07;1.66048e-07;7.0886202e-08;8.9987999e-09;-2.23672e-08;
-3.0667099e-08;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1.5439601e-07;2.24647e-07;3.2798999e-07;4.6993799e-07;
6.4795199e-07;8.4696302e-07;8.5617199e-07;9.4711299e-07;6.1203002e-07;5.6998499e-07;4.8394099e-07;3.73972e-07;2.7025101e-07;2.05169e-07;
2.2795e-07;3.1841901e-07;4.18139e-07;5.7113698e-07;7.0805203e-07;7.8225003e-07;7.7235399e-07;6.8273101e-07;4.93286e-07;3.31038e-07;
6.1863801e-07;4.6570599e-07;3.72366e-07;2.9017801e-07;2.56569e-07;2.5320301e-07;2.5969999e-07;2.58699e-07;2.6726801e-07;2.4227401e-07;
3.2285101e-07;2.16383e-07;1.25634e-07;5.9582501e-08;1.81101e-08;-3.7060599e-09;1.5544e-08;2.0654401e-08;2.78323e-08;3.4381099e-08;
4.1679101e-08;4.9752099e-08;7.5282898e-08;8.4514603e-08;2.7912901e-07;3.0222299e-07;3.43197e-07;3.44726e-07;3.3062301e-07;2.9728599e-07;
2.4497299e-07;1.78927e-07;2.1694601e-07;8.87309e-08;7.4174501e-08;3.2098699e-09;-3.6879001e-08;-5.0527198e-08;-4.5843201e-08;-3.1651101e-08;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1.14386e-07;1.77011e-07;2.72704e-07;4.0716699e-07;5.7777697e-07;5.6630603e-07;
6.7521501e-07;7.40399e-07;4.6311399e-07;4.04475e-07;3.01093e-07;1.71984e-07;4.6050602e-08;3.2476901e-08;2.02633e-08;7.9179102e-08;
1.46202e-07;2.6960399e-07;3.7636801e-07;4.17237e-07;4.10192e-07;3.24323e-07;1.9938101e-07;6.7547397e-08;3.1365201e-07;2.1725501e-07;
1.6099099e-07;1.6388e-07;1.54937e-07;1.69155e-07;1.88012e-07;1.97674e-07;1.9945099e-07;1.9185801e-07;1.57619e-07;2.23998e-07;
1.30674e-07;6.2107802e-08;1.87817e-08;-4.3897699e-09;1.1403e-08;1.6030601e-08;2.15821e-08;2.8656199e-08;3.4702602e-08;4.8740901e-08;
5.6846002e-08;6.3355401e-08;2.05501e-07;2.1739e-07;2.24752e-07;2.3856799e-07;2.18933e-07;1.8610901e-07;1.40625e-07;8.70157e-08;
6.6139698e-08;-2.50235e-08;-8.5970399e-08;-7.8755903e-08;-9.33995e-08;-8.7608598e-08;-6.9319697e-08;-4.6422201e-08;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;5.6900799e-08;1.06883e-07;1.88668e-07;3.08072e-07;2.3108799e-07;3.1650899e-07;3.8399e-07;4.1141399e-07;
2.2782299e-07;1.53597e-07;3.8541899e-08;-1.00768e-07;-6.8064203e-08;-1.51885e-07;-1.8237699e-07;-1.5513901e-07;-1.3066e-07;-5.4054301e-08;
8.4347e-09;3.3430599e-08;1.15875e-09;-7.5612803e-08;-1.76142e-07;-2.72726e-07;-1.09816e-07;-1.3399401e-07;-1.25238e-07;-9.2970502e-08;
1.01561e-08;4.4150202e-08;7.8166003e-08;1.01585e-07;9.8416699e-08;1.1388e-07;1.02514e-07;7.73287e-08;1.33559e-07;6.3487697e-08;
1.87641e-08;-5.6960401e-09;4.7799098e-09;8.3000096e-09;1.25612e-08;1.7041501e-08;1.17649e-08;1.7374299e-08;2.13569e-08;2.37309e-08;
7.5238802e-08;7.8281197e-08;8.1029e-08;8.1882099e-08;7.74534e-08;5.8230199e-08;3.1964799e-08;1.00723e-09;-5.8779399e-08;-1.05896e-07;
-1.29672e-07;-1.26967e-07;-1.5348e-07;-1.29128e-07;-9.83324e-08;-6.7516403e-08;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-7.3136399e-09;2.73943e-08;9.1647202e-08;-6.7922997e-08;-3.7030201e-08;-8.4304004e-09;3.94621e-09;-1.51223e-08;-7.10912e-08;-1.5554799e-07;
-2.71169e-07;-1.28583e-07;-2.16177e-07;-2.8002401e-07;-3.09369e-07;-3.04748e-07;-3.27576e-07;-3.1220301e-07;-3.1716999e-07;-2.19843e-07;
-2.9063401e-07;-4.9312899e-07;-5.7743398e-07;-6.4298399e-07;-6.0803598e-07;-5.54503e-07;-4.72115e-07;-3.7693201e-07;-2.8289799e-07;-1.06124e-07;
-5.8239699e-08;-2.07695e-08;-3.7362899e-08;5.4789999e-09;2.32169e-08;2.39018e-08;1.61389e-08;6.3359202e-08;1.7689301e-08;-7.8881399e-09;
-3.4779799e-09;-1.47908e-09;9.8088204e-10;-2.82807e-08;-2.76249e-08;-2.77554e-08;-2.9913899e-08;-3.2681498e-08;-1.04249e-07;-1.04208e-07;
-9.5767902e-08;-8.0193303e-08;-6.19074e-08;-6.0534198e-08;-5.4546501e-08;-5.3956899e-08;-1.13476e-07;-1.1764e-07;-1.12643e-07;-9.4859303e-08;
-6.6105201e-08;-1.67492e-07;-1.27116e-07;-9.0367799e-08;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;-6.5620497e-08;-4.58915e-08;
-2.68816e-07;-3.0222699e-07;-3.36602e-07;-3.76673e-07;-4.2856101e-07;-4.9765703e-07;-3.9847001e-07;-4.8327598e-07;-2.30431e-07;-2.6149701e-07;
-2.8412001e-07;-2.94366e-07;-2.95077e-07;-2.96145e-07;-3.6555301e-07;-4.21593e-07;-3.2186301e-07;-4.2993301e-07;-5.63161e-07;-6.9897402e-07;
-9.4364702e-07;-9.9055103e-07;-1.12669e-06;-1.00075e-06;-8.4441598e-07;-6.8343797e-07;-5.3531198e-07;-4.08864e-07;-2.03851e-07;-1.5574e-07;
-2.05188e-07;-1.33222e-07;-8.2448601e-08;-4.9848101e-08;-3.1111998e-08;-2.18506e-08;1.52897e-08;-1.10797e-08;-1.22021e-08;-1.18091e-08;
-5.9080801e-08;-6.6159302e-08;-7.42533e-08;-8.3512397e-08;-9.29736e-08;-1.01333e-07;-3.1708299e-07;-3.1150699e-07;-2.84245e-07;-2.37807e-07;
-1.79948e-07;-1.21125e-07;-9.3764001e-08;-5.54124e-08;-6.0407601e-08;-3.0970899e-08;-1.35865e-08;-4.60363e-10;1.23322e-08;2.47671e-08;
-1.4873901e-07;-1.09102e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;-1.0735e-07;-3.4944901e-07;-4.34073e-07;-5.2978402e-07;
-6.3594803e-07;-7.50617e-07;-8.69659e-07;-9.8605301e-07;-7.1499102e-07;-4.1764801e-07;-3.77617e-07;-3.1533301e-07;-2.37812e-07;-1.59523e-07;
-1.01525e-07;-8.74021e-08;-1.9805201e-07;-1.20598e-07;-2.7590599e-07;-4.80577e-07;-7.0291202e-07;-9.0693197e-07;-1.06219e-06;-1.27206e-06;
-1.61587e-06;-1.43131e-06;-1.20842e-06;-9.84248e-07;-7.8261399e-07;-6.1346998e-07;-4.7664e-07;-2.8821901e-07;-3.9679301e-07;-2.98271e-07;
-2.12587e-07;-1.44358e-07;-9.44558e-08;-6.1167903e-08;-4.1350098e-08;-1.5152199e-08;-2.0215801e-08;-7.4225902e-08;-8.8910497e-08;-1.05496e-07;
-1.2402499e-07;-1.4358601e-07;-1.61936e-07;-1.75544e-07;-5.4177002e-07;-5.2113302e-07;-4.6158499e-07;-3.6863801e-07;-2.5577501e-07;-1.4076601e-07;
-4.04346e-08;9.4315196e-09;1.18913e-07;1.66373e-07;1.74954e-07;1.6050799e-07;1.36011e-07;1.0952e-07;8.4706997e-08;-1.18639e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;-4.3711401e-07;-5.7031099e-07;-7.28072e-07;-9.05962e-07;-1.09395e-06;
-1.27586e-06;-1.43056e-06;-9.3359898e-07;-5.8922802e-07;-4.5726301e-07;-2.7679201e-07;-7.12391e-08;1.23842e-07;2.6596399e-07;3.14593e-07;
1.69093e-07;2.04334e-07;-4.6866699e-08;-3.64584e-07;-6.9700502e-07;-9.9158501e-07;-1.20857e-06;-1.36071e-06;-2.04088e-06;-1.81613e-06;
-1.53864e-06;-1.2586e-06;-1.00811e-06;-7.9998398e-07;-6.3277599e-07;-3.89804e-07;-5.9787601e-07;-4.7941199e-07;-3.6139201e-07;-2.5698699e-07;
-1.734e-07;-1.12649e-07;-7.2785802e-08;-2.4693801e-08;-3.07558e-08;-9.2713897e-08;-1.15457e-07;-1.4195599e-07;-1.71541e-07;-2.0197599e-07;
-2.29175e-07;-2.4757e-07;-7.5481103e-07;-7.1080001e-07;-6.0820099e-07;-4.5704999e-07;-2.7850601e-07;-9.9541097e-08;5.4349499e-08;1.38803e-07;
4.15697e-07;4.6314801e-07;4.41759e-07;3.7866999e-07;2.9840399e-07;2.18517e-07;1.48897e-07;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;-1.4216501e-07;-1.9470301e-07;-2.5945599e-07;-3.34014e-07;-4.12768e-07;-4.8683597e-07;-5.9634198e-07;
-3.81609e-07;-1.73136e-07;-1.04437e-07;-2.2688299e-08;6.6228097e-08;1.52574e-07;2.22148e-07;2.84094e-07;2.2753601e-07;3.8477401e-07;
2.4870701e-07;7.6388801e-08;-1.04292e-07;-2.6623701e-07;-3.8957199e-07;-4.8883498e-07;-7.9482299e-07;-6.8018198e-07;-5.9808798e-07;-5.2918898e-07;
-4.7717901e-07;-4.34968e-07;-3.9140701e-07;-1.6391699e-07;-2.63011e-07;1.9071101e-07;2.0136901e-07;1.93639e-07;1.70739e-07;1.3828399e-07;
1.02524e-07;-9.78737e-09;-1.16542e-08;-3.21266e-08;-3.77978e-08;-3.8792301e-08;-3.8905601e-08;-4.2384901e-08;-5.1568001e-08;-1.03246e-07;
-3.1137299e-07;-5.0538398e-07;-4.02783e-07;-2.6517699e-07;-1.10969e-07;3.8424201e-08;1.63415e-07;1.05145e-07;2.6430899e-07;2.7476699e-07;
2.5233101e-07;2.1038601e-07;1.61304e-07;1.14208e-07;7.4366802e-08;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;2.85002e-08;4.3770399e-08;
-5.5324399e-08;-1.35158e-07;-1.95943e-07;-2.73209e-07;-3.6345e-07;-4.5847401e-07;-4.8132699e-07;-5.0174299e-07;-1.6930299e-07;-1.13757e-07;
-7.0580001e-08;4.62088e-08;1.72396e-07;2.92919e-07;5.9599802e-07;6.7403801e-07;6.6524802e-07;5.9363299e-07;4.3784101e-07;2.26043e-07;
1.31155e-09;-2.02178e-07;-3.27018e-07;-3.7241699e-07;-8.2520501e-07;-7.7564601e-07;-6.8023297e-07;-6.1305701e-07;-5.6281499e-07;-5.2186198e-07;
-1.7184399e-07;-7.2737997e-08;4.3373699e-08;1.57006e-07;3.75817e-07;3.7487999e-07;3.4833201e-07;3.02844e-07;2.84267e-07;2.18889e-07;
2.65989e-07;1.76303e-07;-1.33074e-08;-1.17738e-08;-1.05412e-08;-1.40521e-08;-1.17262e-07;-1.42091e-07;-4.72018e-07;-4.65829e-07;
-4.7431499e-07;-3.0567799e-07;-1.15406e-07;6.8774199e-08;2.2149599e-07;3.25256e-07;7.34911e-07;7.32567e-07;3.5916e-07;2.9518401e-07;
2.23501e-07;1.56184e-07;1.00176e-07;8.5495699e-08;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;2.75916e-08;4.7025502e-08;7.1307198e-08;-4.25403e-08;-8.7552799e-08;
-1.7882699e-07;-2.6371401e-07;-3.6422401e-07;-3.6112999e-07;-4.1075401e-07;-4.31068e-07;-1.31519e-07;-5.6751901e-08;3.2724099e-08;1.25865e-07;
2.71342e-07;5.5101901e-07;7.1675998e-07;8.16056e-07;8.11966e-07;7.4021898e-07;5.7031002e-07;3.7247901e-07;1.15142e-07;-2.4475099e-08;
-1.54909e-07;-2.6952301e-07;-8.2358798e-07;-8.0303101e-07;-7.5949401e-07;-6.7916102e-07;-6.44284e-07;-3.1952399e-07;-1.95933e-07;-6.7823201e-08;
1.27216e-07;2.8758399e-07;4.2391801e-07;6.5105399e-07;6.2479802e-07;6.0588701e-07;5.20036e-07;4.3734599e-07;5.87312e-07;4.4517199e-07;
3.3993899e-07;4.01668e-08;5.0127099e-08;-1.8980399e-08;-4.8228301e-08;-7.8308801e-08;-2.9928199e-07;-3.0915001e-07;-2.4750901e-07;-3.3894199e-07;
-1.25639e-07;8.1655898e-08;2.5287201e-07;3.67284e-07;8.24224e-07;8.0947598e-07;7.0419202e-07;3.6881701e-07;2.78019e-07;1.93814e-07;
1.48251e-07;9.2126299e-08;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;2.3028999e-08;4.50577e-08;7.4386698e-08;1.10027e-07;-2.17258e-08;-6.5086503e-08;-1.34872e-07;-2.33431e-07;
-1.35618e-07;-1.9468401e-07;-2.34572e-07;-2.4964399e-07;-3.8773699e-08;2.83957e-08;1.2598601e-07;2.2219e-07;3.5332999e-07;5.5061298e-07;
7.20922e-07;8.2955e-07;8.41055e-07;7.76229e-07;6.2189099e-07;3.8011601e-07;4.4106901e-07;2.5145599e-07;6.35332e-08;-7.3069103e-08;
-7.3581998e-07;-7.58314e-07;-7.5936902e-07;-7.5978198e-07;-4.90123e-07;-3.6204699e-07;-2.36446e-07;-7.8809997e-08;2.0766601e-07;4.32966e-07;
6.3371903e-07;7.7165402e-07;1.03076e-06;9.5402697e-07;8.6275799e-07;7.5014901e-07;1.06213e-06;8.5521401e-07;6.9569802e-07;5.7674498e-07;
1.24468e-07;1.15217e-07;9.1486498e-08;5.92999e-08;8.8245798e-08;4.0442899e-08;5.81949e-08;1.4427e-07;-1.4891501e-07;6.1888699e-08;
2.3651199e-07;3.5244301e-07;7.9452201e-07;7.7284102e-07;6.5886599e-07;4.94137e-07;3.1770301e-07;2.3871999e-07;1.5868e-07;9.8114299e-08;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1.6550599e-08;
3.88107e-08;7.0712403e-08;1.11999e-07;1.60559e-07;6.1983898e-09;-3.2803499e-08;-9.9298397e-08;1.18188e-07;9.57371e-08;7.0540999e-08;
5.6095999e-08;5.2718899e-08;1.15403e-07;1.5955e-07;2.2214699e-07;1.5494101e-07;2.59378e-07;4.3102199e-07;5.7397801e-07;6.7450998e-07;
7.1511698e-07;6.7072e-07;5.4474998e-07;7.3042099e-07;5.7368499e-07;5.5417098e-07;3.8194599e-07;2.3692201e-07;-5.3970899e-07;-6.18314e-07;
-6.8664701e-07;-6.2774899e-07;-5.4948401e-07;-4.2934499e-07;-3.0481601e-07;-1.23996e-07;2.4560299e-07;5.5424198e-07;8.4505399e-07;1.0594e-06;
1.1571e-06;1.40286e-06;1.2901e-06;1.14608e-06;1.68207e-06;1.4019799e-06;1.17876e-06;1.04616e-06;8.9664098e-07;3.1724099e-07;
3.1090701e-07;2.8211301e-07;7.2609203e-07;6.1416199e-07;5.4512901e-07;5.3358201e-07;5.70586e-07;-7.90147e-10;1.5697999e-07;2.6253099e-07;
6.0875499e-07;5.8973501e-07;4.8818799e-07;3.43338e-07;1.98386e-07;2.45867e-07;1.64711e-07;1.03013e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1.04862e-08;3.0745898e-08;6.2134902e-08;1.05567e-07;
1.59896e-07;2.21414e-07;3.9163499e-08;6.2182601e-09;3.3312099e-07;3.54078e-07;3.7048201e-07;4.2846301e-07;4.56989e-07;4.7276899e-07;
3.3074801e-07;3.3634501e-07;6.5006603e-08;7.3918201e-08;1.15117e-07;1.4405001e-07;2.6766901e-07;3.3958e-07;4.2322799e-07;4.1317099e-07;
8.2117401e-07;8.4205101e-07;7.8827202e-07;6.8620699e-07;8.0426599e-07;6.7060603e-07;-2.1940799e-07;-3.64237e-07;-4.7395301e-07;-5.0637499e-07;
-5.79041e-07;-5.7675499e-07;-4.16962e-07;-2.2722701e-07;1.86241e-07;5.9159902e-07;9.73748e-07;1.26288e-06;1.4792701e-06;1.5609e-06;
1.75151e-06;1.58028e-06;2.38955e-06;2.03837e-06;1.83091e-06;1.60989e-06;1.43834e-06;1.28265e-06;6.0342398e-07;5.8591598e-07;
1.60585e-06;1.40457e-06;1.20403e-06;1.0382799e-06;9.1787098e-07;8.3257697e-07;9.2744497e-09;9.0658901e-08;2.5211e-07;2.4726799e-07;
1.82853e-07;8.5266102e-08;-6.4596901e-09;-7.9334399e-08;1.65248e-07;1.05948e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;6.46456e-09;2.34428e-08;5.17859e-08;9.3617899e-08;1.49199e-07;2.1601301e-07;2.88351e-07;
7.4045502e-08;4.36992e-07;5.2831399e-07;6.2458901e-07;7.2342198e-07;8.1738e-07;9.4736799e-07;9.8987698e-07;5.9746901e-07;2.23619e-07;
9.9715699e-08;-2.59041e-08;-1.2752901e-07;-1.83559e-07;-2.30626e-07;-1.52254e-07;-1.4426e-08;5.1452599e-07;7.1289003e-07;8.4817498e-07;
9.6757901e-07;1.06342e-06;1.06837e-06;1.21951e-06;2.2577299e-07;1.9185601e-08;-1.38761e-07;-3.8506101e-07;-5.8494697e-07;-6.8772403e-07;
-6.5594202e-07;-4.1456099e-07;-3.2809702e-08;4.4999399e-07;9.2234097e-07;1.37803e-06;1.69568e-06;1.85167e-06;1.86368e-06;1.9711999e-06;
3.0712599e-06;2.76634e-06;2.4445901e-06;2.1969399e-06;2.00876e-06;1.85181e-06;1.68451e-06;9.4594401e-07;2.66028e-06;2.3523801e-06;
1.9839399e-06;1.6156999e-06;1.28633e-06;1.01019e-06;7.8371897e-07;-1.54883e-07;-2.60153e-07;-2.4060799e-07;-2.5676499e-07;-2.6597101e-07;
-2.69911e-07;-2.6119301e-07;-2.38159e-07;1.05868e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1.82685e-08;4.2330399e-08;7.9854402e-08;1.3245e-07;1.9920699e-07;2.7580299e-07;3.5430401e-07;1.88447e-07;5.6434499e-07;
7.2463803e-07;9.0711598e-07;1.10269e-06;1.2911501e-06;1.4397e-06;1.50675e-06;8.26796e-07;4.0805099e-07;1.59065e-07;-1.24237e-07;
-3.9634e-07;-6.1087599e-07;-7.3495403e-07;-6.63077e-07;-4.7931798e-07;1.6440499e-07;4.7182101e-07;8.0601302e-07;1.1363001e-06;1.42558e-06;
1.62633e-06;1.89945e-06;8.8092298e-07;5.6939598e-07;1.98135e-07;-2.05549e-07;-5.7006798e-07;-8.1873401e-07;-8.9290899e-07;-5.6210598e-07;
-5.1269399e-07;4.5766601e-08;6.79609e-07;1.25854e-06;1.69342e-06;1.94533e-06;2.02552e-06;2.2894701e-06;3.58478e-06;3.2702501e-06;
2.94288e-06;2.69682e-06;2.51655e-06;2.3675e-06;2.2117299e-06;1.32856e-06;3.7979801e-06;3.3466299e-06;2.79306e-06;2.1953099e-06;
1.62653e-06;1.13187e-06;7.3013501e-07;-4.5772299e-07;-8.97289e-07;-8.4758699e-07;-7.7269198e-07;-6.7908798e-07;-5.73975e-07;-4.6517999e-07;
-3.6038401e-07;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;5.57568e-08;
6.2337797e-08;7.5758798e-08;9.8647398e-08;1.31748e-07;1.7297999e-07;2.8058301e-07;1.4352599e-07;3.90617e-07;5.2465202e-07;6.83449e-07;
8.5776702e-07;1.0282899e-06;1.16552e-06;1.22439e-06;6.7894098e-07;3.00561e-07;1.10115e-07;-1.10068e-07;-3.2808401e-07;-5.1014803e-07;
-6.3011697e-07;-6.1424902e-07;-5.0664698e-07;8.8286797e-08;2.9504301e-07;5.2299498e-07;7.5427602e-07;9.6672704e-07;1.12876e-06;1.43342e-06;
7.1302901e-07;4.78088e-07;2.02016e-07;-1.10497e-07;-4.0980399e-07;-6.4114897e-07;-7.5949498e-07;-5.7994299e-07;-7.4358002e-07;-3.6928e-07;
7.56296e-08;5.1627001e-07;8.8163102e-07;1.1323e-06;1.26313e-06;1.3423499e-06;2.2189199e-06;2.06448e-06;1.88272e-06;1.74272e-06;
1.6392e-06;1.55397e-06;1.46456e-06;9.03363e-07;2.61475e-06;2.31033e-06;1.91812e-06;1.47783e-06;1.0484e-06;6.7086199e-07;
3.66899e-07;-3.7412599e-07;-7.4980198e-07;-7.0609701e-07;-6.2785602e-07;-5.2804802e-07;-4.1995801e-07;-3.1529899e-07;-2.22766e-07;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;9.6309797e-08;9.9468203e-08;6.4181499e-08;7.0001299e-08;7.8731297e-08;9.35636e-08;
1.16864e-07;1.4889e-07;1.53084e-07;1.85394e-07;3.4590599e-07;4.1647399e-07;6.2652902e-07;8.4259801e-07;1.08365e-06;1.32094e-06;
1.40162e-06;1.46503e-06;6.07245e-07;4.3762901e-07;1.54085e-07;-1.73031e-07;-5.08477e-07;-8.0116303e-07;-8.2105299e-07;-8.8498803e-07;
-4.65787e-07;-2.4075101e-07;8.2620801e-08;4.2667901e-07;7.8641898e-07;1.12283e-06;1.34595e-06;1.42509e-06;8.4431099e-07;6.37298e-07;
4.77166e-07;6.72269e-08;-3.4430499e-07;-6.8738001e-07;-8.9352898e-07;-7.9476899e-07;-1.13147e-06;-7.9995402e-07;-3.5865199e-07;1.35118e-07;
5.6386602e-07;8.7782303e-07;1.0669e-06;1.22238e-06;2.5004899e-06;2.2900599e-06;1.83239e-06;1.741e-06;1.6807101e-06;1.63186e-06;
1.55807e-06;1.45843e-06;2.9610201e-06;2.67005e-06;2.2035399e-06;1.65175e-06;1.10204e-06;6.1387101e-07;2.22948e-07;-5.7452301e-08;
-1.15427e-06;-1.0925e-06;-9.5810901e-07;-7.9431499e-07;-6.1644698e-07;-4.4699101e-07;-3.0134299e-07;-2.68642e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;6.3591997e-08;7.9692803e-08;8.4334197e-08;6.7905503e-08;7.7344602e-08;8.89113e-08;1.05253e-07;1.281e-07;1.27284e-07;
1.48947e-07;1.69412e-07;3.49847e-07;5.2688898e-07;6.7049501e-07;9.5847304e-07;1.25205e-06;1.43827e-06;1.6274701e-06;1.6981299e-06;
7.4795798e-07;5.1179001e-07;2.00893e-07;-2.16811e-07;-6.41155e-07;-8.4579602e-07;-1.06484e-06;-1.15798e-06;-7.3336599e-07;-4.8152202e-07;
-1.05728e-07;3.3792799e-07;7.9527302e-07;1.1534599e-06;1.43855e-06;1.62589e-06;1.0868901e-06;8.7371598e-07;5.3337698e-07;2.2533899e-07;
-2.7822401e-07;-7.0642699e-07;-8.5897602e-07;-1.00711e-06;-1.60993e-06;-1.30304e-06;-8.5503802e-07;-4.04622e-07;6.6033799e-08;4.4403899e-07;
7.6060701e-07;8.8362299e-07;2.12604e-06;1.98769e-06;1.83487e-06;1.54308e-06;1.54261e-06;1.53219e-06;1.50425e-06;1.42956e-06;
3.07348e-06;2.7700801e-06;2.2677e-06;1.70011e-06;1.0705101e-06;5.0731302e-07;5.7340799e-08;-2.5913999e-07;-1.47231e-06;-1.40575e-06;
-1.24627e-06;-1.01509e-06;-7.8400097e-07;-5.6327298e-07;-4.5542501e-07;-2.93787e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;-1.0990699e-09;1.94119e-08;
3.48243e-08;3.9676699e-08;5.84389e-08;7.2359001e-08;8.7834501e-08;1.06505e-07;1.08358e-07;1.21239e-07;1.32571e-07;1.38776e-07;
3.4359601e-07;5.25357e-07;7.7044598e-07;1.00591e-06;1.25801e-06;1.52865e-06;1.72853e-06;1.7953899e-06;8.23596e-07;5.72614e-07;
1.9822799e-07;-2.3306001e-07;-5.7919101e-07;-9.3593297e-07;-1.18072e-06;-1.28671e-06;-8.79129e-07;-6.0827e-07;-2.1930001e-07;2.77271e-07;
6.2740401e-07;1.04988e-06;1.43236e-06;1.6620299e-06;1.18423e-06;9.8800899e-07;6.4514501e-07;1.90495e-07;-1.94829e-07;-5.6973403e-07;
-9.5229802e-07;-1.154e-06;-2.02259e-06;-1.77256e-06;-1.36361e-06;-8.88263e-07;-5.0804698e-07;-5.3788099e-08;2.28538e-07;4.02892e-07;
1.50657e-06;1.44287e-06;1.36952e-06;1.30437e-06;1.23517e-06;1.28453e-06;1.29744e-06;1.25483e-06;2.8727e-06;2.5875599e-06;
2.08916e-06;1.47118e-06;9.5974406e-07;3.6800799e-07;-1.04617e-07;-4.3417299e-07;-1.66874e-06;-1.60943e-06;-1.43812e-06;-1.1969501e-06;
-9.04243e-07;-7.1365002e-07;-4.9244198e-07;-3.1637501e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;-7.80432e-08;-6.7298501e-08;-5.4552601e-08;-4.4280899e-08;-4.1324199e-08;
3.1275e-08;5.05229e-08;7.1477203e-08;8.4959503e-08;9.72367e-08;1.05363e-07;1.06873e-07;9.8981197e-08;3.2997599e-07;5.0724998e-07;
7.4911901e-07;9.8803605e-07;1.24069e-06;1.50015e-06;1.68835e-06;1.73977e-06;8.2026997e-07;5.7250099e-07;2.01174e-07;-1.67018e-07;
-5.6652902e-07;-9.2298802e-07;-1.15963e-06;-1.2599e-06;-8.8796901e-07;-6.2179998e-07;-2.38556e-07;1.41394e-09;4.57928e-07;8.63183e-07;
1.24541e-06;1.49487e-06;1.10204e-06;9.47947e-07;6.4535902e-07;2.4447701e-07;-1.5367699e-07;-5.44383e-07;-9.4380903e-07;-1.1813401e-06;
-2.25436e-06;-2.0852401e-06;-1.7587799e-06;-1.28828e-06;-8.4211001e-07;-6.5828101e-07;-3.50796e-07;-1.3875599e-07;7.4172902e-07;7.5612297e-07;
7.5621199e-07;7.60489e-07;7.7881799e-07;9.2438597e-07;9.7332497e-07;9.6253802e-07;2.3689599e-06;2.13105e-06;1.68855e-06;1.12816e-06;
5.4105902e-07;2.21446e-07;-2.3672401e-07;-5.5552903e-07;-1.72337e-06;-1.68256e-06;-1.52143e-06;-1.28216e-06;-1.0354599e-06;-7.3846797e-07;
-5.15316e-07;-3.3523801e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;-1.39729e-07;-1.50562e-07;-1.56295e-07;-1.5806501e-07;-1.5824899e-07;-1.59747e-07;-1.5447499e-08;9.9492299e-09;
3.92792e-08;6.0512498e-08;7.6160198e-08;8.2893699e-08;7.7696399e-08;5.86443e-08;3.1211499e-07;4.76145e-07;6.59276e-07;8.9583602e-07;
1.15065e-06;1.37208e-06;1.51022e-06;1.5366099e-06;7.3608601e-07;5.0849002e-07;2.12724e-07;-1.48751e-07;-5.1066502e-07;-8.1035199e-07;
-1.01374e-06;-1.09082e-06;-7.6761199e-07;-5.28204e-07;-4.65673e-07;-1.5701001e-07;2.13763e-07;6.1767599e-07;8.7437797e-07;1.11675e-06;
8.3507501e-07;7.4658402e-07;5.5511902e-07;2.6487501e-07;-1.2551e-07;-5.1922802e-07;-8.0579298e-07;-1.0513201e-06;-2.21148e-06;-2.1384999e-06;
-1.8435099e-06;-1.53675e-06;-1.20645e-06;-9.0310198e-07;-8.7378402e-07;-6.4484198e-07;-4.0403499e-08;4.2257099e-08;1.08787e-07;1.7478401e-07;
2.46279e-07;3.2078401e-07;5.8887002e-07;6.0215001e-07;1.62445e-06;1.45595e-06;1.11466e-06;6.70612e-07;1.99209e-07;-2.33419e-07;
-3.1718801e-07;-6.0500798e-07;-1.63857e-06;-1.62421e-06;-1.49254e-06;-1.27156e-06;-1.02878e-06;-7.8379702e-07;-5.2081202e-07;-3.4798799e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;-1.66047e-07;
-2.00664e-07;-2.33386e-07;-2.6193001e-07;-2.8455e-07;-3.00208e-07;-3.08446e-07;-7.9471597e-08;-3.9755001e-08;-6.1478e-09;2.52899e-08;
4.89099e-08;5.9318701e-08;5.26232e-08;2.75839e-08;2.92788e-07;4.12742e-07;5.71182e-07;7.5887198e-07;9.5703797e-07;1.1328e-06;
1.24096e-06;1.21351e-06;5.8269899e-07;4.00148e-07;1.53223e-07;-1.30798e-07;-4.0635899e-07;-6.2936402e-07;-7.6628902e-07;-8.1231798e-07;
-5.4532501e-07;-6.3059201e-07;-4.8773802e-07;-2.8015e-07;-5.6447199e-08;1.71415e-07;4.3381499e-07;5.5557598e-07;4.0913801e-07;4.3228101e-07;
3.5215299e-07;1.76675e-07;-6.5827003e-08;-3.3635001e-07;-5.8892999e-07;-7.5635103e-07;-1.8533e-06;-1.7923001e-06;-1.71151e-06;-1.54576e-06;
-1.34889e-06;-1.1526801e-06;-9.7526799e-07;-1.03195e-06;-7.20787e-07;-5.8902401e-07;-4.71352e-07;-3.5989399e-07;-2.5122799e-07;-1.4890399e-07;
-5.6836299e-08;2.29607e-07;7.3823099e-07;6.5108702e-07;4.4248799e-07;1.57767e-07;-1.5278e-07;-4.4242501e-07;-6.7533898e-07;-5.7791601e-07;
-1.43671e-06;-1.45193e-06;-1.33196e-06;-1.17227e-06;-9.7192901e-07;-7.6121597e-07;-5.6394703e-07;-3.5144001e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;-2.04218e-07;-2.5987501e-07;-3.1775801e-07;
-3.73246e-07;-4.2095701e-07;-4.5535199e-07;-4.7143499e-07;-2.3273e-07;-1.05601e-07;-6.0080602e-08;-1.49287e-08;2.1386599e-08;4.1068098e-08;
3.89803e-08;1.41933e-08;-1.31068e-08;3.5259001e-07;4.6303799e-07;5.8920199e-07;7.1701299e-07;8.2257498e-07;8.7467998e-07;8.1933598e-07;
3.6161299e-07;2.4719699e-07;7.4805598e-08;-1.12296e-07;-2.8104e-07;-4.0344401e-07;-4.6577401e-07;-5.1018498e-07;-4.52086e-07;-4.8610599e-07;
-4.4499899e-07;-4.0817599e-07;-3.6706501e-07;-3.06799e-07;-2.16397e-07;-4.1851099e-08;6.02452e-09;-8.6205199e-10;6.3374998e-08;7.26046e-08;
2.01586e-08;-8.3629203e-08;-2.16849e-07;-5.8945602e-07;-1.05283e-06;-1.24273e-06;-1.28701e-06;-1.28715e-06;-1.25059e-06;-1.18779e-06;
-1.10948e-06;-9.9336501e-07;-1.26369e-06;-1.06405e-06;-9.1627197e-07;-7.7820903e-07;-6.5081502e-07;-5.3573399e-07;-4.3572399e-07;-8.2975397e-08;
-1.85487e-07;-1.8046801e-07;-2.4308301e-07;-3.48111e-07;-4.74611e-07;-6.0030698e-07;-7.0521003e-07;-4.9660702e-07;-1.1219699e-06;-1.16182e-06;
-1.12062e-06;-1.01565e-06;-8.6935898e-07;-7.04917e-07;-5.4238097e-07;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;-1.72508e-07;-2.29606e-07;-2.9240701e-07;-3.5577099e-07;-4.1275601e-07;
-4.5537101e-07;-4.7579999e-07;-2.3394099e-07;-1.33707e-07;-9.0588301e-08;-4.4905399e-08;-5.0394902e-09;2.1192101e-08;2.8583299e-08;1.6034701e-08;
-5.8026099e-09;1.06756e-07;1.42109e-07;1.80919e-07;2.1762899e-07;2.43085e-07;2.4568601e-07;2.8319201e-07;9.9076999e-08;5.3052698e-08;
-3.9580001e-08;-1.4140301e-07;-2.3028601e-07;-2.8725799e-07;-3.0412599e-07;-1.22928e-07;-1.0815e-07;-2.1965e-07;-2.48406e-07;-2.89247e-07;
-3.3218299e-07;-3.62012e-07;-3.6332099e-07;-4.8419997e-07;-3.7107699e-07;-2.29742e-07;-8.4536602e-08;3.8686299e-08;1.22104e-07;1.5979801e-07;
1.55129e-07;-5.04869e-08;-1.5201999e-07;-3.0147899e-07;-4.13207e-07;-5.1545601e-07;-5.9418102e-07;-6.4160201e-07;-6.56861e-07;-6.4698497e-07;
-9.6095096e-07;-8.0707201e-07;-6.8242099e-07;-5.5581398e-07;-4.3720601e-07;-3.3515801e-07;-2.5520899e-07;-1.85217e-07;-5.2727898e-07;-1.6406401e-07;
-7.8018097e-08;1.5168e-09;6.6176e-08;1.10157e-07;1.30684e-07;-1.75201e-07;-4.2690499e-07;-4.7018e-07;-4.7917598e-07;-4.5724201e-07;
-4.1119301e-07;-3.4980101e-07;-2.8210201e-07;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-1.20996e-15;7.1835001e-16;-1.29101e-07;-1.8654001e-07;-2.56557e-07;-3.35457e-07;-4.1635599e-07;-4.8944099e-07;-5.4310902e-07;-5.6589403e-07;
-2.6646299e-07;-1.74486e-07;-1.21738e-07;-6.38451e-08;-1.09915e-08;2.7310399e-08;-9.5828199e-08;-1.34806e-07;-1.37022e-07;1.73291e-08;
1.10085e-08;2.86998e-09;-7.8501401e-09;-2.3174101e-08;-6.6940103e-08;-1.01381e-07;-2.0992201e-07;-1.94677e-07;-1.25082e-07;-1.71137e-07;
-1.97809e-07;-1.952e-07;-1.6132201e-07;-1.17089e-07;-2.5356101e-07;-2.12225e-07;-1.35409e-07;-2.6903001e-07;-4.15887e-07;-5.47171e-07;
-5.1221502e-07;-4.0965301e-07;-1.82185e-07;-1.29474e-07;-2.18927e-07;1.4916701e-08;2.1469e-07;3.5759399e-07;4.3581699e-07;2.7913799e-07;
4.69486e-07;2.61205e-07;2.34404e-08;-1.70601e-07;-3.4357399e-07;-4.7440199e-07;-5.14948e-07;-4.07497e-07;-9.6911504e-07;-8.3167799e-07;
-7.0188202e-07;-5.64863e-07;-4.4178401e-07;-3.42112e-07;-1.6496e-07;-7.8051997e-08;2.2112501e-07;2.5490101e-07;-8.9222297e-08;9.79622e-08;
2.6030401e-07;3.7743899e-07;4.3830201e-07;4.3560499e-07;1.01979e-06;7.7501699e-07;-3.2061101e-07;-3.2799301e-07;-3.14072e-07;-2.83042e-07;
-2.4085901e-07;-2.6730101e-08;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;-9.2604196e-16;9.5310297e-16;4.2691202e-15;
-1.27796e-07;-1.91072e-07;-2.6963599e-07;-3.5923301e-07;-4.51533e-07;-5.3443398e-07;-5.9350401e-07;-6.1455199e-07;-2.8800901e-07;-2.48871e-07;
-1.38457e-07;-7.0579198e-08;-6.72603e-09;-7.0284003e-08;-9.71215e-08;-1.4902901e-07;-1.72467e-07;-2.47e-07;-1.28091e-07;-1.7765601e-07;
-2.26282e-07;-2.7133899e-07;-3.1513801e-07;-3.5580001e-07;-3.6624499e-07;-3.50558e-07;-2.9915e-07;-2.09654e-07;-1.91631e-07;-1.33328e-07;
-6.3617001e-08;1.48606e-08;-1.16138e-07;-1.64056e-07;-1.83343e-07;-2.05088e-07;-4.29859e-07;-4.3870199e-07;-4.5981599e-07;-4.7895702e-07;
-2.06012e-07;-5.06727e-08;6.9378899e-08;2.9419599e-08;3.1562899e-07;5.4435702e-07;5.2532602e-07;5.8218501e-07;9.4491998e-07;7.9513597e-07;
4.7479699e-07;1.6714201e-07;-7.96243e-08;-2.3446e-07;-2.11195e-07;-2.9478201e-07;-9.0076298e-07;-7.72482e-07;-6.0739501e-07;-4.7531299e-07;
-3.48648e-07;-1.3519499e-07;-1.5956299e-08;4.0494601e-08;5.4872999e-07;6.0424497e-07;6.9144397e-07;3.8093299e-07;6.14474e-07;7.7373102e-07;
8.2606999e-07;8.1079901e-07;1.65038e-06;1.26816e-06;8.75365e-07;-2.01666e-07;-2.1387601e-07;-2.09069e-07;-3.3948801e-08;-2.37821e-08;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;-4.2206299e-16;1.4616e-15;4.8024498e-15;9.9072099e-15;-1.21616e-07;-1.8675399e-07;
-2.6820999e-07;-3.6124499e-07;-4.5658601e-07;-5.4078203e-07;-5.9792802e-07;-6.1258601e-07;-2.8473599e-07;-2.3835899e-07;-1.68444e-07;-6.40172e-08;
-4.23471e-08;-5.0013501e-08;-9.0767898e-08;-1.60935e-07;-2.11079e-07;-3.0221301e-07;-4.0294199e-07;-3.4839201e-07;-3.6710099e-07;-4.3587201e-07;
-4.8843998e-07;-5.2703598e-07;-4.7297101e-07;-4.3242099e-07;-3.8284401e-07;-2.94573e-07;-2.0708001e-07;-1.30776e-07;-3.2513199e-08;7.65165e-08;
-3.7089102e-08;-6.5292902e-08;-1.6945e-07;-2.6119901e-07;-2.91435e-08;-1.4693001e-07;-2.72779e-07;-3.0294501e-07;-2.2023601e-08;1.12335e-07;
3.10459e-07;4.6544801e-07;4.3329001e-07;5.8629001e-07;7.4237403e-07;7.97327e-07;1.26705e-06;1.08164e-06;8.1138802e-07;4.2720899e-07;
1.69407e-07;7.1336501e-08;-8.7119901e-08;-1.64228e-07;-7.6897999e-07;-6.2013999e-07;-4.5165601e-07;-2.8181501e-07;-5.3369799e-08;1.5230199e-07;
2.15044e-07;2.7382899e-07;1.21665e-06;1.2805e-06;1.37405e-06;1.47272e-06;1.1229999e-06;1.27634e-06;1.3126501e-06;1.23375e-06;
2.3262501e-06;1.7784801e-06;1.23293e-06;7.4055203e-07;-1.1993799e-07;-3.9685698e-08;-2.79317e-08;-1.8641099e-08;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1.60823e-16;2.11987e-15;5.5170602e-15;1.07182e-14;1.78906e-14;-1.12637e-07;-1.7553199e-07;-2.5382201e-07;-3.4240301e-07;
-4.3166401e-07;-5.0802998e-07;-5.5575299e-07;-5.59939e-07;-2.56839e-07;-2.0653199e-07;-1.33697e-07;-1.64851e-08;-1.24809e-09;-2.2023199e-08;
-8.14941e-08;-1.74219e-07;-2.5119601e-07;-3.5864699e-07;-4.70732e-07;-4.5329799e-07;-4.5624699e-07;-5.2156798e-07;-5.6613999e-07;-5.94597e-07;
-5.1673697e-07;-4.6166201e-07;-4.0325e-07;-3.4052999e-07;-2.3241699e-07;-1.84084e-07;-7.3654597e-08;5.7623001e-08;-2.94385e-08;-1.80681e-08;
-7.99375e-08;2.48888e-07;2.6369801e-07;2.6421e-07;1.6704401e-07;1.45065e-07;3.8921601e-07;4.7506001e-07;6.1397998e-07;8.0209998e-07;
8.8595903e-07;7.3066002e-07;8.6095599e-07;8.9075098e-07;1.38396e-06;1.17556e-06;8.8731701e-07;5.6392298e-07;3.07737e-07;1.5782599e-07;
1.27909e-08;-4.38075e-08;-6.0816302e-07;-4.3001501e-07;-2.3267999e-07;6.6935101e-08;4.01042e-07;4.6287099e-07;5.45148e-07;6.1263302e-07;
2.2016e-06;2.25808e-06;2.32358e-06;2.3729999e-06;2.3861601e-06;1.87287e-06;1.83901e-06;1.67107e-06;2.99629e-06;2.26867e-06;
1.5692e-06;9.5840005e-07;4.7447099e-07;-2.98154e-08;-2.03014e-08;-1.25463e-08;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;6.7525498e-16;2.74679e-15;
6.2376002e-15;1.15277e-14;1.8845201e-14;2.81151e-14;-1.0292e-07;-1.5988201e-07;-2.2948301e-07;-3.0639401e-07;-3.8139501e-07;-4.4199501e-07;
-4.74243e-07;-4.6550599e-07;-2.08999e-07;-1.58665e-07;5.92981e-09;5.331e-08;7.34777e-08;6.6224102e-09;-7.3933997e-08;-1.9031e-07;
-2.88602e-07;-4.0925801e-07;-3.54344e-07;-4.36683e-07;-5.0260297e-07;-5.1625102e-07;-5.36561e-07;-5.4784402e-07;-4.8884999e-07;-4.3199901e-07;
-3.9378e-07;-3.48177e-07;-2.95864e-07;-2.04134e-07;-1.86196e-07;-4.4642299e-08;-1.00861e-07;-3.4291901e-08;5.4236199e-07;6.3929099e-07;
6.7045602e-07;7.3490497e-07;8.3201701e-07;8.3918098e-07;9.9970498e-07;1.01301e-06;1.07296e-06;1.17336e-06;1.19295e-06;1.15592e-06;
8.6205102e-07;8.4528301e-07;1.2761e-06;1.0607901e-06;7.6365399e-07;5.13413e-07;2.61742e-07;5.6695399e-08;6.9767097e-08;4.30407e-08;
-4.50605e-07;-2.37234e-07;1.01958e-07;5.7613801e-07;7.4529299e-07;8.7266801e-07;9.4091899e-07;1.0234201e-06;3.4038801e-06;3.4357099e-06;
3.43843e-06;3.42558e-06;3.2994401e-06;3.0793999e-06;2.33627e-06;2.06552e-06;3.5743201e-06;2.67727e-06;1.84422e-06;1.04484e-06;
5.5520201e-07;2.2667599e-07;-1.27757e-08;-6.9344601e-09;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1.02016e-15;3.1778499e-15;6.7517102e-15;1.21167e-14;1.95192e-14;
2.8943099e-14;3.9973901e-14;-9.3816404e-08;-1.41985e-07;-1.98649e-07;-2.5854001e-07;-3.13453e-07;-3.5304399e-07;-3.6646901e-07;-3.4464099e-07;
-1.4908299e-07;2.1745199e-08;7.7129997e-08;1.14235e-07;1.17882e-07;7.73301e-08;-7.1117803e-08;-2.07312e-07;-3.1682501e-07;-2.66028e-07;
-3.3575299e-07;-3.8378101e-07;-4.0675701e-07;-4.0913e-07;-3.9751899e-07;-3.8600299e-07;-3.85611e-07;-3.4007101e-07;-3.3092201e-07;-3.4640601e-07;
-3.56079e-07;-3.3358199e-07;-2.53199e-07;-2.25528e-07;-2.5320199e-07;4.6033e-07;7.3994403e-07;9.8801604e-07;1.19865e-06;1.364e-06;
1.5386599e-06;1.69562e-06;1.73051e-06;1.67951e-06;1.6827699e-06;1.54829e-06;1.40345e-06;1.25184e-06;1.06957e-06;6.5953998e-07;
9.5336702e-07;7.2632002e-07;4.9830999e-07;2.68577e-07;8.5467903e-08;-2.63967e-08;-6.46939e-08;7.5852e-08;-3.2810499e-07;2.1434699e-08;
5.7499102e-07;8.3427301e-07;1.07084e-06;1.2667e-06;1.39347e-06;1.44741e-06;4.64494e-06;4.6348e-06;4.5827801e-06;4.4057902e-06;
4.12911e-06;3.74965e-06;3.2775399e-06;2.3381899e-06;3.9402698e-06;2.91743e-06;1.84163e-06;1.13206e-06;6.1867001e-07;2.8916099e-07;
1.09273e-07;-2.9481599e-09;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;3.3221299e-15;6.8966799e-15;1.2263e-14;1.9672899e-14;2.91328e-14;4.02822e-14;5.2305199e-14;
2.1306401e-14;-1.23164e-07;-1.64439e-07;-2.04505e-07;-2.36709e-07;-2.53557e-07;-2.4806201e-07;-2.15304e-07;-7.6918802e-08;8.48312e-08;
1.31642e-07;1.5530701e-07;1.42095e-07;8.3150702e-08;-2.2038201e-08;-1.6383601e-07;-2.05902e-07;-2.4929301e-07;-2.84789e-07;-2.8589699e-07;
-2.5332301e-07;-1.99279e-07;-1.46498e-07;-1.42365e-07;-2.25436e-07;-1.81169e-07;-2.35369e-07;-3.2801901e-07;-4.2424699e-07;-4.8358402e-07;
-4.7224901e-07;-4.4732101e-07;-3.2062701e-07;4.1168701e-07;8.34898e-07;1.27229e-06;1.68497e-06;2.0375401e-06;2.30005e-06;2.60038e-06;
2.47975e-06;2.42952e-06;2.17211e-06;1.86024e-06;1.5261e-06;1.19863e-06;8.9944399e-07;3.5626999e-07;4.38641e-07;2.5369101e-07;
7.2295897e-08;-7.2695101e-08;-1.67612e-07;-2.00595e-07;-1.63693e-07;2.2454101e-08;-2.1945899e-08;3.5715701e-07;6.8111399e-07;1.01076e-06;
1.31575e-06;1.5701499e-06;1.75695e-06;1.8862e-06;5.7505099e-06;5.6489198e-06;5.4521802e-06;5.12827e-06;4.6893401e-06;4.1513299e-06;
3.53929e-06;2.45051e-06;3.7822799e-06;2.72231e-06;1.8143e-06;1.1103e-06;6.2040601e-07;3.2113701e-07;1.68816e-07;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;3.30804e-15;5.9179202e-15;9.5542301e-15;1.4230601e-14;1.9781199e-14;2.58204e-14;3.1738199e-14;1.22488e-14;-1.99707e-07;
-2.4108101e-07;-2.71625e-07;-2.83578e-07;-2.7005299e-07;-2.26526e-07;-1.585e-07;-2.84584e-08;4.3236501e-08;1.00809e-07;1.42056e-07;
1.5788e-07;1.43649e-07;1.00793e-07;6.3809701e-08;-3.3665799e-08;-1.33317e-07;-1.5277899e-07;-1.4569e-07;-1.11582e-07;-5.7321898e-08;
3.6593999e-09;1.13972e-08;-1.46519e-08;2.2104899e-08;3.5874699e-08;3.87708e-08;4.15857e-08;5.4658798e-08;8.4203798e-08;7.01856e-08;
1.12439e-07;5.0620901e-07;6.2944298e-07;7.39386e-07;8.3540101e-07;9.2063198e-07;9.9732301e-07;1.12643e-06;9.8075498e-07;1.04096e-06;
1.0321399e-06;1.00073e-06;9.3666398e-07;8.3415699e-07;6.9432599e-07;3.0410399e-07;3.93882e-07;4.8162502e-07;2.9996201e-07;1.4767301e-07;
4.4972001e-08;2.6354401e-09;2.1233101e-08;-2.27039e-07;-3.8803901e-07;3.4776399e-08;3.0267799e-07;5.53029e-07;7.6898903e-07;9.3965502e-07;
1.06014e-06;1.07177e-06;3.2549799e-06;3.23674e-06;3.14726e-06;2.9960499e-06;2.77963e-06;2.4967301e-06;2.15465e-06;1.3365e-06;
2.01484e-06;1.41126e-06;9.1195699e-07;5.4044102e-07;2.9540001e-07;1.57111e-07;9.6275002e-08;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;2.9821e-15;5.42178e-15;
8.8818799e-15;1.3398e-14;1.8825201e-14;2.47954e-14;-5.1933199e-08;-6.0339303e-08;-2.12125e-08;-1.7026601e-07;-1.8547399e-07;-1.84388e-07;
-1.6286e-07;-1.1933901e-07;-1.10043e-07;-3.9430699e-08;6.5617797e-08;8.8297199e-08;1.11464e-07;1.22827e-07;1.11511e-07;7.7620101e-08;
2.59069e-08;-3.48372e-08;2.3840901e-08;-1.15186e-07;-7.61084e-08;-1.46056e-08;7.8846e-08;1.90384e-07;2.52333e-07;2.72851e-07;
1.51653e-07;1.74568e-07;1.31156e-07;6.0178898e-08;-1.9900501e-08;-8.8601098e-08;-5.3328397e-10;3.23389e-08;3.6722599e-07;3.7344e-07;
5.7292402e-07;8.0582203e-07;1.03945e-06;1.25534e-06;1.40641e-06;1.4951e-06;1.28634e-06;1.29953e-06;1.18474e-06;1.01234e-06;
8.0037398e-07;5.6627903e-07;4.9028898e-07;2.77629e-07;6.5825901e-08;-4.0608499e-09;-1.10824e-07;-1.5521201e-07;-1.6246899e-07;-1.34876e-07;
2.51699e-08;-5.7390402e-08;9.4289099e-08;3.1122499e-07;3.1700901e-07;5.9260901e-07;8.3694903e-07;1.0323801e-06;1.1805701e-06;1.29406e-06;
3.81174e-06;3.6911599e-06;3.2297501e-06;3.00487e-06;2.71819e-06;2.3805701e-06;2.0053401e-06;1.75194e-06;2.22634e-06;1.5939401e-06;
5.9273901e-07;3.1744699e-07;1.51732e-07;7.27889e-08;5.1939399e-08;6.3432701e-08;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;4.71098e-15;7.8736303e-15;1.20932e-14;1.72635e-14;
2.3050099e-14;-4.7890001e-08;-6.3090802e-08;-7.5130899e-08;-2.70583e-08;-2.64129e-08;-1.3430299e-07;-1.08525e-07;-6.2634498e-08;-3.6692999e-08;
2.04044e-08;7.9851802e-08;9.2816897e-08;1.15289e-07;9.6294798e-08;7.6111903e-08;4.5002501e-08;1.49316e-09;-4.7410801e-08;-9.3139299e-08;
1.78389e-08;7.6147998e-08;1.25515e-08;1.36932e-07;2.82168e-07;3.79402e-07;4.6738299e-07;5.4956803e-07;3.2047299e-07;2.6209699e-07;
2.1021501e-07;7.5107799e-08;-7.7078901e-08;-8.1652097e-08;-1.3758e-07;-1.50242e-07;1.59053e-07;4.00647e-07;4.9100601e-07;7.8216902e-07;
1.11508e-06;1.4140099e-06;1.63014e-06;1.75788e-06;1.43834e-06;1.31796e-06;1.18131e-06;9.0515999e-07;5.86265e-07;4.1878201e-07;
1.7693399e-07;-2.71411e-08;-3.4351899e-07;-4.09215e-07;-3.4158299e-07;-3.6838301e-07;-2.98245e-07;-1.23414e-07;-2.18122e-07;-5.55399e-08;
1.91803e-07;3.5149299e-07;5.3852801e-07;5.5073099e-07;8.0832098e-07;1.03133e-06;1.21524e-06;1.2681199e-06;3.73393e-06;3.5558401e-06;
3.2626201e-06;2.6929899e-06;2.37939e-06;2.0336299e-06;1.82193e-06;1.42627e-06;1.76138e-06;1.24194e-06;7.96324e-07;-1.18234e-08;
-7.1304001e-08;-7.43985e-08;-4.4581501e-08;-2.96671e-09;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;6.6488499e-15;1.04333e-14;1.5190501e-14;2.06452e-14;-3.56615e-08;-5.4787101e-08;
-7.4238798e-08;-9.0548703e-08;-3.33768e-08;-3.3442301e-08;-3.0125801e-08;-4.7727099e-08;1.33707e-08;6.5114001e-08;1.16433e-07;1.5741e-07;
9.3516299e-08;9.0497899e-08;7.2723701e-08;1.54171e-08;-3.1293698e-08;-7.4824598e-08;-1.10779e-07;-1.31989e-07;2.57078e-08;1.08153e-07;
2.29611e-07;2.8158101e-07;3.8028401e-07;5.24293e-07;6.6763198e-07;7.59302e-07;4.45507e-07;3.6223599e-07;2.04972e-07;8.5440803e-08;
2.0006199e-08;-1.1926301e-07;-2.16667e-07;-2.60468e-07;1.68206e-09;2.26164e-07;5.3993e-07;7.3820399e-07;1.05788e-06;1.37725e-06;
1.6428e-06;1.77344e-06;1.3848299e-06;1.2348499e-06;9.8954899e-07;6.9267003e-07;4.59604e-07;2.1280999e-07;-6.1862202e-08;-2.3023701e-07;
-5.5831703e-07;-5.3523701e-07;-4.56793e-07;-2.93433e-07;-2.60018e-07;-2.9701599e-07;-1.52246e-07;-2.8938301e-08;2.9857e-07;3.8166101e-07;
5.0383898e-07;6.5484801e-07;7.1134798e-07;9.5626103e-07;1.08131e-06;1.13318e-06;3.32795e-06;3.10315e-06;2.7660401e-06;2.3744201e-06;
1.8402e-06;1.66399e-06;1.34146e-06;1.0336601e-06;1.25348e-06;8.7539502e-07;5.4610098e-07;2.95456e-07;-3.44591e-07;-2.6815599e-07;
-1.80961e-07;-1.06301e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;8.5951796e-15;1.27934e-14;1.77513e-14;-1.95651e-08;-3.8132502e-08;-6.0690397e-08;-8.4412903e-08;-1.05267e-07;
-3.9636198e-08;-4.0648001e-08;-3.7694502e-08;1.63535e-08;9.4105999e-08;1.44119e-07;1.8375199e-07;2.02834e-07;7.7273597e-08;5.05703e-08;
1.06196e-08;-3.5500499e-08;-1.04647e-07;-1.4270201e-07;-1.5927e-07;-1.5091599e-07;4.31899e-08;1.47051e-07;2.8979099e-07;3.31856e-07;
4.54234e-07;6.3013198e-07;7.7412898e-07;8.6792102e-07;5.0923899e-07;4.12432e-07;2.4325499e-07;1.45725e-07;5.5117699e-08;-9.2773099e-08;
-2.0562899e-07;-2.6846101e-07;-6.3829503e-08;1.22636e-07;3.9892399e-07;7.3573e-07;9.4824901e-07;1.20171e-06;1.4482e-06;1.5591399e-06;
1.15214e-06;9.9630802e-07;7.4740501e-07;5.1968902e-07;3.2527299e-07;3.45755e-08;-1.84637e-07;-2.8844201e-07;-5.35992e-07;-4.33906e-07;
-2.90966e-07;-9.4091199e-08;-2.7535499e-08;-1.42517e-07;-3.6849499e-08;3.50764e-08;4.2516601e-07;4.1899e-07;4.6708499e-07;5.5479398e-07;
6.9812501e-07;7.6590601e-07;8.8249101e-07;9.2331999e-07;2.69474e-06;2.4414501e-06;2.09821e-06;1.72939e-06;1.4577e-06;1.0830699e-06;
8.7401202e-07;6.7570198e-07;8.5012601e-07;6.1332298e-07;3.89999e-07;2.10043e-07;7.5358898e-08;-4.6408701e-07;-3.2720899e-07;-2.22281e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1.03033e-14;1.46202e-14;-5.2374598e-09;-1.9233999e-08;-3.9503799e-08;-6.4874001e-08;-9.2360402e-08;-1.17476e-07;-4.5064599e-08;-4.7135099e-08;
3.9261302e-08;4.5396401e-08;4.5591101e-08;2.05025e-07;2.31458e-07;2.2952401e-07;5.58138e-08;9.1697503e-09;-4.8214702e-08;-1.05554e-07;
-1.50465e-07;-1.96084e-07;-1.91192e-07;-1.53716e-07;6.3048802e-08;1.8277601e-07;1.78083e-07;3.2771899e-07;4.70711e-07;6.3257198e-07;
7.6612099e-07;8.5379702e-07;5.0219501e-07;4.0574801e-07;3.71027e-07;2.05115e-07;3.49239e-08;6.54784e-09;-9.54537e-08;-1.61283e-07;
-1.18474e-08;1.2156499e-07;3.2711199e-07;5.3244099e-07;8.1526099e-07;1.00992e-06;1.09085e-06;1.16252e-06;7.8943799e-07;6.5166199e-07;
4.8817702e-07;4.5777301e-07;2.0144699e-07;-7.0880702e-08;-1.63923e-07;-1.8487501e-07;-2.7668801e-07;-1.15365e-07;9.4016201e-08;2.12283e-07;
3.42872e-07;4.13789e-07;1.22251e-07;1.37966e-07;5.7092899e-07;4.7643101e-07;4.3735e-07;4.8235199e-07;5.3638098e-07;6.0078901e-07;
6.5801601e-07;6.79594e-07;1.9571501e-06;1.6993801e-06;1.3913e-06;1.12415e-06;8.7165398e-07;6.8228297e-07;5.2704002e-07;4.4462999e-07;
6.7581601e-07;5.5397197e-07;4.0321899e-07;2.39115e-07;1.32344e-07;6.1738298e-08;-4.4769399e-07;-3.2065401e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1.15251e-14;3.42224e-09;
-4.2453401e-09;-1.82908e-08;-3.93681e-08;-6.6488298e-08;-9.6639397e-08;-1.2504501e-07;-4.87221e-08;4.54597e-08;6.26301e-08;7.8338402e-08;
8.7734001e-08;8.5419401e-08;2.6896799e-07;2.5072799e-07;4.0267999e-08;-2.1122499e-08;-9.0971703e-08;-1.55659e-07;-2.00448e-07;-2.1305399e-07;
-2.09253e-07;-1.46294e-07;7.7711697e-08;4.6758998e-08;1.6848e-07;2.74532e-07;3.8530601e-07;4.9295397e-07;6.3710303e-07;7.1395903e-07;
4.25179e-07;4.5322199e-07;3.6399899e-07;2.7192701e-07;1.65402e-07;5.59874e-08;1.02874e-07;5.09838e-08;1.57163e-07;2.40969e-07;
2.8462e-07;4.19489e-07;5.60807e-07;6.8504301e-07;7.3013001e-07;6.4149702e-07;3.48995e-07;2.7755701e-07;3.91763e-07;2.30354e-07;
1.06687e-07;4.8766701e-08;-3.4385e-08;5.9631397e-08;1.6664499e-07;3.8462801e-07;5.55361e-07;7.11035e-07;7.7792203e-07;7.5309998e-07;
6.6547398e-07;2.5982601e-07;7.1192397e-07;5.3527299e-07;4.4213101e-07;4.0008399e-07;4.0671e-07;4.28616e-07;4.3790101e-07;4.34002e-07;
1.21295e-06;9.7780605e-07;7.4582402e-07;5.5587998e-07;4.4733099e-07;4.0727201e-07;4.0337099e-07;3.8920999e-07;7.8322802e-07;7.3429197e-07;
5.8673498e-07;4.4137801e-07;3.0379701e-07;1.93419e-07;1.15176e-07;-3.76115e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;3.7797898e-09;-3.0848799e-09;-1.6458801e-08;
-3.7253798e-08;-6.4699698e-08;-9.5876999e-08;-1.25919e-07;-4.9677801e-08;5.8708501e-08;8.5215497e-08;1.12268e-07;1.3371501e-07;1.4219e-07;
1.3064e-07;9.4232099e-08;1.6526e-08;-3.12229e-08;-1.08633e-07;-1.77987e-07;-2.23043e-07;-2.30689e-07;-1.94599e-07;-6.3314197e-08;
2.73103e-08;3.9908301e-08;1.06719e-07;1.7345999e-07;2.3817699e-07;3.0064001e-07;3.6118101e-07;4.01834e-07;3.5674799e-07;3.5189899e-07;
3.4067901e-07;3.2672401e-07;3.0679601e-07;2.7845601e-07;2.4161801e-07;1.7108199e-07;1.36531e-07;3.7233599e-07;3.56448e-07;3.3518401e-07;
3.0815099e-07;2.7401299e-07;2.2982e-07;3.1040099e-07;1.80646e-07;9.6051899e-08;5.0374599e-08;3.6846501e-08;7.0669302e-08;1.58869e-07;
2.97996e-07;4.6547501e-07;9.1473203e-07;9.0405001e-07;1.08107e-06;1.16948e-06;1.15482e-06;1.04604e-06;8.7302601e-07;6.5064899e-07;
8.1764199e-07;5.7718103e-07;4.1825001e-07;3.3156601e-07;2.92961e-07;2.7279501e-07;2.4732799e-07;2.3951799e-07;5.2234401e-07;3.1947101e-07;
1.7610201e-07;1.34038e-07;1.91081e-07;3.1066301e-07;4.4101901e-07;4.73238e-07;1.10286e-06;1.08646e-06;9.5137801e-07;7.5907701e-07;
5.6056899e-07;3.8779001e-07;2.5378199e-07;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;2.8709e-09;-9.4612995e-10;-8.9503303e-09;-2.18631e-08;-3.9306101e-08;
-5.9452699e-08;-7.9130203e-08;-3.1495698e-08;6.22736e-08;8.1508801e-08;9.9146e-08;1.12258e-07;1.16982e-07;1.08753e-07;1.3896e-07;
4.79553e-08;6.1226203e-08;1.5567901e-08;-1.90243e-08;-3.3394102e-08;-2.21891e-08;1.49914e-08;-4.7163599e-08;2.19983e-08;8.5179998e-08;
8.9701899e-08;7.8842397e-08;6.1275202e-08;5.0764399e-08;6.21936e-08;8.6741899e-08;1.63736e-07;4.47693e-07;4.8345203e-07;5.0845898e-07;
5.2105497e-07;5.2073102e-07;5.06898e-07;4.7054701e-07;4.06201e-07;5.75895e-07;5.0815299e-07;4.2459999e-07;3.3006401e-07;2.29203e-07;
1.27684e-07;-2.9593201e-07;-2.9877199e-07;-3.56799e-08;4.72286e-08;1.76432e-07;3.4861e-07;5.5330298e-07;7.7302502e-07;7.1746899e-07;
1.2842301e-06;1.48102e-06;1.63708e-06;1.70863e-06;1.68163e-06;1.55688e-06;1.353e-06;6.0830303e-07;7.4653298e-07;6.2828502e-07;
4.3012199e-07;2.87652e-07;1.85399e-07;1.05375e-07;3.52527e-08;-3.0739e-09;-1.87027e-07;-5.0067199e-09;-4.5690498e-08;2.9847801e-08;
2.01945e-07;4.19266e-07;6.2031302e-07;6.0677797e-07;1.41694e-06;1.40795e-06;1.24971e-06;1.01519e-06;7.6647802e-07;5.4420599e-07;
3.6687601e-07;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;3.9113699e-09;3.5810499e-09;6.8091899e-10;-6.0344498e-09;-1.73169e-08;-3.2879701e-08;-3.7471299e-08;-5.27893e-08;
4.2526e-08;6.1486404e-08;8.2924103e-08;1.05368e-07;1.26199e-07;1.4115901e-07;3.5293399e-07;3.7017901e-07;1.7543501e-07;1.03702e-07;
1.20774e-07;8.7817099e-08;6.8188498e-08;6.7732998e-08;2.82385e-07;3.6871501e-07;1.01529e-07;1.37228e-07;3.8425298e-08;-2.36641e-08;
-1.01597e-07;-1.73896e-07;2.2373899e-07;3.3943701e-07;4.8897999e-07;4.9104699e-07;5.52573e-07;6.5573698e-07;7.4794798e-07;8.17125e-07;
9.9236001e-07;1.05501e-06;9.4396802e-07;9.0090901e-07;6.7014599e-07;4.4481001e-07;1.89552e-07;-6.7673099e-08;3.4530601e-08;-1.0602e-08;
9.83175e-08;1.34728e-07;-1.02052e-07;1.7962201e-07;4.9557201e-07;8.1253501e-07;1.14805e-06;1.38618e-06;2.3088201e-06;2.3196301e-06;
1.9183201e-06;1.93037e-06;1.84828e-06;1.67856e-06;1.59596e-06;1.57579e-06;1.63289e-06;1.24025e-06;3.2616799e-07;1.78541e-07;
5.5827002e-08;-5.1925699e-08;-3.4959601e-08;-6.8976597e-08;-4.10524e-07;-4.3951201e-07;-3.40604e-07;-1.14333e-07;2.0204899e-07;5.3934099e-07;
8.2452402e-07;9.8741896e-07;2.0181999e-06;1.92267e-06;1.56816e-06;1.27738e-06;9.6816598e-07;6.9043801e-07;4.6761801e-07;5.22812e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
4.5245701e-09;4.7471e-09;2.82115e-09;-2.3859199e-09;-1.15651e-08;9.5614796e-09;-4.2541002e-09;-2.5075501e-08;4.1698701e-08;5.77027e-08;
7.7704001e-08;1.01485e-07;1.27441e-07;2.8989601e-07;3.7055099e-07;4.3370201e-07;2.30968e-07;2.4405901e-07;1.9627301e-07;2.25123e-07;
2.0514599e-07;3.91789e-07;4.6308e-07;5.4068101e-07;1.8362999e-07;9.5794398e-08;7.0471799e-08;-1.0146e-07;-2.3616499e-07;1.22975e-07;
1.88718e-07;3.15672e-07;4.9003103e-07;6.3818601e-07;6.9018398e-07;8.2645403e-07;9.7443501e-07;1.2312699e-06;1.38491e-06;1.44134e-06;
1.24501e-06;1.05779e-06;8.6340998e-07;4.61464e-07;7.3779198e-08;1.35276e-09;-1.57545e-07;-2.7186201e-07;-4.55757e-08;5.2394899e-08;
2.34832e-07;2.16156e-07;6.4421101e-07;1.08414e-06;1.40688e-06;1.6325e-06;2.6513401e-06;2.6591499e-06;2.46831e-06;1.9645299e-06;
1.85431e-06;1.83405e-06;1.8690901e-06;1.58379e-06;1.71874e-06;1.329e-06;9.2458799e-07;8.0440499e-10;-1.26269e-07;-1.58189e-07;
-2.13457e-07;-2.73252e-07;-9.4115802e-07;-8.77692e-07;-6.44784e-07;-2.7367599e-07;1.7307801e-07;6.1269998e-07;9.27901e-07;1.14677e-06;
2.3556699e-06;2.2157799e-06;1.89611e-06;1.40874e-06;1.06348e-06;7.5283202e-07;7.1677101e-07;4.6105501e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;5.5326002e-09;6.2283401e-09;
5.2103402e-09;1.52579e-09;7.1374899e-08;6.4276399e-08;4.9419999e-08;2.2358901e-08;4.3750202e-08;5.3296699e-08;6.7462103e-08;8.7837002e-08;
9.7420497e-08;2.0563201e-07;3.23715e-07;4.3937399e-07;2.6017901e-07;3.11652e-07;3.43485e-07;3.36395e-07;5.5645501e-07;6.2668101e-07;
7.0207e-07;7.7183302e-07;3.0039999e-07;1.9026101e-07;1.23293e-08;-8.4027597e-08;2.0392e-07;2.23667e-07;3.03143e-07;4.5403601e-07;
5.7206501e-07;7.3372098e-07;9.3393498e-07;1.01297e-06;1.31268e-06;1.53053e-06;1.6804599e-06;1.75455e-06;1.45688e-06;1.2372e-06;
8.9492301e-07;5.10093e-07;2.27703e-07;-5.475e-08;-2.9446201e-07;-3.91539e-07;-7.5874397e-08;5.5343801e-08;3.0061901e-07;6.1120198e-07;
7.9761003e-07;1.23698e-06;1.5593801e-06;1.74454e-06;2.7896499e-06;2.68852e-06;2.51294e-06;2.1844901e-06;1.89628e-06;1.9937299e-06;
1.80451e-06;1.57438e-06;1.83749e-06;1.44633e-06;1.02887e-06;5.8487899e-07;-3.0740301e-07;-3.7634501e-07;-4.5711801e-07;-5.0677698e-07;
-1.50834e-06;-1.35069e-06;-1.0016699e-06;-5.11986e-07;7.95294e-08;5.7079001e-07;9.6599604e-07;1.19864e-06;2.50523e-06;2.33078e-06;
1.96978e-06;1.53013e-06;1.03099e-06;9.3748099e-07;5.94315e-07;3.5611501e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;6.6466002e-09;7.6688096e-09;7.3682198e-09;1.32105e-07;
1.3953e-07;1.39181e-07;1.2575001e-07;9.2933e-08;5.1504799e-08;5.1420301e-08;5.52606e-08;-1.39132e-07;-6.3729601e-08;5.00285e-08;
1.96503e-07;3.6361399e-07;2.4581601e-07;3.4550001e-07;4.2578e-07;6.44588e-07;7.7241702e-07;9.0515903e-07;9.9575004e-07;1.0634e-06;
4.5442101e-07;3.2458701e-07;1.21109e-07;3.8786899e-07;4.62505e-07;4.71242e-07;5.8561699e-07;7.7351302e-07;7.4597898e-07;9.0906298e-07;
1.10188e-06;1.37035e-06;1.4861999e-06;1.75755e-06;1.90079e-06;1.9725501e-06;1.57087e-06;1.33443e-06;9.7146005e-07;6.1747198e-07;
2.6115001e-07;-6.4649001e-08;-2.88076e-07;-3.4712201e-07;2.2931401e-08;1.70701e-07;4.3590299e-07;7.3241398e-07;1.08366e-06;1.3322e-06;
1.60978e-06;1.72993e-06;2.7393501e-06;2.5429299e-06;2.3043499e-06;2.2238401e-06;2.1001299e-06;1.87285e-06;1.77733e-06;1.61869e-06;
2.0679499e-06;1.66887e-06;1.20606e-06;7.15618e-07;2.5915801e-07;-6.3375001e-07;-7.0979098e-07;-7.4784998e-07;-2.08202e-06;-1.8355e-06;
-1.38211e-06;-7.8964598e-07;-1.50684e-07;4.9720097e-07;9.1880202e-07;1.15911e-06;2.48486e-06;2.28965e-06;1.9092099e-06;1.45526e-06;
1.26038e-06;7.3925003e-07;4.39752e-07;2.3244399e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;7.4769702e-09;8.6260101e-09;1.7084101e-07;1.9823101e-07;2.20652e-07;2.32056e-07;
2.24156e-07;1.87909e-07;6.7378799e-08;5.5450698e-08;-3.07752e-07;-3.1393e-07;-2.72492e-07;-1.7382e-07;-1.62744e-08;1.91696e-07;
1.74012e-07;3.2716599e-07;6.1255702e-07;8.0768802e-07;9.8629403e-07;1.18797e-06;1.32835e-06;1.40331e-06;6.4082201e-07;4.9497999e-07;
8.0071999e-07;7.3202199e-07;6.87095e-07;8.7380499e-07;1.01302e-06;1.24639e-06;9.9330998e-07;1.1452699e-06;1.34254e-06;1.5312e-06;
1.74873e-06;1.80926e-06;2.0242601e-06;2.07329e-06;1.5829499e-06;1.3491e-06;1.02033e-06;6.8496399e-07;3.38608e-07;8.42887e-09;
-1.3859e-07;-1.4621e-07;2.41435e-07;3.8927399e-07;5.7444799e-07;8.94594e-07;1.19571e-06;1.4216801e-06;1.56826e-06;1.60808e-06;
2.53033e-06;2.2685199e-06;2.1594899e-06;2.1021499e-06;2.01733e-06;1.87339e-06;1.8519301e-06;1.77481e-06;2.4655101e-06;2.04601e-06;
1.44937e-06;9.14125e-07;4.12373e-07;-9.3907403e-08;-9.36893e-07;-9.6671204e-07;-2.6146099e-06;-2.28978e-06;-1.74551e-06;-1.03072e-06;
-3.3737899e-07;2.77852e-07;8.3314899e-07;1.07527e-06;2.3662799e-06;2.16219e-06;1.7797601e-06;1.59355e-06;1.06586e-06;6.3751997e-07;
2.8719299e-07;1.18461e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;7.6906597e-09;1.7421399e-07;2.19469e-07;2.6618e-07;3.08545e-07;3.3738201e-07;3.4058399e-07;3.0538499e-07;
9.2741303e-08;-3.3622399e-07;-4.3063e-07;-4.9621599e-07;-5.0952502e-07;-4.5000601e-07;-3.0549401e-07;-7.6902701e-08;3.8330199e-08;3.64166e-07;
6.4513898e-07;9.3168597e-07;1.20046e-06;1.42875e-06;1.66015e-06;1.76376e-06;8.4545297e-07;1.18295e-06;1.14889e-06;1.12061e-06;
1.13028e-06;1.2054199e-06;1.53437e-06;1.79567e-06;1.26399e-06;1.41318e-06;1.53056e-06;1.68288e-06;1.8171301e-06;1.9310501e-06;
1.89914e-06;2.02821e-06;1.48213e-06;1.24887e-06;1.00279e-06;7.2678398e-07;4.5377899e-07;2.34468e-07;8.1736601e-08;1.5799201e-07;
5.2947303e-07;5.9217001e-07;8.0223901e-07;1.04769e-06;1.26476e-06;1.39914e-06;1.42288e-06;1.39044e-06;2.1777e-06;2.02103e-06;
1.90827e-06;1.8553e-06;1.91303e-06;2.02412e-06;2.0140701e-06;2.05472e-06;3.02324e-06;2.4793901e-06;1.87357e-06;1.21329e-06;
5.8868102e-07;6.4412497e-08;-4.1655301e-07;-1.14082e-06;-3.0712599e-06;-2.6815601e-06;-2.0161101e-06;-1.26292e-06;-4.9982998e-07;1.64444e-07;
6.5339401e-07;9.98362e-07;2.23395e-06;2.0294799e-06;1.91403e-06;1.40204e-06;9.2600197e-07;5.3830001e-07;2.5672401e-07;3.6961001e-08;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1.97944e-07;2.6049099e-07;3.2875101e-07;3.9499699e-07;4.4671199e-07;4.6738501e-07;4.39628e-07;1.16819e-07;-3.7473001e-07;
-5.27456e-07;-6.6249498e-07;-7.4776102e-07;-7.5094499e-07;-6.4698298e-07;-4.2555899e-07;-1.5716201e-07;2.46718e-07;6.0822703e-07;9.9107797e-07;
1.35992e-06;1.67875e-06;1.9141601e-06;2.0441801e-06;1.17621e-06;1.48582e-06;1.48187e-06;1.49319e-06;1.5542601e-06;1.68877e-06;
1.89881e-06;2.1381099e-06;1.33635e-06;1.5860099e-06;1.68077e-06;1.74219e-06;1.77238e-06;1.78509e-06;1.7957e-06;1.90993e-06;
1.73739e-06;1.0769299e-06;9.0212899e-07;7.1627397e-07;5.4133301e-07;4.14818e-07;3.82889e-07;4.0060499e-07;7.8901598e-07;8.2077997e-07;
9.6804399e-07;1.12774e-06;1.24166e-06;1.26793e-06;1.19612e-06;1.25138e-06;1.73333e-06;1.59111e-06;1.51784e-06;1.62148e-06;
1.8588599e-06;2.14227e-06;2.3702601e-06;2.5107699e-06;3.8359599e-06;3.06474e-06;2.36151e-06;1.57771e-06;8.21897e-07;1.7760701e-07;
-3.0294399e-07;-1.10395e-06;-3.1822301e-06;-2.98855e-06;-2.2870399e-06;-1.45698e-06;-6.2905502e-07;8.3335998e-08;6.0411003e-07;1.19246e-06;
2.40912e-06;2.1667299e-06;1.762e-06;1.30118e-06;8.6789697e-07;5.1201403e-07;2.5108801e-07;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1.41825e-07;
1.93803e-07;2.5296501e-07;3.13328e-07;3.6485699e-07;3.9414101e-07;3.8687801e-07;1.10662e-07;-2.25668e-07;-3.4097201e-07;-4.47247e-07;
-5.20485e-07;-5.3582698e-07;-4.7318699e-07;-3.4803799e-07;-1.4592401e-07;1.19711e-08;2.9511901e-07;6.0778001e-07;9.1491501e-07;1.17973e-06;
1.36932e-06;1.48146e-06;8.5222803e-07;7.6810301e-07;6.6832803e-07;5.5970901e-07;4.7331201e-07;4.39068e-07;4.77843e-07;6.8571097e-07;
4.33113e-07;5.7778698e-07;7.34602e-07;9.0627498e-07;1.06714e-06;1.1938899e-06;1.26749e-06;1.35142e-06;1.13818e-06;3.52679e-07;
-2.2592801e-08;-4.3929799e-07;-8.4611099e-07;-1.17792e-06;-1.36775e-06;-1.48071e-06;-1.04207e-06;-6.7929602e-07;-3.7144301e-07;-5.3846101e-08;
1.9643799e-07;3.21128e-07;2.9766301e-07;1.8404999e-07;-5.6073699e-08;-2.71321e-07;-5.0081098e-07;-5.68019e-07;-4.7800597e-07;-2.8111401e-07;
-5.25513e-08;1.9197699e-07;6.1524901e-07;2.7818501e-07;4.88313e-08;-2.9404501e-07;-6.7992198e-07;-1.04088e-06;-1.32086e-06;-1.76843e-06;
-5.0947901e-06;-4.5156698e-06;-3.69145e-06;-2.7179501e-06;-1.72109e-06;-8.1778001e-07;-9.5310199e-08;5.8456499e-07;1.55435e-06;1.60755e-06;
1.42607e-06;1.1211999e-06;7.8782301e-07;4.8889098e-07;2.54398e-07;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;8.9913598e-08;1.4111301e-07;2.01538e-07;2.73441e-07;
3.5041199e-07;4.20833e-07;4.6351701e-07;4.6984201e-07;-8.3511303e-08;-2.03095e-07;-3.47938e-07;-4.98448e-07;-6.2813302e-07;-7.0618802e-07;
-9.57265e-07;-9.1499697e-07;-4.2304799e-07;-1.96114e-07;9.5342102e-08;4.6273701e-07;8.3813399e-07;1.17308e-06;1.33156e-06;1.44589e-06;
1.1017e-06;8.4239002e-07;7.8283801e-07;7.0536998e-07;6.5606099e-07;6.5833302e-07;7.6589703e-07;8.87434e-07;3.8410101e-07;4.8547901e-07;
6.7769201e-07;7.4261999e-07;7.86322e-07;8.0282001e-07;8.6973603e-07;8.47379e-07;7.5630101e-07;3.44303e-08;-2.1995599e-07;-4.9441002e-07;
-7.5664099e-07;-9.6327597e-07;-8.14153e-07;-8.1492698e-07;-5.86461e-07;-3.8014599e-07;-1.99127e-07;2.1371001e-09;1.24626e-07;1.2997e-07;
7.4294398e-08;2.9747101e-08;-2.3178799e-07;-5.37093e-07;-8.7571402e-07;-7.8344698e-07;-5.3607903e-07;-2.0389599e-07;1.5165799e-08;2.7784199e-07;
7.36674e-07;5.6379298e-07;2.77309e-07;-1.11817e-07;-5.4416103e-07;-9.4497602e-07;-1.25978e-06;-1.39932e-06;-5.1131201e-06;-4.5609299e-06;
-3.71946e-06;-2.7737799e-06;-1.80776e-06;-9.3297598e-07;-2.3032e-07;3.0089399e-07;1.1437201e-06;1.2878201e-06;1.2724601e-06;1.03512e-06;
7.6457798e-07;5.15284e-07;3.13578e-07;1.32503e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;8.1076998e-08;1.3030601e-07;1.98412e-07;2.80065e-07;3.7127899e-07;4.4517799e-07;
5.1200698e-07;5.4011298e-07;-3.1138601e-08;-1.63021e-07;-3.20444e-07;-5.0433903e-07;-6.8313301e-07;-1.10618e-06;-1.26367e-06;-1.3084e-06;
-6.8111802e-07;-4.6940801e-07;-1.4979e-07;2.31323e-07;6.6095703e-07;9.6525605e-07;1.24003e-06;1.3779e-06;1.0346e-06;1.05626e-06;
7.6872601e-07;7.1927002e-07;6.85656e-07;7.5205901e-07;8.3110803e-07;9.0569603e-07;2.4041799e-07;2.91996e-07;3.61421e-07;4.6567601e-07;
4.1569299e-07;4.3898399e-07;3.9069701e-07;3.42303e-07;2.9428401e-07;2.39001e-07;-4.03407e-07;-5.9844501e-07;-7.4059102e-07;-6.0162898e-07;
-6.6015798e-07;-4.9900302e-07;-4.0473901e-07;-2.6216199e-07;-9.5510103e-08;-3.2320202e-08;-1.17605e-08;-1.9337e-08;-1.61199e-08;-2.9022399e-07;
-6.9463198e-07;-9.0467603e-07;-9.437e-07;-9.4574801e-07;-5.5930298e-07;-2.2660601e-07;1.62131e-07;4.19494e-07;9.6612098e-07;9.0296601e-07;
4.98411e-07;-6.82763e-09;-4.6465101e-07;-8.83967e-07;-1.15532e-06;-1.39547e-06;-5.0081399e-06;-4.4747899e-06;-3.7018599e-06;-2.7726301e-06;
-1.85878e-06;-1.02912e-06;-3.13578e-07;1.19416e-07;8.3092903e-07;1.00446e-06;9.8727105e-07;1.006e-06;7.8195802e-07;5.68811e-07;
2.9712001e-07;1.79076e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;6.8557199e-08;1.17257e-07;1.86409e-07;2.7298299e-07;3.40588e-07;4.4275001e-07;5.2984501e-07;5.81758e-07;
2.29583e-08;-1.00033e-07;-2.75671e-07;-4.6694299e-07;-9.8778503e-07;-1.2972801e-06;-1.55345e-06;-1.69902e-06;-9.4820399e-07;-7.70111e-07;
-4.6099601e-07;-5.1147399e-08;3.2566399e-07;7.2608299e-07;1.0332e-06;1.18948e-06;8.7629502e-07;8.7956897e-07;8.5218898e-07;5.9944102e-07;
5.92665e-07;6.1362499e-07;6.47967e-07;6.8800301e-07;-6.0321703e-08;-2.30421e-08;-1.15748e-08;-1.39516e-08;1.06389e-07;2.07684e-08;
-5.53574e-08;-1.12153e-07;-1.25482e-07;-1.55016e-07;-1.6703299e-07;-6.3802901e-07;-6.2161098e-07;-6.4896699e-07;-5.2590599e-07;-3.5305899e-07;
-3.7554301e-07;-2.64281e-07;-1.48984e-07;-1.32872e-07;-1.18016e-07;-6.0853303e-08;-3.1336799e-07;-5.73421e-07;-1.08574e-06;-1.2166601e-06;
-1.1329701e-06;-8.9850499e-07;-7.0844902e-07;-2.16126e-07;1.91187e-07;4.5301601e-07;1.04993e-06;9.6656299e-07;6.8753798e-07;1.41242e-07;
-4.7004801e-07;-7.6089299e-07;-1.17029e-06;-1.39682e-06;-4.8323e-06;-4.3325499e-06;-3.61557e-06;-2.7777601e-06;-1.9443401e-06;-1.08658e-06;
-5.3947298e-07;-1.2301e-07;4.2010501e-07;6.2785398e-07;6.7305501e-07;6.0807002e-07;8.0009499e-07;5.3625803e-07;3.6118399e-07;2.26799e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
5.4183001e-08;9.9827403e-08;1.67498e-07;2.0161301e-07;2.98793e-07;4.0926099e-07;5.1201403e-07;5.8647299e-07;7.03984e-08;-3.5075601e-08;
-1.98111e-07;-7.3464997e-07;-1.08072e-06;-1.46735e-06;-1.81922e-06;-2.06858e-06;-1.20548e-06;-1.07352e-06;-7.9163601e-07;-4.23551e-07;
4.1853299e-09;4.1445901e-07;7.4090701e-07;9.0877501e-07;6.5503701e-07;6.3595098e-07;5.7579803e-07;5.1381602e-07;3.3654101e-07;2.8621e-07;
2.7976299e-07;2.7551701e-07;-4.7274401e-07;-4.3272999e-07;-4.2036999e-07;-3.3400701e-07;-3.48513e-07;-3.2243e-07;-3.9527899e-07;-4.4320399e-07;
-4.3181899e-07;-4.4857501e-07;-4.5255999e-07;-3.3116601e-07;-5.8462098e-07;-6.7200398e-07;-5.2808099e-07;-3.573e-07;-4.7255301e-07;-3.7767501e-07;
-2.9564899e-07;-1.5473e-07;-1.10439e-07;-3.18649e-07;-5.56656e-07;-7.8929497e-07;-1.36959e-06;-1.4362701e-06;-1.28942e-06;-1.02866e-06;
-6.6444397e-07;-2.8953201e-07;1.20717e-07;3.7394301e-07;9.8016005e-07;8.9001901e-07;6.0797299e-07;2.60245e-07;-6.5586399e-08;-8.3583598e-07;
-1.19284e-06;-1.38801e-06;-4.5844399e-06;-4.1346898e-06;-3.5046801e-06;-2.77651e-06;-1.85609e-06;-1.34681e-06;-8.5292601e-07;-4.6098401e-07;
-1.6983699e-07;8.7470099e-08;2.16378e-07;2.4918e-07;2.15036e-07;5.9093901e-07;4.1604301e-07;2.7264201e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;3.9775699e-08;8.04813e-08;
7.0588897e-08;1.45828e-07;2.4443301e-07;3.4693201e-07;4.5799899e-07;5.5024998e-07;1.03973e-07;2.1834801e-08;-4.38661e-07;-7.7298e-07;
-1.19237e-06;-1.61833e-06;-2.0539201e-06;-2.39779e-06;-1.43265e-06;-1.3507e-06;-1.1155601e-06;-7.6439102e-07;-3.33049e-07;8.8940197e-08;
4.1600001e-07;5.8965401e-07;4.16196e-07;3.73635e-07;2.6222901e-07;1.3328901e-07;2.8875601e-08;-1.1473e-07;-2.1062399e-07;-2.61314e-07;
-9.3183598e-07;-8.71032e-07;-7.0708597e-07;-6.5789601e-07;-6.3804202e-07;-6.3014102e-07;-5.6747501e-07;-5.9122698e-07;-5.64179e-07;-5.8244098e-07;
-5.3718497e-07;-5.23528e-07;-4.43625e-07;-4.74963e-07;-6.12956e-07;-4.5495099e-07;-6.3853702e-07;-5.4561798e-07;-3.64827e-07;-1.2525599e-07;
-1.96732e-07;-5.0798099e-07;-7.0755402e-07;-9.0680601e-07;-1.5084599e-06;-1.5312499e-06;-1.4298799e-06;-1.08164e-06;-6.4765197e-07;-3.3005401e-07;
-1.26182e-08;2.1928901e-07;8.00203e-07;7.1587101e-07;5.0699299e-07;5.0589199e-07;4.39513e-09;-5.6478501e-07;-1.18564e-06;-1.33498e-06;
-4.2185802e-06;-3.8378798e-06;-3.3306501e-06;-2.4947699e-06;-2.0264899e-06;-1.57287e-06;-1.24543e-06;-8.9154901e-07;-9.5800499e-07;-6.3448101e-07;
-3.9599701e-07;-1.69754e-07;-1.01999e-07;-8.6542002e-08;4.5588399e-07;3.12818e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;2.682e-08;-1.31638e-08;2.29506e-08;8.2982197e-08;
1.679e-07;2.7277801e-07;3.72241e-07;4.7456501e-07;1.19113e-07;-2.3540601e-07;-4.7551501e-07;-8.21676e-07;-1.26688e-06;-1.77739e-06;
-2.24617e-06;-2.6633099e-06;-1.60846e-06;-1.57326e-06;-1.38327e-06;-1.04222e-06;-6.2046701e-07;-2.00114e-07;1.3180799e-07;3.03267e-07;
2.12491e-07;1.34697e-07;-3.6855301e-08;-2.2662201e-07;-4.1251599e-07;-5.67173e-07;-7.16572e-07;-8.4437602e-07;-1.37097e-06;-1.15739e-06;
-1.01657e-06;-8.8749999e-07;-7.82901e-07;-7.0534202e-07;-6.3731198e-07;-5.3350601e-07;-4.9773502e-07;-4.9437699e-07;-5.2171401e-07;-5.0899001e-07;
-4.90231e-07;-4.5540199e-07;-4.24207e-07;-5.8676602e-07;-8.1745702e-07;-6.0714501e-07;-3.1190601e-07;-3.0283499e-07;-3.44737e-07;-4.3497201e-07;
-7.6165901e-07;-9.1683398e-07;-1.49352e-06;-1.55439e-06;-1.38957e-06;-1.08458e-06;-6.97046e-07;-3.0314601e-07;-1.15343e-07;4.1362899e-08;
5.7222297e-07;5.5686201e-07;7.5491801e-07;3.5626201e-07;-3.5264801e-08;-3.6204801e-07;-7.3618298e-07;-1.20113e-06;-3.6726201e-06;-3.38208e-06;
-2.73039e-06;-2.44853e-06;-2.1580099e-06;-1.86866e-06;-1.58594e-06;-1.3765e-06;-1.8959601e-06;-1.49725e-06;-1.05025e-06;-7.3136903e-07;
-4.9578e-07;-3.4115101e-07;-2.4981901e-07;3.42758e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;-4.1080899e-08;-2.08711e-08;2.0262499e-08;8.5438103e-08;1.7315899e-07;
2.7588101e-07;3.80155e-07;1.56263e-07;-2.83145e-07;-5.2335702e-07;-8.7422302e-07;-1.33203e-06;-1.86492e-06;-2.4097601e-06;-2.8894899e-06;
-1.8345499e-06;-1.72101e-06;-1.54013e-06;-1.2129e-06;-7.98283e-07;-3.80177e-07;-4.8040199e-08;1.26085e-07;6.3454799e-08;-3.92007e-08;
-2.5498201e-07;-5.2224402e-07;-7.96775e-07;-1.04008e-06;-1.2271699e-06;-1.45273e-06;-1.70829e-06;-1.45578e-06;-1.23504e-06;-1.00556e-06;
-7.9315203e-07;-6.1607398e-07;-4.8521298e-07;-3.1886401e-07;-3.2516201e-07;-2.7719699e-07;-3.2029899e-07;-3.81695e-07;-4.44146e-07;-4.8709802e-07;
-4.9329498e-07;-4.05023e-07;-6.1054499e-07;-5.66452e-07;-4.7840501e-07;-4.27196e-07;-4.2815699e-07;-4.8252798e-07;-5.7405703e-07;-6.7882303e-07;
-1.13844e-06;-1.43333e-06;-1.28533e-06;-1.02314e-06;-6.9714099e-07;-3.7321601e-07;-1.14153e-07;3.35772e-07;9.2827997e-07;7.4492601e-07;
5.3237699e-07;2.61206e-07;-6.7405099e-09;-2.29929e-07;-3.9136299e-07;-7.8630302e-07;-2.17917e-06;-2.4396099e-06;-2.3345201e-06;-2.2576401e-06;
-2.1900901e-06;-2.10488e-06;-1.9782401e-06;-1.63151e-06;-2.89543e-06;-2.39168e-06;-1.8465799e-06;-1.34035e-06;-9.23421e-07;-6.1363102e-07;
-4.03256e-07;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;-9.6518903e-08;-8.9299697e-08;-5.6367998e-08;9.7237596e-09;1.11687e-07;2.4490399e-07;3.9637101e-07;
1.8201e-07;-4.9513801e-07;-8.5817999e-07;-1.38982e-06;-2.0862799e-06;-2.89992e-06;-3.7336899e-06;-4.45968e-06;-2.8147599e-06;-2.6928601e-06;
-2.43366e-06;-1.95146e-06;-1.3333e-06;-7.0441399e-07;-1.98994e-07;1.9797299e-07;1.06278e-07;-1.6622501e-07;-5.8398598e-07;-1.10235e-06;
-1.64178e-06;-2.12439e-06;-2.4879701e-06;-2.82414e-06;-2.9718201e-06;-2.4993701e-06;-2.0467e-06;-1.56507e-06;-1.1075e-06;-7.1515899e-07;
-4.16581e-07;-1.90525e-08;-5.61127e-08;9.8611403e-09;-8.87689e-08;-2.21298e-07;-3.6103299e-07;-4.8105301e-07;-5.59775e-07;-8.7168399e-07;
-1.2253601e-06;-9.9098202e-07;-8.5024402e-07;-7.6722199e-07;-7.6015601e-07;-8.2435702e-07;-9.3189499e-07;-1.0151e-06;-1.5934e-06;-1.54857e-06;
-1.3689501e-06;-1.06791e-06;-7.0660298e-07;-3.6393101e-07;-1.12495e-07;-9.0994398e-08;5.00216e-07;5.2219099e-07;3.6046401e-07;1.59832e-07;
-2.17241e-08;-1.56064e-07;-2.4600001e-07;-8.5615e-07;-2.3144801e-06;-2.3157199e-06;-2.5003801e-06;-2.8468601e-06;-3.24045e-06;-3.5517401e-06;
-3.6763499e-06;-3.36271e-06;-6.15104e-06;-5.21536e-06;-4.1140502e-06;-3.0277799e-06;-2.0852999e-06;-1.35038e-06;-8.2960798e-07;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-9.68829e-08;-1.14524e-07;-1.29396e-07;-1.27666e-07;-1.00577e-07;-4.1391399e-08;5.3504301e-08;1.79162e-07;-3.28928e-07;-5.5250399e-07;
-9.0343201e-07;-1.41341e-06;-2.0785999e-06;-2.85172e-06;-3.6425299e-06;-4.3004302e-06;-2.67323e-06;-2.5194099e-06;-2.2500201e-06;-1.75451e-06;
-1.12795e-06;-4.9353298e-07;2.89338e-09;3.20314e-07;9.8441603e-08;-1.66455e-07;-6.1616902e-07;-1.23673e-06;-1.89293e-06;-2.49144e-06;
-3.04894e-06;-3.43038e-06;-3.14407e-06;-2.7083599e-06;-2.1220401e-06;-1.51974e-06;-9.2397102e-07;-4.0015499e-07;1.01738e-08;3.1504999e-07;
5.1623101e-07;4.8844998e-07;2.85997e-07;3.0991099e-08;-2.45553e-07;-5.0088602e-07;-5.0530798e-07;-4.2400401e-07;-1.05636e-06;-1.08571e-06;
-1.08744e-06;-9.6012502e-07;-8.99329e-07;-9.06997e-07;-8.9590998e-07;-9.5392397e-07;-1.53647e-06;-1.47821e-06;-1.3218699e-06;-1.07833e-06;
-7.9448398e-07;-5.3206702e-07;-3.4068799e-07;-2.7781601e-07;2.26122e-07;2.4130699e-07;1.5197401e-07;1.33624e-07;1.39452e-07;1.70996e-07;
1.84721e-07;8.2576101e-08;-8.4609701e-07;-9.9532804e-07;-1.395e-06;-2.1078799e-06;-2.88245e-06;-3.5417499e-06;-3.9439001e-06;-3.75321e-06;
-7.2064699e-06;-6.2361501e-06;-5.1009001e-06;-3.8062401e-06;-2.6370999e-06;-1.69364e-06;-1.00492e-06;-1.10128e-06;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;-8.7334399e-08;-1.40815e-07;
-1.50952e-07;-1.75929e-07;-1.8500199e-07;-1.67191e-07;-1.1527e-07;-2.5651801e-08;-3.7187999e-07;-5.5435203e-07;-9.0813302e-07;-1.38109e-06;
-1.98987e-06;-2.69467e-06;-3.3859701e-06;-3.94675e-06;-2.36405e-06;-2.3079799e-06;-1.85901e-06;-1.34369e-06;-7.0121803e-07;-7.0830197e-08;
4.8646399e-07;7.5712597e-07;2.6628001e-07;-8.38765e-08;-5.8021902e-07;-1.2344e-06;-1.99176e-06;-2.7690401e-06;-3.44969e-06;-3.75488e-06;
-3.2043499e-06;-2.7742001e-06;-2.1649601e-06;-1.44777e-06;-7.5777399e-07;-1.2712199e-07;4.2220901e-07;6.8645801e-07;8.7035698e-07;7.7896601e-07;
5.6277997e-07;1.9733901e-07;-1.9725699e-07;-3.9313599e-07;-4.6979599e-07;-7.0180897e-07;-1.32492e-06;-1.17011e-06;-1.23053e-06;-1.26542e-06;
-1.16399e-06;-1.05627e-06;-1.04628e-06;-1.05579e-06;-1.55566e-06;-1.50976e-06;-1.32414e-06;-1.1204e-06;-8.8335599e-07;-6.8165599e-07;
-5.5330003e-07;-5.0515303e-07;-8.3918998e-08;2.2699099e-08;1.11809e-07;1.5495399e-07;3.3286e-07;5.0078802e-07;5.0759297e-07;5.8739499e-07;
9.1304503e-07;5.7081598e-07;-1.80624e-07;-1.1373201e-06;-2.2542499e-06;-3.2308101e-06;-3.60424e-06;-3.9676702e-06;-7.8703797e-06;-6.9503499e-06;
-5.6713302e-06;-4.31944e-06;-3.00753e-06;-1.92228e-06;-1.63212e-06;-1.0466e-06;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;-7.3812402e-08;-1.26719e-07;-2.02096e-07;-2.0061e-07;
-2.37984e-07;-2.5741599e-07;-2.4707401e-07;-1.9694301e-07;-3.7710299e-07;-5.5711803e-07;-8.2003402e-07;-1.28792e-06;-1.81027e-06;-2.40535e-06;
-2.97474e-06;-3.4043801e-06;-1.9254001e-06;-1.7922e-06;-1.43287e-06;-7.8392799e-07;-1.4122e-07;5.3597e-07;1.04004e-06;1.32168e-06;
4.8325001e-07;1.09144e-07;-4.7279599e-07;-1.18766e-06;-1.9803399e-06;-2.8669999e-06;-3.50717e-06;-3.8718399e-06;-3.11235e-06;-2.71669e-06;
-2.0863999e-06;-1.4013e-06;-6.5355601e-07;9.6168698e-08;5.80429e-07;8.8128797e-07;1.01935e-06;9.1319998e-07;6.8291303e-07;2.28784e-07;
-1.15653e-07;-3.3210401e-07;-7.3622402e-07;-1.03644e-06;-1.60913e-06;-1.52746e-06;-1.3891801e-06;-1.49019e-06;-1.50876e-06;-1.38025e-06;
-1.3359e-06;-1.2793701e-06;-1.70904e-06;-1.61003e-06;-1.44157e-06;-1.19816e-06;-1.03551e-06;-8.20639e-07;-7.4106498e-07;-6.83032e-07;
-3.17667e-07;-1.39824e-07;7.3856597e-08;3.1878901e-07;4.9714703e-07;6.9803502e-07;9.2054501e-07;1.03098e-06;2.61881e-06;2.10294e-06;
1.1264e-06;-1.49729e-07;-1.46274e-06;-2.37367e-06;-3.3700401e-06;-3.88033e-06;-7.9917399e-06;-7.19031e-06;-5.9592298e-06;-4.5658098e-06;
-3.1617999e-06;-2.32302e-06;-1.52631e-06;-9.3966599e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;-5.8290698e-08;-1.07898e-07;-1.8167501e-07;-2.7947999e-07;-2.605e-07;-3.0894699e-07;
-3.34118e-07;-3.2159701e-07;-3.5436099e-07;-5.2294098e-07;-7.5978897e-07;-1.03704e-06;-1.54929e-06;-2.0192699e-06;-2.44544e-06;-2.7282999e-06;
-1.41179e-06;-1.20649e-06;-7.99048e-07;-2.2782299e-07;4.76634e-07;1.09875e-06;1.5938e-06;1.8795e-06;6.8941e-07;3.0540801e-07;
-2.8536201e-07;-9.8690998e-07;-1.88765e-06;-2.67682e-06;-3.3627e-06;-3.7718301e-06;-2.8782199e-06;-2.5510401e-06;-1.98055e-06;-1.25004e-06;
-5.3156299e-07;6.9661901e-08;5.6198098e-07;8.7379698e-07;9.5523001e-07;8.5183598e-07;6.0817001e-07;3.5007599e-07;-6.8341301e-08;-5.6956202e-07;
-1.01546e-06;-1.3737e-06;-1.85583e-06;-1.85917e-06;-1.7981801e-06;-1.66064e-06;-1.69988e-06;-1.7998e-06;-1.69592e-06;-1.57385e-06;
-1.94992e-06;-1.78433e-06;-1.56894e-06;-1.3845701e-06;-1.04915e-06;-9.8756198e-07;-8.93341e-07;-8.0976099e-07;-4.7652401e-07;-2.3848099e-07;
5.7073901e-08;4.25548e-07;7.7204902e-07;9.5694497e-07;1.23128e-06;1.36587e-06;4.05329e-06;3.4016e-06;2.2716999e-06;8.3558001e-07;
-3.45486e-07;-1.8121e-06;-2.9225901e-06;-3.54483e-06;-7.6239398e-06;-6.98654e-06;-5.8814599e-06;-4.5708298e-06;-3.2436999e-06;-2.11883e-06;
-1.36046e-06;-8.0590002e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;-4.2736001e-08;-8.7011799e-08;-1.54201e-07;-2.4734999e-07;-3.6271899e-07;-3.23965e-07;-3.75518e-07;-3.9449401e-07;
-3.18426e-07;-4.68423e-07;-6.2436499e-07;-8.6467497e-07;-1.1359e-06;-1.57452e-06;-1.85151e-06;-1.9911099e-06;-8.8829501e-07;-6.31077e-07;
-2.0285999e-07;3.64919e-07;9.86695e-07;1.54668e-06;2.0196901e-06;2.29784e-06;8.30749e-07;4.5627399e-07;-2.43641e-08;-7.1542598e-07;
-1.53397e-06;-2.4138701e-06;-3.0286899e-06;-3.45796e-06;-2.51755e-06;-2.2807401e-06;-1.82735e-06;-1.08572e-06;-4.2243801e-07;-2.6815e-08;
3.9325599e-07;6.9006001e-07;7.25257e-07;6.4148998e-07;4.3556e-07;3.4306299e-07;-2.40604e-08;-7.9405402e-07;-1.23701e-06;-1.63406e-06;
-1.99228e-06;-2.0796001e-06;-2.09121e-06;-1.91558e-06;-1.85431e-06;-1.99602e-06;-2.0308601e-06;-1.8521999e-06;-2.18587e-06;-1.9521401e-06;
-1.75294e-06;-1.30875e-06;-1.1614e-06;-1.04066e-06;-9.8325904e-07;-8.68298e-07;-5.4680902e-07;-2.67568e-07;1.01753e-07;5.7609401e-07;
9.7272903e-07;1.31217e-06;1.4209101e-06;1.57034e-06;5.0603398e-06;4.32242e-06;3.11904e-06;1.9715601e-06;2.7649e-07;-1.2304801e-06;
-2.3676801e-06;-3.0541401e-06;-6.8949098e-06;-6.4382298e-06;-5.5097598e-06;-3.9738202e-06;-3.00119e-06;-2.1217199e-06;-1.16774e-06;-6.7237301e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-2.8753e-08;-6.5043402e-08;-1.2360501e-07;-2.07779e-07;-3.15378e-07;-4.3600701e-07;-3.76364e-07;-4.1822099e-07;-2.83015e-07;-3.7017799e-07;
-5.0777498e-07;-6.6956198e-07;-8.3955803e-07;-9.8616795e-07;-1.24807e-06;-1.26381e-06;-4.1276201e-07;-1.31368e-07;2.78003e-07;7.8399e-07;
1.33452e-06;1.85727e-06;2.21913e-06;2.4844401e-06;8.7459603e-07;6.4172701e-07;2.0439001e-07;-4.54158e-07;-1.1882699e-06;-1.9085401e-06;
-2.6032701e-06;-2.95479e-06;-2.0560501e-06;-1.9291999e-06;-1.47767e-06;-1.03387e-06;-5.1164102e-07;6.3985999e-09;1.7507099e-07;3.88377e-07;
4.03526e-07;3.40687e-07;3.6399999e-07;7.9999801e-08;-2.4395001e-07;-5.8049102e-07;-1.36141e-06;-1.7515e-06;-1.9638101e-06;-2.11971e-06;
-2.06698e-06;-2.12588e-06;-2.1036701e-06;-2.0024199e-06;-2.0791199e-06;-2.03082e-06;-2.32709e-06;-2.11061e-06;-1.5876e-06;-1.37032e-06;
-1.18254e-06;-1.03077e-06;-9.1113299e-07;-8.4366502e-07;-5.1885797e-07;-1.95046e-07;2.7174099e-07;6.8116901e-07;1.0946e-06;1.4596e-06;
1.69805e-06;1.64882e-06;5.5759601e-06;4.8045599e-06;3.9572001e-06;2.37481e-06;7.5233601e-07;-6.9938801e-07;-1.8186799e-06;-2.5126301e-06;
-5.9679401e-06;-5.6804101e-06;-4.35623e-06;-3.55625e-06;-2.70705e-06;-1.92944e-06;-1.28837e-06;-5.5935902e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;-4.44196e-08;
-9.2749403e-08;-1.64959e-07;-2.60294e-07;-3.70647e-07;-4.7951897e-07;-5.6391701e-07;-1.9986e-07;-3.1044999e-07;-3.8971501e-07;-4.69291e-07;
-5.3718099e-07;-5.7260303e-07;-5.4655101e-07;-4.22829e-07;-6.52255e-08;2.4647201e-07;5.9930801e-07;1.02097e-06;1.46938e-06;1.891e-06;
2.23237e-06;2.54771e-06;1.56888e-06;7.2452798e-07;3.1021901e-07;-2.23242e-07;-8.2678298e-07;-1.43161e-06;-1.9567101e-06;-2.29902e-06;
-1.37056e-06;-1.38207e-06;-1.21729e-06;-9.3128398e-07;-5.78315e-07;-2.19616e-07;8.9872501e-08;4.7460199e-07;5.60263e-07;1.9607801e-07;
6.3601703e-08;-1.3741101e-07;-3.8982e-07;-6.8106698e-07;-1.00033e-06;-1.23103e-06;-1.1378301e-06;-1.83764e-06;-2.0126299e-06;-2.1169401e-06;
-2.1375299e-06;-2.07008e-06;-1.92125e-06;-1.43145e-06;-1.71162e-06;-1.8752e-06;-1.59044e-06;-1.3280099e-06;-1.10889e-06;-9.3711901e-07;
-7.9884001e-07;-6.4903202e-07;-5.4392899e-07;-1.5903201e-08;3.5963399e-07;7.6667902e-07;1.16441e-06;1.50439e-06;1.73943e-06;2.1429501e-06;
6.1389501e-06;5.2154901e-06;3.9874499e-06;2.5301799e-06;1.03964e-06;-2.98516e-07;-1.34292e-06;-1.95184e-06;-4.3190498e-06;-4.2270799e-06;
-3.76916e-06;-3.1105801e-06;-2.39818e-06;-1.73641e-06;-1.18249e-06;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;-4.9273201e-08;-1.17146e-07;-2.2265201e-07;
-3.66477e-07;-5.38248e-07;-7.1446198e-07;-8.60829e-07;-3.1327301e-07;-5.47296e-07;-6.02657e-07;-6.2420901e-07;-6.0063502e-07;-5.1318199e-07;
-3.33928e-07;-3.0818899e-08;2.93959e-07;9.6165002e-07;1.52976e-06;2.17869e-06;2.8495999e-06;3.4688301e-06;3.9634101e-06;4.1344201e-06;
2.5572799e-06;1.4782501e-06;9.88907e-07;3.5797001e-07;-3.6149299e-07;-1.09625e-06;-1.7588e-06;-2.3861e-06;-1.31672e-06;-1.29911e-06;
-1.19588e-06;-9.3683502e-07;-5.8912201e-07;-2.3131e-07;6.6083899e-08;1.2438601e-07;2.07607e-07;1.00077e-07;-1.1988401e-07;-4.5322e-07;
-8.8362299e-07;-1.39572e-06;-1.9700999e-06;-2.6328701e-06;-2.40948e-06;-3.1178799e-06;-3.3501301e-06;-3.47269e-06;-3.4669199e-06;-3.32946e-06;
-3.07498e-06;-2.54409e-06;-3.0193701e-06;-2.6590401e-06;-2.2563299e-06;-1.9303e-06;-1.68002e-06;-1.4769701e-06;-1.27603e-06;-1.05815e-06;
-9.5944301e-07;-6.11372e-08;6.0737301e-07;1.31029e-06;1.9746401e-06;2.52021e-06;2.8755601e-06;3.2663099e-06;9.2869604e-06;7.9843703e-06;
6.2833301e-06;4.3011701e-06;2.2962199e-06;5.0523602e-07;-8.98373e-07;-2.2597401e-06;-5.1526299e-06;-5.1299899e-06;-4.6313498e-06;-3.8663702e-06;
-3.0199201e-06;-2.2224101e-06;-1.54527e-06;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;6.3674701e-09;-2.63658e-08;-7.83863e-08;-1.6286e-07;-2.81713e-07;-4.2759899e-07;
-5.81797e-07;-7.1586697e-07;-2.2918999e-07;-4.3502899e-07;-4.13902e-07;-3.3881599e-07;-2.06986e-07;-1.59016e-08;2.23893e-07;5.4837e-07;
5.6376598e-07;1.10872e-06;1.54391e-06;2.0264799e-06;2.51804e-06;2.96965e-06;3.3277399e-06;3.5109199e-06;2.27584e-06;1.29527e-06;
9.1259102e-07;4.8562902e-07;-8.7173397e-09;-5.2582197e-07;-8.1691798e-07;-1.34955e-06;-5.9335002e-07;-7.3185203e-07;-7.2392999e-07;-6.6265397e-07;
-5.4089702e-07;-4.03418e-07;-2.3958e-07;-1.40644e-07;-1.6344001e-07;-2.3197001e-07;-4.5413299e-07;-6.64526e-07;-9.6045699e-07;-1.34454e-06;
-1.9327999e-06;-2.50217e-06;-2.0483899e-06;-2.64868e-06;-2.9620101e-06;-3.1126799e-06;-3.14353e-06;-3.0460001e-06;-2.8229199e-06;-2.2208301e-06;
-2.8900399e-06;-2.4912199e-06;-2.06915e-06;-1.73301e-06;-1.46848e-06;-1.25264e-06;-1.03616e-06;-7.92273e-07;-7.2395301e-07;5.56158e-08;
6.3814599e-07;1.24435e-06;1.80913e-06;2.26516e-06;2.5130701e-06;2.98802e-06;7.8809499e-06;6.83795e-06;5.4166399e-06;3.7391701e-06;
2.0575901e-06;5.65677e-07;-5.9858297e-07;-1.71974e-06;-3.98062e-06;-3.98565e-06;-3.6408501e-06;-3.0848801e-06;-2.4613801e-06;-1.86715e-06;
-1.35368e-06;-3.0800001e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;9.9865902e-09;1.7030899e-08;-4.6574002e-08;-1.11859e-07;-2.06945e-07;-3.2689499e-07;-4.5719301e-07;-5.7487898e-07;
-1.5421401e-07;-9.08068e-08;-2.25794e-07;-7.38466e-08;1.3776599e-07;3.6160401e-07;6.54735e-07;9.79064e-07;7.4574001e-07;9.5259702e-07;
1.4490799e-06;1.77748e-06;2.10548e-06;2.3903699e-06;2.5737199e-06;2.73511e-06;1.78773e-06;1.79949e-06;8.4429502e-07;5.4860197e-07;
2.5738601e-07;1.2700001e-07;-3.1212201e-07;-4.63703e-07;-4.3649798e-08;-2.1592e-07;-3.1097201e-07;-3.4421001e-07;-4.0269799e-07;-4.3163999e-07;
-4.31117e-07;-4.5149e-07;-5.1252601e-07;-5.1682503e-07;-6.1425402e-07;-8.1050098e-07;-9.8056898e-07;-1.36518e-06;-1.78596e-06;-2.2260799e-06;
-1.6594799e-06;-1.9148099e-06;-2.43519e-06;-2.64445e-06;-2.69979e-06;-2.62049e-06;-2.14691e-06;-1.95962e-06;-2.58296e-06;-2.15409e-06;
-1.83305e-06;-1.49471e-06;-1.2397099e-06;-1.02974e-06;-8.2193998e-07;-6.5698998e-07;-5.8094702e-07;-1.75114e-07;5.8022198e-07;1.12296e-06;
1.59096e-06;1.93354e-06;2.5423701e-06;2.4988899e-06;6.5578802e-06;5.6767199e-06;4.4599701e-06;3.09492e-06;1.71326e-06;4.9878599e-07;
-8.3719402e-07;-1.2993301e-06;-3.0773001e-06;-3.0733499e-06;-2.80267e-06;-2.3986599e-06;-1.95081e-06;-1.5249e-06;-4.5363899e-07;-2.9808299e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1.404e-08;2.2393101e-08;3.3145199e-08;-7.0852998e-08;-1.4526e-07;-2.4175799e-07;-3.49234e-07;-4.49422e-07;-7.3770003e-08;2.07398e-10;
1.2782e-07;1.66788e-07;3.50525e-07;6.42788e-07;9.5000001e-07;1.2553299e-06;8.4253003e-07;9.85621e-07;1.0998e-06;1.51545e-06;
1.69176e-06;1.81695e-06;1.95395e-06;2.03529e-06;1.33578e-06;1.34964e-06;1.3364e-06;6.0224602e-07;5.7050698e-07;3.08723e-07;
2.923e-07;2.59323e-07;3.6507001e-07;2.1231899e-07;6.44634e-08;-8.3480003e-08;-2.4859199e-07;-4.1716501e-07;-5.3741599e-07;-6.43796e-07;
-7.4994898e-07;-7.6079698e-07;-7.02595e-07;-8.6356903e-07;-1.13535e-06;-1.34596e-06;-1.62677e-06;-1.97844e-06;-1.3519e-06;-1.58391e-06;
-1.79627e-06;-2.1835799e-06;-2.2296699e-06;-1.9142201e-06;-1.84851e-06;-1.68575e-06;-2.2581e-06;-1.88354e-06;-1.54473e-06;-1.3043e-06;
-1.08519e-06;-8.1311902e-07;-7.4186698e-07;-6.0676098e-07;-5.63306e-07;-2.0493501e-07;1.88558e-07;8.3279502e-07;1.32711e-06;1.98969e-06;
2.06607e-06;2.02714e-06;5.35042e-06;4.6218902e-06;3.6174599e-06;2.4803201e-06;1.35068e-06;-9.1634902e-08;-6.3732602e-07;-9.9569297e-07;
-2.4220501e-06;-2.3754999e-06;-2.14172e-06;-1.82125e-06;-1.48969e-06;-6.3979599e-07;-4.3448301e-07;-2.7613299e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1.8108601e-08;2.73266e-08;
3.8498001e-08;5.07656e-08;-9.7726598e-08;-1.7475099e-07;-2.62431e-07;-3.4621999e-07;2.3109501e-09;8.5177398e-08;2.2099699e-07;2.8200199e-07;
5.1418903e-07;8.10595e-07;1.10775e-06;1.38468e-06;8.6725902e-07;9.6555095e-07;1.02831e-06;1.02076e-06;1.33726e-06;1.42335e-06;
1.47846e-06;1.49484e-06;9.7390796e-07;9.7753696e-07;9.7129498e-07;1.04016e-06;5.2204598e-07;6.1033001e-07;7.0575999e-07;7.75518e-07;
6.2251002e-07;5.1264402e-07;3.7128501e-07;8.3918202e-08;-2.17825e-07;-3.5840699e-07;-5.65611e-07;-7.4212699e-07;-8.9439402e-07;-9.2651999e-07;
-8.6662999e-07;-8.5071503e-07;-1.16607e-06;-1.33983e-06;-1.5422e-06;-1.81118e-06;-1.16896e-06;-1.3706e-06;-1.56875e-06;-1.65161e-06;
-1.6283e-06;-1.65169e-06;-1.58476e-06;-1.44212e-06;-1.9650699e-06;-1.65194e-06;-1.3765e-06;-1.18961e-06;-8.0746599e-07;-8.0976901e-07;
-7.64292e-07;-6.60951e-07;-7.0363598e-07;-3.7906599e-07;-1.34055e-08;3.70002e-07;1.20508e-06;1.56969e-06;1.64354e-06;1.61938e-06;
4.3548898e-06;3.7572299e-06;2.92653e-06;1.9863701e-06;5.1986399e-07;-7.8580399e-08;-5.13327e-07;-7.85282e-07;-1.97023e-06;-1.8655001e-06;
-1.6338799e-06;-1.36024e-06;-8.5479797e-07;-5.9729001e-07;-3.9916699e-07;-2.4752899e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;2.16767e-08;3.1133698e-08;4.1854999e-08;5.2669598e-08;
6.1884101e-08;-1.25805e-07;-1.97525e-07;-2.6721401e-07;6.4236701e-08;1.51973e-07;1.28918e-07;2.9029499e-07;4.9538897e-07;8.5861001e-07;
1.12691e-06;1.37146e-06;8.2617998e-07;9.0105999e-07;9.0881002e-07;8.9350601e-07;8.5233398e-07;1.16121e-06;1.1675e-06;1.13872e-06;
7.2177397e-07;7.0690999e-07;7.19919e-07;6.0710198e-07;7.56242e-07;7.7915598e-07;9.2831698e-07;1.07675e-06;7.3997802e-07;6.8557898e-07;
4.16229e-07;1.08174e-07;-7.0175403e-08;-3.4442601e-07;-5.4247499e-07;-7.6979097e-07;-9.6041595e-07;-1.02004e-06;-1.09244e-06;-9.5172999e-07;
-8.4685502e-07;-1.35173e-06;-1.5194e-06;-1.72075e-06;-1.09301e-06;-1.2632e-06;-1.3503e-06;-1.27856e-06;-1.39091e-06;-1.47104e-06;
-1.35766e-06;-1.22651e-06;-1.69492e-06;-1.44551e-06;-1.29337e-06;-8.18015e-07;-8.6655899e-07;-8.71434e-07;-8.80112e-07;-8.0995397e-07;
-9.9198996e-07;-6.8437498e-07;-2.9071299e-07;4.0036201e-07;6.5035698e-07;9.3457601e-07;1.30159e-06;1.2967899e-06;3.5916501e-06;3.09857e-06;
2.40242e-06;9.8708006e-07;4.5487101e-07;-2.3556201e-08;-4.4136601e-07;-6.4545998e-07;-1.67043e-06;-1.509e-06;-1.26244e-06;-1.06602e-06;
-7.9919101e-07;-5.6119399e-07;-3.54365e-07;-2.17644e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;2.42255e-08;3.3202301e-08;4.25952e-08;5.1022301e-08;5.6731999e-08;5.7890801e-08;
-1.52341e-07;-2.1047801e-07;1.0484e-07;2.7322899e-08;1.16583e-07;2.5251001e-07;4.3206899e-07;6.4264299e-07;1.01408e-06;1.2238e-06;
7.2308001e-07;7.5302398e-07;7.8947397e-07;8.0694798e-07;7.8852099e-07;7.2863202e-07;9.9932902e-07;9.4732297e-07;5.7219802e-07;5.3953102e-07;
3.8480201e-07;4.7473301e-07;6.0617401e-07;7.8019002e-07;9.9312695e-07;1.18138e-06;7.4180201e-07;5.6295198e-07;3.1784799e-07;1.95669e-07;
4.4820601e-09;-2.4045599e-07;-5.5609701e-07;-7.4991402e-07;-9.6203598e-07;-1.15102e-06;-1.10131e-06;-1.05109e-06;-9.7243606e-07;-9.05288e-07;
-1.4977001e-06;-1.66493e-06;-1.06615e-06;-1.11553e-06;-1.07745e-06;-1.21572e-06;-1.2832299e-06;-1.27055e-06;-1.19051e-06;-1.00918e-06;
-1.40419e-06;-1.2751e-06;-7.7215498e-07;-8.4294999e-07;-9.4180598e-07;-1.03178e-06;-1.04112e-06;-1.023e-06;-1.38498e-06;-1.03999e-06;
-3.783e-07;-3.8932001e-08;2.7780499e-07;5.3392102e-07;7.4846503e-07;1.05964e-06;3.0308099e-06;2.61793e-06;1.35804e-06;8.8997598e-07;
4.0606801e-07;-1.86624e-08;-3.2945701e-07;-5.5773597e-07;-1.47589e-06;-1.27201e-06;-1.22644e-06;-9.7806196e-07;-7.3187499e-07;-5.137e-07;
-3.3697299e-07;-1.90264e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;3.3144399e-08;4.0474699e-08;4.5880299e-08;4.7729099e-08;4.4540499e-08;3.53776e-08;2.0196101e-08;
1.13769e-11;1.3304e-08;7.3928e-08;1.72976e-07;3.1181401e-07;4.8510901e-07;6.8018801e-07;8.6890702e-07;5.69463e-07;5.8988599e-07;
6.6026598e-07;7.15704e-07;7.4310498e-07;7.3050097e-07;6.7142997e-07;2.35326e-07;8.3257802e-08;3.2153599e-07;3.34183e-07;3.8265401e-07;
4.8041301e-07;6.3451301e-07;8.4044001e-07;9.7536201e-07;6.1841598e-07;3.6066899e-07;3.21046e-07;2.1255801e-07;3.0364799e-08;-2.12815e-07;
-4.8414398e-07;-6.72532e-07;-7.86594e-07;-1.09081e-06;-1.12271e-06;-1.0924e-06;-1.03664e-06;-9.9550596e-07;-9.9869703e-07;-8.8016401e-07;
-4.39921e-07;-8.8792598e-07;-1.00988e-06;-1.09354e-06;-1.11349e-06;-1.06638e-06;-9.6806798e-07;-4.60275e-07;-6.4160798e-07;-6.2342599e-07;
-6.8247999e-07;-8.2028401e-07;-9.9490296e-07;-1.15612e-06;-1.25848e-06;-1.11282e-06;-1.64221e-06;-1.24132e-06;-8.6241499e-07;-4.5078599e-07;
-5.9731398e-08;2.6513101e-07;4.9272899e-07;6.02027e-07;1.69922e-06;1.62959e-06;1.26624e-06;8.2315e-07;3.7283701e-07;-1.5891899e-08;
-2.9439201e-07;-7.2706899e-07;-1.43151e-06;-1.3041e-06;-1.1094299e-06;-8.8611199e-07;-6.66343e-07;-4.7197599e-07;-3.14088e-07;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;9.2679301e-08;1.07101e-07;1.13585e-07;1.08058e-07;8.7495501e-08;5.0915101e-08;7.4912e-11;-2.01363e-08;9.8869698e-08;
1.55359e-07;2.8056601e-07;4.9816498e-07;8.2310498e-07;1.25439e-06;1.76973e-06;1.26269e-06;1.21843e-06;1.43683e-06;1.59411e-06;
1.66905e-06;1.64971e-06;1.53392e-06;1.32964e-06;6.02113e-07;6.4725998e-07;6.03822e-07;6.6819598e-07;8.8318501e-07;1.2728e-06;
1.83001e-06;2.4977301e-06;1.54681e-06;8.2739001e-07;7.5409099e-07;4.6137001e-07;-5.81372e-08;-7.53189e-07;-1.51518e-06;-1.99802e-06;
-2.3247901e-06;-3.1371001e-06;-3.2169301e-06;-3.09854e-06;-2.9027599e-06;-2.76375e-06;-2.78064e-06;-2.8775701e-06;-1.54139e-06;-1.68211e-06;
-1.90324e-06;-2.01029e-06;-1.93796e-06;-1.69459e-06;-1.35091e-06;-8.7894801e-07;-1.11078e-06;-1.21791e-06;-1.54256e-06;-2.1431599e-06;
-2.8658501e-06;-3.5318701e-06;-3.9820202e-06;-4.1350099e-06;-6.3316602e-06;-5.1597899e-06;-3.9484198e-06;-2.6334501e-06;-1.38905e-06;-3.4588601e-07;
4.1972001e-07;1.7651e-06;4.9922701e-06;4.2813299e-06;3.28398e-06;2.15359e-06;1.04384e-06;8.1631399e-08;-6.5065302e-07;-1.95354e-06;
-3.8436501e-06;-3.5067001e-06;-2.99576e-06;-2.4112001e-06;-1.83545e-06;-1.32376e-06;-9.0396799e-07;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;8.0186297e-08;
8.6694499e-08;8.4079097e-08;6.94004e-08;4.1163499e-08;4.3645299e-11;-5.0797901e-08;-4.38667e-07;-4.9776499e-08;-8.9721802e-08;-9.5494798e-08;
-3.7822101e-08;1.14029e-07;3.8487599e-07;7.84539e-07;5.8970102e-07;7.4356598e-07;1.0816e-06;1.41241e-06;1.69227e-06;1.87909e-06;
1.9398301e-06;1.8566e-06;9.7503096e-07;9.1195301e-07;7.7975e-07;7.1169097e-07;7.6276501e-07;9.7283896e-07;1.35314e-06;1.89149e-06;
6.3525499e-07;4.4735299e-07;3.83122e-07;1.3083201e-07;-3.2308199e-07;-9.3680097e-07;-1.61274e-06;-2.1872399e-06;-2.5669101e-06;-2.9932401e-06;
-3.0491899e-06;-2.92338e-06;-2.7282799e-06;-2.5875099e-06;-2.5900799e-06;-2.6007201e-06;-1.0349499e-06;-1.29687e-06;-1.39861e-06;-1.38006e-06;
-1.19173e-06;-8.5934101e-07;-4.6976501e-07;-1.68399e-07;-4.41533e-08;-1.85712e-07;-7.7952802e-07;-1.69829e-06;-2.74899e-06;-3.71243e-06;
-4.3956002e-06;-4.7130902e-06;-7.31923e-06;-6.2396598e-06;-4.88863e-06;-3.3794299e-06;-1.9276299e-06;-6.9551697e-07;2.2253199e-07;8.2299601e-07;
4.8101801e-06;4.1642402e-06;3.2396599e-06;2.1831099e-06;1.1403999e-06;2.30867e-07;-4.6863701e-07;-1.4562401e-06;-3.39864e-06;-3.13143e-06;
-2.70687e-06;-2.2111799e-06;-1.71549e-06;-1.26801e-06;-8.9393302e-07;-2.20914e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;6.2947997e-08;5.2966602e-08;
3.2021301e-08;1.9529101e-11;-4.11031e-08;-8.7409802e-08;-4.0814299e-07;-6.43475e-07;-2.9908401e-07;-4.2376399e-07;-5.1922598e-07;-5.4371901e-07;
-4.5105699e-07;-2.02051e-07;4.45309e-08;3.8799101e-07;6.6812697e-07;1.1396299e-06;1.59883e-06;1.97851e-06;2.2178599e-06;2.27428e-06;
1.22834e-06;1.05485e-06;9.2917998e-07;7.4175802e-07;6.2663298e-07;6.3367298e-07;8.1578099e-07;1.10887e-06;1.7514201e-07;2.66424e-07;
-1.00298e-07;-3.33316e-07;-7.2534698e-07;-1.24305e-06;-1.77657e-06;-2.2568299e-06;-2.50989e-06;-2.6864e-06;-2.7767901e-06;-2.5990601e-06;
-2.36091e-06;-2.1727601e-06;-1.96421e-06;-2.06353e-06;-4.3823201e-07;-3.96057e-07;-5.24011e-07;-3.9431501e-07;-1.2053199e-07;2.58016e-07;
5.7996698e-07;8.6744001e-07;1.38353e-06;1.01873e-06;1.6004699e-07;-1.0577201e-06;-2.40706e-06;-3.63917e-06;-4.5462598e-06;-5.0213498e-06;
-8.02471e-06;-7.09905e-06;-5.5601899e-06;-3.9311099e-06;-2.3392399e-06;-9.7135899e-07;8.3491003e-08;7.1297302e-07;4.6085001e-06;4.0525701e-06;
3.21946e-06;2.2463601e-06;1.27063e-06;4.0563401e-07;-7.86692e-07;-1.1511499e-06;-2.9585101e-06;-2.7849201e-06;-2.4588901e-06;-2.0540001e-06;
-1.63326e-06;-1.24141e-06;-5.2461502e-07;-3.14365e-07;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;2.39695e-08;5.7222799e-12;-3.1998599e-08;
-6.9362002e-08;-1.08e-07;-3.5511101e-07;-5.8371501e-07;-9.01357e-07;-6.6316602e-07;-8.8649898e-07;-1.0681e-06;-1.14691e-06;-1.06024e-06;
-4.27766e-07;-1.00103e-07;3.5160599e-07;8.34373e-07;1.4306401e-06;1.97034e-06;2.3703201e-06;2.5692e-06;1.40166e-06;1.24616e-06;
9.9794897e-07;7.6303201e-07;4.9436602e-07;3.1677001e-07;2.26167e-07;2.56291e-07;-2.8715499e-07;-3.1689501e-07;-3.6578899e-07;-8.8657498e-07;
-1.22626e-06;-1.62958e-06;-2.0489699e-06;-2.3871801e-06;-2.4757301e-06;-2.53454e-06;-2.3923999e-06;-2.21446e-06;-1.90327e-06;-1.54118e-06;
-1.3714e-06;-1.33472e-06;3.4282201e-07;4.9601999e-07;6.6125102e-07;7.5508302e-07;1.07976e-06;1.40868e-06;1.73768e-06;1.9173799e-06;
2.7637e-06;2.18988e-06;1.0822901e-06;-3.5510999e-07;-1.9286199e-06;-3.25772e-06;-4.4302001e-06;-5.03004e-06;-8.2733604e-06;-7.3952901e-06;
-5.98823e-06;-4.2414999e-06;-2.5956001e-06;-1.0728101e-06;-6.2786597e-08;6.1649098e-07;4.4039898e-06;3.9556899e-06;3.23013e-06;2.3514399e-06;
1.4465101e-06;2.1561701e-07;-3.9613499e-07;-8.1889999e-07;-2.5045999e-06;-2.4445501e-06;-2.2286499e-06;-1.9184199e-06;-1.57074e-06;-9.7727502e-07;
-6.6280001e-07;-4.17488e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;-2.3965301e-08;-5.2955301e-08;-8.4057199e-08;-1.13549e-07;
-2.8871699e-07;-4.9973897e-07;-8.0722202e-07;-1.21729e-06;-1.11031e-06;-1.41356e-06;-1.63701e-06;-1.70227e-06;-7.8015398e-07;-4.8916201e-07;
-3.7605499e-08;5.3409701e-07;1.22081e-06;1.87214e-06;2.3995001e-06;2.7246999e-06;1.49319e-06;1.36811e-06;1.11391e-06;7.6632199e-07;
3.8461599e-07;4.4119202e-09;-3.2272399e-07;-5.6500602e-07;-7.0523498e-07;-8.6762299e-07;-1.01649e-06;-1.16862e-06;-1.75846e-06;-2.0673201e-06;
-2.3565699e-06;-2.54934e-06;-2.4661599e-06;-2.3969801e-06;-2.15657e-06;-1.78759e-06;-1.44154e-06;-1.04669e-06;-7.5257202e-07;-5.6765703e-07;
1.1254e-06;1.38802e-06;1.64302e-06;1.9535601e-06;2.1989799e-06;2.52001e-06;2.75911e-06;2.8157001e-06;3.8725898e-06;3.1279301e-06;
1.85939e-06;2.43687e-07;-1.1357e-06;-2.82879e-06;-4.0786699e-06;-4.7539902e-06;-8.0565296e-06;-7.2663602e-06;-5.9323502e-06;-4.3277601e-06;
-2.4680301e-06;-1.1835e-06;-1.69861e-07;5.2584801e-07;4.1747899e-06;3.8438802e-06;3.24035e-06;2.4712101e-06;1.406e-06;6.4787503e-07;
1.00956e-08;-4.64393e-07;-2.0167899e-06;-2.0816601e-06;-1.9850099e-06;-1.77553e-06;-1.47012e-06;-1.11188e-06;-7.8705199e-07;-5.1998302e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;-6.2943897e-08;-8.6683897e-08;-1.07081e-07;-2.1862201e-07;-4.0444499e-07;
-6.8884498e-07;-1.0835701e-06;-1.5753e-06;-1.57396e-06;-1.90248e-06;-2.09218e-06;-9.9791203e-07;-7.5689098e-07;-3.34584e-07;2.3782501e-07;
8.9284703e-07;1.69924e-06;2.30705e-06;2.7272099e-06;1.50568e-06;1.41754e-06;1.17413e-06;7.8414001e-07;3.1387799e-07;-2.43908e-07;
-7.7267799e-07;-1.25757e-06;-1.03996e-06;-1.32465e-06;-1.56717e-06;-1.79344e-06;-1.9424499e-06;-2.4588601e-06;-2.63123e-06;-2.6938101e-06;
-2.4624501e-06;-2.2783499e-06;-1.9506799e-06;-1.5939301e-06;-1.0707899e-06;-6.2237399e-07;-2.17299e-07;1.02811e-07;1.74826e-06;2.10591e-06;
2.4335e-06;2.82472e-06;3.1546399e-06;3.35398e-06;3.49573e-06;3.43434e-06;4.5584102e-06;3.7038899e-06;2.36863e-06;1.16567e-06;
-7.2664602e-07;-2.3170001e-06;-3.5518899e-06;-4.2444699e-06;-7.41953e-06;-6.7456999e-06;-5.55313e-06;-3.7480099e-06;-2.39526e-06;-1.20714e-06;
-2.45889e-07;4.2888701e-07;3.8799099e-06;3.6676499e-06;3.1975001e-06;2.47804e-06;1.7539001e-06;1.0373e-06;4.02209e-07;-1.03695e-07;
-1.48785e-06;-1.67627e-06;-1.70184e-06;-1.78343e-06;-1.50706e-06;-1.19001e-06;-8.79889e-07;-6.0895201e-07;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;-8.0182602e-08;-9.2669701e-08;-1.5312899e-07;-3.0989099e-07;-5.6222098e-07;-9.2614198e-07;
-1.39473e-06;-1.92622e-06;-1.9644201e-06;-2.24107e-06;-1.0925399e-06;-9.0702702e-07;-5.3509399e-07;1.14373e-09;6.4478201e-07;1.31092e-06;
2.1026301e-06;2.5765901e-06;1.44644e-06;1.39525e-06;1.1570399e-06;7.7446902e-07;2.5821601e-07;-3.5848799e-07;-1.08466e-06;-1.74934e-06;
-1.26538e-06;-1.6423e-06;-1.98982e-06;-2.21753e-06;-2.3718001e-06;-2.44683e-06;-2.80735e-06;-2.769e-06;-2.4360199e-06;-2.16795e-06;
-1.91207e-06;-1.4015e-06;-8.5153403e-07;-3.1371101e-07;1.64811e-07;5.8540297e-07;2.1058199e-06;2.5315301e-06;2.97057e-06;3.3217e-06;
3.6284e-06;3.8476501e-06;3.8620801e-06;3.70677e-06;4.7655999e-06;3.8739199e-06;3.1034299e-06;1.39746e-06;-3.3440199e-07;-1.86488e-06;
-2.9248499e-06;-3.57879e-06;-6.4566502e-06;-5.9137501e-06;-4.5071902e-06;-3.36278e-06;-2.17961e-06;-1.10897e-06;-3.00209e-07;3.1773899e-07;
3.48546e-06;3.38418e-06;3.0916899e-06;2.5854499e-06;1.97586e-06;1.34001e-06;7.44293e-07;2.3748299e-07;-9.3097998e-07;-1.22678e-06;
-1.68126e-06;-1.6243901e-06;-1.44559e-06;-1.19664e-06;-9.2601499e-07;-6.7119299e-07;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;-2.2531e-07;-4.4102899e-07;-7.6364699e-07;-1.19157e-06;-1.69127e-06;
-2.1923099e-06;-2.5914401e-06;-1.55338e-06;-9.59158e-07;-6.4984403e-07;-1.7444999e-07;4.1868299e-07;1.05421e-06;1.64542e-06;2.1291801e-06;
1.3482201e-06;1.30107e-06;1.1004601e-06;7.3078598e-07;2.0638301e-07;-4.462e-07;-1.18679e-06;-2.1198e-06;-1.48632e-06;-1.8341e-06;
-2.17566e-06;-2.42687e-06;-2.57954e-06;-2.63063e-06;-2.5783399e-06;-2.7006499e-06;-2.1707999e-06;-2.18993e-06;-1.75952e-06;-1.25088e-06;
-7.0591898e-07;-1.65193e-07;3.4638501e-07;8.4551698e-07;1.89859e-06;2.65014e-06;3.0701301e-06;3.4298801e-06;3.7089401e-06;3.8702101e-06;
3.8694102e-06;3.3531301e-06;5.3049598e-06;4.2041602e-06;2.91838e-06;1.4348e-06;-5.3899502e-08;-1.36121e-06;-2.3411201e-06;-3.00646e-06;
-4.9823002e-06;-4.5136999e-06;-3.77367e-06;-2.8433999e-06;-1.87915e-06;-1.0003999e-06;-2.8074001e-07;9.9542001e-07;3.19828e-06;3.0656299e-06;
2.8710699e-06;2.51298e-06;2.04456e-06;1.52314e-06;1.00302e-06;-7.2999399e-08;-6.7866199e-07;-1.07008e-06;-1.2956e-06;-1.35951e-06;
-1.28941e-06;-1.12666e-06;-9.1584502e-07;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;-2.7921001e-07;-6.4144302e-07;-1.19983e-06;-1.95799e-06;-2.8633399e-06;-3.7964601e-06;-4.58246e-06;
-2.80113e-06;-2.20933e-06;-1.6602e-06;-7.6703202e-07;3.70327e-07;1.59793e-06;2.74338e-06;3.65443e-06;2.3748e-06;2.1936901e-06;
1.86173e-06;1.2005e-06;2.2258099e-07;-1.03151e-06;-2.4885501e-06;-4.2798401e-06;-2.9724899e-06;-3.63155e-06;-4.36652e-06;-4.91434e-06;
-5.25212e-06;-5.3723402e-06;-5.2760201e-06;-5.1929901e-06;-4.1831699e-06;-3.60648e-06;-2.85743e-06;-2.0144801e-06;-1.11851e-06;-2.04719e-07;
7.0926899e-07;1.6279899e-06;3.29918e-06;4.8096799e-06;5.73242e-06;6.53391e-06;7.1519798e-06;7.50358e-06;7.5061498e-06;5.7687498e-06;
9.0352996e-06;7.3381698e-06;5.2200598e-06;2.82407e-06;4.5547699e-07;-1.59976e-06;-3.12715e-06;-4.6473101e-06;-7.7247196e-06;-7.0987098e-06;
-5.9621002e-06;-4.5428601e-06;-3.0720901e-06;-1.7212e-06;-5.9299202e-07;1.58694e-06;5.1956199e-06;5.2990399e-06;5.0875501e-06;4.60404e-06;
3.9091801e-06;3.0753699e-06;2.18179e-06;4.24663e-07;-2.09902e-07;-1.08882e-06;-1.70953e-06;-2.04447e-06;-2.1138701e-06;-1.97332e-06;
-1.6960799e-06;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;-1.8712799e-07;-4.7977699e-07;-9.4350298e-07;-1.58647e-06;-2.3689499e-06;-3.19284e-06;-3.9102601e-06;-2.4286701e-06;-1.97175e-06;
-1.54457e-06;-8.1884798e-07;1.2532099e-07;1.16072e-06;2.14288e-06;2.9425e-06;1.95711e-06;1.89684e-06;1.6129e-06;1.02668e-06;
1.45191e-07;-9.9711201e-07;-2.3340001e-06;-3.9849701e-06;-2.7625299e-06;-3.34643e-06;-4.0119598e-06;-4.5013799e-06;-4.7950898e-06;-4.8894799e-06;
-4.7908502e-06;-4.6960199e-06;-3.8104599e-06;-3.32537e-06;-2.6599801e-06;-1.91193e-06;-1.1142e-06;-2.95099e-07;5.3119498e-07;1.3223e-06;
2.535e-06;3.8829298e-06;4.7152298e-06;5.4277598e-06;5.9610402e-06;6.2457698e-06;6.2208201e-06;4.65823e-06;7.23319e-06;5.8349301e-06;
4.1553799e-06;2.29745e-06;4.9256602e-07;-1.04996e-06;-2.1805999e-06;-3.3441499e-06;-5.5750902e-06;-5.1291399e-06;-4.3316199e-06;-3.34932e-06;
-2.3376499e-06;-1.40491e-06;-6.1105601e-07;1.15894e-06;3.8818398e-06;4.0845998e-06;4.0806699e-06;3.8776402e-06;3.49376e-06;2.9595899e-06;
2.3196901e-06;8.6326497e-07;7.6444502e-07;-1.18388e-07;-8.2867803e-07;-1.31161e-06;-1.55584e-06;-1.5880699e-06;-1.46047e-06;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-3.55465e-07;-7.31429e-07;-1.2611901e-06;-1.9147101e-06;-2.61271e-06;-3.23325e-06;-2.0320999e-06;-2.06448e-06;-1.38564e-06;-8.1363902e-07;
-5.8433599e-08;7.7667403e-07;1.57435e-06;2.22992e-06;1.51349e-06;1.61553e-06;1.29644e-06;7.9187998e-07;3.7214299e-08;-9.3642302e-07;
-2.30758e-06;-3.4694699e-06;-2.4089099e-06;-3.06826e-06;-3.44777e-06;-3.8540402e-06;-4.0994701e-06;-4.18229e-06;-4.27137e-06;-4.0190798e-06;
-3.30171e-06;-2.82473e-06;-2.3827499e-06;-1.75506e-06;-1.08601e-06;-4.0107699e-07;2.5323601e-07;9.0028198e-07;1.6835201e-06;2.3426301e-06;
3.49842e-06;4.1036801e-06;4.56006e-06;4.80873e-06;3.62791e-06;3.53525e-06;5.45388e-06;4.48539e-06;3.1177899e-06;1.75768e-06;
4.6028799e-07;-6.2811898e-07;-1.96722e-06;-2.2234101e-06;-3.7136799e-06;-3.42206e-06;-2.88926e-06;-2.2710401e-06;-1.64804e-06;-1.07703e-06;
6.2181198e-07;7.6279599e-07;2.6330299e-06;2.88197e-06;3.0199501e-06;3.0318099e-06;2.90546e-06;2.6385401e-06;1.48361e-06;1.1380999e-06;
1.47611e-06;6.6919802e-07;-4.93438e-08;-6.0914999e-07;-9.7486702e-07;-1.14711e-06;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;-5.6423403e-07;
-9.9072997e-07;-1.52094e-06;-2.09114e-06;-2.60254e-06;-1.64746e-06;-1.68246e-06;-1.54391e-06;-7.5228797e-07;-1.6527e-07;4.8296499e-07;
1.09927e-06;1.60235e-06;1.1042e-06;1.18017e-06;1.1611299e-06;5.2878801e-07;-8.8777099e-08;-1.0761401e-06;-1.93915e-06;-2.85384e-06;
-1.9844499e-06;-2.49091e-06;-2.87291e-06;-3.0953499e-06;-3.2932501e-06;-3.5063799e-06;-3.4433299e-06;-3.27212e-06;-2.7353699e-06;-2.3836501e-06;
-1.9619999e-06;-1.5464e-06;-1.01452e-06;-4.0979e-07;4.79305e-09;4.8045803e-07;9.0354803e-07;1.42719e-06;1.9245799e-06;2.78486e-06;
3.1719801e-06;2.5060699e-06;2.60758e-06;2.5287e-06;3.8903499e-06;3.1869199e-06;2.30461e-06;1.27925e-06;3.9403599e-07;-9.2497999e-07;
-1.21583e-06;-1.35109e-06;-2.25299e-06;-2.0458299e-06;-1.73316e-06;-1.37488e-06;-1.04426e-06;2.5342999e-07;3.4553e-07;4.3747599e-07;
1.57945e-06;1.82731e-06;2.0385801e-06;2.1876101e-06;2.2450899e-06;1.60058e-06;1.47608e-06;1.24777e-06;1.8894e-06;1.21426e-06;
5.5600799e-07;-1.12502e-08;-4.37946e-07;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;-7.74223e-07;-1.19443e-06;
-1.64602e-06;-2.04973e-06;-1.3001099e-06;-1.3258e-06;-1.21526e-06;-9.8477801e-07;-1.9824699e-07;2.90391e-07;7.4618998e-07;1.10808e-06;
7.6770198e-07;8.1206298e-07;7.8768898e-07;7.1369698e-07;-3.5716801e-07;-9.3123998e-07;-1.57432e-06;-2.237e-06;-1.55288e-06;-1.90346e-06;
-2.1668e-06;-2.3244199e-06;-2.5921599e-06;-2.6515199e-06;-2.63734e-06;-2.54577e-06;-2.1764199e-06;-1.9374199e-06;-1.6379799e-06;-1.30049e-06;
-6.5660703e-07;-4.3152099e-07;-1.64591e-07;1.4344501e-07;2.9792099e-07;6.73984e-07;1.06031e-06;1.42902e-06;1.51191e-06;1.6868599e-06;
1.7627e-06;1.71544e-06;2.6498401e-06;2.1717501e-06;1.5685e-06;9.2479002e-07;-3.0666001e-07;-5.3556499e-07;-6.8662803e-07;-7.40166e-07;
-1.21987e-06;-1.0610401e-06;-8.6735798e-07;-6.9274398e-07;6.9203502e-08;1.04873e-07;1.48406e-07;2.00651e-07;7.8785303e-07;1.00049e-06;
1.22632e-06;1.43897e-06;1.30687e-06;1.37198e-06;1.34188e-06;1.21618e-06;2.02045e-06;1.5040901e-06;9.52672e-07;4.34356e-07;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;-9.32136e-07;-1.2809101e-06;-1.58797e-06;
-1.00385e-06;-1.01507e-06;-9.2027602e-07;-7.3547699e-07;-4.9920601e-07;1.86728e-07;5.1235298e-07;7.5676201e-07;5.1786498e-07;5.3227097e-07;
4.98406e-07;3.5308699e-07;2.8807099e-07;-7.99357e-07;-1.24454e-06;-1.68336e-06;-1.1595801e-06;-1.37376e-06;-1.5323e-06;-1.69895e-06;
-1.71685e-06;-1.90013e-06;-1.9266899e-06;-1.9008299e-06;-1.66958e-06;-1.52165e-06;-1.31944e-06;-6.70823e-07;-6.0495603e-07;-3.8680801e-07;
-2.4263699e-07;-7.74996e-08;-9.6587499e-08;1.41635e-07;4.1584201e-07;7.0430798e-07;8.7268103e-07;1.05661e-06;1.12852e-06;1.11818e-06;
1.75429e-06;1.44995e-06;1.05032e-06;-3.97681e-08;-2.0133599e-07;-2.85575e-07;-3.55949e-07;-3.62278e-07;-5.7300002e-07;-4.3575099e-07;
-3.0228799e-07;2.1905301e-08;1.7538699e-08;1.44494e-08;2.71265e-08;5.0595599e-08;2.6431701e-07;4.2357101e-07;6.2280401e-07;8.3703702e-07;
9.93252e-07;1.09698e-06;1.12961e-06;1.0831e-06;1.92425e-06;1.56672e-06;1.14365e-06;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;-9.8971998e-07;-1.21621e-06;-7.6242299e-07;-7.5926101e-07;
-6.7368802e-07;-5.2134601e-07;-3.3551299e-07;-1.56371e-07;3.73848e-07;5.2933802e-07;3.4867401e-07;3.3939901e-07;2.52191e-07;2.1059e-07;
1.58486e-07;1.06652e-07;-9.6225995e-07;-1.2233201e-06;-8.2961299e-07;-9.3864497e-07;-1.05051e-06;-1.0991899e-06;-1.11574e-06;-1.09784e-06;
-1.34755e-06;-1.36762e-06;-1.23898e-06;-1.15759e-06;-5.25536e-07;-5.0734099e-07;-4.6602099e-07;-4.1586e-07;-2.4628801e-07;-1.8834299e-07;
-2.97528e-07;-1.7259801e-07;2.9493199e-07;4.2658201e-07;5.5821198e-07;6.6095498e-07;6.9513101e-07;7.1751998e-07;1.16243e-06;9.7993404e-07;
5.3609199e-08;-3.35401e-08;-1.3546899e-07;-2.17303e-07;-1.79377e-07;-1.64865e-07;-2.2969201e-07;-9.9024902e-08;2.07772e-08;8.0273503e-09;
-3.7363099e-09;-1.62212e-08;-3.2923701e-08;-2.7794099e-08;-2.93205e-08;7.3014803e-08;4.0901801e-07;5.6265799e-07;7.0663401e-07;8.2058898e-07;
8.8660198e-07;8.9317501e-07;1.67597e-06;1.45717e-06;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;-5.5817998e-07;-4.7959202e-07;-3.51496e-07;
-2.02547e-07;-6.6085697e-08;3.09476e-08;0;0;1.7521999e-07;1.52829e-07;1.16834e-07;7.4918901e-08;3.59375e-08;
7.0753501e-09;0;0;-6.0547399e-07;-6.38198e-07;-6.6118002e-07;-6.74837e-07;-6.77461e-07;-6.6552701e-07;0;
0;-3.7485299e-07;-3.7757101e-07;-3.57602e-07;-3.26139e-07;-2.9595299e-07;-2.7600899e-07;0;0;6.3192303e-08;
1.34095e-07;2.31824e-07;3.3720201e-07;4.2620701e-07;4.7804002e-07;0;0;7.0516997e-08;4.6690499e-08;-1.62985e-08;
-9.4023001e-08;-1.55348e-07;-1.75504e-07;0;0;2.5923001e-08;1.15179e-08;-3.7216299e-10;-1.1117e-08;-2.28614e-08;
-3.6910599e-08;0;0;1.29653e-07;2.3330701e-07;3.5071099e-07;4.6944601e-07;5.7446601e-07;6.5081502e-07;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;     };
    };
   };
   data_flags=SAVE_ROWS|AUTO_CALC;
   auto_load=NO_AUTO_LOAD;
   auto_load_file=;
   row_height=1;
   max_col_width=128;
   keygen 4 0=0;
   row_indexes {
    name="row_indexes";
   [1] 0;   };
   last_sort_spec {
    name="last_sort_spec";
    ops {
     name="ops";
     el_typ=DataSortEl;
     el_def=0;
    };
   };
   row_with_hilite=-1;
  };
 };
 types {
  name="types";
  el_typ=DynEnumType;
  el_def=0;
 };
 args {
  name="args";
  el_typ=ProgVar;
  el_def=0;
 };
 vars {
  name="vars";
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="network";
   var_type=T_Object;
   object_type=Network;
   object_val=$.networks["LVisNet"]$;
   object_scope=NULL;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[1] {
   name="trg_layer";
   var_type=T_Object;
   object_type=Layer;
   object_val=$.networks["LVisNet"].layers.gp["V4"]["V4F16"]$;
   object_scope=NULL;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="target layer to get receptive field data - will usually be V3 or V4 and must be receiving from a layer for which the RF Data has already been generated.";
   init_from=NULL;
  };
  ProgVar @[2] {
   name="snd_layer";
   var_type=T_Object;
   object_type=Layer;
   object_val=$.networks["LVisNet"].layers.gp["V2"]["V2mF16"]$;
   object_scope=NULL;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="the layer sending to target layer - for this analysis the sending layer must have been a previous target layer as you must have the RF Data for the sending layer";
   init_from=NULL;
  };
  ProgVar @[3] {
   name="snd_rf_data";
   var_type=T_Object;
   object_type=DataTable;
   object_val=$.programs.gp["AnalysisProgs"]["WtBasedRField_V2"].objs["WtRFData"]$;
   object_scope=NULL;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="This is the RF Data previously generated for the sending layer (when it was a target layer)";
   init_from=NULL;
  };
  ProgVar @[4] {
   name="wt_based_rf_analysis";
   var_type=T_Object;
   object_type=WtBasedRF;
   object_val=.objs[1]$$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="This is the object on which to call the compute method";
   init_from=NULL;
  };
  ProgVar @[5] {
   name="wt_rfdata";
   var_type=T_Object;
   object_type=DataTable;
   object_val=$.objs[0]$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="data table to record weight based receptive field values - the columns and rows will be generated by the underlying code";
   init_from=NULL;
  };
  ProgVar @[6] {
   name="trg_layer_wts";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.objs[2]$$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc="these are the weights for each projection to each unit of the target layer";
   init_from=NULL;
  };
  ProgVar @[7] {
   name="trg_layer_activations";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.objs[3]$$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[8] {
   name="activation_var";
   var_type=T_String;
   object_scope=NULL;
   flags=USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[9] {
   name="max_act";
   var_type=T_Real;
   real_val=0.6065102815628052;
   object_scope=NULL;
   flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[10] {
   name="composite";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.objs[4]$$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[11] {
   name="individuals";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.objs[6]$$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[12] {
   name="drum_set";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.objs[5]$$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[13] {
   name="individuals_high_act";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.objs[7]$$;
   object_scope=NULL;
   objs_ptr=1;
   flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
 };
 functions {
  name="functions";
  el_typ=Function;
  el_def=0;
  Function @[0] {
   name="MultiplyWithActivations";
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="MultiplyWithActivations() returns: int";
   return_type=T_Int;
   object_type=taOBase;
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   fun_code {
    name="fun_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     name="LocalVars_LocalVars19vars";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (19 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="row";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="act";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="grp_row";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="grp_col";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[4] {
       name="unit_row";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[5] {
       name="unit_col";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[6] {
       name="flat_index";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[7] {
       name="grp_rows";
       var_type=T_Int;
       int_val=4;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[8] {
       name="grp_cols";
       var_type=T_Int;
       int_val=4;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[9] {
       name="unit_rows";
       var_type=T_Int;
       int_val=10;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[10] {
       name="unit_cols";
       var_type=T_Int;
       int_val=10;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[11] {
       name="trg_layer_acts_matrix";
       var_type=T_Object;
       object_type=float_Matrix;
       object_val=NULL;
       object_scope=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[12] {
       name="wt_rf_cell_matrix";
       var_type=T_Object;
       object_type=float_Matrix;
       object_val=NULL;
       object_scope=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[13] {
       name="combo_matrix";
       var_type=T_Object;
       object_type=float_Matrix;
       object_val=NULL;
       object_scope=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[14] {
       name="values_x_act_data_col";
       var_type=T_Object;
       object_type=float_Data;
       object_val=NULL;
       object_scope=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[15] {
       name="max_act_flat_idx";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[16] {
       name="max_act_index";
       var_type=T_Object;
       object_type=MatrixIndex;
       object_val=NULL;
       object_scope=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[17] {
       name="grp_geom";
       var_type=T_Object;
       object_type=XYNGeom;
       object_val=NULL;
       object_scope=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[18] {
       name="unit_geom";
       var_type=T_Object;
       object_type=XYNGeom;
       object_val=NULL;
       object_scope=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    AssignExpr @[1] {
     name="AssignExpr_wtrfcellmatrixnewfloatMatrix";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="wt_rf_cell_matrix = new float_Matrix";
     result_var=.functions[0].fun_code[0].local_vars[12]$$;
     expr {
      expr="new float_Matrix";
     };
    };
    AssignExpr @[2] {
     name="AssignExpr_combomatrixnewfloatMatrix";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="combo_matrix = new float_Matrix";
     result_var=.functions[0].fun_code[0].local_vars[13]$$;
     expr {
      expr="new float_Matrix";
     };
    };
    AssignExpr @[3] {
     name="AssignExpr_trglayeractsmatrixnewfloatMatrix";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="trg_layer_acts_matrix = new float_Matrix";
     result_var=.functions[0].fun_code[0].local_vars[11]$$;
     expr {
      expr="new float_Matrix";
     };
    };
    AssignExpr @[4] {
     name="AssignExpr_maxactindexnewMatrixIndex";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="max_act_index = new MatrixIndex";
     result_var=.functions[0].fun_code[0].local_vars[16]$$;
     expr {
      expr="new MatrixIndex";
     };
    };
    MethodCall @[5] {
     name="MethodCall_trglayeractivationsResetData";
     desc="these values get reset for each image";
     flags=CAN_REVERT_TO_CODE;
     code_string="trg_layer_activations->ResetData()";
     result_var=NULL;
     obj=.vars[7]$$;
     method=DataTable::ResetData;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void ResetData()";
     meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
    };
    If @[6] {
     name="If_ifwtrfdataFindColNamevaluesxact";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (!wt_rfdata->FindColName(\"values_x_act\"))";
     cond {
      expr="!wt_rfdata->FindColName(\"values_x_act\")";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MethodCall @[0] {
       name="MethodCall_wtrfdataDuplicateColvalues";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="wt_rfdata->DuplicateCol(\"values\")";
       result_var=NULL;
       obj=.vars[5]$$;
       method=DataTable::DuplicateCol;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="col";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"values\"";
	 };
	};
       };
       meth_sig="void DuplicateCol(Variant& col)";
       meth_desc=" duplicates indicated column";
      };
      MethodCall @[1] {
       name="MethodCall_wtrfdataRenameCo_scopyvaluesxact";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="wt_rfdata->RenameCol(\"values_copy\", \"values_x_act\")";
       result_var=NULL;
       obj=$.vars[5]$;
       method=DataTable::RenameCol;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="cur_nm";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"values_copy\"";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="new_nm";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"values_x_act\"";
	 };
	};
       };
       meth_sig="bool RenameCol(taString& cur_nm, taString& new_nm)";
       meth_desc=" rename column with current name cur_nm to new name new_nm (returns false if ccur_nm not found)";
      };
     };
    };
    MethodCall @[7] {
     name="MethodCall_valuesxactdataco_lNamevaluesxact";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="values_x_act_data_col = wt_rfdata->FindColName(\"values_x_act\", )";
     result_var=.functions[0].fun_code[0].local_vars[14]$$;
     obj=$.vars[5]$;
     method=DataTable::FindColName;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="col_nm";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"values_x_act\"";
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="err_msg";
       required=0;
       def_val="false";
       prev_expr=;
       expr {
	expr=;
       };
      };
     };
     meth_sig="DataCol_ptr FindColName(taString& col_nm, bool err_msg = false)";
     meth_desc=" find a column of the given name; if err_msg then generate an error if not found";
    };
    If @[8] {
     name="If_ifvaluesxactdatacol";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (values_x_act_data_col)";
     cond {
      expr="values_x_act_data_col";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      AssignExpr @[0] {
       name="AssignExpr_grpgeomtrglayergpgeom";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="grp_geom = trg_layer.gp_geom";
       result_var=.functions[0].fun_code[0].local_vars[17]$$;
       expr {
	expr="trg_layer.gp_geom";
       };
      };
      AssignExpr @[1] {
       name="AssignExpr_grpcolsgrpgeomx";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="grp_cols = grp_geom.x";
       result_var=.functions[0].fun_code[0].local_vars[8]$$;
       expr {
	expr="grp_geom.x";
       };
      };
      AssignExpr @[2] {
       name="AssignExpr_grprowsgrpgeomy";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="grp_rows = grp_geom.y";
       result_var=.functions[0].fun_code[0].local_vars[7]$$;
       expr {
	expr="grp_geom.y";
       };
      };
      AssignExpr @[3] {
       name="AssignExpr_unitgeomtrglayerungeom";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="unit_geom = trg_layer.un_geom";
       result_var=.functions[0].fun_code[0].local_vars[18]$$;
       expr {
	expr="trg_layer.un_geom";
       };
      };
      AssignExpr @[4] {
       name="AssignExpr_unitcolsunitgeomx";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="unit_cols = unit_geom.x";
       result_var=.functions[0].fun_code[0].local_vars[10]$$;
       expr {
	expr="unit_geom.x";
       };
      };
      AssignExpr @[5] {
       name="AssignExpr_unitrowsunitgeomy";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="unit_rows = unit_geom.y";
       result_var=.functions[0].fun_code[0].local_vars[9]$$;
       expr {
	expr="unit_geom.y";
       };
      };
      MethodCall @[6] {
       name="MethodCall_valuesxactdatacolInitVals0";
       desc="this column gets reset for each image";
       flags=CAN_REVERT_TO_CODE;
       code_string="values_x_act_data_col->InitVals(0)";
       result_var=NULL;
       obj=$.functions[0].fun_code[0].local_vars[14]$;
       method=DataCol::InitVals;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="init_val";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
       };
       meth_sig="bool InitVals(Variant& init_val)";
       meth_desc=" initialize all values in this column to given value";
      };
      MethodCall @[7] {
       name="MethodCall_trglayerVarToTab_nsactivationvar";
       desc="get data to table";
       flags=CAN_REVERT_TO_CODE;
       code_string="trg_layer->VarToTable(trg_layer_activations, activation_var)";
       result_var=NULL;
       obj=.vars[1]$$;
       method=LeabraLayer::VarToTable;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="dt";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="trg_layer_activations";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="variable";
	 required=1;
	 def_val="\"\"";
	 prev_expr=;
	 expr {
	  expr="activation_var";
	 };
	};
       };
       meth_sig="DataTable_ptr VarToTable(DataTable* dt, taString& variable)";
       meth_desc=" send given variable to data table -- number of columns depends on variable (for projection variables, specify prjns.; for connection variables, specify r. or s. (e.g., r.wt)) -- this uses a NetMonitor internally, so see documentation there for more information";
      };
      MethodCall @[8] {
       name="MethodCall_trglayeractsmatr_etValAsMatrix00";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="trg_layer_acts_matrix = trg_layer_activations->GetValAsMatrix(0, 0)";
       result_var=$.functions[0].fun_code[0].local_vars[11]$;
       obj=$.vars[7]$;
       method=DataTable::GetValAsMatrix;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="col";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[1] {
	 arg_type=int;
	 type="int";
	 name="row";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
       };
       meth_sig="taMatrix_ptr GetValAsMatrix(Variant& col, int row)";
       meth_desc=" get data of matrix type (multi-dimensional data within a given cell), in Matrix form, for given column, row; for Program usage, assign to a LocalVars Matrix* variable, NOT a global vars variable, at the appropriate scope where the matrix will be used, (e.g., if within a loop, put variable in the loop_code of the loop), so that the local variable will be deleted automatically, to free the memory associated with the Matrix when it is no longer needed";
      };
      AssignExpr @[9] {
       name="AssignExpr_maxacttrglayeractsmatrixMax";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="max_act = trg_layer_acts_matrix->Max()";
       result_var=.vars[9]$$;
       expr {
	expr="trg_layer_acts_matrix->Max()";
       };
      };
      MethodCall @[10] {
       name="MethodCall_maxactflatidxtrg_dValFlatmaxact0";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="max_act_flat_idx = trg_layer_acts_matrix->FindVal_Flat(max_act, 0)";
       result_var=.functions[0].fun_code[0].local_vars[15]$$;
       obj=$.functions[0].fun_code[0].local_vars[11]$;
       method=taMatrix::FindVal_Flat;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_Variant_ref;
	 type="Variant&";
	 name="val";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="max_act";
	 };
	};
	ProgArg @[1] {
	 arg_type=int;
	 type="int";
	 name="st_idx";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
       };
       meth_sig="int FindVal_Flat(Variant& val, int st_idx = 0)";
       meth_desc=" find a value in the matrix -- treats the matrix like a flat array, returns the flat index where the value was found, or -1 if not found. Negative st_idx will search backwards";
      };
      PrintVar @[11] {
       name="PrintVar_Printmaxactmaxactflatidx";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print  max_act max_act_flat_idx";
       message=;
       print_var=$.vars[9]$;
       print_var2=$.functions[0].fun_code[0].local_vars[15]$;
       print_var3=NULL;
       print_var4=NULL;
       print_var5=NULL;
       print_var6=NULL;
       debug=0;
      };
      MemberMethodCall @[12] {
       name="MemberMethodCall_trglayeractsmatr_tidxmaxactindex";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="trg_layer_acts_matrix.geom.DimsFmIndex(max_act_flat_idx, max_act_index)";
       obj=$.functions[0].fun_code[0].local_vars[11]$;
       path="geom";
       result_var=NULL;
       method=MatrixGeom::DimsFmIndex;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="idx";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="max_act_flat_idx";
	 };
	};
	ProgArg @[1] {
	 arg_type=MatrixIndex_ref;
	 type="MatrixIndex&";
	 name="dims";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="max_act_index";
	 };
	};
       };
       meth_sig="void DimsFmIndex(int idx, MatrixIndex& dims)";
       meth_desc=" get dimension values from index, based on geometry represented by 'this' geom object";
      };
      PrintVar @[13] {
       name="PrintVar_Printmaxactindex";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print  max_act_index";
       message=;
       print_var=$.functions[0].fun_code[0].local_vars[16]$;
       print_var2=NULL;
       print_var3=NULL;
       print_var4=NULL;
       print_var5=NULL;
       print_var6=NULL;
       debug=0;
      };
      Comment @[14] {
       name="Comment_multiplyeveryV2u_dthistotheCcode";
       desc="multiply every V2 unit weight x filter x V1_activation by the current V2 activation - should add this to the C++ code";
       flags=CAN_REVERT_TO_CODE|NO_CODE;
       code_string="// multiply every V2 unit weight x filter x V1_activation by the current V2 activation - should add this to the C++ code";
      };
      ForLoop @[15] {
       name="ForLoop_forgrprow0grprowgrprowsgrprow";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="for (grp_row = 0; grp_row < grp_rows; grp_row++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	ForLoop @[0] {
	 name="ForLoop_forgrpcol0grpcolgrpcolsgrpcol";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="for (grp_col = 0; grp_col < grp_cols; grp_col++)";
	 loop_code {
	  name="loop_code";
	  el_typ=ProgCode;
	  el_def=0;
	  ForLoop @[0] {
	   name="ForLoop_forunitrow0unitr_unitrowsunitrow";
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   code_string="for (unit_row = 0; unit_row<unit_rows; unit_row++)";
	   loop_code {
	    name="loop_code";
	    el_typ=ProgCode;
	    el_def=0;
	    ForLoop @[0] {
	     name="ForLoop_forunitcol0unitc_unitcolsunitcol";
	     desc=;
	     flags=CAN_REVERT_TO_CODE;
	     code_string="for (unit_col = 0; unit_col<unit_cols; unit_col++)";
	     loop_code {
	      name="loop_code";
	      el_typ=ProgCode;
	      el_def=0;
	      AssignExpr @[0] {
	       name="AssignExpr_flatindexunitcol_nitrowsunitcols";
	       desc=;
	       flags=CAN_REVERT_TO_CODE;
	       code_string="flat_index = unit_col + unit_row*unit_cols + grp_col*unit_rows*unit_cols + grp_row*grp_cols*unit_rows*unit_cols";
	       result_var=.functions[0].fun_code[0].local_vars[6]$$;
	       expr {
		expr="unit_col + unit_row*unit_cols + grp_col*unit_rows*unit_cols + grp_row*grp_cols*unit_rows*unit_cols";
	       };
	      };
	      MethodCall @[1] {
	       name="MethodCall_wtrfcellmatrixwt_valuesflatindex";
	       desc=;
	       flags=CAN_REVERT_TO_CODE;
	       code_string="wt_rf_cell_matrix = wt_rfdata->GetValAsMatrixColName(\"values\", flat_index, )";
	       result_var=$.functions[0].fun_code[0].local_vars[12]$;
	       obj=$.vars[5]$;
	       method=DataTable::GetValAsMatrixColName;
	       meth_args {
		name="meth_args";
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=const_taString_ref;
		 type="taString&";
		 name="col_name";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="\"values\"";
		 };
		};
		ProgArg @[1] {
		 arg_type=int;
		 type="int";
		 name="row";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="flat_index";
		 };
		};
		ProgArg @[2] {
		 arg_type=bool;
		 type="bool";
		 name="quiet";
		 required=0;
		 def_val="false";
		 prev_expr=;
		 expr {
		  expr=;
		 };
		};
	       };
	       meth_sig="taMatrix_ptr GetValAsMatrixColName(taString& col_name, int row, bool quiet = false)";
	       meth_desc=" get data of matrix type (multi-dimensional data within a given cell), in Matrix form, for given column, row; for Program usage, assign to a LocalVars Matrix* variable, NOT a global vars variable, at the appropriate scope where the matrix will be used, (e.g., if within a loop, put variable in the loop_code of the loop), so that the local variable will be deleted automatically, to free the memory associated with the Matrix when it is no longer needed";
	      };
	      MethodCall @[2] {
	       name="MethodCall_acttrglayeractiv_tVal00flatindex";
	       desc=;
	       flags=CAN_REVERT_TO_CODE;
	       code_string="act = trg_layer_activations->GetMatrixFlatVal(0, 0, flat_index)";
	       result_var=.functions[0].fun_code[0].local_vars[1]$$;
	       obj=$.vars[7]$;
	       method=DataTable::GetMatrixFlatVal;
	       meth_args {
		name="meth_args";
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=const_Variant_ref;
		 type="Variant&";
		 name="col";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="0";
		 };
		};
		ProgArg @[1] {
		 arg_type=int;
		 type="int";
		 name="row";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="0";
		 };
		};
		ProgArg @[2] {
		 arg_type=int;
		 type="int";
		 name="cell";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="flat_index";
		 };
		};
	       };
	       meth_sig="const_Variant GetMatrixFlatVal(Variant& col, int row, int cell)";
	       meth_desc=" get data of matrix type, in Variant form (any data type, use for Programs), for given column, row, and matrix flat cell index (regardless of dimensions) -- column can be specified as either integer index or a string that is then used to find the given column name";
	      };
	      AssignExpr @[3] {
	       name="AssignExpr_wtrfcellmatrixwtrfcellmatrixact";
	       desc=;
	       flags=CAN_REVERT_TO_CODE;
	       code_string="wt_rf_cell_matrix = wt_rf_cell_matrix * act";
	       result_var=$.functions[0].fun_code[0].local_vars[12]$;
	       expr {
		expr="wt_rf_cell_matrix * act";
	       };
	      };
	      MethodCall @[4] {
	       name="MethodCall_wtrfdataSetValAs_esxactflatindex";
	       desc=;
	       flags=CAN_REVERT_TO_CODE;
	       code_string="wt_rfdata->SetValAsMatrixColName(wt_rf_cell_matrix, \"values_x_act\", flat_index, )";
	       result_var=NULL;
	       obj=$.vars[5]$;
	       method=DataTable::SetValAsMatrixColName;
	       meth_args {
		name="meth_args";
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=const_taMatrix_ptr;
		 type="taMatrix*";
		 name="val";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="wt_rf_cell_matrix";
		 };
		};
		ProgArg @[1] {
		 arg_type=const_taString_ref;
		 type="taString&";
		 name="col_name";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="\"values_x_act\"";
		 };
		};
		ProgArg @[2] {
		 arg_type=int;
		 type="int";
		 name="row";
		 required=1;
		 def_val=;
		 prev_expr=;
		 expr {
		  expr="flat_index";
		 };
		};
		ProgArg @[3] {
		 arg_type=bool;
		 type="bool";
		 name="quiet";
		 required=0;
		 def_val="false";
		 prev_expr=;
		 expr {
		  expr=;
		 };
		};
	       };
	       meth_sig="bool SetValAsMatrixColName(taMatrix* val, taString& col_name, int row, bool quiet = false)";
	       meth_desc=" set a matrix cell to values in given matrix val -- checks that the matrix has the proper geometry as the column's cells -- val can be of a different type than the data table column (it will just be a bit slower than if the type matches)";
	      };
	     };
	     init {
	      expr="unit_col = 0";
	     };
	     test {
	      expr="unit_col<unit_cols";
	     };
	     iter {
	      expr="unit_col++";
	     };
	    };
	   };
	   init {
	    expr="unit_row = 0";
	   };
	   test {
	    expr="unit_row<unit_rows";
	   };
	   iter {
	    expr="unit_row++";
	   };
	  };
	 };
	 init {
	  expr="grp_col = 0";
	 };
	 test {
	  expr="grp_col < grp_cols";
	 };
	 iter {
	  expr="grp_col++";
	 };
	};
       };
       init {
	expr="grp_row = 0";
       };
       test {
	expr="grp_row < grp_rows";
       };
       iter {
	expr="grp_row++";
       };
      };
      Comment @[16] {
       name="Comment_createthecompositematrix";
       desc="create the composite matrix";
       flags=CAN_REVERT_TO_CODE;
       code_string="// create the composite matrix";
      };
      MethodCall @[17] {
       name="MethodCall_combomatrixwtrfd_Namevaluesxact0";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="combo_matrix = wt_rfdata->GetValAsMatrixColName(\"values_x_act\", 0, )";
       result_var=$.functions[0].fun_code[0].local_vars[13]$;
       obj=$.vars[5]$;
       method=DataTable::GetValAsMatrixColName;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="col_name";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"values_x_act\"";
	 };
	};
	ProgArg @[1] {
	 arg_type=int;
	 type="int";
	 name="row";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[2] {
	 arg_type=bool;
	 type="bool";
	 name="quiet";
	 required=0;
	 def_val="false";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
       };
       meth_sig="taMatrix_ptr GetValAsMatrixColName(taString& col_name, int row, bool quiet = false)";
       meth_desc=" get data of matrix type (multi-dimensional data within a given cell), in Matrix form, for given column, row; for Program usage, assign to a LocalVars Matrix* variable, NOT a global vars variable, at the appropriate scope where the matrix will be used, (e.g., if within a loop, put variable in the loop_code of the loop), so that the local variable will be deleted automatically, to free the memory associated with the Matrix when it is no longer needed";
      };
      MethodCall @[18] {
       name="MethodCall_compositeReset";
       desc="delete so we can build a column based on current dimensions";
       flags=CAN_REVERT_TO_CODE;
       code_string="composite->Reset()";
       result_var=NULL;
       obj=.vars[10]$$;
       method=DataTable::Reset;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="void Reset()";
       meth_desc=" remove all columns (and data) -- this cannot be undone!";
      };
      MethodCall @[19] {
       name="MethodCall_compositeFindMak_combomatrixdim1";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="composite->FindMakeColMatrix(\"values\", taBase::VT_FLOAT, 2, combo_matrix.dim(0), combo_matrix.dim(1), , , , , )";
       result_var=NULL;
       obj=$.vars[10]$;
       method=DataTable::FindMakeColMatrix;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="col_nm";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"values\"";
	 };
	};
	ProgArg @[1] {
	 arg_type=taBase::ValType;
	 type="taBase::ValType";
	 name="val_type";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="taBase::VT_FLOAT";
	 };
	};
	ProgArg @[2] {
	 arg_type=int;
	 type="int";
	 name="dims";
	 required=0;
	 def_val="1";
	 prev_expr=;
	 expr {
	  expr="2";
	 };
	};
	ProgArg @[3] {
	 arg_type=int;
	 type="int";
	 name="d0";
	 required=0;
	 def_val="1";
	 prev_expr=;
	 expr {
	  expr="combo_matrix.dim(0)";
	 };
	};
	ProgArg @[4] {
	 arg_type=int;
	 type="int";
	 name="d1";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr="combo_matrix.dim(1)";
	 };
	};
	ProgArg @[5] {
	 arg_type=int;
	 type="int";
	 name="d2";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[6] {
	 arg_type=int;
	 type="int";
	 name="d3";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[7] {
	 arg_type=int;
	 type="int";
	 name="d4";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[8] {
	 arg_type=int;
	 type="int";
	 name="d5";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[9] {
	 arg_type=int;
	 type="int";
	 name="d6";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
       };
       meth_sig="DataCol_ptr FindMakeColMatrix(taString& col_nm, taBase::ValType val_type, int dims = 1, int d0 = 1, int d1 = 0, int d2 = 0, int d3 = 0, int d4 = 0, int d5 = 0, int d6 = 0)";
       meth_desc=" insures that a matrix column of the given name, val type, and dimensions exists, and returns that col.";
      };
      MethodCall @[20] {
       name="MethodCall_compositeAddBlankRow";
       desc="just one row";
       flags=CAN_REVERT_TO_CODE;
       code_string="composite->AddBlankRow()";
       result_var=NULL;
       obj=$.vars[10]$;
       method=DataTable::AddBlankRow;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="int AddBlankRow()";
       meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
      };
      MethodCall @[21] {
       name="MethodCall_individualsReset";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="individuals->Reset()";
       result_var=NULL;
       obj=.vars[11]$$;
       method=DataTable::Reset;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="void Reset()";
       meth_desc=" remove all columns (and data) -- this cannot be undone!";
      };
      MethodCall @[22] {
       name="MethodCall_individualsFindM_combomatrixdim1";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="individuals->FindMakeColMatrix(\"values\", taBase::VT_FLOAT, 2, combo_matrix.dim(0), combo_matrix.dim(1), , , , , )";
       result_var=NULL;
       obj=$.vars[11]$;
       method=DataTable::FindMakeColMatrix;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="col_nm";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"values\"";
	 };
	};
	ProgArg @[1] {
	 arg_type=taBase::ValType;
	 type="taBase::ValType";
	 name="val_type";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="taBase::VT_FLOAT";
	 };
	};
	ProgArg @[2] {
	 arg_type=int;
	 type="int";
	 name="dims";
	 required=0;
	 def_val="1";
	 prev_expr=;
	 expr {
	  expr="2";
	 };
	};
	ProgArg @[3] {
	 arg_type=int;
	 type="int";
	 name="d0";
	 required=0;
	 def_val="1";
	 prev_expr=;
	 expr {
	  expr="combo_matrix.dim(0)";
	 };
	};
	ProgArg @[4] {
	 arg_type=int;
	 type="int";
	 name="d1";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr="combo_matrix.dim(1)";
	 };
	};
	ProgArg @[5] {
	 arg_type=int;
	 type="int";
	 name="d2";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[6] {
	 arg_type=int;
	 type="int";
	 name="d3";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[7] {
	 arg_type=int;
	 type="int";
	 name="d4";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[8] {
	 arg_type=int;
	 type="int";
	 name="d5";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
	ProgArg @[9] {
	 arg_type=int;
	 type="int";
	 name="d6";
	 required=0;
	 def_val="0";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
       };
       meth_sig="DataCol_ptr FindMakeColMatrix(taString& col_nm, taBase::ValType val_type, int dims = 1, int d0 = 1, int d1 = 0, int d2 = 0, int d3 = 0, int d4 = 0, int d5 = 0, int d6 = 0)";
       meth_desc=" insures that a matrix column of the given name, val type, and dimensions exists, and returns that col.";
      };
      ForLoop @[23] {
       name="ForLoop_forrow0rowwtrfdatarowsrow";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="for (row=0; row<wt_rfdata.rows; row++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	MethodCall @[0] {
	 name="MethodCall_wtrfcellmatrixwt_mevaluesxactrow";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="wt_rf_cell_matrix = wt_rfdata->GetValAsMatrixColName(\"values_x_act\", row, )";
	 result_var=$.functions[0].fun_code[0].local_vars[12]$;
	 obj=$.vars[5]$;
	 method=DataTable::GetValAsMatrixColName;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=const_taString_ref;
	   type="taString&";
	   name="col_name";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="\"values_x_act\"";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=int;
	   type="int";
	   name="row";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="row";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=bool;
	   type="bool";
	   name="quiet";
	   required=0;
	   def_val="false";
	   prev_expr=;
	   expr {
	    expr=;
	   };
	  };
	 };
	 meth_sig="taMatrix_ptr GetValAsMatrixColName(taString& col_name, int row, bool quiet = false)";
	 meth_desc=" get data of matrix type (multi-dimensional data within a given cell), in Matrix form, for given column, row; for Program usage, assign to a LocalVars Matrix* variable, NOT a global vars variable, at the appropriate scope where the matrix will be used, (e.g., if within a loop, put variable in the loop_code of the loop), so that the local variable will be deleted automatically, to free the memory associated with the Matrix when it is no longer needed";
	};
	MethodCall @[1] {
	 name="MethodCall_individualsAddBlankRow";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="individuals->AddBlankRow()";
	 result_var=NULL;
	 obj=$.vars[11]$;
	 method=DataTable::AddBlankRow;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	 };
	 meth_sig="int AddBlankRow()";
	 meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
	};
	MethodCall @[2] {
	 name="MethodCall_individualsSetVa_matrixvaluesrow";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="individuals->SetValAsMatrix(wt_rf_cell_matrix, \"values\", row)";
	 result_var=NULL;
	 obj=$.vars[11]$;
	 method=DataTable::SetValAsMatrix;
	 meth_args {
	  name="meth_args";
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=const_taMatrix_ptr;
	   type="taMatrix*";
	   name="val";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="wt_rf_cell_matrix";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=const_Variant_ref;
	   type="Variant&";
	   name="col";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="\"values\"";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=int;
	   type="int";
	   name="row";
	   required=1;
	   def_val=;
	   prev_expr=;
	   expr {
	    expr="row";
	   };
	  };
	 };
	 meth_sig="bool SetValAsMatrix(taMatrix* val, Variant& col, int row)";
	 meth_desc=" set a matrix cell to values in given matrix val -- checks that the matrix has the proper geometry as the column's cells -- val can be of a different type than the data table column (it will just be a bit slower than if the type matches)";
	};
	AssignExpr @[3] {
	 name="AssignExpr_combomatrixcombo_xwtrfcellmatrix";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="combo_matrix = combo_matrix + wt_rf_cell_matrix";
	 result_var=$.functions[0].fun_code[0].local_vars[13]$;
	 expr {
	  expr="combo_matrix + wt_rf_cell_matrix";
	 };
	};
       };
       init {
	expr="row=0";
       };
       test {
	expr="row<wt_rfdata.rows";
       };
       iter {
	expr="row++";
       };
      };
      MethodCall @[24] {
       name="MethodCall_compositeSetValA_bomatrixvalues0";
       desc="all the rows summed";
       flags=CAN_REVERT_TO_CODE;
       code_string="composite->SetValAsMatrixColName(combo_matrix, \"values\", 0, )";
       result_var=NULL;
       obj=$.vars[10]$;
       method=DataTable::SetValAsMatrixColName;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taMatrix_ptr;
	 type="taMatrix*";
	 name="val";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="combo_matrix";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="col_name";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="\"values\"";
	 };
	};
	ProgArg @[2] {
	 arg_type=int;
	 type="int";
	 name="row";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[3] {
	 arg_type=bool;
	 type="bool";
	 name="quiet";
	 required=0;
	 def_val="false";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
       };
       meth_sig="bool SetValAsMatrixColName(taMatrix* val, taString& col_name, int row, bool quiet = false)";
       meth_desc=" set a matrix cell to values in given matrix val -- checks that the matrix has the proper geometry as the column's cells -- val can be of a different type than the data table column (it will just be a bit slower than if the type matches)";
      };
     };
    };
    Else @[9] {
     name="Else_If_ifvaluesxactdatacol";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="else";
     cond {
      expr=;
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      PrintExpr @[0] {
       name="PrintExpr_Printvaluesxactc_ndandnotcreated";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print \"values_x_act column not found and not created!!!\"";
       expr {
	expr="\"values_x_act column not found and not created!!!\"";
       };
       debug=0;
      };
     };
    };
   };
  };
 };
 init_code {
  name="init_code";
  el_typ=ProgCode;
  el_def=0;
  LocalVars @[0] {
   name="LocalVars_LocalVars0vars";
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="LocalVars (0 vars)";
   local_vars {
    name="local_vars";
    el_typ=ProgVar;
    el_def=0;
   };
  };
 };
 prog_code {
  name="prog_code";
  el_typ=ProgCode;
  el_def=0;
  LocalVars @[0] {
   name="LocalVars_LocalVars0vars";
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="LocalVars (0 vars)";
   local_vars {
    name="local_vars";
    el_typ=ProgVar;
    el_def=0;
   };
  };
  MethodCall @[1] {
   name="MethodCall_wtbasedrfanalysi_rglayersndlayer";
   desc=;
   flags=CAN_REVERT_TO_CODE;
   code_string="wt_based_rf_analysis->ComputeHigherLayerRF(network, wt_rfdata, snd_rf_data, trg_layer_wts, trg_layer, snd_layer)";
   result_var=NULL;
   obj=.vars[4]$$;
   method=WtBasedRF::ComputeHigherLayerRF;
   meth_args {
    name="meth_args";
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=Network_ptr;
     type="Network*";
     name="net";
     required=1;
     def_val=;
     prev_expr=;
     expr {
      expr="network";
     };
    };
    ProgArg @[1] {
     arg_type=DataTable_ptr;
     type="DataTable*";
     name="dt_trg";
     required=1;
     def_val=;
     prev_expr=;
     expr {
      expr="wt_rfdata";
     };
    };
    ProgArg @[2] {
     arg_type=DataTable_ptr;
     type="DataTable*";
     name="dt_snd";
     required=1;
     def_val=;
     prev_expr=;
     expr {
      expr="snd_rf_data";
     };
    };
    ProgArg @[3] {
     arg_type=DataTable_ptr;
     type="DataTable*";
     name="wts";
     required=1;
     def_val=;
     prev_expr=;
     expr {
      expr="trg_layer_wts";
     };
    };
    ProgArg @[4] {
     arg_type=Layer_ptr;
     type="Layer*";
     name="tlay";
     required=1;
     def_val=;
     prev_expr=;
     expr {
      expr="trg_layer";
     };
    };
    ProgArg @[5] {
     arg_type=Layer_ptr;
     type="Layer*";
     name="slay";
     required=1;
     def_val=;
     prev_expr=;
     expr {
      expr="snd_layer";
     };
    };
   };
   meth_sig="bool ComputeHigherLayerRF(Network* net, DataTable* dt_trg, DataTable* dt_snd, DataTable* wts, Layer* tlay, Layer* slay)";
   meth_desc=" compute the rf_data for layers beyond V2. These calculations use the RF computations from all layers below (e.g. the V3 representational analysis uses the values computed for V2)";
  };
 };
 step_prog=NULL;
 step_n=1;
 doc {
  name="doc";
  desc=;
  web_doc=0;
  wiki=;
  url="local";
  full_url="local";
  text_size=1;
  text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
  html_text="<html>
<head></head>
<body>
<h2> Enter Title Here </h2>
</body>
</html>
";
 };
};
