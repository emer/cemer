// ta_Dump File v2.0
Program .projects[0].programs.gp[0][1] { 
  ProgVar_List @.args = [4] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
  };

  ProgVar_List @.vars = [1] {
    ProgVar @[0] { };
  };

  ProgEl_List @.prog_code = [2] {
    AssignExpr @[0] { };
    DataProcCall @[1] { 
      ProgArg_List @.meth_args = [5] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
	ProgArg @[4] { };
      };
    };
  };
};
Program .projects[0].programs.gp[0][1] {
 name="SplitImageList";
 desc="split set of image names into training and testing";
 flags=;
 objs {
  name=;
  el_typ=taOBase;
  el_def=0;
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="PctTrain";
   var_type=T_Real;
   real_val=0.5;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="percent of total images to use for training";
  };
  ProgVar @[1] {
   name="all_images";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[0][1]$0$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
  ProgVar @[2] {
   name="train_images";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[0][2]$1$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
  ProgVar @[3] {
   name="test_images";
   var_type=T_Object;
   object_type=DataTable;
   object_val=.projects[0].data.gp[0][3]$2$;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc=;
  };
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="NTrain";
   var_type=T_Int;
   int_val=50;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK;
   desc="actual number of images to use for training -- remainder is used for testing (computed automatically)";
  };
 };
 functions {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 load_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 prog_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
  AssignExpr @[0] {
   desc="compute n from pct";
   flags=;
   result_var=.projects[0].programs.gp[0][1].vars[0]$3$;
   expr {
    expr="PctTrain *  all_images.rows";
    flags=;
    var_expr="$#0#$ *  $#1#$.rows";
    vars {
    };
    var_names{ PctTrain;all_images;    };
    bad_vars{     };
   };
  };
  DataProcCall @[1] {
   desc=;
   flags=;
   result_var=NULL;
   object_type=taDataProc;
   method=taDataProc::SplitRowsNPermuted;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=NULL;
     type="DataTable*";
     name="src";
     expr {
      expr="all_images";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ all_images;      };
      bad_vars{       };
     };
    };
    ProgArg @[1] {
     arg_type=NULL;
     type="DataTable*";
     name="dest_1";
     expr {
      expr="train_images";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ train_images;      };
      bad_vars{       };
     };
    };
    ProgArg @[2] {
     arg_type=NULL;
     type="int";
     name="n1";
     expr {
      expr="NTrain";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ NTrain;      };
      bad_vars{       };
     };
    };
    ProgArg @[3] {
     arg_type=NULL;
     type="DataTable*";
     name="dest_2";
     expr {
      expr="test_images";
      flags=;
      var_expr="$#0#$";
      vars {
      };
      var_names{ test_images;      };
      bad_vars{       };
     };
    };
    ProgArg @[4] {
     arg_type=NULL;
     type="int";
     name="n2";
     expr {
      expr="-1";
      flags=;
      var_expr="-1";
      vars {
      };
      var_names{       };
      bad_vars{       };
     };
    };
   };
  };
 };
};
