// ta_Dump File v3.0 -- code v5.1.1.0
Program .projects[0].programs.gp[4][14] { 
  ProgObjList @.objs = [0] {
  };

  ProgType_List @.types = [0] {
  };

  ProgVar_List @.args = [1] {
    ProgVar @[0] { };
  };

  ProgVar_List @.vars = [8] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
    ProgVar @[6] { };
    ProgVar @[7] { };
  };

  Function_List @.functions = [0] {
  };

  ProgEl_List @.load_code = [0] {
  };

  ProgEl_List @.init_code = [0] {
  };

  ProgEl_List @.prog_code = [7] {
    IfReturn @[0] { };
    MiscCall @[1] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    MiscCall @[2] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    AssignExpr @[3] { };
    MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
      };
    };
    MethodCall @[5] { 
      ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
      };
    };
    IfElse @[6] { 
      ProgEl_List @.true_code = [2] {
	AssignExpr @[0] { };
	MemberMethodCall @[1] { 
	  ProgArg_List @.meth_args = [1] {
	    ProgArg @[0] { };
	  };
	};
      };

      ProgEl_List @.false_code = [0] {
      };
    };
  };
};
Program .projects[0].programs.gp[4][14] {
 name="SaveWeightsSpecs";
 short_nm="SavWts";
 tags="Weights, Specs";
 desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values
also save specs.";
 flags=NO_STOP_STEP;
 objs {
  name=;
  el_typ=taOBase;
  el_def=0;
 };
 types {
  name=;
  el_typ=ProgType;
  el_def=0;
 };
 args {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="network";
   var_type=T_Object;
   object_type=LeabraNetwork;
   object_val=.projects[0].networks[0]$$<LeabraNetwork,Network_0>;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
 };
 vars {
  name=;
  el_typ=ProgVar;
  el_def=0;
  ProgVar @[0] {
   name="tag";
   var_type=T_String;
   string_val="_ndor";
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="user defined tag (set by startup script)";
   init_from=NULL;
  };
  ProgVar @[1] {
   name="wts_subdir";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="subdirectory to save weights in";
   init_from=NULL;
  };
  ProgVar @[2] {
   name="save_specs";
   var_type=T_Bool;
   bool_val=1;
   objs_ptr=0;
   flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[3] {
   name="fname";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[4] {
   name="spec_fname";
   var_type=T_String;
   string_val=;
   objs_ptr=0;
   flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc=;
   init_from=NULL;
  };
  ProgVar @[5] {
   name="epoch_str";
   var_type=T_String;
   string_val="0000";
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="string rep of epoch with leading zeros";
   init_from=NULL;
  };
  ProgVar @[6] {
   name="batch_str";
   var_type=T_String;
   string_val="00";
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="string rep of batch with leading zeros";
   init_from=NULL;
  };
  ProgVar @[7] {
   name="final_tag";
   var_type=T_String;
   string_val="_ndor.00_0000";
   objs_ptr=0;
   flags=NULL_CHECK|USED|EDIT_VAL;
   reference=0;
   desc="batch + epoch";
   init_from=NULL;
  };
 };
 functions {
  name=;
  el_typ=Function;
  el_def=0;
 };
 load_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 init_code {
  name=;
  el_typ=ProgEl;
  el_def=0;
 };
 prog_code {
  name=;
  el_typ=MethodCall;
  el_def=0;
  IfReturn @[0] {
   desc="do not save if not first dmem processor";
   flags=;
   cond {
    expr="taMisc::dmem_proc > 0";
   };
  };
  MiscCall @[1] {
   desc=;
   flags=;
   result_var=.projects[0].programs.gp[4][14].vars[6]$$;
   object_type=taMisc;
   method=taMisc::LeadingZeros;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=int;
     type="int";
     name="num";
     required=1;
     def_val=;
     expr {
      expr="network.batch";
     };
    };
    ProgArg @[1] {
     arg_type=int;
     type="int";
     name="len";
     required=1;
     def_val=;
     expr {
      expr="2";
     };
    };
   };
  };
  MiscCall @[2] {
   desc=;
   flags=;
   result_var=.projects[0].programs.gp[4][14].vars[5]$$;
   object_type=taMisc;
   method=taMisc::LeadingZeros;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=int;
     type="int";
     name="num";
     required=1;
     def_val=;
     expr {
      expr="network.epoch";
     };
    };
    ProgArg @[1] {
     arg_type=int;
     type="int";
     name="len";
     required=1;
     def_val=;
     expr {
      expr="4";
     };
    };
   };
  };
  AssignExpr @[3] {
   desc=;
   flags=;
   result_var=.projects[0].programs.gp[4][14].vars[7]$$;
   expr {
    expr="tag + \".\" + batch_str + \"_\" + epoch_str";
   };
  };
  MethodCall @[4] {
   desc=;
   flags=;
   result_var=.projects[0].programs.gp[4][14].vars[3]$$;
   obj=.projects[0].programs.gp[4][14].args[0]$$;
   method=taBase::GetFileNameFmProject;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="ext";
     required=1;
     def_val=;
     expr {
      expr="\".wts.gz\"";
     };
    };
    ProgArg @[1] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="tag";
     required=0;
     def_val="\"\"";
     expr {
      expr="final_tag";
     };
    };
    ProgArg @[2] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="subdir";
     required=0;
     def_val="\"\"";
     expr {
      expr="wts_subdir";
     };
    };
    ProgArg @[3] {
     arg_type=bool;
     type="bool";
     name="dmem_proc_no";
     required=0;
     def_val="false";
     expr {
      expr="false";
     };
    };
   };
  };
  MethodCall @[5] {
   desc=;
   flags=;
   result_var=NULL;
   obj=$.projects[0].programs.gp[4][14].args[0]$;
   method=Network::SaveWeights;
   meth_args {
    name=;
    el_typ=ProgArg;
    el_def=0;
    ProgArg @[0] {
     arg_type=const_taString_ref;
     type="const taString&";
     name="fname";
     required=0;
     def_val="\"\"";
     expr {
      expr="fname";
     };
    };
    ProgArg @[1] {
     arg_type=Network::WtSaveFormat;
     type="Network::WtSaveFormat";
     name="fmt";
     required=0;
     def_val="Network::NET_FMT";
     expr {
      expr="Network::NET_FMT";
     };
    };
   };
  };
  IfElse @[6] {
   desc=;
   flags=;
   cond {
    expr="save_specs";
   };
   show_false_code=0;
   true_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    AssignExpr @[0] {
     desc=;
     flags=;
     result_var=.projects[0].programs.gp[4][14].vars[4]$$;
     expr {
      expr="fname.before(\".wts\",-1) + \".spec\"";
     };
    };
    MemberMethodCall @[1] {
     desc=;
     flags=;
     obj=$.projects[0].programs.gp[4][14].args[0]$;
     path="specs";
     result_var=NULL;
     method=taList_impl::SaveAs;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       expr {
	expr="spec_fname";
       };
      };
     };
    };
   };
   false_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
  };
 };
 step_prog=NULL;
 step_n=1;
};
