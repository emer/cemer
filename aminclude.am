
CLEANFILES += \
$(top_builddir)/install_files

$(top_builddir)/install_files: do-mfstamp-recursive
	@if test "$(top_builddir)/mfstamp" -nt "$(top_builddir)/install_files"; then \
	cd $(top_builddir) && STAGING="$(PWD)/staging"; \
	$(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$STAGING" install; \
	cd "$$STAGING" && find . ! -type d -print | \
	gawk ' \
	    /^\.\/usr\/local\/lib/ { \
		sub( /\.\/usr\/local\/lib/, "%{_libdir}" ); } \
	    /^\.\/usr\/local\/bin/ { \
		sub( /\.\/usr\/local\/bin/, "%{_bindir}" ); } \
	    /^\.\/usr\/local\/include/ { \
		sub( /\.\/usr\/local\/include/, "%{_includedir}" ); } \
	    /^\.\/usr\/local\/share/ { \
		sub( /\.\/usr\/local\/share/, "%{_datadir}" ); } \
	    /^\.\/usr\/local/ { \
		sub( /\.\/usr\/local/, "%{_prefix}" ); } \
	    /^\./ { sub( /\./, "" ); } \
	    /./ { print; }' > ../install_files; \
	rm -rf "$$STAGING"; \
	else \
	    echo "\`$(top_builddir)/install_files' is up to date."; \
	fi


do-mfstamp-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making do-mfstamp in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="do-mfstamp-am"; \
	  else \
	    local_target="do-mfstamp"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "do-mfstamp-am" || exit 1; \
	fi; test -z "$$fail"


$(top_builddir)/mfstamp:  do-mfstamp-recursive

do-mfstamp-am do-mfstamp: Makefile.in
	@echo "timestamp for all Makefile.in files" > $(top_builddir)/mfstamp
	@touch $@




CLEAN_FILES += $(top_builddir)/RPMChangeLog

$(top_builddir)/RPMChangeLog: $(top_srcdir)/ChangeLog
	gawk '/^[^0-9]/ { \
		    if( $$1 == "*" ) $$1 = "-"; print; } \
		/^$$/ { \
		    print; } \
		/^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/ { \
		    if( stop ) exit; \
		    split( $$1, date, "-" ); \
		    $$1 = strftime( "%a %b %d %Y", \
				    mktime( date[ 1 ] " " date[ 2 ] " " date [ 3 ] " 00 00 00" ) ); \
		    print "* " $$0; } \
		/Released pdp-/ { \
		    gsub( /pdp-/, "", $$2 ); \
		    split( $$2, ver, "." ); \
		    split( 4.0, curr_ver, "." ); \
		    if( ver[ 1 ] != curr_ver[ 1 ] || ver[ 2 ] != curr_ver[ 2 ] ) stop = 1; } \
		END { \
		    print "[Please see the ChangeLog file for older changes] - Ed."; }' \
		$(top_srcdir)/ChangeLog > $(top_builddir)/RPMChangeLog



CLEAN_FILES += $(top_builddir)/pdp-4.0.spec
EXTRA_DIST += $(top_builddir)/pdp-4.0.spec $(top_builddir)/spec.tmpl.in

spec: $(top_builddir)/pdp-4.0.spec

$(top_builddir)/pdp-4.0.spec:	$(top_builddir)/spec.tmpl $(top_builddir)/install_files $(top_builddir)/RPMChangeLog
	@cat "$(top_builddir)/spec.tmpl" \
	| gawk -v files="$$files" \
	    '{ print; } \
	    /%defattr/ { while((getline < "install_files" ) > 0 ) { print; } }' \
	    > "$(top_builddir)/pdp-4.0.spec"
	@cat "$(top_builddir)/RPMChangeLog" >> "$(top_builddir)/pdp-4.0.spec"

