Net3D Analysis

GOALS

* provide replacement functionality (viewing, operations) to existing 2.5D implementation;
* preserve existing code, where a net time savings (entire dev lifecycle) would result
* use OPENGL for 3D graphics
* (tent) use Inventor for OPENGL high-level (objects, interactions)

(tent:)

* make the gui model of system entities be independent of those entities, such that the model
  could be replaced, or there could be more than one model
  
  
ISSUES & QUESTIONS

* what are the goals for having 3D Units?
* how will 3D be used effectively or differently from legacy?
  - local connections 
  - projections
  - layers
  - activation (dynamic)
  - static parameters (ex. r.wt, etc.)
  
 
IDEAS

* consider a system in which there are "real" physical entities (ex Units), and then
  a variety of "viewers" or "transformers" that can be placed over the scene, or in
  the scene, to add information, see specific attributes, etc.
  
* Labels and other textual markers in a 3D scene should probably not be hard-attached to
  objects, but should maintain a fixed orthogonal configuration with respect to the viewer,
  so that text is not skewed, side-on, backwards, etc.
  
* implement an element of physicality, and physical "rules", that will allow things like
  axons to form nerves, by exhibiting "attraction" to other axons, or repulsion between
  neurons and axons to force axons between spaces of neurons, etc.
  
PROPOSALS

UI SEMANTICS (general)

* change the action-oriented buttons in the upper left box to be a tool bar on top of screen
* add context menus to all selectable GUI items

GRAPHICS (general)

* replace current graphical engine with a new engine that is fully 3D, but also retains
  2.5D capabilities (ex. lines, rectangles, etc.)
  
  
NETWORK (stage 1)

* do a straight port of the current 2.5D to a 3D/2.5D hybrid -- ex., skewed rectangle in
  current impl becomes a 2D rectangle, viewed from an angle resulting in similar appearance
  to current impl
  
advantages: retains most of the overall visual design and layout of current system (limits
  changes for port)
  
issues: 
  - text items are currently overlayed so that they are viewed correctly -- if flat text
    is put on pre-skew items, the text will be skewed
 
       
NETWORK (stage 2)

* create a second (coexistent) model of the network with more sophisticated 3D semantics, ex:
   - Units are fully 3D entities
   - allow "magic" collapsing/folding of layers to/from detailed unit view
   - allow full navigation of net space

PROJECT

* replace current graphical approach (with blocks, and side buttons), with a tree view -- 
  there will be a toolbar for common actions, and a tree context menu for item-specific
  actions
  
* note: state information (ex. conveyed now by color and shade of color) need to be conveyed.

* show links via subchild items with ex. pointer arrow on icon to indicate link

* need semantics for drag and drop, link, cut/copy/paste

GRAPHING

* retain the current graphing functionality and interfaces
* translate graphing to use OpenGL
* initially, only 2D graphs, as in legacy


 
