# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Maketa.am $(top_srcdir)/mfstamp.am TODO
subdir = src/leabra
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__objects_1 =
am__objects_2 = libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.lo \
	libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.lo \
	libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.lo \
	libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.lo \
	libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.lo \
	libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.lo
am_libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_OBJECTS =  \
	$(am__objects_1) $(am__objects_2)
libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_OBJECTS =  \
	$(am_libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_OBJECTS)
libleabra_TypeAccess@PDP_SUFFIX@_la_LIBADD =
am_libleabra_TypeAccess@PDP_SUFFIX@_la_OBJECTS =  \
	libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.lo
libleabra_TypeAccess@PDP_SUFFIX@_la_OBJECTS =  \
	$(am_libleabra_TypeAccess@PDP_SUFFIX@_la_OBJECTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_SOURCES) \
	$(libleabra_TypeAccess@PDP_SUFFIX@_la_SOURCES)
DIST_SOURCES = $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_SOURCES) \
	$(libleabra_TypeAccess@PDP_SUFFIX@_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMINCLUDE = @AMINCLUDE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AX_RPM_SPEC_FILE = @AX_RPM_SPEC_FILE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CL_FALSE = @CL_FALSE@
CL_TRUE = @CL_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSS_BIN_FALSE = @CSS_BIN_FALSE@
CSS_BIN_TRUE = @CSS_BIN_TRUE@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
CYGWIN_FALSE = @CYGWIN_FALSE@
CYGWIN_TRUE = @CYGWIN_TRUE@
DARWIN_FALSE = @DARWIN_FALSE@
DARWIN_TRUE = @DARWIN_TRUE@
DEBUG_FALSE = @DEBUG_FALSE@
DEBUG_TRUE = @DEBUG_TRUE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EDITOR = @EDITOR@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GCC_FALSE = @GCC_FALSE@
GCC_TRUE = @GCC_TRUE@
HAVE_SVN = @HAVE_SVN@
INCLUDE_AMINCLUDE_AM = @INCLUDE_AMINCLUDE_AM@
INC_AMINCLUDE = @INC_AMINCLUDE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTA_FALSE = @LIBTA_FALSE@
LIBTA_TRUE = @LIBTA_TRUE@
LIBTOOL = @LIBTOOL@
LIB_VERSION = @LIB_VERSION@
LIB_VERSION_2 = @LIB_VERSION_2@
LINUX_FALSE = @LINUX_FALSE@
LINUX_TRUE = @LINUX_TRUE@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKETA_OPT = @MAKETA_OPT@
MINGW32_FALSE = @MINGW32_FALSE@
MINGW32_TRUE = @MINGW32_TRUE@
MPICXX = @MPICXX@
MPI_FALSE = @MPI_FALSE@
MPI_TRUE = @MPI_TRUE@
NOOP_MAKETA = @NOOP_MAKETA@
NO_TA_GUI_FALSE = @NO_TA_GUI_FALSE@
NO_TA_GUI_TRUE = @NO_TA_GUI_TRUE@
OBJEXT = @OBJEXT@
OPT_LEVEL = @OPT_LEVEL@
OTHER_COMPILER_FALSE = @OTHER_COMPILER_FALSE@
OTHER_COMPILER_TRUE = @OTHER_COMPILER_TRUE@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDP_INCLUDES = @PDP_INCLUDES@
PDP_SUFFIX = @PDP_SUFFIX@
PLATFORM_SUFFIX = @PLATFORM_SUFFIX@
PLUGINS_FALSE = @PLUGINS_FALSE@
PLUGINS_TRUE = @PLUGINS_TRUE@
POW_LIB = @POW_LIB@
PROFILE_FALSE = @PROFILE_FALSE@
PROFILE_TRUE = @PROFILE_TRUE@
QT_MOC = @QT_MOC@
RANLIB = @RANLIB@
RPM = @RPM@
RPM_FALSE = @RPM_FALSE@
RPM_TRUE = @RPM_TRUE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TA_GUI_FALSE = @TA_GUI_FALSE@
TA_GUI_TRUE = @TA_GUI_TRUE@
VERSION = @VERSION@
WANT_CSS_BIN = @WANT_CSS_BIN@
WANT_LIBTA = @WANT_LIBTA@
WANT_TAIQTSO = @WANT_TAIQTSO@
WHEREAMI = @WHEREAMI@
WINDOWS_FALSE = @WINDOWS_FALSE@
WINDOWS_TRUE = @WINDOWS_TRUE@
YACC = @YACC@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdpexists = @pdpexists@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sim_ac_coin_configcmd = @sim_ac_coin_configcmd@
sim_ac_simage_configcmd = @sim_ac_simage_configcmd@
sim_ac_soqt_configcmd = @sim_ac_soqt_configcmd@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

#*********************************************************
#  Process this file with automake to produce Makefile.in
#*********************************************************
PROJNAME = leabra
TAHEADS = \
	@abs_srcdir@/../ta/ta_TA_type.h \
	@abs_srcdir@/../pdp/pdp_TA_type.h \
	@abs_srcdir@/../leabra/leabra.h \
	@abs_srcdir@/../leabra/leabra_extra.h \
	@abs_srcdir@/../leabra/leabra_td.h \
	@abs_srcdir@/../leabra/leabra_pvlv.h \
	@abs_srcdir@/../leabra/leabra_pbwm.h \
	@abs_srcdir@/../leabra/leabra_v3_compat.h

HEADS = \
	leabra.h \
	leabra_extra.h \
	leabra_td.h \
	leabra_pvlv.h \
	leabra_pbwm.h \
	leabra_v3_compat.h

SRCS = \
	leabra.cpp \
	leabra_extra.cpp \
	leabra_td.cpp \
	leabra_pvlv.cpp \
	leabra_pbwm.cpp \
	leabra_v3_compat.cpp


# Instruct automake to clean these files on make clean
CLEANFILES = \
	${PROJNAME}_TA_type.h \
	${PROJNAME}_TA_inst.h \
	${PROJNAME}_TA.cpp \
	${PROJNAME}_TA_type.hx \
	${PROJNAME}_TA_inst.hx \
	${PROJNAME}_TA.ccx

MAKETA_FLAGS = \
	-hx \
	-css \
	-cpp="@CXXCPP@" \
	-I@abs_top_srcdir@ \
	-I@abs_top_srcdir@/src/ta/ios-g++-3.1 \
	-I@abs_top_srcdir@/src/ta \
	-I@abs_top_srcdir@/src/pdp \
	-I@abs_top_srcdir@/src/css \
	-I@abs_top_srcdir@/src/leabra \
	-I@abs_top_srcdir@/src/taiqtso \
	-I@abs_top_srcdir@/src/bp \
	-I${QTDIR}/include/QtCore


# TODO: Fix above hacky includes
# TODO: Is this include still needed?
#	-I/usr/include/qt4/Qt \
# 	${MAKETA_XXFLAGS}
BUILT_SOURCES = ${PROJNAME}_TA_type.h ${PROJNAME}_TA_inst.h
MAKETA = ../maketa/./maketa
noinst_LTLIBRARIES = \
	libleabra_TypeAccess@PDP_SUFFIX@.la \
	libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@.la

libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_SOURCES = $(HEADS) $(SRCS)
libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS = @PDP_INCLUDES@
libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS = @OPT_LEVEL@
libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_LIBADD = libleabra_TypeAccess@PDP_SUFFIX@.la
libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_DEPENDENCIES = libleabra_TypeAccess@PDP_SUFFIX@.la
libleabra_TypeAccess@PDP_SUFFIX@_la_SOURCES = \
	leabra_TA.cpp \
	leabra_TA_type.h \
	leabra_TA_inst.h

libleabra_TypeAccess@PDP_SUFFIX@_la_CPPFLAGS = $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS)
libleabra_TypeAccess@PDP_SUFFIX@_la_CXXFLAGS = -O0
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .ccx .cpp .h .hx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Maketa.am $(top_srcdir)/mfstamp.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/leabra/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/leabra/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@.la: $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_OBJECTS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_DEPENDENCIES) 
	$(CXXLINK)  $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_LDFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_OBJECTS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_LIBADD) $(LIBS)
libleabra_TypeAccess@PDP_SUFFIX@.la: $(libleabra_TypeAccess@PDP_SUFFIX@_la_OBJECTS) $(libleabra_TypeAccess@PDP_SUFFIX@_la_DEPENDENCIES) 
	$(CXXLINK)  $(libleabra_TypeAccess@PDP_SUFFIX@_la_LDFLAGS) $(libleabra_TypeAccess@PDP_SUFFIX@_la_OBJECTS) $(libleabra_TypeAccess@PDP_SUFFIX@_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.lo: leabra.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -MT libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.lo -MD -MP -MF "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.Tpo" -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.lo `test -f 'leabra.cpp' || echo '$(srcdir)/'`leabra.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.Tpo" "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.Plo"; else rm -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='leabra.cpp' object='libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra.lo `test -f 'leabra.cpp' || echo '$(srcdir)/'`leabra.cpp

libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.lo: leabra_extra.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -MT libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.lo -MD -MP -MF "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.Tpo" -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.lo `test -f 'leabra_extra.cpp' || echo '$(srcdir)/'`leabra_extra.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.Tpo" "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.Plo"; else rm -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='leabra_extra.cpp' object='libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_extra.lo `test -f 'leabra_extra.cpp' || echo '$(srcdir)/'`leabra_extra.cpp

libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.lo: leabra_td.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -MT libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.lo -MD -MP -MF "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.Tpo" -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.lo `test -f 'leabra_td.cpp' || echo '$(srcdir)/'`leabra_td.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.Tpo" "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.Plo"; else rm -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='leabra_td.cpp' object='libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_td.lo `test -f 'leabra_td.cpp' || echo '$(srcdir)/'`leabra_td.cpp

libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.lo: leabra_pvlv.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -MT libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.lo -MD -MP -MF "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.Tpo" -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.lo `test -f 'leabra_pvlv.cpp' || echo '$(srcdir)/'`leabra_pvlv.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.Tpo" "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.Plo"; else rm -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='leabra_pvlv.cpp' object='libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pvlv.lo `test -f 'leabra_pvlv.cpp' || echo '$(srcdir)/'`leabra_pvlv.cpp

libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.lo: leabra_pbwm.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -MT libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.lo -MD -MP -MF "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.Tpo" -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.lo `test -f 'leabra_pbwm.cpp' || echo '$(srcdir)/'`leabra_pbwm.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.Tpo" "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.Plo"; else rm -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='leabra_pbwm.cpp' object='libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_pbwm.lo `test -f 'leabra_pbwm.cpp' || echo '$(srcdir)/'`leabra_pbwm.cpp

libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.lo: leabra_v3_compat.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -MT libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.lo -MD -MP -MF "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.Tpo" -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.lo `test -f 'leabra_v3_compat.cpp' || echo '$(srcdir)/'`leabra_v3_compat.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.Tpo" "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.Plo"; else rm -f "$(DEPDIR)/libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='leabra_v3_compat.cpp' object='libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la_CXXFLAGS) $(CXXFLAGS) -c -o libleabra@PDP_SUFFIX@_@PACKAGE_VERSION@_la-leabra_v3_compat.lo `test -f 'leabra_v3_compat.cpp' || echo '$(srcdir)/'`leabra_v3_compat.cpp

libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.lo: leabra_TA.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra_TypeAccess@PDP_SUFFIX@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra_TypeAccess@PDP_SUFFIX@_la_CXXFLAGS) $(CXXFLAGS) -MT libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.lo -MD -MP -MF "$(DEPDIR)/libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.Tpo" -c -o libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.lo `test -f 'leabra_TA.cpp' || echo '$(srcdir)/'`leabra_TA.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.Tpo" "$(DEPDIR)/libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.Plo"; else rm -f "$(DEPDIR)/libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='leabra_TA.cpp' object='libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libleabra_TypeAccess@PDP_SUFFIX@_la_CPPFLAGS) $(CPPFLAGS) $(libleabra_TypeAccess@PDP_SUFFIX@_la_CXXFLAGS) $(CXXFLAGS) -c -o libleabra_TypeAccess@PDP_SUFFIX@_la-leabra_TA.lo `test -f 'leabra_TA.cpp' || echo '$(srcdir)/'`leabra_TA.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

${PROJNAME}_TA.ccx: ${TAHEADS}
	${MAKETA} ${MAKETA_FLAGS} ${PROJNAME} ${TAHEADS}

${PROJNAME}_TA_type.hx ${PROJNAME}_TA_inst.hx: ${PROJNAME}_TA.ccx
	@if test -f $@; then \
	  touch $@; \
	else \
	  rm -f ${PROJNAME}_TA.ccx; \
	  $(MAKE) ${PROJNAME}_TA.ccx; \
	fi

.hx.h:
	cmp $@ $< || cp $< $@

.ccx.cpp:
	cmp $@ $< || cp $< $@

gendoc:
	${MAKETA} -gendoc ${MAKETA_FLAGS} ${PROJNAME} ${TAHEADS};

force_ta:
	${MAKETA} ${MAKETA_FLAGS} ${PROJNAME} ${TAHEADS}; \
	cp ${PROJNAME}_TA_type.hx ${PROJNAME}_TA_type.h; \
	cp ${PROJNAME}_TA_inst.hx ${PROJNAME}_TA_inst.h; \
	cp ${PROJNAME}_TA.ccx ${PROJNAME}_TA.cpp

do_ta:
	${MAKETA} @GENDOC@ ${MAKETA_FLAGS} -autohx ${PROJNAME} ${TAHEADS}
do-mfstamp-am do-mfstamp: Makefile.in
	@echo "timestamp for all Makefile.in files" > $(top_builddir)/mfstamp
	@touch $@

leabra_def.h:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
