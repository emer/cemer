State 42 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: list $end

    1 list: /* empty */
    2     | list typedefn
    3     | list enumdefn
    4     | list classdecl
    5     | list classdefn
    6     | list templdefn
    7     | list fundecl
    8     | list preparsed
    9     | list error

   10 preparsed: TA_TYPEDEF

   11 typedefn: typedefns

   12 typedefns: typedsub
   13          | typedsub COMMENT

   14 typedsub: TYPEDEF defn
   15         | TYPEDEF classdsub tdname term

   16 defn: type tyname term
   17     | type COMMENT tyname term
   18     | type term
   19     | type '(' '*' tyname ')' funargs term
   20     | type SCOPER '*' tyname

   21 enumdefn: enumdsub

   22 enumdsub: enumname enums '}' term

   23 enumname: enumnm '{'
   24         | enumnm COMMENT '{'
   25         | enumnm '{' COMMENT

   26 enumnm: ENUM tyname
   27       | ENUM

   28 classdecl: classdecls

   29 classdecls: classnm term
   30           | classnm term COMMENT

   31 classdefn: classdefns

   32 classdefns: classdsub term
   33           | classdsub varname term

   34 classdsub: classname membs '}'

   35 classname: classhead '{'
   36          | classhead COMMENT '{'
   37          | classhead '{' COMMENT

   38 classhead: classnm
   39          | classnm ':' classinh

   40 classnm: classkeyword tyname
   41        | classkeyword TYPE
   42        | classkeyword
   43        | structunion

   44 classinh: classpar
   45         | classinh ',' classpar

   46 classpar: type
   47         | classptyp type
   48         | NAME
   49         | classptyp NAME

   50 classptyp: classpmod
   51          | classptyp classpmod

   52 classpmod: access
   53          | VIRTUAL

   54 templdefn: templdefns

   55 templdefns: templdsub term
   56           | templdsub varname term

   57 templdsub: templname membs '}'

   58 templname: templhead '{'
   59          | templhead COMMENT '{'
   60          | templhead '{' COMMENT

   61 templhead: TEMPLATE templopen templpars '>' classhead

   62 templopen: '<'

   63 templpars: CLASS tyname
   64          | templpars ',' CLASS tyname

   65 fundecl: funnm

   66 funnm: REGFUN ftype regfundefn fundefn
   67      | REGFUN regfundefn fundefn

   68 regfundefn: methname funargs

   69 enums: enumline
   70      | enums enumline

   71 enumline: enumitm
   72         | enumitm COMMENT

   73 enumitm: enumitms
   74        | enumitms ','
   75        | error

   76 enumitms: enmitmname
   77         | enmitmname EQUALS enummath

   78 enummath: enummathitm
   79         | enummath '+' enummathitm
   80         | enummath '-' enummathitm

   81 enummathitm: NAME
   82            | NUMBER

   83 enmitmname: NAME

   84 membs: membline
   85      | membs membline

   86 membline: membdefn
   87         | methdefn
   88         | enumdsub
   89         | typedsub
   90         | classdsub term
   91         | error

   92 membdefn: basicmemb
   93         | PUBLIC ':'
   94         | PRIVATE ':'
   95         | PROTECTED ':'
   96         | COMMENT

   97 basicmemb: nostatmemb
   98          | STATIC nostatmemb

   99 nostatmemb: membtype membnames term
  100           | membnames term
  101           | membtype membname ARRAY term
  102           | membtype membfunp funargs term

  103 membnames: membname
  104          | membnames ',' membname

  105 membname: NAME

  106 membfunp: '(' '*' NAME ')'

  107 methdefn: basicmeth
  108         | consthsnm constfun fundefn
  109         | funtspec consthsnm constfun fundefn
  110         | consthsnm constfun constrlist fundefn
  111         | '~' consthsnm constfun fundefn
  112         | funtspec '~' consthsnm constfun fundefn
  113         | FRIEND ftype OPERATOR funargs fundefn
  114         | FRIEND OPERATOR funargs fundefn
  115         | FRIEND ftype term
  116         | FRIEND CLASS ftype term
  117         | FRIEND CLASS NAME term
  118         | FRIEND ftype methname funargs fundefn
  119         | FRIEND methname funargs fundefn

  120 basicmeth: nostatmeth
  121          | STATIC nostatmeth

  122 nostatmeth: membtype mbfundefn fundefn
  123           | mbfundefn fundefn
  124           | membtype OPERATOR funargs fundefn
  125           | membtype OPERATOR '(' ')' funargs fundefn
  126           | OPERATOR funargs fundefn

  127 mbfundefn: methname funargs

  128 methname: NAME

  129 fundefn: term
  130        | funsubdefn
  131        | funsubdecl term
  132        | COMMENT term
  133        | COMMENT funsubdefn
  134        | COMMENT funsubdecl term

  135 funsubdefn: FUNCTION
  136           | CONST FUNCTION
  137           | CONST COMMENT FUNCTION

  138 funsubdecl: EQUALS
  139           | CONST
  140           | CONST EQUALS

  141 funargs: '(' ')'
  142        | '(' args ')'

  143 constfun: ')'
  144         | args ')'

  145 args: argdefn
  146     | args ',' argdefn
  147     | args '.' '.' '.'

  148 argdefn: subargdefn
  149        | subargdefn EQUALS

  150 subargdefn: type
  151           | type NAME
  152           | type NAME ARRAY
  153           | type '(' '*' NAME ')' funargs
  154           | NAME

  155 constrlist: constref
  156           | constrlist constref

  157 constref: constcoln TYPE FUNCALL

  158 consthsnm: THISNAME '('

  159 constcoln: ':'

  160 ptrs: '*'
  161     | ptrs '*'

  162 membtype: ftype

  163 ftype: type
  164      | funtspec
  165      | funtspec type

  166 tyname: NAME

  167 type: noreftype
  168     | noreftype '&'

  169 noreftype: constype
  170          | constype ptrs

  171 constype: subtype
  172         | CONST subtype

  173 subtype: combtype
  174        | structunion combtype
  175        | structunion tyname
  176        | TYPE SCOPER NAME
  177        | THISNAME SCOPER NAME
  178        | TYPE SCOPER TYPE
  179        | THISNAME SCOPER TYPE
  180        | SCOPER TYPE
  181        | THISNAME
  182        | TYPE templopen templtypes '>'
  183        | THISNAME templopen templtypes '>'

  184 combtype: TYPE
  185         | combtype TYPE

  186 templtypes: TYPE
  187           | templtypes ',' TYPE

  188 tdname: NAME
  189       | TYPE

  190 funtspec: funtsmod
  191         | funtspec funtsmod

  192 funtsmod: FUNTYPE
  193         | VIRTUAL

  194 varname: NAME
  195        | NAME ARRAY

  196 term: ';'

  197 access: PUBLIC
  198       | PRIVATE
  199       | PROTECTED

  200 structunion: STRUCT
  201            | UNION

  202 classkeyword: CLASS


Terminals, with rules where they appear

$end (0) 0
'&' (38) 168
'(' (40) 19 106 125 141 142 153 158
')' (41) 19 106 125 141 142 143 144 153
'*' (42) 19 20 106 153 160 161
'+' (43) 79
',' (44) 45 64 74 104 146 187
'-' (45) 80
'.' (46) 147
':' (58) 39 93 94 95 159
';' (59) 196
'<' (60) 62
'>' (62) 61 182 183
'{' (123) 23 24 25 35 36 37 58 59 60
'}' (125) 22 34 57
'~' (126) 111 112
error (256) 9 75 91
CLASS (258) 63 64 116 117 202
STRUCT (259) 200
UNION (260) 201
ENUM (261) 26 27
FUNTYPE (262) 192
STATIC (263) 98 121
TEMPLATE (264) 61
CONST (265) 136 137 139 140 172
TYPEDEF (266) 14 15
TA_TYPEDEF (267) 10
TYPE (268) 41 157 176 178 179 180 182 184 185 186 187 189
NUMBER (269) 82
FUNCTION (270) 135 136 137
ARRAY (271) 101 152 195
NAME (272) 48 49 81 83 105 106 117 128 151 152 153 154 166 176 177
    188 194 195
COMMENT (273) 13 17 24 25 30 36 37 59 60 72 96 132 133 134 137
FUNCALL (274) 157
SCOPER (275) 20 176 177 178 179 180
EQUALS (276) 77 138 140 149
PUBLIC (277) 93 197
PRIVATE (278) 94 198
PROTECTED (279) 95 199
OPERATOR (280) 113 114 124 125 126
FRIEND (281) 113 114 115 116 117 118 119
THISNAME (282) 158 177 179 181 183
REGFUN (283) 66 67
VIRTUAL (284) 53 193


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
list (46)
    on left: 1 2 3 4 5 6 7 8 9, on right: 0 2 3 4 5 6 7 8 9
preparsed (47)
    on left: 10, on right: 8
typedefn (48)
    on left: 11, on right: 2
typedefns (49)
    on left: 12 13, on right: 11
typedsub (50)
    on left: 14 15, on right: 12 13 89
defn (51)
    on left: 16 17 18 19 20, on right: 14
enumdefn (52)
    on left: 21, on right: 3
enumdsub (53)
    on left: 22, on right: 21 88
enumname (54)
    on left: 23 24 25, on right: 22
enumnm (55)
    on left: 26 27, on right: 23 24 25
classdecl (56)
    on left: 28, on right: 4
classdecls (57)
    on left: 29 30, on right: 28
classdefn (58)
    on left: 31, on right: 5
classdefns (59)
    on left: 32 33, on right: 31
classdsub (60)
    on left: 34, on right: 15 32 33 90
classname (61)
    on left: 35 36 37, on right: 34
classhead (62)
    on left: 38 39, on right: 35 36 37 61
classnm (63)
    on left: 40 41 42 43, on right: 29 30 38 39
classinh (64)
    on left: 44 45, on right: 39 45
classpar (65)
    on left: 46 47 48 49, on right: 44 45
classptyp (66)
    on left: 50 51, on right: 47 49 51
classpmod (67)
    on left: 52 53, on right: 50 51
templdefn (68)
    on left: 54, on right: 6
templdefns (69)
    on left: 55 56, on right: 54
templdsub (70)
    on left: 57, on right: 55 56
templname (71)
    on left: 58 59 60, on right: 57
templhead (72)
    on left: 61, on right: 58 59 60
templopen (73)
    on left: 62, on right: 61 182 183
templpars (74)
    on left: 63 64, on right: 61 64
fundecl (75)
    on left: 65, on right: 7
funnm (76)
    on left: 66 67, on right: 65
regfundefn (77)
    on left: 68, on right: 66 67
enums (78)
    on left: 69 70, on right: 22 70
enumline (79)
    on left: 71 72, on right: 69 70
enumitm (80)
    on left: 73 74 75, on right: 71 72
enumitms (81)
    on left: 76 77, on right: 73 74
enummath (82)
    on left: 78 79 80, on right: 77 79 80
enummathitm (83)
    on left: 81 82, on right: 78 79 80
enmitmname (84)
    on left: 83, on right: 76 77
membs (85)
    on left: 84 85, on right: 34 57 85
membline (86)
    on left: 86 87 88 89 90 91, on right: 84 85
membdefn (87)
    on left: 92 93 94 95 96, on right: 86
basicmemb (88)
    on left: 97 98, on right: 92
nostatmemb (89)
    on left: 99 100 101 102, on right: 97 98
membnames (90)
    on left: 103 104, on right: 99 100 104
membname (91)
    on left: 105, on right: 101 103 104
membfunp (92)
    on left: 106, on right: 102
methdefn (93)
    on left: 107 108 109 110 111 112 113 114 115 116 117 118 119,
    on right: 87
basicmeth (94)
    on left: 120 121, on right: 107
nostatmeth (95)
    on left: 122 123 124 125 126, on right: 120 121
mbfundefn (96)
    on left: 127, on right: 122 123
methname (97)
    on left: 128, on right: 68 118 119 127
fundefn (98)
    on left: 129 130 131 132 133 134, on right: 66 67 108 109 110 111
    112 113 114 118 119 122 123 124 125 126
funsubdefn (99)
    on left: 135 136 137, on right: 130 133
funsubdecl (100)
    on left: 138 139 140, on right: 131 134
funargs (101)
    on left: 141 142, on right: 19 68 102 113 114 118 119 124 125 126
    127 153
constfun (102)
    on left: 143 144, on right: 108 109 110 111 112
args (103)
    on left: 145 146 147, on right: 142 144 146 147
argdefn (104)
    on left: 148 149, on right: 145 146
subargdefn (105)
    on left: 150 151 152 153 154, on right: 148 149
constrlist (106)
    on left: 155 156, on right: 110 156
constref (107)
    on left: 157, on right: 155 156
consthsnm (108)
    on left: 158, on right: 108 109 110 111 112
constcoln (109)
    on left: 159, on right: 157
ptrs (110)
    on left: 160 161, on right: 161 170
membtype (111)
    on left: 162, on right: 99 101 102 122 124 125
ftype (112)
    on left: 163 164 165, on right: 66 113 115 116 118 162
tyname (113)
    on left: 166, on right: 16 17 19 20 26 40 63 64 175
type (114)
    on left: 167 168, on right: 16 17 18 19 20 46 47 150 151 152 153
    163 165
noreftype (115)
    on left: 169 170, on right: 167 168
constype (116)
    on left: 171 172, on right: 169 170
subtype (117)
    on left: 173 174 175 176 177 178 179 180 181 182 183,
    on right: 171 172
combtype (118)
    on left: 184 185, on right: 173 174 185
templtypes (119)
    on left: 186 187, on right: 182 183 187
tdname (120)
    on left: 188 189, on right: 15
funtspec (121)
    on left: 190 191, on right: 109 112 164 165 191
funtsmod (122)
    on left: 192 193, on right: 190 191
varname (123)
    on left: 194 195, on right: 33 56
term (124)
    on left: 196, on right: 15 16 17 18 19 22 29 30 32 33 55 56 90
    99 100 101 102 115 116 117 129 131 132 134
access (125)
    on left: 197 198 199, on right: 52
structunion (126)
    on left: 200 201, on right: 43 174 175
classkeyword (127)
    on left: 202, on right: 40 41 42


state 0

    0 $accept: . list $end

    $default  reduce using rule 1 (list)

    list  go to state 1


state 1

    0 $accept: list . $end
    2 list: list . typedefn
    3     | list . enumdefn
    4     | list . classdecl
    5     | list . classdefn
    6     | list . templdefn
    7     | list . fundecl
    8     | list . preparsed
    9     | list . error

    $end        shift, and go to state 2
    error       shift, and go to state 3
    CLASS       shift, and go to state 4
    STRUCT      shift, and go to state 5
    UNION       shift, and go to state 6
    ENUM        shift, and go to state 7
    TEMPLATE    shift, and go to state 8
    TYPEDEF     shift, and go to state 9
    TA_TYPEDEF  shift, and go to state 10
    REGFUN      shift, and go to state 11

    preparsed     go to state 12
    typedefn      go to state 13
    typedefns     go to state 14
    typedsub      go to state 15
    enumdefn      go to state 16
    enumdsub      go to state 17
    enumname      go to state 18
    enumnm        go to state 19
    classdecl     go to state 20
    classdecls    go to state 21
    classdefn     go to state 22
    classdefns    go to state 23
    classdsub     go to state 24
    classname     go to state 25
    classhead     go to state 26
    classnm       go to state 27
    templdefn     go to state 28
    templdefns    go to state 29
    templdsub     go to state 30
    templname     go to state 31
    templhead     go to state 32
    fundecl       go to state 33
    funnm         go to state 34
    structunion   go to state 35
    classkeyword  go to state 36


state 2

    0 $accept: list $end .

    $default  accept


state 3

    9 list: list error .

    $default  reduce using rule 9 (list)


state 4

  202 classkeyword: CLASS .

    $default  reduce using rule 202 (classkeyword)


state 5

  200 structunion: STRUCT .

    $default  reduce using rule 200 (structunion)


state 6

  201 structunion: UNION .

    $default  reduce using rule 201 (structunion)


state 7

   26 enumnm: ENUM . tyname
   27       | ENUM .

    NAME  shift, and go to state 37

    $default  reduce using rule 27 (enumnm)

    tyname  go to state 38


state 8

   61 templhead: TEMPLATE . templopen templpars '>' classhead

    '<'  shift, and go to state 39

    templopen  go to state 40


state 9

   14 typedsub: TYPEDEF . defn
   15         | TYPEDEF . classdsub tdname term

    CLASS     shift, and go to state 4
    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44

    defn          go to state 45
    classdsub     go to state 46
    classname     go to state 25
    classhead     go to state 26
    classnm       go to state 47
    type          go to state 48
    noreftype     go to state 49
    constype      go to state 50
    subtype       go to state 51
    combtype      go to state 52
    structunion   go to state 53
    classkeyword  go to state 36


state 10

   10 preparsed: TA_TYPEDEF .

    $default  reduce using rule 10 (preparsed)


state 11

   66 funnm: REGFUN . ftype regfundefn fundefn
   67      | REGFUN . regfundefn fundefn

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    FUNTYPE   shift, and go to state 54
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 55
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    VIRTUAL   shift, and go to state 56

    regfundefn   go to state 57
    methname     go to state 58
    ftype        go to state 59
    type         go to state 60
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    funtspec     go to state 61
    funtsmod     go to state 62
    structunion  go to state 63


state 12

    8 list: list preparsed .

    $default  reduce using rule 8 (list)


state 13

    2 list: list typedefn .

    $default  reduce using rule 2 (list)


state 14

   11 typedefn: typedefns .

    $default  reduce using rule 11 (typedefn)


state 15

   12 typedefns: typedsub .
   13          | typedsub . COMMENT

    COMMENT  shift, and go to state 64

    $default  reduce using rule 12 (typedefns)


state 16

    3 list: list enumdefn .

    $default  reduce using rule 3 (list)


state 17

   21 enumdefn: enumdsub .

    $default  reduce using rule 21 (enumdefn)


state 18

   22 enumdsub: enumname . enums '}' term

    error  shift, and go to state 65
    NAME   shift, and go to state 66

    enums       go to state 67
    enumline    go to state 68
    enumitm     go to state 69
    enumitms    go to state 70
    enmitmname  go to state 71


state 19

   23 enumname: enumnm . '{'
   24         | enumnm . COMMENT '{'
   25         | enumnm . '{' COMMENT

    COMMENT  shift, and go to state 72
    '{'      shift, and go to state 73


state 20

    4 list: list classdecl .

    $default  reduce using rule 4 (list)


state 21

   28 classdecl: classdecls .

    $default  reduce using rule 28 (classdecl)


state 22

    5 list: list classdefn .

    $default  reduce using rule 5 (list)


state 23

   31 classdefn: classdefns .

    $default  reduce using rule 31 (classdefn)


state 24

   32 classdefns: classdsub . term
   33           | classdsub . varname term

    NAME  shift, and go to state 74
    ';'   shift, and go to state 75

    varname  go to state 76
    term     go to state 77


state 25

   34 classdsub: classname . membs '}'

    error      shift, and go to state 78
    CLASS      shift, and go to state 4
    STRUCT     shift, and go to state 5
    UNION      shift, and go to state 6
    ENUM       shift, and go to state 7
    FUNTYPE    shift, and go to state 54
    STATIC     shift, and go to state 79
    CONST      shift, and go to state 41
    TYPEDEF    shift, and go to state 9
    TYPE       shift, and go to state 42
    NAME       shift, and go to state 80
    COMMENT    shift, and go to state 81
    SCOPER     shift, and go to state 43
    PUBLIC     shift, and go to state 82
    PRIVATE    shift, and go to state 83
    PROTECTED  shift, and go to state 84
    OPERATOR   shift, and go to state 85
    FRIEND     shift, and go to state 86
    THISNAME   shift, and go to state 87
    VIRTUAL    shift, and go to state 56
    '~'        shift, and go to state 88

    typedsub      go to state 89
    enumdsub      go to state 90
    enumname      go to state 18
    enumnm        go to state 19
    classdsub     go to state 91
    classname     go to state 25
    classhead     go to state 26
    classnm       go to state 47
    membs         go to state 92
    membline      go to state 93
    membdefn      go to state 94
    basicmemb     go to state 95
    nostatmemb    go to state 96
    membnames     go to state 97
    membname      go to state 98
    methdefn      go to state 99
    basicmeth     go to state 100
    nostatmeth    go to state 101
    mbfundefn     go to state 102
    methname      go to state 103
    consthsnm     go to state 104
    membtype      go to state 105
    ftype         go to state 106
    type          go to state 60
    noreftype     go to state 49
    constype      go to state 50
    subtype       go to state 51
    combtype      go to state 52
    funtspec      go to state 107
    funtsmod      go to state 62
    structunion   go to state 53
    classkeyword  go to state 36


state 26

   35 classname: classhead . '{'
   36          | classhead . COMMENT '{'
   37          | classhead . '{' COMMENT

    COMMENT  shift, and go to state 108
    '{'      shift, and go to state 109


state 27

   29 classdecls: classnm . term
   30           | classnm . term COMMENT
   38 classhead: classnm .
   39          | classnm . ':' classinh

    ':'  shift, and go to state 110
    ';'  shift, and go to state 75

    $default  reduce using rule 38 (classhead)

    term  go to state 111


state 28

    6 list: list templdefn .

    $default  reduce using rule 6 (list)


state 29

   54 templdefn: templdefns .

    $default  reduce using rule 54 (templdefn)


state 30

   55 templdefns: templdsub . term
   56           | templdsub . varname term

    NAME  shift, and go to state 74
    ';'   shift, and go to state 75

    varname  go to state 112
    term     go to state 113


state 31

   57 templdsub: templname . membs '}'

    error      shift, and go to state 78
    CLASS      shift, and go to state 4
    STRUCT     shift, and go to state 5
    UNION      shift, and go to state 6
    ENUM       shift, and go to state 7
    FUNTYPE    shift, and go to state 54
    STATIC     shift, and go to state 79
    CONST      shift, and go to state 41
    TYPEDEF    shift, and go to state 9
    TYPE       shift, and go to state 42
    NAME       shift, and go to state 80
    COMMENT    shift, and go to state 81
    SCOPER     shift, and go to state 43
    PUBLIC     shift, and go to state 82
    PRIVATE    shift, and go to state 83
    PROTECTED  shift, and go to state 84
    OPERATOR   shift, and go to state 85
    FRIEND     shift, and go to state 86
    THISNAME   shift, and go to state 87
    VIRTUAL    shift, and go to state 56
    '~'        shift, and go to state 88

    typedsub      go to state 89
    enumdsub      go to state 90
    enumname      go to state 18
    enumnm        go to state 19
    classdsub     go to state 91
    classname     go to state 25
    classhead     go to state 26
    classnm       go to state 47
    membs         go to state 114
    membline      go to state 93
    membdefn      go to state 94
    basicmemb     go to state 95
    nostatmemb    go to state 96
    membnames     go to state 97
    membname      go to state 98
    methdefn      go to state 99
    basicmeth     go to state 100
    nostatmeth    go to state 101
    mbfundefn     go to state 102
    methname      go to state 103
    consthsnm     go to state 104
    membtype      go to state 105
    ftype         go to state 106
    type          go to state 60
    noreftype     go to state 49
    constype      go to state 50
    subtype       go to state 51
    combtype      go to state 52
    funtspec      go to state 107
    funtsmod      go to state 62
    structunion   go to state 53
    classkeyword  go to state 36


state 32

   58 templname: templhead . '{'
   59          | templhead . COMMENT '{'
   60          | templhead . '{' COMMENT

    COMMENT  shift, and go to state 115
    '{'      shift, and go to state 116


state 33

    7 list: list fundecl .

    $default  reduce using rule 7 (list)


state 34

   65 fundecl: funnm .

    $default  reduce using rule 65 (fundecl)


state 35

   43 classnm: structunion .

    $default  reduce using rule 43 (classnm)


state 36

   40 classnm: classkeyword . tyname
   41        | classkeyword . TYPE
   42        | classkeyword .

    TYPE  shift, and go to state 117
    NAME  shift, and go to state 37

    $default  reduce using rule 42 (classnm)

    tyname  go to state 118


state 37

  166 tyname: NAME .

    $default  reduce using rule 166 (tyname)


state 38

   26 enumnm: ENUM tyname .

    $default  reduce using rule 26 (enumnm)


state 39

   62 templopen: '<' .

    $default  reduce using rule 62 (templopen)


state 40

   61 templhead: TEMPLATE templopen . templpars '>' classhead

    CLASS  shift, and go to state 119

    templpars  go to state 120


state 41

  172 constype: CONST . subtype

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    TYPE      shift, and go to state 42
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44

    subtype      go to state 121
    combtype     go to state 52
    structunion  go to state 63


state 42

  176 subtype: TYPE . SCOPER NAME
  178        | TYPE . SCOPER TYPE
  182        | TYPE . templopen templtypes '>'
  184 combtype: TYPE .

    SCOPER  shift, and go to state 122
    '<'     shift, and go to state 39

    SCOPER    [reduce using rule 184 (combtype)]
    $default  reduce using rule 184 (combtype)

    templopen  go to state 123


state 43

  180 subtype: SCOPER . TYPE

    TYPE  shift, and go to state 124


state 44

  177 subtype: THISNAME . SCOPER NAME
  179        | THISNAME . SCOPER TYPE
  181        | THISNAME .
  183        | THISNAME . templopen templtypes '>'

    SCOPER  shift, and go to state 125
    '<'     shift, and go to state 39

    SCOPER    [reduce using rule 181 (subtype)]
    $default  reduce using rule 181 (subtype)

    templopen  go to state 126


state 45

   14 typedsub: TYPEDEF defn .

    $default  reduce using rule 14 (typedsub)


state 46

   15 typedsub: TYPEDEF classdsub . tdname term

    TYPE  shift, and go to state 127
    NAME  shift, and go to state 128

    tdname  go to state 129


state 47

   38 classhead: classnm .
   39          | classnm . ':' classinh

    ':'  shift, and go to state 110

    $default  reduce using rule 38 (classhead)


state 48

   16 defn: type . tyname term
   17     | type . COMMENT tyname term
   18     | type . term
   19     | type . '(' '*' tyname ')' funargs term
   20     | type . SCOPER '*' tyname

    NAME     shift, and go to state 37
    COMMENT  shift, and go to state 130
    SCOPER   shift, and go to state 131
    '('      shift, and go to state 132
    ';'      shift, and go to state 75

    tyname  go to state 133
    term    go to state 134


state 49

  167 type: noreftype .
  168     | noreftype . '&'

    '&'  shift, and go to state 135

    $default  reduce using rule 167 (type)


state 50

  169 noreftype: constype .
  170          | constype . ptrs

    '*'  shift, and go to state 136

    $default  reduce using rule 169 (noreftype)

    ptrs  go to state 137


state 51

  171 constype: subtype .

    $default  reduce using rule 171 (constype)


state 52

  173 subtype: combtype .
  185 combtype: combtype . TYPE

    TYPE  shift, and go to state 138

    $default  reduce using rule 173 (subtype)


state 53

   43 classnm: structunion .
  174 subtype: structunion . combtype
  175        | structunion . tyname

    TYPE  shift, and go to state 139
    NAME  shift, and go to state 37

    $default  reduce using rule 43 (classnm)

    tyname    go to state 140
    combtype  go to state 141


state 54

  192 funtsmod: FUNTYPE .

    $default  reduce using rule 192 (funtsmod)


state 55

  128 methname: NAME .

    $default  reduce using rule 128 (methname)


state 56

  193 funtsmod: VIRTUAL .

    $default  reduce using rule 193 (funtsmod)


state 57

   67 funnm: REGFUN regfundefn . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 146
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 58

   68 regfundefn: methname . funargs

    '('  shift, and go to state 150

    funargs  go to state 151


state 59

   66 funnm: REGFUN ftype . regfundefn fundefn

    NAME  shift, and go to state 55

    regfundefn  go to state 152
    methname    go to state 58


state 60

  163 ftype: type .

    $default  reduce using rule 163 (ftype)


state 61

  164 ftype: funtspec .
  165      | funtspec . type
  191 funtspec: funtspec . funtsmod

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    FUNTYPE   shift, and go to state 54
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    VIRTUAL   shift, and go to state 56

    $default  reduce using rule 164 (ftype)

    type         go to state 153
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    funtsmod     go to state 154
    structunion  go to state 63


state 62

  190 funtspec: funtsmod .

    $default  reduce using rule 190 (funtspec)


state 63

  174 subtype: structunion . combtype
  175        | structunion . tyname

    TYPE  shift, and go to state 139
    NAME  shift, and go to state 37

    tyname    go to state 140
    combtype  go to state 141


state 64

   13 typedefns: typedsub COMMENT .

    $default  reduce using rule 13 (typedefns)


state 65

   75 enumitm: error .

    $default  reduce using rule 75 (enumitm)


state 66

   83 enmitmname: NAME .

    $default  reduce using rule 83 (enmitmname)


state 67

   22 enumdsub: enumname enums . '}' term
   70 enums: enums . enumline

    error  shift, and go to state 65
    NAME   shift, and go to state 66
    '}'    shift, and go to state 155

    enumline    go to state 156
    enumitm     go to state 69
    enumitms    go to state 70
    enmitmname  go to state 71


state 68

   69 enums: enumline .

    $default  reduce using rule 69 (enums)


state 69

   71 enumline: enumitm .
   72         | enumitm . COMMENT

    COMMENT  shift, and go to state 157

    $default  reduce using rule 71 (enumline)


state 70

   73 enumitm: enumitms .
   74        | enumitms . ','

    ','  shift, and go to state 158

    $default  reduce using rule 73 (enumitm)


state 71

   76 enumitms: enmitmname .
   77         | enmitmname . EQUALS enummath

    EQUALS  shift, and go to state 159

    $default  reduce using rule 76 (enumitms)


state 72

   24 enumname: enumnm COMMENT . '{'

    '{'  shift, and go to state 160


state 73

   23 enumname: enumnm '{' .
   25         | enumnm '{' . COMMENT

    COMMENT  shift, and go to state 161

    $default  reduce using rule 23 (enumname)


state 74

  194 varname: NAME .
  195        | NAME . ARRAY

    ARRAY  shift, and go to state 162

    $default  reduce using rule 194 (varname)


state 75

  196 term: ';' .

    $default  reduce using rule 196 (term)


state 76

   33 classdefns: classdsub varname . term

    ';'  shift, and go to state 75

    term  go to state 163


state 77

   32 classdefns: classdsub term .

    $default  reduce using rule 32 (classdefns)


state 78

   91 membline: error .

    $default  reduce using rule 91 (membline)


state 79

   98 basicmemb: STATIC . nostatmemb
  121 basicmeth: STATIC . nostatmeth

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    FUNTYPE   shift, and go to state 54
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 80
    SCOPER    shift, and go to state 43
    OPERATOR  shift, and go to state 85
    THISNAME  shift, and go to state 44
    VIRTUAL   shift, and go to state 56

    nostatmemb   go to state 164
    membnames    go to state 97
    membname     go to state 98
    nostatmeth   go to state 165
    mbfundefn    go to state 102
    methname     go to state 103
    membtype     go to state 105
    ftype        go to state 106
    type         go to state 60
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    funtspec     go to state 61
    funtsmod     go to state 62
    structunion  go to state 63


state 80

  105 membname: NAME .
  128 methname: NAME .

    '('       reduce using rule 128 (methname)
    $default  reduce using rule 105 (membname)


state 81

   96 membdefn: COMMENT .

    $default  reduce using rule 96 (membdefn)


state 82

   93 membdefn: PUBLIC . ':'

    ':'  shift, and go to state 166


state 83

   94 membdefn: PRIVATE . ':'

    ':'  shift, and go to state 167


state 84

   95 membdefn: PROTECTED . ':'

    ':'  shift, and go to state 168


state 85

  126 nostatmeth: OPERATOR . funargs fundefn

    '('  shift, and go to state 150

    funargs  go to state 169


state 86

  113 methdefn: FRIEND . ftype OPERATOR funargs fundefn
  114         | FRIEND . OPERATOR funargs fundefn
  115         | FRIEND . ftype term
  116         | FRIEND . CLASS ftype term
  117         | FRIEND . CLASS NAME term
  118         | FRIEND . ftype methname funargs fundefn
  119         | FRIEND . methname funargs fundefn

    CLASS     shift, and go to state 170
    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    FUNTYPE   shift, and go to state 54
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 55
    SCOPER    shift, and go to state 43
    OPERATOR  shift, and go to state 171
    THISNAME  shift, and go to state 44
    VIRTUAL   shift, and go to state 56

    methname     go to state 172
    ftype        go to state 173
    type         go to state 60
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    funtspec     go to state 61
    funtsmod     go to state 62
    structunion  go to state 63


state 87

  158 consthsnm: THISNAME . '('
  177 subtype: THISNAME . SCOPER NAME
  179        | THISNAME . SCOPER TYPE
  181        | THISNAME .
  183        | THISNAME . templopen templtypes '>'

    SCOPER  shift, and go to state 125
    '('     shift, and go to state 174
    '<'     shift, and go to state 39

    '('       [reduce using rule 181 (subtype)]
    $default  reduce using rule 181 (subtype)

    templopen  go to state 126


state 88

  111 methdefn: '~' . consthsnm constfun fundefn

    THISNAME  shift, and go to state 175

    consthsnm  go to state 176


state 89

   89 membline: typedsub .

    $default  reduce using rule 89 (membline)


state 90

   88 membline: enumdsub .

    $default  reduce using rule 88 (membline)


state 91

   90 membline: classdsub . term

    ';'  shift, and go to state 75

    term  go to state 177


state 92

   34 classdsub: classname membs . '}'
   85 membs: membs . membline

    error      shift, and go to state 78
    CLASS      shift, and go to state 4
    STRUCT     shift, and go to state 5
    UNION      shift, and go to state 6
    ENUM       shift, and go to state 7
    FUNTYPE    shift, and go to state 54
    STATIC     shift, and go to state 79
    CONST      shift, and go to state 41
    TYPEDEF    shift, and go to state 9
    TYPE       shift, and go to state 42
    NAME       shift, and go to state 80
    COMMENT    shift, and go to state 81
    SCOPER     shift, and go to state 43
    PUBLIC     shift, and go to state 82
    PRIVATE    shift, and go to state 83
    PROTECTED  shift, and go to state 84
    OPERATOR   shift, and go to state 85
    FRIEND     shift, and go to state 86
    THISNAME   shift, and go to state 87
    VIRTUAL    shift, and go to state 56
    '}'        shift, and go to state 178
    '~'        shift, and go to state 88

    typedsub      go to state 89
    enumdsub      go to state 90
    enumname      go to state 18
    enumnm        go to state 19
    classdsub     go to state 91
    classname     go to state 25
    classhead     go to state 26
    classnm       go to state 47
    membline      go to state 179
    membdefn      go to state 94
    basicmemb     go to state 95
    nostatmemb    go to state 96
    membnames     go to state 97
    membname      go to state 98
    methdefn      go to state 99
    basicmeth     go to state 100
    nostatmeth    go to state 101
    mbfundefn     go to state 102
    methname      go to state 103
    consthsnm     go to state 104
    membtype      go to state 105
    ftype         go to state 106
    type          go to state 60
    noreftype     go to state 49
    constype      go to state 50
    subtype       go to state 51
    combtype      go to state 52
    funtspec      go to state 107
    funtsmod      go to state 62
    structunion   go to state 53
    classkeyword  go to state 36


state 93

   84 membs: membline .

    $default  reduce using rule 84 (membs)


state 94

   86 membline: membdefn .

    $default  reduce using rule 86 (membline)


state 95

   92 membdefn: basicmemb .

    $default  reduce using rule 92 (membdefn)


state 96

   97 basicmemb: nostatmemb .

    $default  reduce using rule 97 (basicmemb)


state 97

  100 nostatmemb: membnames . term
  104 membnames: membnames . ',' membname

    ','  shift, and go to state 180
    ';'  shift, and go to state 75

    term  go to state 181


state 98

  103 membnames: membname .

    $default  reduce using rule 103 (membnames)


state 99

   87 membline: methdefn .

    $default  reduce using rule 87 (membline)


state 100

  107 methdefn: basicmeth .

    $default  reduce using rule 107 (methdefn)


state 101

  120 basicmeth: nostatmeth .

    $default  reduce using rule 120 (basicmeth)


state 102

  123 nostatmeth: mbfundefn . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 182
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 103

  127 mbfundefn: methname . funargs

    '('  shift, and go to state 150

    funargs  go to state 183


state 104

  108 methdefn: consthsnm . constfun fundefn
  110         | consthsnm . constfun constrlist fundefn

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 184
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    ')'       shift, and go to state 185

    constfun     go to state 186
    args         go to state 187
    argdefn      go to state 188
    subargdefn   go to state 189
    type         go to state 190
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    structunion  go to state 63


state 105

   99 nostatmemb: membtype . membnames term
  101           | membtype . membname ARRAY term
  102           | membtype . membfunp funargs term
  122 nostatmeth: membtype . mbfundefn fundefn
  124           | membtype . OPERATOR funargs fundefn
  125           | membtype . OPERATOR '(' ')' funargs fundefn

    NAME      shift, and go to state 80
    OPERATOR  shift, and go to state 191
    '('       shift, and go to state 192

    membnames  go to state 193
    membname   go to state 194
    membfunp   go to state 195
    mbfundefn  go to state 196
    methname   go to state 103


state 106

  162 membtype: ftype .

    $default  reduce using rule 162 (membtype)


state 107

  109 methdefn: funtspec . consthsnm constfun fundefn
  112         | funtspec . '~' consthsnm constfun fundefn
  164 ftype: funtspec .
  165      | funtspec . type
  191 funtspec: funtspec . funtsmod

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    FUNTYPE   shift, and go to state 54
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 87
    VIRTUAL   shift, and go to state 56
    '~'       shift, and go to state 197

    $default  reduce using rule 164 (ftype)

    consthsnm    go to state 198
    type         go to state 153
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    funtsmod     go to state 154
    structunion  go to state 63


state 108

   36 classname: classhead COMMENT . '{'

    '{'  shift, and go to state 199


state 109

   35 classname: classhead '{' .
   37          | classhead '{' . COMMENT

    COMMENT  shift, and go to state 200

    COMMENT   [reduce using rule 35 (classname)]
    $default  reduce using rule 35 (classname)


state 110

   39 classhead: classnm ':' . classinh

    STRUCT     shift, and go to state 5
    UNION      shift, and go to state 6
    CONST      shift, and go to state 41
    TYPE       shift, and go to state 42
    NAME       shift, and go to state 201
    SCOPER     shift, and go to state 43
    PUBLIC     shift, and go to state 202
    PRIVATE    shift, and go to state 203
    PROTECTED  shift, and go to state 204
    THISNAME   shift, and go to state 44
    VIRTUAL    shift, and go to state 205

    classinh     go to state 206
    classpar     go to state 207
    classptyp    go to state 208
    classpmod    go to state 209
    type         go to state 210
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    access       go to state 211
    structunion  go to state 63


state 111

   29 classdecls: classnm term .
   30           | classnm term . COMMENT

    COMMENT  shift, and go to state 212

    $default  reduce using rule 29 (classdecls)


state 112

   56 templdefns: templdsub varname . term

    ';'  shift, and go to state 75

    term  go to state 213


state 113

   55 templdefns: templdsub term .

    $default  reduce using rule 55 (templdefns)


state 114

   57 templdsub: templname membs . '}'
   85 membs: membs . membline

    error      shift, and go to state 78
    CLASS      shift, and go to state 4
    STRUCT     shift, and go to state 5
    UNION      shift, and go to state 6
    ENUM       shift, and go to state 7
    FUNTYPE    shift, and go to state 54
    STATIC     shift, and go to state 79
    CONST      shift, and go to state 41
    TYPEDEF    shift, and go to state 9
    TYPE       shift, and go to state 42
    NAME       shift, and go to state 80
    COMMENT    shift, and go to state 81
    SCOPER     shift, and go to state 43
    PUBLIC     shift, and go to state 82
    PRIVATE    shift, and go to state 83
    PROTECTED  shift, and go to state 84
    OPERATOR   shift, and go to state 85
    FRIEND     shift, and go to state 86
    THISNAME   shift, and go to state 87
    VIRTUAL    shift, and go to state 56
    '}'        shift, and go to state 214
    '~'        shift, and go to state 88

    typedsub      go to state 89
    enumdsub      go to state 90
    enumname      go to state 18
    enumnm        go to state 19
    classdsub     go to state 91
    classname     go to state 25
    classhead     go to state 26
    classnm       go to state 47
    membline      go to state 179
    membdefn      go to state 94
    basicmemb     go to state 95
    nostatmemb    go to state 96
    membnames     go to state 97
    membname      go to state 98
    methdefn      go to state 99
    basicmeth     go to state 100
    nostatmeth    go to state 101
    mbfundefn     go to state 102
    methname      go to state 103
    consthsnm     go to state 104
    membtype      go to state 105
    ftype         go to state 106
    type          go to state 60
    noreftype     go to state 49
    constype      go to state 50
    subtype       go to state 51
    combtype      go to state 52
    funtspec      go to state 107
    funtsmod      go to state 62
    structunion   go to state 53
    classkeyword  go to state 36


state 115

   59 templname: templhead COMMENT . '{'

    '{'  shift, and go to state 215


state 116

   58 templname: templhead '{' .
   60          | templhead '{' . COMMENT

    COMMENT  shift, and go to state 216

    COMMENT   [reduce using rule 58 (templname)]
    $default  reduce using rule 58 (templname)


state 117

   41 classnm: classkeyword TYPE .

    $default  reduce using rule 41 (classnm)


state 118

   40 classnm: classkeyword tyname .

    $default  reduce using rule 40 (classnm)


state 119

   63 templpars: CLASS . tyname

    NAME  shift, and go to state 37

    tyname  go to state 217


state 120

   61 templhead: TEMPLATE templopen templpars . '>' classhead
   64 templpars: templpars . ',' CLASS tyname

    ','  shift, and go to state 218
    '>'  shift, and go to state 219


state 121

  172 constype: CONST subtype .

    $default  reduce using rule 172 (constype)


state 122

  176 subtype: TYPE SCOPER . NAME
  178        | TYPE SCOPER . TYPE

    TYPE  shift, and go to state 220
    NAME  shift, and go to state 221


state 123

  182 subtype: TYPE templopen . templtypes '>'

    TYPE  shift, and go to state 222

    templtypes  go to state 223


state 124

  180 subtype: SCOPER TYPE .

    $default  reduce using rule 180 (subtype)


state 125

  177 subtype: THISNAME SCOPER . NAME
  179        | THISNAME SCOPER . TYPE

    TYPE  shift, and go to state 224
    NAME  shift, and go to state 225


state 126

  183 subtype: THISNAME templopen . templtypes '>'

    TYPE  shift, and go to state 222

    templtypes  go to state 226


state 127

  189 tdname: TYPE .

    $default  reduce using rule 189 (tdname)


state 128

  188 tdname: NAME .

    $default  reduce using rule 188 (tdname)


state 129

   15 typedsub: TYPEDEF classdsub tdname . term

    ';'  shift, and go to state 75

    term  go to state 227


state 130

   17 defn: type COMMENT . tyname term

    NAME  shift, and go to state 37

    tyname  go to state 228


state 131

   20 defn: type SCOPER . '*' tyname

    '*'  shift, and go to state 229


state 132

   19 defn: type '(' . '*' tyname ')' funargs term

    '*'  shift, and go to state 230


state 133

   16 defn: type tyname . term

    ';'  shift, and go to state 75

    term  go to state 231


state 134

   18 defn: type term .

    $default  reduce using rule 18 (defn)


state 135

  168 type: noreftype '&' .

    $default  reduce using rule 168 (type)


state 136

  160 ptrs: '*' .

    $default  reduce using rule 160 (ptrs)


state 137

  161 ptrs: ptrs . '*'
  170 noreftype: constype ptrs .

    '*'  shift, and go to state 232

    $default  reduce using rule 170 (noreftype)


state 138

  185 combtype: combtype TYPE .

    $default  reduce using rule 185 (combtype)


state 139

  184 combtype: TYPE .

    $default  reduce using rule 184 (combtype)


state 140

  175 subtype: structunion tyname .

    $default  reduce using rule 175 (subtype)


state 141

  174 subtype: structunion combtype .
  185 combtype: combtype . TYPE

    TYPE  shift, and go to state 138

    $default  reduce using rule 174 (subtype)


state 142

  136 funsubdefn: CONST . FUNCTION
  137           | CONST . COMMENT FUNCTION
  139 funsubdecl: CONST .
  140           | CONST . EQUALS

    FUNCTION  shift, and go to state 233
    COMMENT   shift, and go to state 234
    EQUALS    shift, and go to state 235

    $default  reduce using rule 139 (funsubdecl)


state 143

  135 funsubdefn: FUNCTION .

    $default  reduce using rule 135 (funsubdefn)


state 144

  132 fundefn: COMMENT . term
  133        | COMMENT . funsubdefn
  134        | COMMENT . funsubdecl term

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    funsubdefn  go to state 236
    funsubdecl  go to state 237
    term        go to state 238


state 145

  138 funsubdecl: EQUALS .

    $default  reduce using rule 138 (funsubdecl)


state 146

   67 funnm: REGFUN regfundefn fundefn .

    $default  reduce using rule 67 (funnm)


state 147

  130 fundefn: funsubdefn .

    $default  reduce using rule 130 (fundefn)


state 148

  131 fundefn: funsubdecl . term

    ';'  shift, and go to state 75

    term  go to state 239


state 149

  129 fundefn: term .

    $default  reduce using rule 129 (fundefn)


state 150

  141 funargs: '(' . ')'
  142        | '(' . args ')'

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 184
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    ')'       shift, and go to state 240

    args         go to state 241
    argdefn      go to state 188
    subargdefn   go to state 189
    type         go to state 190
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    structunion  go to state 63


state 151

   68 regfundefn: methname funargs .

    $default  reduce using rule 68 (regfundefn)


state 152

   66 funnm: REGFUN ftype regfundefn . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 242
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 153

  165 ftype: funtspec type .

    $default  reduce using rule 165 (ftype)


state 154

  191 funtspec: funtspec funtsmod .

    $default  reduce using rule 191 (funtspec)


state 155

   22 enumdsub: enumname enums '}' . term

    ';'  shift, and go to state 75

    term  go to state 243


state 156

   70 enums: enums enumline .

    $default  reduce using rule 70 (enums)


state 157

   72 enumline: enumitm COMMENT .

    $default  reduce using rule 72 (enumline)


state 158

   74 enumitm: enumitms ',' .

    $default  reduce using rule 74 (enumitm)


state 159

   77 enumitms: enmitmname EQUALS . enummath

    NUMBER  shift, and go to state 244
    NAME    shift, and go to state 245

    enummath     go to state 246
    enummathitm  go to state 247


state 160

   24 enumname: enumnm COMMENT '{' .

    $default  reduce using rule 24 (enumname)


state 161

   25 enumname: enumnm '{' COMMENT .

    $default  reduce using rule 25 (enumname)


state 162

  195 varname: NAME ARRAY .

    $default  reduce using rule 195 (varname)


state 163

   33 classdefns: classdsub varname term .

    $default  reduce using rule 33 (classdefns)


state 164

   98 basicmemb: STATIC nostatmemb .

    $default  reduce using rule 98 (basicmemb)


state 165

  121 basicmeth: STATIC nostatmeth .

    $default  reduce using rule 121 (basicmeth)


state 166

   93 membdefn: PUBLIC ':' .

    $default  reduce using rule 93 (membdefn)


state 167

   94 membdefn: PRIVATE ':' .

    $default  reduce using rule 94 (membdefn)


state 168

   95 membdefn: PROTECTED ':' .

    $default  reduce using rule 95 (membdefn)


state 169

  126 nostatmeth: OPERATOR funargs . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 248
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 170

  116 methdefn: FRIEND CLASS . ftype term
  117         | FRIEND CLASS . NAME term

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    FUNTYPE   shift, and go to state 54
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 249
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    VIRTUAL   shift, and go to state 56

    ftype        go to state 250
    type         go to state 60
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    funtspec     go to state 61
    funtsmod     go to state 62
    structunion  go to state 63


state 171

  114 methdefn: FRIEND OPERATOR . funargs fundefn

    '('  shift, and go to state 150

    funargs  go to state 251


state 172

  119 methdefn: FRIEND methname . funargs fundefn

    '('  shift, and go to state 150

    funargs  go to state 252


state 173

  113 methdefn: FRIEND ftype . OPERATOR funargs fundefn
  115         | FRIEND ftype . term
  118         | FRIEND ftype . methname funargs fundefn

    NAME      shift, and go to state 55
    OPERATOR  shift, and go to state 253
    ';'       shift, and go to state 75

    methname  go to state 254
    term      go to state 255


state 174

  158 consthsnm: THISNAME '(' .

    $default  reduce using rule 158 (consthsnm)


state 175

  158 consthsnm: THISNAME . '('

    '('  shift, and go to state 174


state 176

  111 methdefn: '~' consthsnm . constfun fundefn

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 184
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    ')'       shift, and go to state 185

    constfun     go to state 256
    args         go to state 187
    argdefn      go to state 188
    subargdefn   go to state 189
    type         go to state 190
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    structunion  go to state 63


state 177

   90 membline: classdsub term .

    $default  reduce using rule 90 (membline)


state 178

   34 classdsub: classname membs '}' .

    $default  reduce using rule 34 (classdsub)


state 179

   85 membs: membs membline .

    $default  reduce using rule 85 (membs)


state 180

  104 membnames: membnames ',' . membname

    NAME  shift, and go to state 257

    membname  go to state 258


state 181

  100 nostatmemb: membnames term .

    $default  reduce using rule 100 (nostatmemb)


state 182

  123 nostatmeth: mbfundefn fundefn .

    $default  reduce using rule 123 (nostatmeth)


state 183

  127 mbfundefn: methname funargs .

    $default  reduce using rule 127 (mbfundefn)


state 184

  154 subargdefn: NAME .

    $default  reduce using rule 154 (subargdefn)


state 185

  143 constfun: ')' .

    $default  reduce using rule 143 (constfun)


state 186

  108 methdefn: consthsnm constfun . fundefn
  110         | consthsnm constfun . constrlist fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ':'       shift, and go to state 259
    ';'       shift, and go to state 75

    fundefn     go to state 260
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    constrlist  go to state 261
    constref    go to state 262
    constcoln   go to state 263
    term        go to state 149


state 187

  144 constfun: args . ')'
  146 args: args . ',' argdefn
  147     | args . '.' '.' '.'

    ')'  shift, and go to state 264
    ','  shift, and go to state 265
    '.'  shift, and go to state 266


state 188

  145 args: argdefn .

    $default  reduce using rule 145 (args)


state 189

  148 argdefn: subargdefn .
  149        | subargdefn . EQUALS

    EQUALS  shift, and go to state 267

    $default  reduce using rule 148 (argdefn)


state 190

  150 subargdefn: type .
  151           | type . NAME
  152           | type . NAME ARRAY
  153           | type . '(' '*' NAME ')' funargs

    NAME  shift, and go to state 268
    '('   shift, and go to state 269

    $default  reduce using rule 150 (subargdefn)


state 191

  124 nostatmeth: membtype OPERATOR . funargs fundefn
  125           | membtype OPERATOR . '(' ')' funargs fundefn

    '('  shift, and go to state 270

    funargs  go to state 271


state 192

  106 membfunp: '(' . '*' NAME ')'

    '*'  shift, and go to state 272


state 193

   99 nostatmemb: membtype membnames . term
  104 membnames: membnames . ',' membname

    ','  shift, and go to state 180
    ';'  shift, and go to state 75

    term  go to state 273


state 194

  101 nostatmemb: membtype membname . ARRAY term
  103 membnames: membname .

    ARRAY  shift, and go to state 274

    $default  reduce using rule 103 (membnames)


state 195

  102 nostatmemb: membtype membfunp . funargs term

    '('  shift, and go to state 150

    funargs  go to state 275


state 196

  122 nostatmeth: membtype mbfundefn . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 276
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 197

  112 methdefn: funtspec '~' . consthsnm constfun fundefn

    THISNAME  shift, and go to state 175

    consthsnm  go to state 277


state 198

  109 methdefn: funtspec consthsnm . constfun fundefn

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 184
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    ')'       shift, and go to state 185

    constfun     go to state 278
    args         go to state 187
    argdefn      go to state 188
    subargdefn   go to state 189
    type         go to state 190
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    structunion  go to state 63


state 199

   36 classname: classhead COMMENT '{' .

    $default  reduce using rule 36 (classname)


state 200

   37 classname: classhead '{' COMMENT .

    $default  reduce using rule 37 (classname)


state 201

   48 classpar: NAME .

    $default  reduce using rule 48 (classpar)


state 202

  197 access: PUBLIC .

    $default  reduce using rule 197 (access)


state 203

  198 access: PRIVATE .

    $default  reduce using rule 198 (access)


state 204

  199 access: PROTECTED .

    $default  reduce using rule 199 (access)


state 205

   53 classpmod: VIRTUAL .

    $default  reduce using rule 53 (classpmod)


state 206

   39 classhead: classnm ':' classinh .
   45 classinh: classinh . ',' classpar

    ','  shift, and go to state 279

    $default  reduce using rule 39 (classhead)


state 207

   44 classinh: classpar .

    $default  reduce using rule 44 (classinh)


state 208

   47 classpar: classptyp . type
   49         | classptyp . NAME
   51 classptyp: classptyp . classpmod

    STRUCT     shift, and go to state 5
    UNION      shift, and go to state 6
    CONST      shift, and go to state 41
    TYPE       shift, and go to state 42
    NAME       shift, and go to state 280
    SCOPER     shift, and go to state 43
    PUBLIC     shift, and go to state 202
    PRIVATE    shift, and go to state 203
    PROTECTED  shift, and go to state 204
    THISNAME   shift, and go to state 44
    VIRTUAL    shift, and go to state 205

    classpmod    go to state 281
    type         go to state 282
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    access       go to state 211
    structunion  go to state 63


state 209

   50 classptyp: classpmod .

    $default  reduce using rule 50 (classptyp)


state 210

   46 classpar: type .

    $default  reduce using rule 46 (classpar)


state 211

   52 classpmod: access .

    $default  reduce using rule 52 (classpmod)


state 212

   30 classdecls: classnm term COMMENT .

    $default  reduce using rule 30 (classdecls)


state 213

   56 templdefns: templdsub varname term .

    $default  reduce using rule 56 (templdefns)


state 214

   57 templdsub: templname membs '}' .

    $default  reduce using rule 57 (templdsub)


state 215

   59 templname: templhead COMMENT '{' .

    $default  reduce using rule 59 (templname)


state 216

   60 templname: templhead '{' COMMENT .

    $default  reduce using rule 60 (templname)


state 217

   63 templpars: CLASS tyname .

    $default  reduce using rule 63 (templpars)


state 218

   64 templpars: templpars ',' . CLASS tyname

    CLASS  shift, and go to state 283


state 219

   61 templhead: TEMPLATE templopen templpars '>' . classhead

    CLASS   shift, and go to state 4
    STRUCT  shift, and go to state 5
    UNION   shift, and go to state 6

    classhead     go to state 284
    classnm       go to state 47
    structunion   go to state 35
    classkeyword  go to state 36


state 220

  178 subtype: TYPE SCOPER TYPE .

    $default  reduce using rule 178 (subtype)


state 221

  176 subtype: TYPE SCOPER NAME .

    $default  reduce using rule 176 (subtype)


state 222

  186 templtypes: TYPE .

    $default  reduce using rule 186 (templtypes)


state 223

  182 subtype: TYPE templopen templtypes . '>'
  187 templtypes: templtypes . ',' TYPE

    ','  shift, and go to state 285
    '>'  shift, and go to state 286


state 224

  179 subtype: THISNAME SCOPER TYPE .

    $default  reduce using rule 179 (subtype)


state 225

  177 subtype: THISNAME SCOPER NAME .

    $default  reduce using rule 177 (subtype)


state 226

  183 subtype: THISNAME templopen templtypes . '>'
  187 templtypes: templtypes . ',' TYPE

    ','  shift, and go to state 285
    '>'  shift, and go to state 287


state 227

   15 typedsub: TYPEDEF classdsub tdname term .

    $default  reduce using rule 15 (typedsub)


state 228

   17 defn: type COMMENT tyname . term

    ';'  shift, and go to state 75

    term  go to state 288


state 229

   20 defn: type SCOPER '*' . tyname

    NAME  shift, and go to state 37

    tyname  go to state 289


state 230

   19 defn: type '(' '*' . tyname ')' funargs term

    NAME  shift, and go to state 37

    tyname  go to state 290


state 231

   16 defn: type tyname term .

    $default  reduce using rule 16 (defn)


state 232

  161 ptrs: ptrs '*' .

    $default  reduce using rule 161 (ptrs)


state 233

  136 funsubdefn: CONST FUNCTION .

    $default  reduce using rule 136 (funsubdefn)


state 234

  137 funsubdefn: CONST COMMENT . FUNCTION

    FUNCTION  shift, and go to state 291


state 235

  140 funsubdecl: CONST EQUALS .

    $default  reduce using rule 140 (funsubdecl)


state 236

  133 fundefn: COMMENT funsubdefn .

    $default  reduce using rule 133 (fundefn)


state 237

  134 fundefn: COMMENT funsubdecl . term

    ';'  shift, and go to state 75

    term  go to state 292


state 238

  132 fundefn: COMMENT term .

    $default  reduce using rule 132 (fundefn)


state 239

  131 fundefn: funsubdecl term .

    $default  reduce using rule 131 (fundefn)


state 240

  141 funargs: '(' ')' .

    $default  reduce using rule 141 (funargs)


state 241

  142 funargs: '(' args . ')'
  146 args: args . ',' argdefn
  147     | args . '.' '.' '.'

    ')'  shift, and go to state 293
    ','  shift, and go to state 265
    '.'  shift, and go to state 266


state 242

   66 funnm: REGFUN ftype regfundefn fundefn .

    $default  reduce using rule 66 (funnm)


state 243

   22 enumdsub: enumname enums '}' term .

    $default  reduce using rule 22 (enumdsub)


state 244

   82 enummathitm: NUMBER .

    $default  reduce using rule 82 (enummathitm)


state 245

   81 enummathitm: NAME .

    $default  reduce using rule 81 (enummathitm)


state 246

   77 enumitms: enmitmname EQUALS enummath .
   79 enummath: enummath . '+' enummathitm
   80         | enummath . '-' enummathitm

    '+'  shift, and go to state 294
    '-'  shift, and go to state 295

    $default  reduce using rule 77 (enumitms)


state 247

   78 enummath: enummathitm .

    $default  reduce using rule 78 (enummath)


state 248

  126 nostatmeth: OPERATOR funargs fundefn .

    $default  reduce using rule 126 (nostatmeth)


state 249

  117 methdefn: FRIEND CLASS NAME . term

    ';'  shift, and go to state 75

    term  go to state 296


state 250

  116 methdefn: FRIEND CLASS ftype . term

    ';'  shift, and go to state 75

    term  go to state 297


state 251

  114 methdefn: FRIEND OPERATOR funargs . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 298
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 252

  119 methdefn: FRIEND methname funargs . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 299
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 253

  113 methdefn: FRIEND ftype OPERATOR . funargs fundefn

    '('  shift, and go to state 150

    funargs  go to state 300


state 254

  118 methdefn: FRIEND ftype methname . funargs fundefn

    '('  shift, and go to state 150

    funargs  go to state 301


state 255

  115 methdefn: FRIEND ftype term .

    $default  reduce using rule 115 (methdefn)


state 256

  111 methdefn: '~' consthsnm constfun . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 302
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 257

  105 membname: NAME .

    $default  reduce using rule 105 (membname)


state 258

  104 membnames: membnames ',' membname .

    $default  reduce using rule 104 (membnames)


state 259

  159 constcoln: ':' .

    $default  reduce using rule 159 (constcoln)


state 260

  108 methdefn: consthsnm constfun fundefn .

    $default  reduce using rule 108 (methdefn)


state 261

  110 methdefn: consthsnm constfun constrlist . fundefn
  156 constrlist: constrlist . constref

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ':'       shift, and go to state 259
    ';'       shift, and go to state 75

    fundefn     go to state 303
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    constref    go to state 304
    constcoln   go to state 263
    term        go to state 149


state 262

  155 constrlist: constref .

    $default  reduce using rule 155 (constrlist)


state 263

  157 constref: constcoln . TYPE FUNCALL

    TYPE  shift, and go to state 305


state 264

  144 constfun: args ')' .

    $default  reduce using rule 144 (constfun)


state 265

  146 args: args ',' . argdefn

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 184
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44

    argdefn      go to state 306
    subargdefn   go to state 189
    type         go to state 190
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    structunion  go to state 63


state 266

  147 args: args '.' . '.' '.'

    '.'  shift, and go to state 307


state 267

  149 argdefn: subargdefn EQUALS .

    $default  reduce using rule 149 (argdefn)


state 268

  151 subargdefn: type NAME .
  152           | type NAME . ARRAY

    ARRAY  shift, and go to state 308

    $default  reduce using rule 151 (subargdefn)


state 269

  153 subargdefn: type '(' . '*' NAME ')' funargs

    '*'  shift, and go to state 309


state 270

  125 nostatmeth: membtype OPERATOR '(' . ')' funargs fundefn
  141 funargs: '(' . ')'
  142        | '(' . args ')'

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 184
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    ')'       shift, and go to state 310

    args         go to state 241
    argdefn      go to state 188
    subargdefn   go to state 189
    type         go to state 190
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    structunion  go to state 63


state 271

  124 nostatmeth: membtype OPERATOR funargs . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 311
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 272

  106 membfunp: '(' '*' . NAME ')'

    NAME  shift, and go to state 312


state 273

   99 nostatmemb: membtype membnames term .

    $default  reduce using rule 99 (nostatmemb)


state 274

  101 nostatmemb: membtype membname ARRAY . term

    ';'  shift, and go to state 75

    term  go to state 313


state 275

  102 nostatmemb: membtype membfunp funargs . term

    ';'  shift, and go to state 75

    term  go to state 314


state 276

  122 nostatmeth: membtype mbfundefn fundefn .

    $default  reduce using rule 122 (nostatmeth)


state 277

  112 methdefn: funtspec '~' consthsnm . constfun fundefn

    STRUCT    shift, and go to state 5
    UNION     shift, and go to state 6
    CONST     shift, and go to state 41
    TYPE      shift, and go to state 42
    NAME      shift, and go to state 184
    SCOPER    shift, and go to state 43
    THISNAME  shift, and go to state 44
    ')'       shift, and go to state 185

    constfun     go to state 315
    args         go to state 187
    argdefn      go to state 188
    subargdefn   go to state 189
    type         go to state 190
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    structunion  go to state 63


state 278

  109 methdefn: funtspec consthsnm constfun . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 316
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 279

   45 classinh: classinh ',' . classpar

    STRUCT     shift, and go to state 5
    UNION      shift, and go to state 6
    CONST      shift, and go to state 41
    TYPE       shift, and go to state 42
    NAME       shift, and go to state 201
    SCOPER     shift, and go to state 43
    PUBLIC     shift, and go to state 202
    PRIVATE    shift, and go to state 203
    PROTECTED  shift, and go to state 204
    THISNAME   shift, and go to state 44
    VIRTUAL    shift, and go to state 205

    classpar     go to state 317
    classptyp    go to state 208
    classpmod    go to state 209
    type         go to state 210
    noreftype    go to state 49
    constype     go to state 50
    subtype      go to state 51
    combtype     go to state 52
    access       go to state 211
    structunion  go to state 63


state 280

   49 classpar: classptyp NAME .

    $default  reduce using rule 49 (classpar)


state 281

   51 classptyp: classptyp classpmod .

    $default  reduce using rule 51 (classptyp)


state 282

   47 classpar: classptyp type .

    $default  reduce using rule 47 (classpar)


state 283

   64 templpars: templpars ',' CLASS . tyname

    NAME  shift, and go to state 37

    tyname  go to state 318


state 284

   61 templhead: TEMPLATE templopen templpars '>' classhead .

    $default  reduce using rule 61 (templhead)


state 285

  187 templtypes: templtypes ',' . TYPE

    TYPE  shift, and go to state 319


state 286

  182 subtype: TYPE templopen templtypes '>' .

    $default  reduce using rule 182 (subtype)


state 287

  183 subtype: THISNAME templopen templtypes '>' .

    $default  reduce using rule 183 (subtype)


state 288

   17 defn: type COMMENT tyname term .

    $default  reduce using rule 17 (defn)


state 289

   20 defn: type SCOPER '*' tyname .

    $default  reduce using rule 20 (defn)


state 290

   19 defn: type '(' '*' tyname . ')' funargs term

    ')'  shift, and go to state 320


state 291

  137 funsubdefn: CONST COMMENT FUNCTION .

    $default  reduce using rule 137 (funsubdefn)


state 292

  134 fundefn: COMMENT funsubdecl term .

    $default  reduce using rule 134 (fundefn)


state 293

  142 funargs: '(' args ')' .

    $default  reduce using rule 142 (funargs)


state 294

   79 enummath: enummath '+' . enummathitm

    NUMBER  shift, and go to state 244
    NAME    shift, and go to state 245

    enummathitm  go to state 321


state 295

   80 enummath: enummath '-' . enummathitm

    NUMBER  shift, and go to state 244
    NAME    shift, and go to state 245

    enummathitm  go to state 322


state 296

  117 methdefn: FRIEND CLASS NAME term .

    $default  reduce using rule 117 (methdefn)


state 297

  116 methdefn: FRIEND CLASS ftype term .

    $default  reduce using rule 116 (methdefn)


state 298

  114 methdefn: FRIEND OPERATOR funargs fundefn .

    $default  reduce using rule 114 (methdefn)


state 299

  119 methdefn: FRIEND methname funargs fundefn .

    $default  reduce using rule 119 (methdefn)


state 300

  113 methdefn: FRIEND ftype OPERATOR funargs . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 323
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 301

  118 methdefn: FRIEND ftype methname funargs . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 324
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 302

  111 methdefn: '~' consthsnm constfun fundefn .

    $default  reduce using rule 111 (methdefn)


state 303

  110 methdefn: consthsnm constfun constrlist fundefn .

    $default  reduce using rule 110 (methdefn)


state 304

  156 constrlist: constrlist constref .

    $default  reduce using rule 156 (constrlist)


state 305

  157 constref: constcoln TYPE . FUNCALL

    FUNCALL  shift, and go to state 325


state 306

  146 args: args ',' argdefn .

    $default  reduce using rule 146 (args)


state 307

  147 args: args '.' '.' . '.'

    '.'  shift, and go to state 326


state 308

  152 subargdefn: type NAME ARRAY .

    $default  reduce using rule 152 (subargdefn)


state 309

  153 subargdefn: type '(' '*' . NAME ')' funargs

    NAME  shift, and go to state 327


state 310

  125 nostatmeth: membtype OPERATOR '(' ')' . funargs fundefn
  141 funargs: '(' ')' .

    '('  shift, and go to state 150

    $default  reduce using rule 141 (funargs)

    funargs  go to state 328


state 311

  124 nostatmeth: membtype OPERATOR funargs fundefn .

    $default  reduce using rule 124 (nostatmeth)


state 312

  106 membfunp: '(' '*' NAME . ')'

    ')'  shift, and go to state 329


state 313

  101 nostatmemb: membtype membname ARRAY term .

    $default  reduce using rule 101 (nostatmemb)


state 314

  102 nostatmemb: membtype membfunp funargs term .

    $default  reduce using rule 102 (nostatmemb)


state 315

  112 methdefn: funtspec '~' consthsnm constfun . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 330
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 316

  109 methdefn: funtspec consthsnm constfun fundefn .

    $default  reduce using rule 109 (methdefn)


state 317

   45 classinh: classinh ',' classpar .

    $default  reduce using rule 45 (classinh)


state 318

   64 templpars: templpars ',' CLASS tyname .

    $default  reduce using rule 64 (templpars)


state 319

  187 templtypes: templtypes ',' TYPE .

    $default  reduce using rule 187 (templtypes)


state 320

   19 defn: type '(' '*' tyname ')' . funargs term

    '('  shift, and go to state 150

    funargs  go to state 331


state 321

   79 enummath: enummath '+' enummathitm .

    $default  reduce using rule 79 (enummath)


state 322

   80 enummath: enummath '-' enummathitm .

    $default  reduce using rule 80 (enummath)


state 323

  113 methdefn: FRIEND ftype OPERATOR funargs fundefn .

    $default  reduce using rule 113 (methdefn)


state 324

  118 methdefn: FRIEND ftype methname funargs fundefn .

    $default  reduce using rule 118 (methdefn)


state 325

  157 constref: constcoln TYPE FUNCALL .

    $default  reduce using rule 157 (constref)


state 326

  147 args: args '.' '.' '.' .

    $default  reduce using rule 147 (args)


state 327

  153 subargdefn: type '(' '*' NAME . ')' funargs

    ')'  shift, and go to state 332


state 328

  125 nostatmeth: membtype OPERATOR '(' ')' funargs . fundefn

    CONST     shift, and go to state 142
    FUNCTION  shift, and go to state 143
    COMMENT   shift, and go to state 144
    EQUALS    shift, and go to state 145
    ';'       shift, and go to state 75

    fundefn     go to state 333
    funsubdefn  go to state 147
    funsubdecl  go to state 148
    term        go to state 149


state 329

  106 membfunp: '(' '*' NAME ')' .

    $default  reduce using rule 106 (membfunp)


state 330

  112 methdefn: funtspec '~' consthsnm constfun fundefn .

    $default  reduce using rule 112 (methdefn)


state 331

   19 defn: type '(' '*' tyname ')' funargs . term

    ';'  shift, and go to state 75

    term  go to state 334


state 332

  153 subargdefn: type '(' '*' NAME ')' . funargs

    '('  shift, and go to state 150

    funargs  go to state 335


state 333

  125 nostatmeth: membtype OPERATOR '(' ')' funargs fundefn .

    $default  reduce using rule 125 (nostatmeth)


state 334

   19 defn: type '(' '*' tyname ')' funargs term .

    $default  reduce using rule 19 (defn)


state 335

  153 subargdefn: type '(' '*' NAME ')' funargs .

    $default  reduce using rule 153 (subargdefn)
